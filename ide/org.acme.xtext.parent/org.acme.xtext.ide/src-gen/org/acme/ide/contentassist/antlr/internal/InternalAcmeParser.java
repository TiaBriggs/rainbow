package org.acme.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.acme.services.AcmeGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalAcmeParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "Representation", "Attachment", "Component", "Connector", "Hueristic", "Invariant", "Abstract", "Analysis", "Bindings", "Distinct", "Extended", "External", "Property", "Sequence", "Boolean", "Element", "Extends", "Members", "Private", "Design", "Double", "Exists", "Family", "Forall", "Import", "Object", "Public", "Record", "Select", "String", "KW_System", "Unique", "TNULL", "False", "Final", "Float", "Group", "Bool", "Char", "Enum", "Port", "Role", "Rule", "True", "Type", "With", "FullStopFullStopFullStop", "LessThanSignHyphenMinusGreaterThanSign", "And", "Any", "Int", "New", "Seq", "Set", "ExclamationMarkEqualsSign", "PercentSignEqualsSign", "AmpersandAmpersand", "AsteriskEqualsSign", "PlusSignPlusSign", "PlusSignEqualsSign", "HyphenMinusHyphenMinus", "HyphenMinusEqualsSign", "HyphenMinusGreaterThanSign", "SolidusEqualsSign", "ColonExclamationMark", "LessThanSignLessThanSign", "LessThanSignEqualsSign", "EqualsSignEqualsSign", "GreaterThanSignEqualsSign", "GreaterThanSignGreaterThanSign", "U", "ReverseSolidusReverseSolidus", "In", "Or", "To", "VerticalLineVerticalLine", "ExclamationMark", "DollarSign", "PercentSign", "Apostrophe", "LeftParenthesis", "RightParenthesis", "Asterisk", "PlusSign", "Comma", "HyphenMinus", "FullStop", "Solidus", "Colon", "Semicolon", "LessThanSign", "EqualsSign", "GreaterThanSign", "LeftSquareBracket", "Backslash", "RightSquareBracket", "LeftCurlyBracket", "VerticalLine", "RightCurlyBracket", "RULE_DIGIT", "RULE_FLOAT", "RULE_ID", "RULE_INT", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER"
    };
    public static final int Enum=43;
    public static final int Import=28;
    public static final int Or=77;
    public static final int KW_System=34;
    public static final int LessThanSignHyphenMinusGreaterThanSign=51;
    public static final int Extended=14;
    public static final int String=33;
    public static final int False=37;
    public static final int LessThanSign=94;
    public static final int Design=23;
    public static final int Distinct=13;
    public static final int LeftParenthesis=84;
    public static final int Bool=41;
    public static final int Private=22;
    public static final int Boolean=18;
    public static final int Extends=20;
    public static final int TNULL=36;
    public static final int ExclamationMark=80;
    public static final int GreaterThanSign=96;
    public static final int RULE_ID=105;
    public static final int RULE_DIGIT=103;
    public static final int GreaterThanSignEqualsSign=72;
    public static final int Float=39;
    public static final int EqualsSignEqualsSign=71;
    public static final int VerticalLine=101;
    public static final int Analysis=11;
    public static final int PlusSign=87;
    public static final int RULE_INT=106;
    public static final int RULE_ML_COMMENT=108;
    public static final int Object=29;
    public static final int LeftSquareBracket=97;
    public static final int Rule=46;
    public static final int LessThanSignLessThanSign=69;
    public static final int Members=21;
    public static final int Seq=56;
    public static final int Group=40;
    public static final int Set=57;
    public static final int In=76;
    public static final int VerticalLineVerticalLine=79;
    public static final int Bindings=12;
    public static final int Hueristic=8;
    public static final int Comma=88;
    public static final int HyphenMinus=89;
    public static final int U=74;
    public static final int Char=42;
    public static final int ColonExclamationMark=68;
    public static final int LessThanSignEqualsSign=70;
    public static final int Solidus=91;
    public static final int RightCurlyBracket=102;
    public static final int Property=16;
    public static final int Final=38;
    public static final int Apostrophe=83;
    public static final int PercentSignEqualsSign=59;
    public static final int FullStop=90;
    public static final int Abstract=10;
    public static final int Semicolon=93;
    public static final int Type=48;
    public static final int PlusSignPlusSign=62;
    public static final int Select=32;
    public static final int Family=26;
    public static final int RULE_FLOAT=104;
    public static final int ExclamationMarkEqualsSign=58;
    public static final int HyphenMinusGreaterThanSign=66;
    public static final int HyphenMinusHyphenMinus=64;
    public static final int New=55;
    public static final int SolidusEqualsSign=67;
    public static final int Port=44;
    public static final int True=47;
    public static final int Attachment=5;
    public static final int FullStopFullStopFullStop=50;
    public static final int PercentSign=82;
    public static final int AsteriskEqualsSign=61;
    public static final int To=78;
    public static final int Forall=27;
    public static final int RightSquareBracket=99;
    public static final int RightParenthesis=85;
    public static final int Representation=4;
    public static final int Sequence=17;
    public static final int Public=30;
    public static final int Double=24;
    public static final int Role=45;
    public static final int And=52;
    public static final int External=15;
    public static final int Unique=35;
    public static final int Connector=7;
    public static final int Invariant=9;
    public static final int ReverseSolidusReverseSolidus=75;
    public static final int Element=19;
    public static final int RULE_STRING=107;
    public static final int Backslash=98;
    public static final int Any=53;
    public static final int Int=54;
    public static final int With=49;
    public static final int RULE_SL_COMMENT=109;
    public static final int EqualsSign=95;
    public static final int AmpersandAmpersand=60;
    public static final int Record=31;
    public static final int HyphenMinusEqualsSign=65;
    public static final int Colon=92;
    public static final int Component=6;
    public static final int EOF=-1;
    public static final int Asterisk=86;
    public static final int PlusSignEqualsSign=63;
    public static final int RULE_WS=110;
    public static final int LeftCurlyBracket=100;
    public static final int RULE_ANY_OTHER=111;
    public static final int GreaterThanSignGreaterThanSign=73;
    public static final int Exists=25;
    public static final int DollarSign=81;

    // delegates
    // delegators


        public InternalAcmeParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalAcmeParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalAcmeParser.tokenNames; }
    public String getGrammarFileName() { return "InternalAcmeParser.g"; }


    	private AcmeGrammarAccess grammarAccess;
    	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
    	
    	{
    		tokenNameToValue.put("ExclamationMark", "'!'");
    		tokenNameToValue.put("DollarSign", "'\\u0024'");
    		tokenNameToValue.put("PercentSign", "'%'");
    		tokenNameToValue.put("Apostrophe", "'\''");
    		tokenNameToValue.put("LeftParenthesis", "'('");
    		tokenNameToValue.put("RightParenthesis", "')'");
    		tokenNameToValue.put("Asterisk", "'*'");
    		tokenNameToValue.put("PlusSign", "'+'");
    		tokenNameToValue.put("Comma", "','");
    		tokenNameToValue.put("HyphenMinus", "'-'");
    		tokenNameToValue.put("FullStop", "'.'");
    		tokenNameToValue.put("Solidus", "'/'");
    		tokenNameToValue.put("Colon", "':'");
    		tokenNameToValue.put("Semicolon", "';'");
    		tokenNameToValue.put("LessThanSign", "'<'");
    		tokenNameToValue.put("EqualsSign", "'='");
    		tokenNameToValue.put("GreaterThanSign", "'>'");
    		tokenNameToValue.put("LeftSquareBracket", "'['");
    		tokenNameToValue.put("Backslash", "'\\'");
    		tokenNameToValue.put("RightSquareBracket", "']'");
    		tokenNameToValue.put("LeftCurlyBracket", "'{'");
    		tokenNameToValue.put("VerticalLine", "'|'");
    		tokenNameToValue.put("RightCurlyBracket", "'}'");
    		tokenNameToValue.put("ExclamationMarkEqualsSign", "'!='");
    		tokenNameToValue.put("PercentSignEqualsSign", "'%='");
    		tokenNameToValue.put("AmpersandAmpersand", "'&&'");
    		tokenNameToValue.put("AsteriskEqualsSign", "'*='");
    		tokenNameToValue.put("PlusSignPlusSign", "'++'");
    		tokenNameToValue.put("PlusSignEqualsSign", "'+='");
    		tokenNameToValue.put("HyphenMinusHyphenMinus", "'--'");
    		tokenNameToValue.put("HyphenMinusEqualsSign", "'-='");
    		tokenNameToValue.put("HyphenMinusGreaterThanSign", "'->'");
    		tokenNameToValue.put("SolidusEqualsSign", "'/='");
    		tokenNameToValue.put("ColonExclamationMark", "':!'");
    		tokenNameToValue.put("LessThanSignLessThanSign", "'<<'");
    		tokenNameToValue.put("LessThanSignEqualsSign", "'<='");
    		tokenNameToValue.put("EqualsSignEqualsSign", "'=='");
    		tokenNameToValue.put("GreaterThanSignEqualsSign", "'>='");
    		tokenNameToValue.put("GreaterThanSignGreaterThanSign", "'>>'");
    		tokenNameToValue.put("U", "'U='");
    		tokenNameToValue.put("ReverseSolidusReverseSolidus", "'\\\\'");
    		tokenNameToValue.put("In", "'in'");
    		tokenNameToValue.put("Or", "'or'");
    		tokenNameToValue.put("To", "'to'");
    		tokenNameToValue.put("VerticalLineVerticalLine", "'||'");
    		tokenNameToValue.put("FullStopFullStopFullStop", "'...'");
    		tokenNameToValue.put("LessThanSignHyphenMinusGreaterThanSign", "'<->'");
    		tokenNameToValue.put("And", "'and'");
    		tokenNameToValue.put("Any", "'any'");
    		tokenNameToValue.put("Int", "'int'");
    		tokenNameToValue.put("New", "'new'");
    		tokenNameToValue.put("Seq", "'seq'");
    		tokenNameToValue.put("Set", "'set'");
    		tokenNameToValue.put("Bool", "'bool'");
    		tokenNameToValue.put("Char", "'char'");
    		tokenNameToValue.put("Enum", "'enum'");
    		tokenNameToValue.put("Port", "'port'");
    		tokenNameToValue.put("Role", "'role'");
    		tokenNameToValue.put("Rule", "'rule'");
    		tokenNameToValue.put("True", "'true'");
    		tokenNameToValue.put("Type", "'type'");
    		tokenNameToValue.put("With", "'with'");
    		tokenNameToValue.put("TNULL", "'TNULL'");
    		tokenNameToValue.put("False", "'false'");
    		tokenNameToValue.put("Final", "'final'");
    		tokenNameToValue.put("Float", "'float'");
    		tokenNameToValue.put("Group", "'group'");
    		tokenNameToValue.put("Design", "'design'");
    		tokenNameToValue.put("Double", "'double'");
    		tokenNameToValue.put("Exists", "'exists'");
    		tokenNameToValue.put("Family", "'family'");
    		tokenNameToValue.put("Forall", "'forall'");
    		tokenNameToValue.put("Import", "'import'");
    		tokenNameToValue.put("Object", "'object'");
    		tokenNameToValue.put("Public", "'public'");
    		tokenNameToValue.put("Record", "'record'");
    		tokenNameToValue.put("Select", "'select'");
    		tokenNameToValue.put("String", "'string'");
    		tokenNameToValue.put("KW_System", "'system'");
    		tokenNameToValue.put("Unique", "'unique'");
    		tokenNameToValue.put("Boolean", "'boolean'");
    		tokenNameToValue.put("Element", "'element'");
    		tokenNameToValue.put("Extends", "'extends'");
    		tokenNameToValue.put("Members", "'members'");
    		tokenNameToValue.put("Private", "'private'");
    		tokenNameToValue.put("Abstract", "'abstract'");
    		tokenNameToValue.put("Analysis", "'analysis'");
    		tokenNameToValue.put("Bindings", "'bindings'");
    		tokenNameToValue.put("Distinct", "'distinct'");
    		tokenNameToValue.put("Extended", "'extended'");
    		tokenNameToValue.put("External", "'external'");
    		tokenNameToValue.put("Property", "'property'");
    		tokenNameToValue.put("Sequence", "'sequence'");
    		tokenNameToValue.put("Component", "'component'");
    		tokenNameToValue.put("Connector", "'connector'");
    		tokenNameToValue.put("Hueristic", "'hueristic'");
    		tokenNameToValue.put("Invariant", "'invariant'");
    		tokenNameToValue.put("Attachment", "'attachment'");
    		tokenNameToValue.put("Representation", "'representation'");
    	}

    	public void setGrammarAccess(AcmeGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		String result = tokenNameToValue.get(tokenName);
    		if (result == null)
    			result = tokenName;
    		return result;
    	}



    // $ANTLR start "entryRuleAcmeCompUnit"
    // InternalAcmeParser.g:155:1: entryRuleAcmeCompUnit : ruleAcmeCompUnit EOF ;
    public final void entryRuleAcmeCompUnit() throws RecognitionException {
        try {
            // InternalAcmeParser.g:156:1: ( ruleAcmeCompUnit EOF )
            // InternalAcmeParser.g:157:1: ruleAcmeCompUnit EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeCompUnitRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmeCompUnit();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeCompUnitRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmeCompUnit"


    // $ANTLR start "ruleAcmeCompUnit"
    // InternalAcmeParser.g:164:1: ruleAcmeCompUnit : ( ( rule__AcmeCompUnit__Group__0 ) ) ;
    public final void ruleAcmeCompUnit() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:168:2: ( ( ( rule__AcmeCompUnit__Group__0 ) ) )
            // InternalAcmeParser.g:169:2: ( ( rule__AcmeCompUnit__Group__0 ) )
            {
            // InternalAcmeParser.g:169:2: ( ( rule__AcmeCompUnit__Group__0 ) )
            // InternalAcmeParser.g:170:3: ( rule__AcmeCompUnit__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeCompUnitAccess().getGroup()); 
            }
            // InternalAcmeParser.g:171:3: ( rule__AcmeCompUnit__Group__0 )
            // InternalAcmeParser.g:171:4: rule__AcmeCompUnit__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmeCompUnit__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeCompUnitAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmeCompUnit"


    // $ANTLR start "entryRuleAcmeImportDeclaration"
    // InternalAcmeParser.g:180:1: entryRuleAcmeImportDeclaration : ruleAcmeImportDeclaration EOF ;
    public final void entryRuleAcmeImportDeclaration() throws RecognitionException {
        try {
            // InternalAcmeParser.g:181:1: ( ruleAcmeImportDeclaration EOF )
            // InternalAcmeParser.g:182:1: ruleAcmeImportDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeImportDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmeImportDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeImportDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmeImportDeclaration"


    // $ANTLR start "ruleAcmeImportDeclaration"
    // InternalAcmeParser.g:189:1: ruleAcmeImportDeclaration : ( ( rule__AcmeImportDeclaration__Group__0 ) ) ;
    public final void ruleAcmeImportDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:193:2: ( ( ( rule__AcmeImportDeclaration__Group__0 ) ) )
            // InternalAcmeParser.g:194:2: ( ( rule__AcmeImportDeclaration__Group__0 ) )
            {
            // InternalAcmeParser.g:194:2: ( ( rule__AcmeImportDeclaration__Group__0 ) )
            // InternalAcmeParser.g:195:3: ( rule__AcmeImportDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeImportDeclarationAccess().getGroup()); 
            }
            // InternalAcmeParser.g:196:3: ( rule__AcmeImportDeclaration__Group__0 )
            // InternalAcmeParser.g:196:4: rule__AcmeImportDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmeImportDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeImportDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmeImportDeclaration"


    // $ANTLR start "entryRuleStringLiteral"
    // InternalAcmeParser.g:205:1: entryRuleStringLiteral : ruleStringLiteral EOF ;
    public final void entryRuleStringLiteral() throws RecognitionException {
        try {
            // InternalAcmeParser.g:206:1: ( ruleStringLiteral EOF )
            // InternalAcmeParser.g:207:1: ruleStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleStringLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStringLiteral"


    // $ANTLR start "ruleStringLiteral"
    // InternalAcmeParser.g:214:1: ruleStringLiteral : ( ( rule__StringLiteral__LitAssignment ) ) ;
    public final void ruleStringLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:218:2: ( ( ( rule__StringLiteral__LitAssignment ) ) )
            // InternalAcmeParser.g:219:2: ( ( rule__StringLiteral__LitAssignment ) )
            {
            // InternalAcmeParser.g:219:2: ( ( rule__StringLiteral__LitAssignment ) )
            // InternalAcmeParser.g:220:3: ( rule__StringLiteral__LitAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringLiteralAccess().getLitAssignment()); 
            }
            // InternalAcmeParser.g:221:3: ( rule__StringLiteral__LitAssignment )
            // InternalAcmeParser.g:221:4: rule__StringLiteral__LitAssignment
            {
            pushFollow(FOLLOW_2);
            rule__StringLiteral__LitAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringLiteralAccess().getLitAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStringLiteral"


    // $ANTLR start "entryRuleFilename"
    // InternalAcmeParser.g:230:1: entryRuleFilename : ruleFilename EOF ;
    public final void entryRuleFilename() throws RecognitionException {
        try {
            // InternalAcmeParser.g:231:1: ( ruleFilename EOF )
            // InternalAcmeParser.g:232:1: ruleFilename EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilenameRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFilename();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilenameRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFilename"


    // $ANTLR start "ruleFilename"
    // InternalAcmeParser.g:239:1: ruleFilename : ( ( rule__Filename__Group__0 ) ) ;
    public final void ruleFilename() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:243:2: ( ( ( rule__Filename__Group__0 ) ) )
            // InternalAcmeParser.g:244:2: ( ( rule__Filename__Group__0 ) )
            {
            // InternalAcmeParser.g:244:2: ( ( rule__Filename__Group__0 ) )
            // InternalAcmeParser.g:245:3: ( rule__Filename__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilenameAccess().getGroup()); 
            }
            // InternalAcmeParser.g:246:3: ( rule__Filename__Group__0 )
            // InternalAcmeParser.g:246:4: rule__Filename__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Filename__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilenameAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFilename"


    // $ANTLR start "entryRuleAcmeFamilyDeclaration"
    // InternalAcmeParser.g:255:1: entryRuleAcmeFamilyDeclaration : ruleAcmeFamilyDeclaration EOF ;
    public final void entryRuleAcmeFamilyDeclaration() throws RecognitionException {
        try {
            // InternalAcmeParser.g:256:1: ( ruleAcmeFamilyDeclaration EOF )
            // InternalAcmeParser.g:257:1: ruleAcmeFamilyDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmeFamilyDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmeFamilyDeclaration"


    // $ANTLR start "ruleAcmeFamilyDeclaration"
    // InternalAcmeParser.g:264:1: ruleAcmeFamilyDeclaration : ( ( rule__AcmeFamilyDeclaration__Group__0 ) ) ;
    public final void ruleAcmeFamilyDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:268:2: ( ( ( rule__AcmeFamilyDeclaration__Group__0 ) ) )
            // InternalAcmeParser.g:269:2: ( ( rule__AcmeFamilyDeclaration__Group__0 ) )
            {
            // InternalAcmeParser.g:269:2: ( ( rule__AcmeFamilyDeclaration__Group__0 ) )
            // InternalAcmeParser.g:270:3: ( rule__AcmeFamilyDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyDeclarationAccess().getGroup()); 
            }
            // InternalAcmeParser.g:271:3: ( rule__AcmeFamilyDeclaration__Group__0 )
            // InternalAcmeParser.g:271:4: rule__AcmeFamilyDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmeFamilyDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmeFamilyDeclaration"


    // $ANTLR start "entryRuleAcmeFamilyBody"
    // InternalAcmeParser.g:280:1: entryRuleAcmeFamilyBody : ruleAcmeFamilyBody EOF ;
    public final void entryRuleAcmeFamilyBody() throws RecognitionException {
        try {
            // InternalAcmeParser.g:281:1: ( ruleAcmeFamilyBody EOF )
            // InternalAcmeParser.g:282:1: ruleAcmeFamilyBody EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmeFamilyBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyBodyRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmeFamilyBody"


    // $ANTLR start "ruleAcmeFamilyBody"
    // InternalAcmeParser.g:289:1: ruleAcmeFamilyBody : ( ( rule__AcmeFamilyBody__Group__0 ) ) ;
    public final void ruleAcmeFamilyBody() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:293:2: ( ( ( rule__AcmeFamilyBody__Group__0 ) ) )
            // InternalAcmeParser.g:294:2: ( ( rule__AcmeFamilyBody__Group__0 ) )
            {
            // InternalAcmeParser.g:294:2: ( ( rule__AcmeFamilyBody__Group__0 ) )
            // InternalAcmeParser.g:295:3: ( rule__AcmeFamilyBody__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyBodyAccess().getGroup()); 
            }
            // InternalAcmeParser.g:296:3: ( rule__AcmeFamilyBody__Group__0 )
            // InternalAcmeParser.g:296:4: rule__AcmeFamilyBody__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmeFamilyBody__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyBodyAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmeFamilyBody"


    // $ANTLR start "entryRuleAcmeSystemDeclaration"
    // InternalAcmeParser.g:305:1: entryRuleAcmeSystemDeclaration : ruleAcmeSystemDeclaration EOF ;
    public final void entryRuleAcmeSystemDeclaration() throws RecognitionException {
        try {
            // InternalAcmeParser.g:306:1: ( ruleAcmeSystemDeclaration EOF )
            // InternalAcmeParser.g:307:1: ruleAcmeSystemDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmeSystemDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmeSystemDeclaration"


    // $ANTLR start "ruleAcmeSystemDeclaration"
    // InternalAcmeParser.g:314:1: ruleAcmeSystemDeclaration : ( ( rule__AcmeSystemDeclaration__Group__0 ) ) ;
    public final void ruleAcmeSystemDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:318:2: ( ( ( rule__AcmeSystemDeclaration__Group__0 ) ) )
            // InternalAcmeParser.g:319:2: ( ( rule__AcmeSystemDeclaration__Group__0 ) )
            {
            // InternalAcmeParser.g:319:2: ( ( rule__AcmeSystemDeclaration__Group__0 ) )
            // InternalAcmeParser.g:320:3: ( rule__AcmeSystemDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemDeclarationAccess().getGroup()); 
            }
            // InternalAcmeParser.g:321:3: ( rule__AcmeSystemDeclaration__Group__0 )
            // InternalAcmeParser.g:321:4: rule__AcmeSystemDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmeSystemDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmeSystemDeclaration"


    // $ANTLR start "entryRuleAcmeSystemBody"
    // InternalAcmeParser.g:330:1: entryRuleAcmeSystemBody : ruleAcmeSystemBody EOF ;
    public final void entryRuleAcmeSystemBody() throws RecognitionException {
        try {
            // InternalAcmeParser.g:331:1: ( ruleAcmeSystemBody EOF )
            // InternalAcmeParser.g:332:1: ruleAcmeSystemBody EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmeSystemBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemBodyRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmeSystemBody"


    // $ANTLR start "ruleAcmeSystemBody"
    // InternalAcmeParser.g:339:1: ruleAcmeSystemBody : ( ( rule__AcmeSystemBody__Group__0 ) ) ;
    public final void ruleAcmeSystemBody() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:343:2: ( ( ( rule__AcmeSystemBody__Group__0 ) ) )
            // InternalAcmeParser.g:344:2: ( ( rule__AcmeSystemBody__Group__0 ) )
            {
            // InternalAcmeParser.g:344:2: ( ( rule__AcmeSystemBody__Group__0 ) )
            // InternalAcmeParser.g:345:3: ( rule__AcmeSystemBody__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemBodyAccess().getGroup()); 
            }
            // InternalAcmeParser.g:346:3: ( rule__AcmeSystemBody__Group__0 )
            // InternalAcmeParser.g:346:4: rule__AcmeSystemBody__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmeSystemBody__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemBodyAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmeSystemBody"


    // $ANTLR start "entryRuleAcmeElementTypeDeclaration"
    // InternalAcmeParser.g:355:1: entryRuleAcmeElementTypeDeclaration : ruleAcmeElementTypeDeclaration EOF ;
    public final void entryRuleAcmeElementTypeDeclaration() throws RecognitionException {
        try {
            // InternalAcmeParser.g:356:1: ( ruleAcmeElementTypeDeclaration EOF )
            // InternalAcmeParser.g:357:1: ruleAcmeElementTypeDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeElementTypeDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmeElementTypeDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeElementTypeDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmeElementTypeDeclaration"


    // $ANTLR start "ruleAcmeElementTypeDeclaration"
    // InternalAcmeParser.g:364:1: ruleAcmeElementTypeDeclaration : ( ( rule__AcmeElementTypeDeclaration__Group__0 ) ) ;
    public final void ruleAcmeElementTypeDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:368:2: ( ( ( rule__AcmeElementTypeDeclaration__Group__0 ) ) )
            // InternalAcmeParser.g:369:2: ( ( rule__AcmeElementTypeDeclaration__Group__0 ) )
            {
            // InternalAcmeParser.g:369:2: ( ( rule__AcmeElementTypeDeclaration__Group__0 ) )
            // InternalAcmeParser.g:370:3: ( rule__AcmeElementTypeDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeElementTypeDeclarationAccess().getGroup()); 
            }
            // InternalAcmeParser.g:371:3: ( rule__AcmeElementTypeDeclaration__Group__0 )
            // InternalAcmeParser.g:371:4: rule__AcmeElementTypeDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmeElementTypeDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeElementTypeDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmeElementTypeDeclaration"


    // $ANTLR start "entryRuleAcmeGenericElementBody"
    // InternalAcmeParser.g:380:1: entryRuleAcmeGenericElementBody : ruleAcmeGenericElementBody EOF ;
    public final void entryRuleAcmeGenericElementBody() throws RecognitionException {
        try {
            // InternalAcmeParser.g:381:1: ( ruleAcmeGenericElementBody EOF )
            // InternalAcmeParser.g:382:1: ruleAcmeGenericElementBody EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGenericElementBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmeGenericElementBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGenericElementBodyRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmeGenericElementBody"


    // $ANTLR start "ruleAcmeGenericElementBody"
    // InternalAcmeParser.g:389:1: ruleAcmeGenericElementBody : ( ( rule__AcmeGenericElementBody__Group__0 ) ) ;
    public final void ruleAcmeGenericElementBody() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:393:2: ( ( ( rule__AcmeGenericElementBody__Group__0 ) ) )
            // InternalAcmeParser.g:394:2: ( ( rule__AcmeGenericElementBody__Group__0 ) )
            {
            // InternalAcmeParser.g:394:2: ( ( rule__AcmeGenericElementBody__Group__0 ) )
            // InternalAcmeParser.g:395:3: ( rule__AcmeGenericElementBody__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGenericElementBodyAccess().getGroup()); 
            }
            // InternalAcmeParser.g:396:3: ( rule__AcmeGenericElementBody__Group__0 )
            // InternalAcmeParser.g:396:4: rule__AcmeGenericElementBody__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmeGenericElementBody__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGenericElementBodyAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmeGenericElementBody"


    // $ANTLR start "entryRuleAcmeGroupTypeDeclaration"
    // InternalAcmeParser.g:405:1: entryRuleAcmeGroupTypeDeclaration : ruleAcmeGroupTypeDeclaration EOF ;
    public final void entryRuleAcmeGroupTypeDeclaration() throws RecognitionException {
        try {
            // InternalAcmeParser.g:406:1: ( ruleAcmeGroupTypeDeclaration EOF )
            // InternalAcmeParser.g:407:1: ruleAcmeGroupTypeDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupTypeDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmeGroupTypeDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupTypeDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmeGroupTypeDeclaration"


    // $ANTLR start "ruleAcmeGroupTypeDeclaration"
    // InternalAcmeParser.g:414:1: ruleAcmeGroupTypeDeclaration : ( ( rule__AcmeGroupTypeDeclaration__Group__0 ) ) ;
    public final void ruleAcmeGroupTypeDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:418:2: ( ( ( rule__AcmeGroupTypeDeclaration__Group__0 ) ) )
            // InternalAcmeParser.g:419:2: ( ( rule__AcmeGroupTypeDeclaration__Group__0 ) )
            {
            // InternalAcmeParser.g:419:2: ( ( rule__AcmeGroupTypeDeclaration__Group__0 ) )
            // InternalAcmeParser.g:420:3: ( rule__AcmeGroupTypeDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupTypeDeclarationAccess().getGroup()); 
            }
            // InternalAcmeParser.g:421:3: ( rule__AcmeGroupTypeDeclaration__Group__0 )
            // InternalAcmeParser.g:421:4: rule__AcmeGroupTypeDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmeGroupTypeDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupTypeDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmeGroupTypeDeclaration"


    // $ANTLR start "entryRuleAcmeGroupDeclaration"
    // InternalAcmeParser.g:430:1: entryRuleAcmeGroupDeclaration : ruleAcmeGroupDeclaration EOF ;
    public final void entryRuleAcmeGroupDeclaration() throws RecognitionException {
        try {
            // InternalAcmeParser.g:431:1: ( ruleAcmeGroupDeclaration EOF )
            // InternalAcmeParser.g:432:1: ruleAcmeGroupDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmeGroupDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmeGroupDeclaration"


    // $ANTLR start "ruleAcmeGroupDeclaration"
    // InternalAcmeParser.g:439:1: ruleAcmeGroupDeclaration : ( ( rule__AcmeGroupDeclaration__Group__0 ) ) ;
    public final void ruleAcmeGroupDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:443:2: ( ( ( rule__AcmeGroupDeclaration__Group__0 ) ) )
            // InternalAcmeParser.g:444:2: ( ( rule__AcmeGroupDeclaration__Group__0 ) )
            {
            // InternalAcmeParser.g:444:2: ( ( rule__AcmeGroupDeclaration__Group__0 ) )
            // InternalAcmeParser.g:445:3: ( rule__AcmeGroupDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupDeclarationAccess().getGroup()); 
            }
            // InternalAcmeParser.g:446:3: ( rule__AcmeGroupDeclaration__Group__0 )
            // InternalAcmeParser.g:446:4: rule__AcmeGroupDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmeGroupDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmeGroupDeclaration"


    // $ANTLR start "entryRuleAcmeGroupBody"
    // InternalAcmeParser.g:455:1: entryRuleAcmeGroupBody : ruleAcmeGroupBody EOF ;
    public final void entryRuleAcmeGroupBody() throws RecognitionException {
        try {
            // InternalAcmeParser.g:456:1: ( ruleAcmeGroupBody EOF )
            // InternalAcmeParser.g:457:1: ruleAcmeGroupBody EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmeGroupBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupBodyRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmeGroupBody"


    // $ANTLR start "ruleAcmeGroupBody"
    // InternalAcmeParser.g:464:1: ruleAcmeGroupBody : ( ( rule__AcmeGroupBody__Group__0 ) ) ;
    public final void ruleAcmeGroupBody() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:468:2: ( ( ( rule__AcmeGroupBody__Group__0 ) ) )
            // InternalAcmeParser.g:469:2: ( ( rule__AcmeGroupBody__Group__0 ) )
            {
            // InternalAcmeParser.g:469:2: ( ( rule__AcmeGroupBody__Group__0 ) )
            // InternalAcmeParser.g:470:3: ( rule__AcmeGroupBody__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupBodyAccess().getGroup()); 
            }
            // InternalAcmeParser.g:471:3: ( rule__AcmeGroupBody__Group__0 )
            // InternalAcmeParser.g:471:4: rule__AcmeGroupBody__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmeGroupBody__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupBodyAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmeGroupBody"


    // $ANTLR start "entryRuleMembersBlock"
    // InternalAcmeParser.g:480:1: entryRuleMembersBlock : ruleMembersBlock EOF ;
    public final void entryRuleMembersBlock() throws RecognitionException {
        try {
            // InternalAcmeParser.g:481:1: ( ruleMembersBlock EOF )
            // InternalAcmeParser.g:482:1: ruleMembersBlock EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMembersBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleMembersBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMembersBlockRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMembersBlock"


    // $ANTLR start "ruleMembersBlock"
    // InternalAcmeParser.g:489:1: ruleMembersBlock : ( ( rule__MembersBlock__Group__0 ) ) ;
    public final void ruleMembersBlock() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:493:2: ( ( ( rule__MembersBlock__Group__0 ) ) )
            // InternalAcmeParser.g:494:2: ( ( rule__MembersBlock__Group__0 ) )
            {
            // InternalAcmeParser.g:494:2: ( ( rule__MembersBlock__Group__0 ) )
            // InternalAcmeParser.g:495:3: ( rule__MembersBlock__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMembersBlockAccess().getGroup()); 
            }
            // InternalAcmeParser.g:496:3: ( rule__MembersBlock__Group__0 )
            // InternalAcmeParser.g:496:4: rule__MembersBlock__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__MembersBlock__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMembersBlockAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMembersBlock"


    // $ANTLR start "entryRuleQualifiedIdentifier"
    // InternalAcmeParser.g:505:1: entryRuleQualifiedIdentifier : ruleQualifiedIdentifier EOF ;
    public final void entryRuleQualifiedIdentifier() throws RecognitionException {
        try {
            // InternalAcmeParser.g:506:1: ( ruleQualifiedIdentifier EOF )
            // InternalAcmeParser.g:507:1: ruleQualifiedIdentifier EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedIdentifierRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleQualifiedIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedIdentifierRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQualifiedIdentifier"


    // $ANTLR start "ruleQualifiedIdentifier"
    // InternalAcmeParser.g:514:1: ruleQualifiedIdentifier : ( ( rule__QualifiedIdentifier__Group__0 ) ) ;
    public final void ruleQualifiedIdentifier() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:518:2: ( ( ( rule__QualifiedIdentifier__Group__0 ) ) )
            // InternalAcmeParser.g:519:2: ( ( rule__QualifiedIdentifier__Group__0 ) )
            {
            // InternalAcmeParser.g:519:2: ( ( rule__QualifiedIdentifier__Group__0 ) )
            // InternalAcmeParser.g:520:3: ( rule__QualifiedIdentifier__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedIdentifierAccess().getGroup()); 
            }
            // InternalAcmeParser.g:521:3: ( rule__QualifiedIdentifier__Group__0 )
            // InternalAcmeParser.g:521:4: rule__QualifiedIdentifier__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedIdentifier__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedIdentifierAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleQualifiedIdentifier"


    // $ANTLR start "entryRuleAcmePortTypeDeclaration"
    // InternalAcmeParser.g:530:1: entryRuleAcmePortTypeDeclaration : ruleAcmePortTypeDeclaration EOF ;
    public final void entryRuleAcmePortTypeDeclaration() throws RecognitionException {
        try {
            // InternalAcmeParser.g:531:1: ( ruleAcmePortTypeDeclaration EOF )
            // InternalAcmeParser.g:532:1: ruleAcmePortTypeDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortTypeDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmePortTypeDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortTypeDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmePortTypeDeclaration"


    // $ANTLR start "ruleAcmePortTypeDeclaration"
    // InternalAcmeParser.g:539:1: ruleAcmePortTypeDeclaration : ( ( rule__AcmePortTypeDeclaration__Group__0 ) ) ;
    public final void ruleAcmePortTypeDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:543:2: ( ( ( rule__AcmePortTypeDeclaration__Group__0 ) ) )
            // InternalAcmeParser.g:544:2: ( ( rule__AcmePortTypeDeclaration__Group__0 ) )
            {
            // InternalAcmeParser.g:544:2: ( ( rule__AcmePortTypeDeclaration__Group__0 ) )
            // InternalAcmeParser.g:545:3: ( rule__AcmePortTypeDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortTypeDeclarationAccess().getGroup()); 
            }
            // InternalAcmeParser.g:546:3: ( rule__AcmePortTypeDeclaration__Group__0 )
            // InternalAcmeParser.g:546:4: rule__AcmePortTypeDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmePortTypeDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortTypeDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmePortTypeDeclaration"


    // $ANTLR start "entryRuleAcmePortDeclaration"
    // InternalAcmeParser.g:555:1: entryRuleAcmePortDeclaration : ruleAcmePortDeclaration EOF ;
    public final void entryRuleAcmePortDeclaration() throws RecognitionException {
        try {
            // InternalAcmeParser.g:556:1: ( ruleAcmePortDeclaration EOF )
            // InternalAcmeParser.g:557:1: ruleAcmePortDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmePortDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmePortDeclaration"


    // $ANTLR start "ruleAcmePortDeclaration"
    // InternalAcmeParser.g:564:1: ruleAcmePortDeclaration : ( ( rule__AcmePortDeclaration__Group__0 ) ) ;
    public final void ruleAcmePortDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:568:2: ( ( ( rule__AcmePortDeclaration__Group__0 ) ) )
            // InternalAcmeParser.g:569:2: ( ( rule__AcmePortDeclaration__Group__0 ) )
            {
            // InternalAcmeParser.g:569:2: ( ( rule__AcmePortDeclaration__Group__0 ) )
            // InternalAcmeParser.g:570:3: ( rule__AcmePortDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortDeclarationAccess().getGroup()); 
            }
            // InternalAcmeParser.g:571:3: ( rule__AcmePortDeclaration__Group__0 )
            // InternalAcmeParser.g:571:4: rule__AcmePortDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmePortDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmePortDeclaration"


    // $ANTLR start "entryRuleAcmePortBody"
    // InternalAcmeParser.g:580:1: entryRuleAcmePortBody : ruleAcmePortBody EOF ;
    public final void entryRuleAcmePortBody() throws RecognitionException {
        try {
            // InternalAcmeParser.g:581:1: ( ruleAcmePortBody EOF )
            // InternalAcmeParser.g:582:1: ruleAcmePortBody EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmePortBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortBodyRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmePortBody"


    // $ANTLR start "ruleAcmePortBody"
    // InternalAcmeParser.g:589:1: ruleAcmePortBody : ( ( rule__AcmePortBody__Group__0 ) ) ;
    public final void ruleAcmePortBody() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:593:2: ( ( ( rule__AcmePortBody__Group__0 ) ) )
            // InternalAcmeParser.g:594:2: ( ( rule__AcmePortBody__Group__0 ) )
            {
            // InternalAcmeParser.g:594:2: ( ( rule__AcmePortBody__Group__0 ) )
            // InternalAcmeParser.g:595:3: ( rule__AcmePortBody__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortBodyAccess().getGroup()); 
            }
            // InternalAcmeParser.g:596:3: ( rule__AcmePortBody__Group__0 )
            // InternalAcmeParser.g:596:4: rule__AcmePortBody__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmePortBody__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortBodyAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmePortBody"


    // $ANTLR start "entryRuleAcmeRoleTypeDeclaration"
    // InternalAcmeParser.g:605:1: entryRuleAcmeRoleTypeDeclaration : ruleAcmeRoleTypeDeclaration EOF ;
    public final void entryRuleAcmeRoleTypeDeclaration() throws RecognitionException {
        try {
            // InternalAcmeParser.g:606:1: ( ruleAcmeRoleTypeDeclaration EOF )
            // InternalAcmeParser.g:607:1: ruleAcmeRoleTypeDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleTypeDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmeRoleTypeDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleTypeDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmeRoleTypeDeclaration"


    // $ANTLR start "ruleAcmeRoleTypeDeclaration"
    // InternalAcmeParser.g:614:1: ruleAcmeRoleTypeDeclaration : ( ( rule__AcmeRoleTypeDeclaration__Group__0 ) ) ;
    public final void ruleAcmeRoleTypeDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:618:2: ( ( ( rule__AcmeRoleTypeDeclaration__Group__0 ) ) )
            // InternalAcmeParser.g:619:2: ( ( rule__AcmeRoleTypeDeclaration__Group__0 ) )
            {
            // InternalAcmeParser.g:619:2: ( ( rule__AcmeRoleTypeDeclaration__Group__0 ) )
            // InternalAcmeParser.g:620:3: ( rule__AcmeRoleTypeDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleTypeDeclarationAccess().getGroup()); 
            }
            // InternalAcmeParser.g:621:3: ( rule__AcmeRoleTypeDeclaration__Group__0 )
            // InternalAcmeParser.g:621:4: rule__AcmeRoleTypeDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmeRoleTypeDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleTypeDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmeRoleTypeDeclaration"


    // $ANTLR start "entryRuleAcmeRoleDeclaration"
    // InternalAcmeParser.g:630:1: entryRuleAcmeRoleDeclaration : ruleAcmeRoleDeclaration EOF ;
    public final void entryRuleAcmeRoleDeclaration() throws RecognitionException {
        try {
            // InternalAcmeParser.g:631:1: ( ruleAcmeRoleDeclaration EOF )
            // InternalAcmeParser.g:632:1: ruleAcmeRoleDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmeRoleDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmeRoleDeclaration"


    // $ANTLR start "ruleAcmeRoleDeclaration"
    // InternalAcmeParser.g:639:1: ruleAcmeRoleDeclaration : ( ( rule__AcmeRoleDeclaration__Group__0 ) ) ;
    public final void ruleAcmeRoleDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:643:2: ( ( ( rule__AcmeRoleDeclaration__Group__0 ) ) )
            // InternalAcmeParser.g:644:2: ( ( rule__AcmeRoleDeclaration__Group__0 ) )
            {
            // InternalAcmeParser.g:644:2: ( ( rule__AcmeRoleDeclaration__Group__0 ) )
            // InternalAcmeParser.g:645:3: ( rule__AcmeRoleDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleDeclarationAccess().getGroup()); 
            }
            // InternalAcmeParser.g:646:3: ( rule__AcmeRoleDeclaration__Group__0 )
            // InternalAcmeParser.g:646:4: rule__AcmeRoleDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmeRoleDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmeRoleDeclaration"


    // $ANTLR start "entryRuleAcmeRoleBody"
    // InternalAcmeParser.g:655:1: entryRuleAcmeRoleBody : ruleAcmeRoleBody EOF ;
    public final void entryRuleAcmeRoleBody() throws RecognitionException {
        try {
            // InternalAcmeParser.g:656:1: ( ruleAcmeRoleBody EOF )
            // InternalAcmeParser.g:657:1: ruleAcmeRoleBody EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmeRoleBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleBodyRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmeRoleBody"


    // $ANTLR start "ruleAcmeRoleBody"
    // InternalAcmeParser.g:664:1: ruleAcmeRoleBody : ( ( rule__AcmeRoleBody__Group__0 ) ) ;
    public final void ruleAcmeRoleBody() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:668:2: ( ( ( rule__AcmeRoleBody__Group__0 ) ) )
            // InternalAcmeParser.g:669:2: ( ( rule__AcmeRoleBody__Group__0 ) )
            {
            // InternalAcmeParser.g:669:2: ( ( rule__AcmeRoleBody__Group__0 ) )
            // InternalAcmeParser.g:670:3: ( rule__AcmeRoleBody__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleBodyAccess().getGroup()); 
            }
            // InternalAcmeParser.g:671:3: ( rule__AcmeRoleBody__Group__0 )
            // InternalAcmeParser.g:671:4: rule__AcmeRoleBody__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmeRoleBody__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleBodyAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmeRoleBody"


    // $ANTLR start "entryRuleAcmeComponentTypeDeclaration"
    // InternalAcmeParser.g:680:1: entryRuleAcmeComponentTypeDeclaration : ruleAcmeComponentTypeDeclaration EOF ;
    public final void entryRuleAcmeComponentTypeDeclaration() throws RecognitionException {
        try {
            // InternalAcmeParser.g:681:1: ( ruleAcmeComponentTypeDeclaration EOF )
            // InternalAcmeParser.g:682:1: ruleAcmeComponentTypeDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentTypeDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmeComponentTypeDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentTypeDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmeComponentTypeDeclaration"


    // $ANTLR start "ruleAcmeComponentTypeDeclaration"
    // InternalAcmeParser.g:689:1: ruleAcmeComponentTypeDeclaration : ( ( rule__AcmeComponentTypeDeclaration__Group__0 ) ) ;
    public final void ruleAcmeComponentTypeDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:693:2: ( ( ( rule__AcmeComponentTypeDeclaration__Group__0 ) ) )
            // InternalAcmeParser.g:694:2: ( ( rule__AcmeComponentTypeDeclaration__Group__0 ) )
            {
            // InternalAcmeParser.g:694:2: ( ( rule__AcmeComponentTypeDeclaration__Group__0 ) )
            // InternalAcmeParser.g:695:3: ( rule__AcmeComponentTypeDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentTypeDeclarationAccess().getGroup()); 
            }
            // InternalAcmeParser.g:696:3: ( rule__AcmeComponentTypeDeclaration__Group__0 )
            // InternalAcmeParser.g:696:4: rule__AcmeComponentTypeDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmeComponentTypeDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentTypeDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmeComponentTypeDeclaration"


    // $ANTLR start "entryRuleAcmeComponentDeclaration"
    // InternalAcmeParser.g:705:1: entryRuleAcmeComponentDeclaration : ruleAcmeComponentDeclaration EOF ;
    public final void entryRuleAcmeComponentDeclaration() throws RecognitionException {
        try {
            // InternalAcmeParser.g:706:1: ( ruleAcmeComponentDeclaration EOF )
            // InternalAcmeParser.g:707:1: ruleAcmeComponentDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmeComponentDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmeComponentDeclaration"


    // $ANTLR start "ruleAcmeComponentDeclaration"
    // InternalAcmeParser.g:714:1: ruleAcmeComponentDeclaration : ( ( rule__AcmeComponentDeclaration__Group__0 ) ) ;
    public final void ruleAcmeComponentDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:718:2: ( ( ( rule__AcmeComponentDeclaration__Group__0 ) ) )
            // InternalAcmeParser.g:719:2: ( ( rule__AcmeComponentDeclaration__Group__0 ) )
            {
            // InternalAcmeParser.g:719:2: ( ( rule__AcmeComponentDeclaration__Group__0 ) )
            // InternalAcmeParser.g:720:3: ( rule__AcmeComponentDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentDeclarationAccess().getGroup()); 
            }
            // InternalAcmeParser.g:721:3: ( rule__AcmeComponentDeclaration__Group__0 )
            // InternalAcmeParser.g:721:4: rule__AcmeComponentDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmeComponentDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmeComponentDeclaration"


    // $ANTLR start "entryRuleAcmeComponentBody"
    // InternalAcmeParser.g:730:1: entryRuleAcmeComponentBody : ruleAcmeComponentBody EOF ;
    public final void entryRuleAcmeComponentBody() throws RecognitionException {
        try {
            // InternalAcmeParser.g:731:1: ( ruleAcmeComponentBody EOF )
            // InternalAcmeParser.g:732:1: ruleAcmeComponentBody EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmeComponentBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentBodyRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmeComponentBody"


    // $ANTLR start "ruleAcmeComponentBody"
    // InternalAcmeParser.g:739:1: ruleAcmeComponentBody : ( ( rule__AcmeComponentBody__Group__0 ) ) ;
    public final void ruleAcmeComponentBody() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:743:2: ( ( ( rule__AcmeComponentBody__Group__0 ) ) )
            // InternalAcmeParser.g:744:2: ( ( rule__AcmeComponentBody__Group__0 ) )
            {
            // InternalAcmeParser.g:744:2: ( ( rule__AcmeComponentBody__Group__0 ) )
            // InternalAcmeParser.g:745:3: ( rule__AcmeComponentBody__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentBodyAccess().getGroup()); 
            }
            // InternalAcmeParser.g:746:3: ( rule__AcmeComponentBody__Group__0 )
            // InternalAcmeParser.g:746:4: rule__AcmeComponentBody__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmeComponentBody__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentBodyAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmeComponentBody"


    // $ANTLR start "entryRuleAcmeConnectorTypeDeclaration"
    // InternalAcmeParser.g:755:1: entryRuleAcmeConnectorTypeDeclaration : ruleAcmeConnectorTypeDeclaration EOF ;
    public final void entryRuleAcmeConnectorTypeDeclaration() throws RecognitionException {
        try {
            // InternalAcmeParser.g:756:1: ( ruleAcmeConnectorTypeDeclaration EOF )
            // InternalAcmeParser.g:757:1: ruleAcmeConnectorTypeDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorTypeDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmeConnectorTypeDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorTypeDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmeConnectorTypeDeclaration"


    // $ANTLR start "ruleAcmeConnectorTypeDeclaration"
    // InternalAcmeParser.g:764:1: ruleAcmeConnectorTypeDeclaration : ( ( rule__AcmeConnectorTypeDeclaration__Group__0 ) ) ;
    public final void ruleAcmeConnectorTypeDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:768:2: ( ( ( rule__AcmeConnectorTypeDeclaration__Group__0 ) ) )
            // InternalAcmeParser.g:769:2: ( ( rule__AcmeConnectorTypeDeclaration__Group__0 ) )
            {
            // InternalAcmeParser.g:769:2: ( ( rule__AcmeConnectorTypeDeclaration__Group__0 ) )
            // InternalAcmeParser.g:770:3: ( rule__AcmeConnectorTypeDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getGroup()); 
            }
            // InternalAcmeParser.g:771:3: ( rule__AcmeConnectorTypeDeclaration__Group__0 )
            // InternalAcmeParser.g:771:4: rule__AcmeConnectorTypeDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorTypeDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmeConnectorTypeDeclaration"


    // $ANTLR start "entryRuleAcmeConnectorDeclaration"
    // InternalAcmeParser.g:780:1: entryRuleAcmeConnectorDeclaration : ruleAcmeConnectorDeclaration EOF ;
    public final void entryRuleAcmeConnectorDeclaration() throws RecognitionException {
        try {
            // InternalAcmeParser.g:781:1: ( ruleAcmeConnectorDeclaration EOF )
            // InternalAcmeParser.g:782:1: ruleAcmeConnectorDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmeConnectorDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmeConnectorDeclaration"


    // $ANTLR start "ruleAcmeConnectorDeclaration"
    // InternalAcmeParser.g:789:1: ruleAcmeConnectorDeclaration : ( ( rule__AcmeConnectorDeclaration__Group__0 ) ) ;
    public final void ruleAcmeConnectorDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:793:2: ( ( ( rule__AcmeConnectorDeclaration__Group__0 ) ) )
            // InternalAcmeParser.g:794:2: ( ( rule__AcmeConnectorDeclaration__Group__0 ) )
            {
            // InternalAcmeParser.g:794:2: ( ( rule__AcmeConnectorDeclaration__Group__0 ) )
            // InternalAcmeParser.g:795:3: ( rule__AcmeConnectorDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorDeclarationAccess().getGroup()); 
            }
            // InternalAcmeParser.g:796:3: ( rule__AcmeConnectorDeclaration__Group__0 )
            // InternalAcmeParser.g:796:4: rule__AcmeConnectorDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmeConnectorDeclaration"


    // $ANTLR start "entryRuleAcmeConnectorBody"
    // InternalAcmeParser.g:805:1: entryRuleAcmeConnectorBody : ruleAcmeConnectorBody EOF ;
    public final void entryRuleAcmeConnectorBody() throws RecognitionException {
        try {
            // InternalAcmeParser.g:806:1: ( ruleAcmeConnectorBody EOF )
            // InternalAcmeParser.g:807:1: ruleAcmeConnectorBody EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmeConnectorBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorBodyRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmeConnectorBody"


    // $ANTLR start "ruleAcmeConnectorBody"
    // InternalAcmeParser.g:814:1: ruleAcmeConnectorBody : ( ( rule__AcmeConnectorBody__Group__0 ) ) ;
    public final void ruleAcmeConnectorBody() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:818:2: ( ( ( rule__AcmeConnectorBody__Group__0 ) ) )
            // InternalAcmeParser.g:819:2: ( ( rule__AcmeConnectorBody__Group__0 ) )
            {
            // InternalAcmeParser.g:819:2: ( ( rule__AcmeConnectorBody__Group__0 ) )
            // InternalAcmeParser.g:820:3: ( rule__AcmeConnectorBody__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorBodyAccess().getGroup()); 
            }
            // InternalAcmeParser.g:821:3: ( rule__AcmeConnectorBody__Group__0 )
            // InternalAcmeParser.g:821:4: rule__AcmeConnectorBody__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorBody__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorBodyAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmeConnectorBody"


    // $ANTLR start "entryRuleAcmeRepresentationDeclaration"
    // InternalAcmeParser.g:830:1: entryRuleAcmeRepresentationDeclaration : ruleAcmeRepresentationDeclaration EOF ;
    public final void entryRuleAcmeRepresentationDeclaration() throws RecognitionException {
        try {
            // InternalAcmeParser.g:831:1: ( ruleAcmeRepresentationDeclaration EOF )
            // InternalAcmeParser.g:832:1: ruleAcmeRepresentationDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRepresentationDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmeRepresentationDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRepresentationDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmeRepresentationDeclaration"


    // $ANTLR start "ruleAcmeRepresentationDeclaration"
    // InternalAcmeParser.g:839:1: ruleAcmeRepresentationDeclaration : ( ( rule__AcmeRepresentationDeclaration__Group__0 ) ) ;
    public final void ruleAcmeRepresentationDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:843:2: ( ( ( rule__AcmeRepresentationDeclaration__Group__0 ) ) )
            // InternalAcmeParser.g:844:2: ( ( rule__AcmeRepresentationDeclaration__Group__0 ) )
            {
            // InternalAcmeParser.g:844:2: ( ( rule__AcmeRepresentationDeclaration__Group__0 ) )
            // InternalAcmeParser.g:845:3: ( rule__AcmeRepresentationDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRepresentationDeclarationAccess().getGroup()); 
            }
            // InternalAcmeParser.g:846:3: ( rule__AcmeRepresentationDeclaration__Group__0 )
            // InternalAcmeParser.g:846:4: rule__AcmeRepresentationDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmeRepresentationDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRepresentationDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmeRepresentationDeclaration"


    // $ANTLR start "entryRuleAcmeBindingDeclaration"
    // InternalAcmeParser.g:855:1: entryRuleAcmeBindingDeclaration : ruleAcmeBindingDeclaration EOF ;
    public final void entryRuleAcmeBindingDeclaration() throws RecognitionException {
        try {
            // InternalAcmeParser.g:856:1: ( ruleAcmeBindingDeclaration EOF )
            // InternalAcmeParser.g:857:1: ruleAcmeBindingDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeBindingDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmeBindingDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeBindingDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmeBindingDeclaration"


    // $ANTLR start "ruleAcmeBindingDeclaration"
    // InternalAcmeParser.g:864:1: ruleAcmeBindingDeclaration : ( ( rule__AcmeBindingDeclaration__Group__0 ) ) ;
    public final void ruleAcmeBindingDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:868:2: ( ( ( rule__AcmeBindingDeclaration__Group__0 ) ) )
            // InternalAcmeParser.g:869:2: ( ( rule__AcmeBindingDeclaration__Group__0 ) )
            {
            // InternalAcmeParser.g:869:2: ( ( rule__AcmeBindingDeclaration__Group__0 ) )
            // InternalAcmeParser.g:870:3: ( rule__AcmeBindingDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeBindingDeclarationAccess().getGroup()); 
            }
            // InternalAcmeParser.g:871:3: ( rule__AcmeBindingDeclaration__Group__0 )
            // InternalAcmeParser.g:871:4: rule__AcmeBindingDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmeBindingDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeBindingDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmeBindingDeclaration"


    // $ANTLR start "entryRuleAcmeAttachmentDeclaration"
    // InternalAcmeParser.g:880:1: entryRuleAcmeAttachmentDeclaration : ruleAcmeAttachmentDeclaration EOF ;
    public final void entryRuleAcmeAttachmentDeclaration() throws RecognitionException {
        try {
            // InternalAcmeParser.g:881:1: ( ruleAcmeAttachmentDeclaration EOF )
            // InternalAcmeParser.g:882:1: ruleAcmeAttachmentDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeAttachmentDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmeAttachmentDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeAttachmentDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmeAttachmentDeclaration"


    // $ANTLR start "ruleAcmeAttachmentDeclaration"
    // InternalAcmeParser.g:889:1: ruleAcmeAttachmentDeclaration : ( ( rule__AcmeAttachmentDeclaration__Group__0 ) ) ;
    public final void ruleAcmeAttachmentDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:893:2: ( ( ( rule__AcmeAttachmentDeclaration__Group__0 ) ) )
            // InternalAcmeParser.g:894:2: ( ( rule__AcmeAttachmentDeclaration__Group__0 ) )
            {
            // InternalAcmeParser.g:894:2: ( ( rule__AcmeAttachmentDeclaration__Group__0 ) )
            // InternalAcmeParser.g:895:3: ( rule__AcmeAttachmentDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeAttachmentDeclarationAccess().getGroup()); 
            }
            // InternalAcmeParser.g:896:3: ( rule__AcmeAttachmentDeclaration__Group__0 )
            // InternalAcmeParser.g:896:4: rule__AcmeAttachmentDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmeAttachmentDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeAttachmentDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmeAttachmentDeclaration"


    // $ANTLR start "entryRuleAcmePropertyDeclaration"
    // InternalAcmeParser.g:905:1: entryRuleAcmePropertyDeclaration : ruleAcmePropertyDeclaration EOF ;
    public final void entryRuleAcmePropertyDeclaration() throws RecognitionException {
        try {
            // InternalAcmeParser.g:906:1: ( ruleAcmePropertyDeclaration EOF )
            // InternalAcmeParser.g:907:1: ruleAcmePropertyDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmePropertyDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmePropertyDeclaration"


    // $ANTLR start "ruleAcmePropertyDeclaration"
    // InternalAcmeParser.g:914:1: ruleAcmePropertyDeclaration : ( ( rule__AcmePropertyDeclaration__Group__0 ) ) ;
    public final void ruleAcmePropertyDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:918:2: ( ( ( rule__AcmePropertyDeclaration__Group__0 ) ) )
            // InternalAcmeParser.g:919:2: ( ( rule__AcmePropertyDeclaration__Group__0 ) )
            {
            // InternalAcmeParser.g:919:2: ( ( rule__AcmePropertyDeclaration__Group__0 ) )
            // InternalAcmeParser.g:920:3: ( rule__AcmePropertyDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyDeclarationAccess().getGroup()); 
            }
            // InternalAcmeParser.g:921:3: ( rule__AcmePropertyDeclaration__Group__0 )
            // InternalAcmeParser.g:921:4: rule__AcmePropertyDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmePropertyDeclaration"


    // $ANTLR start "entryRuleAcmePropertyValueDeclaration"
    // InternalAcmeParser.g:930:1: entryRuleAcmePropertyValueDeclaration : ruleAcmePropertyValueDeclaration EOF ;
    public final void entryRuleAcmePropertyValueDeclaration() throws RecognitionException {
        try {
            // InternalAcmeParser.g:931:1: ( ruleAcmePropertyValueDeclaration EOF )
            // InternalAcmeParser.g:932:1: ruleAcmePropertyValueDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyValueDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmePropertyValueDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyValueDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmePropertyValueDeclaration"


    // $ANTLR start "ruleAcmePropertyValueDeclaration"
    // InternalAcmeParser.g:939:1: ruleAcmePropertyValueDeclaration : ( ( rule__AcmePropertyValueDeclaration__Alternatives ) ) ;
    public final void ruleAcmePropertyValueDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:943:2: ( ( ( rule__AcmePropertyValueDeclaration__Alternatives ) ) )
            // InternalAcmeParser.g:944:2: ( ( rule__AcmePropertyValueDeclaration__Alternatives ) )
            {
            // InternalAcmeParser.g:944:2: ( ( rule__AcmePropertyValueDeclaration__Alternatives ) )
            // InternalAcmeParser.g:945:3: ( rule__AcmePropertyValueDeclaration__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyValueDeclarationAccess().getAlternatives()); 
            }
            // InternalAcmeParser.g:946:3: ( rule__AcmePropertyValueDeclaration__Alternatives )
            // InternalAcmeParser.g:946:4: rule__AcmePropertyValueDeclaration__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyValueDeclaration__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyValueDeclarationAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmePropertyValueDeclaration"


    // $ANTLR start "entryRuleBooleanLiteral"
    // InternalAcmeParser.g:955:1: entryRuleBooleanLiteral : ruleBooleanLiteral EOF ;
    public final void entryRuleBooleanLiteral() throws RecognitionException {
        try {
            // InternalAcmeParser.g:956:1: ( ruleBooleanLiteral EOF )
            // InternalAcmeParser.g:957:1: ruleBooleanLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBooleanLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBooleanLiteral"


    // $ANTLR start "ruleBooleanLiteral"
    // InternalAcmeParser.g:964:1: ruleBooleanLiteral : ( ( rule__BooleanLiteral__Alternatives ) ) ;
    public final void ruleBooleanLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:968:2: ( ( ( rule__BooleanLiteral__Alternatives ) ) )
            // InternalAcmeParser.g:969:2: ( ( rule__BooleanLiteral__Alternatives ) )
            {
            // InternalAcmeParser.g:969:2: ( ( rule__BooleanLiteral__Alternatives ) )
            // InternalAcmeParser.g:970:3: ( rule__BooleanLiteral__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanLiteralAccess().getAlternatives()); 
            }
            // InternalAcmeParser.g:971:3: ( rule__BooleanLiteral__Alternatives )
            // InternalAcmeParser.g:971:4: rule__BooleanLiteral__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__BooleanLiteral__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanLiteralAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBooleanLiteral"


    // $ANTLR start "entryRuleIntegerLiteral"
    // InternalAcmeParser.g:980:1: entryRuleIntegerLiteral : ruleIntegerLiteral EOF ;
    public final void entryRuleIntegerLiteral() throws RecognitionException {
        try {
            // InternalAcmeParser.g:981:1: ( ruleIntegerLiteral EOF )
            // InternalAcmeParser.g:982:1: ruleIntegerLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleIntegerLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIntegerLiteral"


    // $ANTLR start "ruleIntegerLiteral"
    // InternalAcmeParser.g:989:1: ruleIntegerLiteral : ( ( rule__IntegerLiteral__ValueAssignment ) ) ;
    public final void ruleIntegerLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:993:2: ( ( ( rule__IntegerLiteral__ValueAssignment ) ) )
            // InternalAcmeParser.g:994:2: ( ( rule__IntegerLiteral__ValueAssignment ) )
            {
            // InternalAcmeParser.g:994:2: ( ( rule__IntegerLiteral__ValueAssignment ) )
            // InternalAcmeParser.g:995:3: ( rule__IntegerLiteral__ValueAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerLiteralAccess().getValueAssignment()); 
            }
            // InternalAcmeParser.g:996:3: ( rule__IntegerLiteral__ValueAssignment )
            // InternalAcmeParser.g:996:4: rule__IntegerLiteral__ValueAssignment
            {
            pushFollow(FOLLOW_2);
            rule__IntegerLiteral__ValueAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerLiteralAccess().getValueAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIntegerLiteral"


    // $ANTLR start "entryRuleFloatLiteral"
    // InternalAcmeParser.g:1005:1: entryRuleFloatLiteral : ruleFloatLiteral EOF ;
    public final void entryRuleFloatLiteral() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1006:1: ( ruleFloatLiteral EOF )
            // InternalAcmeParser.g:1007:1: ruleFloatLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFloatLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFloatLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFloatLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFloatLiteral"


    // $ANTLR start "ruleFloatLiteral"
    // InternalAcmeParser.g:1014:1: ruleFloatLiteral : ( ( rule__FloatLiteral__ValueAssignment ) ) ;
    public final void ruleFloatLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1018:2: ( ( ( rule__FloatLiteral__ValueAssignment ) ) )
            // InternalAcmeParser.g:1019:2: ( ( rule__FloatLiteral__ValueAssignment ) )
            {
            // InternalAcmeParser.g:1019:2: ( ( rule__FloatLiteral__ValueAssignment ) )
            // InternalAcmeParser.g:1020:3: ( rule__FloatLiteral__ValueAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFloatLiteralAccess().getValueAssignment()); 
            }
            // InternalAcmeParser.g:1021:3: ( rule__FloatLiteral__ValueAssignment )
            // InternalAcmeParser.g:1021:4: rule__FloatLiteral__ValueAssignment
            {
            pushFollow(FOLLOW_2);
            rule__FloatLiteral__ValueAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFloatLiteralAccess().getValueAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFloatLiteral"


    // $ANTLR start "entryRuleEnumIdentifier"
    // InternalAcmeParser.g:1030:1: entryRuleEnumIdentifier : ruleEnumIdentifier EOF ;
    public final void entryRuleEnumIdentifier() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1031:1: ( ruleEnumIdentifier EOF )
            // InternalAcmeParser.g:1032:1: ruleEnumIdentifier EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEnumIdentifierRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleEnumIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEnumIdentifierRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEnumIdentifier"


    // $ANTLR start "ruleEnumIdentifier"
    // InternalAcmeParser.g:1039:1: ruleEnumIdentifier : ( ( rule__EnumIdentifier__ValueAssignment ) ) ;
    public final void ruleEnumIdentifier() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1043:2: ( ( ( rule__EnumIdentifier__ValueAssignment ) ) )
            // InternalAcmeParser.g:1044:2: ( ( rule__EnumIdentifier__ValueAssignment ) )
            {
            // InternalAcmeParser.g:1044:2: ( ( rule__EnumIdentifier__ValueAssignment ) )
            // InternalAcmeParser.g:1045:3: ( rule__EnumIdentifier__ValueAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEnumIdentifierAccess().getValueAssignment()); 
            }
            // InternalAcmeParser.g:1046:3: ( rule__EnumIdentifier__ValueAssignment )
            // InternalAcmeParser.g:1046:4: rule__EnumIdentifier__ValueAssignment
            {
            pushFollow(FOLLOW_2);
            rule__EnumIdentifier__ValueAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEnumIdentifierAccess().getValueAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEnumIdentifier"


    // $ANTLR start "entryRuleAcmePropertyCompoundElement"
    // InternalAcmeParser.g:1055:1: entryRuleAcmePropertyCompoundElement : ruleAcmePropertyCompoundElement EOF ;
    public final void entryRuleAcmePropertyCompoundElement() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1056:1: ( ruleAcmePropertyCompoundElement EOF )
            // InternalAcmeParser.g:1057:1: ruleAcmePropertyCompoundElement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyCompoundElementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmePropertyCompoundElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyCompoundElementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmePropertyCompoundElement"


    // $ANTLR start "ruleAcmePropertyCompoundElement"
    // InternalAcmeParser.g:1064:1: ruleAcmePropertyCompoundElement : ( ( rule__AcmePropertyCompoundElement__Alternatives ) ) ;
    public final void ruleAcmePropertyCompoundElement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1068:2: ( ( ( rule__AcmePropertyCompoundElement__Alternatives ) ) )
            // InternalAcmeParser.g:1069:2: ( ( rule__AcmePropertyCompoundElement__Alternatives ) )
            {
            // InternalAcmeParser.g:1069:2: ( ( rule__AcmePropertyCompoundElement__Alternatives ) )
            // InternalAcmeParser.g:1070:3: ( rule__AcmePropertyCompoundElement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyCompoundElementAccess().getAlternatives()); 
            }
            // InternalAcmeParser.g:1071:3: ( rule__AcmePropertyCompoundElement__Alternatives )
            // InternalAcmeParser.g:1071:4: rule__AcmePropertyCompoundElement__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyCompoundElement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyCompoundElementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmePropertyCompoundElement"


    // $ANTLR start "entryRuleAcmePropertySet"
    // InternalAcmeParser.g:1080:1: entryRuleAcmePropertySet : ruleAcmePropertySet EOF ;
    public final void entryRuleAcmePropertySet() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1081:1: ( ruleAcmePropertySet EOF )
            // InternalAcmeParser.g:1082:1: ruleAcmePropertySet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertySetRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmePropertySet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertySetRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmePropertySet"


    // $ANTLR start "ruleAcmePropertySet"
    // InternalAcmeParser.g:1089:1: ruleAcmePropertySet : ( ( rule__AcmePropertySet__Group__0 ) ) ;
    public final void ruleAcmePropertySet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1093:2: ( ( ( rule__AcmePropertySet__Group__0 ) ) )
            // InternalAcmeParser.g:1094:2: ( ( rule__AcmePropertySet__Group__0 ) )
            {
            // InternalAcmeParser.g:1094:2: ( ( rule__AcmePropertySet__Group__0 ) )
            // InternalAcmeParser.g:1095:3: ( rule__AcmePropertySet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertySetAccess().getGroup()); 
            }
            // InternalAcmeParser.g:1096:3: ( rule__AcmePropertySet__Group__0 )
            // InternalAcmeParser.g:1096:4: rule__AcmePropertySet__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertySet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertySetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmePropertySet"


    // $ANTLR start "entryRuleAcmePropertySequence"
    // InternalAcmeParser.g:1105:1: entryRuleAcmePropertySequence : ruleAcmePropertySequence EOF ;
    public final void entryRuleAcmePropertySequence() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1106:1: ( ruleAcmePropertySequence EOF )
            // InternalAcmeParser.g:1107:1: ruleAcmePropertySequence EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertySequenceRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmePropertySequence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertySequenceRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmePropertySequence"


    // $ANTLR start "ruleAcmePropertySequence"
    // InternalAcmeParser.g:1114:1: ruleAcmePropertySequence : ( ( rule__AcmePropertySequence__Group__0 ) ) ;
    public final void ruleAcmePropertySequence() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1118:2: ( ( ( rule__AcmePropertySequence__Group__0 ) ) )
            // InternalAcmeParser.g:1119:2: ( ( rule__AcmePropertySequence__Group__0 ) )
            {
            // InternalAcmeParser.g:1119:2: ( ( rule__AcmePropertySequence__Group__0 ) )
            // InternalAcmeParser.g:1120:3: ( rule__AcmePropertySequence__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertySequenceAccess().getGroup()); 
            }
            // InternalAcmeParser.g:1121:3: ( rule__AcmePropertySequence__Group__0 )
            // InternalAcmeParser.g:1121:4: rule__AcmePropertySequence__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertySequence__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertySequenceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmePropertySequence"


    // $ANTLR start "entryRuleAcmePropertyRecordEntry"
    // InternalAcmeParser.g:1130:1: entryRuleAcmePropertyRecordEntry : ruleAcmePropertyRecordEntry EOF ;
    public final void entryRuleAcmePropertyRecordEntry() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1131:1: ( ruleAcmePropertyRecordEntry EOF )
            // InternalAcmeParser.g:1132:1: ruleAcmePropertyRecordEntry EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyRecordEntryRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmePropertyRecordEntry();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyRecordEntryRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmePropertyRecordEntry"


    // $ANTLR start "ruleAcmePropertyRecordEntry"
    // InternalAcmeParser.g:1139:1: ruleAcmePropertyRecordEntry : ( ( rule__AcmePropertyRecordEntry__Group__0 ) ) ;
    public final void ruleAcmePropertyRecordEntry() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1143:2: ( ( ( rule__AcmePropertyRecordEntry__Group__0 ) ) )
            // InternalAcmeParser.g:1144:2: ( ( rule__AcmePropertyRecordEntry__Group__0 ) )
            {
            // InternalAcmeParser.g:1144:2: ( ( rule__AcmePropertyRecordEntry__Group__0 ) )
            // InternalAcmeParser.g:1145:3: ( rule__AcmePropertyRecordEntry__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyRecordEntryAccess().getGroup()); 
            }
            // InternalAcmeParser.g:1146:3: ( rule__AcmePropertyRecordEntry__Group__0 )
            // InternalAcmeParser.g:1146:4: rule__AcmePropertyRecordEntry__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyRecordEntry__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyRecordEntryAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmePropertyRecordEntry"


    // $ANTLR start "entryRuleAcmePropertyRecord"
    // InternalAcmeParser.g:1155:1: entryRuleAcmePropertyRecord : ruleAcmePropertyRecord EOF ;
    public final void entryRuleAcmePropertyRecord() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1156:1: ( ruleAcmePropertyRecord EOF )
            // InternalAcmeParser.g:1157:1: ruleAcmePropertyRecord EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyRecordRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmePropertyRecord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyRecordRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmePropertyRecord"


    // $ANTLR start "ruleAcmePropertyRecord"
    // InternalAcmeParser.g:1164:1: ruleAcmePropertyRecord : ( ( rule__AcmePropertyRecord__Group__0 ) ) ;
    public final void ruleAcmePropertyRecord() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1168:2: ( ( ( rule__AcmePropertyRecord__Group__0 ) ) )
            // InternalAcmeParser.g:1169:2: ( ( rule__AcmePropertyRecord__Group__0 ) )
            {
            // InternalAcmeParser.g:1169:2: ( ( rule__AcmePropertyRecord__Group__0 ) )
            // InternalAcmeParser.g:1170:3: ( rule__AcmePropertyRecord__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyRecordAccess().getGroup()); 
            }
            // InternalAcmeParser.g:1171:3: ( rule__AcmePropertyRecord__Group__0 )
            // InternalAcmeParser.g:1171:4: rule__AcmePropertyRecord__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyRecord__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyRecordAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmePropertyRecord"


    // $ANTLR start "entryRuleAcmePropertyTypeRecord"
    // InternalAcmeParser.g:1180:1: entryRuleAcmePropertyTypeRecord : ruleAcmePropertyTypeRecord EOF ;
    public final void entryRuleAcmePropertyTypeRecord() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1181:1: ( ruleAcmePropertyTypeRecord EOF )
            // InternalAcmeParser.g:1182:1: ruleAcmePropertyTypeRecord EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeRecordRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmePropertyTypeRecord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeRecordRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmePropertyTypeRecord"


    // $ANTLR start "ruleAcmePropertyTypeRecord"
    // InternalAcmeParser.g:1189:1: ruleAcmePropertyTypeRecord : ( ( rule__AcmePropertyTypeRecord__Group__0 ) ) ;
    public final void ruleAcmePropertyTypeRecord() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1193:2: ( ( ( rule__AcmePropertyTypeRecord__Group__0 ) ) )
            // InternalAcmeParser.g:1194:2: ( ( rule__AcmePropertyTypeRecord__Group__0 ) )
            {
            // InternalAcmeParser.g:1194:2: ( ( rule__AcmePropertyTypeRecord__Group__0 ) )
            // InternalAcmeParser.g:1195:3: ( rule__AcmePropertyTypeRecord__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeRecordAccess().getGroup()); 
            }
            // InternalAcmeParser.g:1196:3: ( rule__AcmePropertyTypeRecord__Group__0 )
            // InternalAcmeParser.g:1196:4: rule__AcmePropertyTypeRecord__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeRecord__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeRecordAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmePropertyTypeRecord"


    // $ANTLR start "entryRuleAcmePropertyTypeSet"
    // InternalAcmeParser.g:1205:1: entryRuleAcmePropertyTypeSet : ruleAcmePropertyTypeSet EOF ;
    public final void entryRuleAcmePropertyTypeSet() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1206:1: ( ruleAcmePropertyTypeSet EOF )
            // InternalAcmeParser.g:1207:1: ruleAcmePropertyTypeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeSetRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmePropertyTypeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeSetRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmePropertyTypeSet"


    // $ANTLR start "ruleAcmePropertyTypeSet"
    // InternalAcmeParser.g:1214:1: ruleAcmePropertyTypeSet : ( ( rule__AcmePropertyTypeSet__Group__0 ) ) ;
    public final void ruleAcmePropertyTypeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1218:2: ( ( ( rule__AcmePropertyTypeSet__Group__0 ) ) )
            // InternalAcmeParser.g:1219:2: ( ( rule__AcmePropertyTypeSet__Group__0 ) )
            {
            // InternalAcmeParser.g:1219:2: ( ( rule__AcmePropertyTypeSet__Group__0 ) )
            // InternalAcmeParser.g:1220:3: ( rule__AcmePropertyTypeSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeSetAccess().getGroup()); 
            }
            // InternalAcmeParser.g:1221:3: ( rule__AcmePropertyTypeSet__Group__0 )
            // InternalAcmeParser.g:1221:4: rule__AcmePropertyTypeSet__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmePropertyTypeSet"


    // $ANTLR start "entryRuleAcmePropertyTypeSequence"
    // InternalAcmeParser.g:1230:1: entryRuleAcmePropertyTypeSequence : ruleAcmePropertyTypeSequence EOF ;
    public final void entryRuleAcmePropertyTypeSequence() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1231:1: ( ruleAcmePropertyTypeSequence EOF )
            // InternalAcmeParser.g:1232:1: ruleAcmePropertyTypeSequence EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeSequenceRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmePropertyTypeSequence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeSequenceRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmePropertyTypeSequence"


    // $ANTLR start "ruleAcmePropertyTypeSequence"
    // InternalAcmeParser.g:1239:1: ruleAcmePropertyTypeSequence : ( ( rule__AcmePropertyTypeSequence__Group__0 ) ) ;
    public final void ruleAcmePropertyTypeSequence() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1243:2: ( ( ( rule__AcmePropertyTypeSequence__Group__0 ) ) )
            // InternalAcmeParser.g:1244:2: ( ( rule__AcmePropertyTypeSequence__Group__0 ) )
            {
            // InternalAcmeParser.g:1244:2: ( ( rule__AcmePropertyTypeSequence__Group__0 ) )
            // InternalAcmeParser.g:1245:3: ( rule__AcmePropertyTypeSequence__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeSequenceAccess().getGroup()); 
            }
            // InternalAcmeParser.g:1246:3: ( rule__AcmePropertyTypeSequence__Group__0 )
            // InternalAcmeParser.g:1246:4: rule__AcmePropertyTypeSequence__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeSequence__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeSequenceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmePropertyTypeSequence"


    // $ANTLR start "entryRuleAcmePropertyTypeEnum"
    // InternalAcmeParser.g:1255:1: entryRuleAcmePropertyTypeEnum : ruleAcmePropertyTypeEnum EOF ;
    public final void entryRuleAcmePropertyTypeEnum() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1256:1: ( ruleAcmePropertyTypeEnum EOF )
            // InternalAcmeParser.g:1257:1: ruleAcmePropertyTypeEnum EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeEnumRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmePropertyTypeEnum();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeEnumRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmePropertyTypeEnum"


    // $ANTLR start "ruleAcmePropertyTypeEnum"
    // InternalAcmeParser.g:1264:1: ruleAcmePropertyTypeEnum : ( ( rule__AcmePropertyTypeEnum__Group__0 ) ) ;
    public final void ruleAcmePropertyTypeEnum() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1268:2: ( ( ( rule__AcmePropertyTypeEnum__Group__0 ) ) )
            // InternalAcmeParser.g:1269:2: ( ( rule__AcmePropertyTypeEnum__Group__0 ) )
            {
            // InternalAcmeParser.g:1269:2: ( ( rule__AcmePropertyTypeEnum__Group__0 ) )
            // InternalAcmeParser.g:1270:3: ( rule__AcmePropertyTypeEnum__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeEnumAccess().getGroup()); 
            }
            // InternalAcmeParser.g:1271:3: ( rule__AcmePropertyTypeEnum__Group__0 )
            // InternalAcmeParser.g:1271:4: rule__AcmePropertyTypeEnum__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeEnum__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeEnumAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmePropertyTypeEnum"


    // $ANTLR start "entryRuleAcmePropertyRecordFieldDescription"
    // InternalAcmeParser.g:1280:1: entryRuleAcmePropertyRecordFieldDescription : ruleAcmePropertyRecordFieldDescription EOF ;
    public final void entryRuleAcmePropertyRecordFieldDescription() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1281:1: ( ruleAcmePropertyRecordFieldDescription EOF )
            // InternalAcmeParser.g:1282:1: ruleAcmePropertyRecordFieldDescription EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyRecordFieldDescriptionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmePropertyRecordFieldDescription();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyRecordFieldDescriptionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmePropertyRecordFieldDescription"


    // $ANTLR start "ruleAcmePropertyRecordFieldDescription"
    // InternalAcmeParser.g:1289:1: ruleAcmePropertyRecordFieldDescription : ( ( rule__AcmePropertyRecordFieldDescription__Group__0 ) ) ;
    public final void ruleAcmePropertyRecordFieldDescription() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1293:2: ( ( ( rule__AcmePropertyRecordFieldDescription__Group__0 ) ) )
            // InternalAcmeParser.g:1294:2: ( ( rule__AcmePropertyRecordFieldDescription__Group__0 ) )
            {
            // InternalAcmeParser.g:1294:2: ( ( rule__AcmePropertyRecordFieldDescription__Group__0 ) )
            // InternalAcmeParser.g:1295:3: ( rule__AcmePropertyRecordFieldDescription__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyRecordFieldDescriptionAccess().getGroup()); 
            }
            // InternalAcmeParser.g:1296:3: ( rule__AcmePropertyRecordFieldDescription__Group__0 )
            // InternalAcmeParser.g:1296:4: rule__AcmePropertyRecordFieldDescription__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyRecordFieldDescription__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyRecordFieldDescriptionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmePropertyRecordFieldDescription"


    // $ANTLR start "entryRuleAcmePropertyTypeRef"
    // InternalAcmeParser.g:1305:1: entryRuleAcmePropertyTypeRef : ruleAcmePropertyTypeRef EOF ;
    public final void entryRuleAcmePropertyTypeRef() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1306:1: ( ruleAcmePropertyTypeRef EOF )
            // InternalAcmeParser.g:1307:1: ruleAcmePropertyTypeRef EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmePropertyTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeRefRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmePropertyTypeRef"


    // $ANTLR start "ruleAcmePropertyTypeRef"
    // InternalAcmeParser.g:1314:1: ruleAcmePropertyTypeRef : ( ( rule__AcmePropertyTypeRef__Alternatives ) ) ;
    public final void ruleAcmePropertyTypeRef() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1318:2: ( ( ( rule__AcmePropertyTypeRef__Alternatives ) ) )
            // InternalAcmeParser.g:1319:2: ( ( rule__AcmePropertyTypeRef__Alternatives ) )
            {
            // InternalAcmeParser.g:1319:2: ( ( rule__AcmePropertyTypeRef__Alternatives ) )
            // InternalAcmeParser.g:1320:3: ( rule__AcmePropertyTypeRef__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeRefAccess().getAlternatives()); 
            }
            // InternalAcmeParser.g:1321:3: ( rule__AcmePropertyTypeRef__Alternatives )
            // InternalAcmeParser.g:1321:4: rule__AcmePropertyTypeRef__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeRef__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeRefAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmePropertyTypeRef"


    // $ANTLR start "entryRuleAcmePropertyTypeStructure"
    // InternalAcmeParser.g:1330:1: entryRuleAcmePropertyTypeStructure : ruleAcmePropertyTypeStructure EOF ;
    public final void entryRuleAcmePropertyTypeStructure() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1331:1: ( ruleAcmePropertyTypeStructure EOF )
            // InternalAcmeParser.g:1332:1: ruleAcmePropertyTypeStructure EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeStructureRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmePropertyTypeStructure();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeStructureRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmePropertyTypeStructure"


    // $ANTLR start "ruleAcmePropertyTypeStructure"
    // InternalAcmeParser.g:1339:1: ruleAcmePropertyTypeStructure : ( ( rule__AcmePropertyTypeStructure__Alternatives ) ) ;
    public final void ruleAcmePropertyTypeStructure() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1343:2: ( ( ( rule__AcmePropertyTypeStructure__Alternatives ) ) )
            // InternalAcmeParser.g:1344:2: ( ( rule__AcmePropertyTypeStructure__Alternatives ) )
            {
            // InternalAcmeParser.g:1344:2: ( ( rule__AcmePropertyTypeStructure__Alternatives ) )
            // InternalAcmeParser.g:1345:3: ( rule__AcmePropertyTypeStructure__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeStructureAccess().getAlternatives()); 
            }
            // InternalAcmeParser.g:1346:3: ( rule__AcmePropertyTypeStructure__Alternatives )
            // InternalAcmeParser.g:1346:4: rule__AcmePropertyTypeStructure__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeStructure__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeStructureAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmePropertyTypeStructure"


    // $ANTLR start "entryRuleAcmePropertyTypeDeclaration"
    // InternalAcmeParser.g:1355:1: entryRuleAcmePropertyTypeDeclaration : ruleAcmePropertyTypeDeclaration EOF ;
    public final void entryRuleAcmePropertyTypeDeclaration() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1356:1: ( ruleAcmePropertyTypeDeclaration EOF )
            // InternalAcmeParser.g:1357:1: ruleAcmePropertyTypeDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmePropertyTypeDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmePropertyTypeDeclaration"


    // $ANTLR start "ruleAcmePropertyTypeDeclaration"
    // InternalAcmeParser.g:1364:1: ruleAcmePropertyTypeDeclaration : ( ( rule__AcmePropertyTypeDeclaration__Group__0 ) ) ;
    public final void ruleAcmePropertyTypeDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1368:2: ( ( ( rule__AcmePropertyTypeDeclaration__Group__0 ) ) )
            // InternalAcmeParser.g:1369:2: ( ( rule__AcmePropertyTypeDeclaration__Group__0 ) )
            {
            // InternalAcmeParser.g:1369:2: ( ( rule__AcmePropertyTypeDeclaration__Group__0 ) )
            // InternalAcmeParser.g:1370:3: ( rule__AcmePropertyTypeDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeDeclarationAccess().getGroup()); 
            }
            // InternalAcmeParser.g:1371:3: ( rule__AcmePropertyTypeDeclaration__Group__0 )
            // InternalAcmeParser.g:1371:4: rule__AcmePropertyTypeDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmePropertyTypeDeclaration"


    // $ANTLR start "entryRuleAcmePropertyBlockEntry"
    // InternalAcmeParser.g:1380:1: entryRuleAcmePropertyBlockEntry : ruleAcmePropertyBlockEntry EOF ;
    public final void entryRuleAcmePropertyBlockEntry() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1381:1: ( ruleAcmePropertyBlockEntry EOF )
            // InternalAcmeParser.g:1382:1: ruleAcmePropertyBlockEntry EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyBlockEntryRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmePropertyBlockEntry();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyBlockEntryRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmePropertyBlockEntry"


    // $ANTLR start "ruleAcmePropertyBlockEntry"
    // InternalAcmeParser.g:1389:1: ruleAcmePropertyBlockEntry : ( ( rule__AcmePropertyBlockEntry__Group__0 ) ) ;
    public final void ruleAcmePropertyBlockEntry() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1393:2: ( ( ( rule__AcmePropertyBlockEntry__Group__0 ) ) )
            // InternalAcmeParser.g:1394:2: ( ( rule__AcmePropertyBlockEntry__Group__0 ) )
            {
            // InternalAcmeParser.g:1394:2: ( ( rule__AcmePropertyBlockEntry__Group__0 ) )
            // InternalAcmeParser.g:1395:3: ( rule__AcmePropertyBlockEntry__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyBlockEntryAccess().getGroup()); 
            }
            // InternalAcmeParser.g:1396:3: ( rule__AcmePropertyBlockEntry__Group__0 )
            // InternalAcmeParser.g:1396:4: rule__AcmePropertyBlockEntry__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyBlockEntry__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyBlockEntryAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmePropertyBlockEntry"


    // $ANTLR start "entryRuleAcmePropertyBlock"
    // InternalAcmeParser.g:1405:1: entryRuleAcmePropertyBlock : ruleAcmePropertyBlock EOF ;
    public final void entryRuleAcmePropertyBlock() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1406:1: ( ruleAcmePropertyBlock EOF )
            // InternalAcmeParser.g:1407:1: ruleAcmePropertyBlock EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmePropertyBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyBlockRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmePropertyBlock"


    // $ANTLR start "ruleAcmePropertyBlock"
    // InternalAcmeParser.g:1414:1: ruleAcmePropertyBlock : ( ( rule__AcmePropertyBlock__Group__0 ) ) ;
    public final void ruleAcmePropertyBlock() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1418:2: ( ( ( rule__AcmePropertyBlock__Group__0 ) ) )
            // InternalAcmeParser.g:1419:2: ( ( rule__AcmePropertyBlock__Group__0 ) )
            {
            // InternalAcmeParser.g:1419:2: ( ( rule__AcmePropertyBlock__Group__0 ) )
            // InternalAcmeParser.g:1420:3: ( rule__AcmePropertyBlock__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyBlockAccess().getGroup()); 
            }
            // InternalAcmeParser.g:1421:3: ( rule__AcmePropertyBlock__Group__0 )
            // InternalAcmeParser.g:1421:4: rule__AcmePropertyBlock__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyBlock__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyBlockAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmePropertyBlock"


    // $ANTLR start "entryRuleDesignRule"
    // InternalAcmeParser.g:1430:1: entryRuleDesignRule : ruleDesignRule EOF ;
    public final void entryRuleDesignRule() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1431:1: ( ruleDesignRule EOF )
            // InternalAcmeParser.g:1432:1: ruleDesignRule EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDesignRule();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignRuleRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDesignRule"


    // $ANTLR start "ruleDesignRule"
    // InternalAcmeParser.g:1439:1: ruleDesignRule : ( ( rule__DesignRule__Group__0 ) ) ;
    public final void ruleDesignRule() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1443:2: ( ( ( rule__DesignRule__Group__0 ) ) )
            // InternalAcmeParser.g:1444:2: ( ( rule__DesignRule__Group__0 ) )
            {
            // InternalAcmeParser.g:1444:2: ( ( rule__DesignRule__Group__0 ) )
            // InternalAcmeParser.g:1445:3: ( rule__DesignRule__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignRuleAccess().getGroup()); 
            }
            // InternalAcmeParser.g:1446:3: ( rule__DesignRule__Group__0 )
            // InternalAcmeParser.g:1446:4: rule__DesignRule__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DesignRule__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignRuleAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDesignRule"


    // $ANTLR start "entryRuleDesignAnalysisDeclaration"
    // InternalAcmeParser.g:1455:1: entryRuleDesignAnalysisDeclaration : ruleDesignAnalysisDeclaration EOF ;
    public final void entryRuleDesignAnalysisDeclaration() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1456:1: ( ruleDesignAnalysisDeclaration EOF )
            // InternalAcmeParser.g:1457:1: ruleDesignAnalysisDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDesignAnalysisDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDesignAnalysisDeclaration"


    // $ANTLR start "ruleDesignAnalysisDeclaration"
    // InternalAcmeParser.g:1464:1: ruleDesignAnalysisDeclaration : ( ( rule__DesignAnalysisDeclaration__Alternatives ) ) ;
    public final void ruleDesignAnalysisDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1468:2: ( ( ( rule__DesignAnalysisDeclaration__Alternatives ) ) )
            // InternalAcmeParser.g:1469:2: ( ( rule__DesignAnalysisDeclaration__Alternatives ) )
            {
            // InternalAcmeParser.g:1469:2: ( ( rule__DesignAnalysisDeclaration__Alternatives ) )
            // InternalAcmeParser.g:1470:3: ( rule__DesignAnalysisDeclaration__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getAlternatives()); 
            }
            // InternalAcmeParser.g:1471:3: ( rule__DesignAnalysisDeclaration__Alternatives )
            // InternalAcmeParser.g:1471:4: rule__DesignAnalysisDeclaration__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDesignAnalysisDeclaration"


    // $ANTLR start "entryRuleFormalParam"
    // InternalAcmeParser.g:1480:1: entryRuleFormalParam : ruleFormalParam EOF ;
    public final void entryRuleFormalParam() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1481:1: ( ruleFormalParam EOF )
            // InternalAcmeParser.g:1482:1: ruleFormalParam EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormalParamRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFormalParam();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormalParamRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFormalParam"


    // $ANTLR start "ruleFormalParam"
    // InternalAcmeParser.g:1489:1: ruleFormalParam : ( ( rule__FormalParam__Group__0 ) ) ;
    public final void ruleFormalParam() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1493:2: ( ( ( rule__FormalParam__Group__0 ) ) )
            // InternalAcmeParser.g:1494:2: ( ( rule__FormalParam__Group__0 ) )
            {
            // InternalAcmeParser.g:1494:2: ( ( rule__FormalParam__Group__0 ) )
            // InternalAcmeParser.g:1495:3: ( rule__FormalParam__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormalParamAccess().getGroup()); 
            }
            // InternalAcmeParser.g:1496:3: ( rule__FormalParam__Group__0 )
            // InternalAcmeParser.g:1496:4: rule__FormalParam__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FormalParam__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormalParamAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFormalParam"


    // $ANTLR start "entryRuleAcmeTypeRef"
    // InternalAcmeParser.g:1505:1: entryRuleAcmeTypeRef : ruleAcmeTypeRef EOF ;
    public final void entryRuleAcmeTypeRef() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1506:1: ( ruleAcmeTypeRef EOF )
            // InternalAcmeParser.g:1507:1: ruleAcmeTypeRef EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAcmeTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeTypeRefRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcmeTypeRef"


    // $ANTLR start "ruleAcmeTypeRef"
    // InternalAcmeParser.g:1514:1: ruleAcmeTypeRef : ( ( rule__AcmeTypeRef__Alternatives ) ) ;
    public final void ruleAcmeTypeRef() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1518:2: ( ( ( rule__AcmeTypeRef__Alternatives ) ) )
            // InternalAcmeParser.g:1519:2: ( ( rule__AcmeTypeRef__Alternatives ) )
            {
            // InternalAcmeParser.g:1519:2: ( ( rule__AcmeTypeRef__Alternatives ) )
            // InternalAcmeParser.g:1520:3: ( rule__AcmeTypeRef__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeTypeRefAccess().getAlternatives()); 
            }
            // InternalAcmeParser.g:1521:3: ( rule__AcmeTypeRef__Alternatives )
            // InternalAcmeParser.g:1521:4: rule__AcmeTypeRef__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AcmeTypeRef__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeTypeRefAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcmeTypeRef"


    // $ANTLR start "entryRuleassignmentExpression"
    // InternalAcmeParser.g:1530:1: entryRuleassignmentExpression : ruleassignmentExpression EOF ;
    public final void entryRuleassignmentExpression() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1531:1: ( ruleassignmentExpression EOF )
            // InternalAcmeParser.g:1532:1: ruleassignmentExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleassignmentExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleassignmentExpression"


    // $ANTLR start "ruleassignmentExpression"
    // InternalAcmeParser.g:1539:1: ruleassignmentExpression : ( ( rule__AssignmentExpression__Group__0 ) ) ;
    public final void ruleassignmentExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1543:2: ( ( ( rule__AssignmentExpression__Group__0 ) ) )
            // InternalAcmeParser.g:1544:2: ( ( rule__AssignmentExpression__Group__0 ) )
            {
            // InternalAcmeParser.g:1544:2: ( ( rule__AssignmentExpression__Group__0 ) )
            // InternalAcmeParser.g:1545:3: ( rule__AssignmentExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getGroup()); 
            }
            // InternalAcmeParser.g:1546:3: ( rule__AssignmentExpression__Group__0 )
            // InternalAcmeParser.g:1546:4: rule__AssignmentExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AssignmentExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleassignmentExpression"


    // $ANTLR start "entryRulebooleanExpression"
    // InternalAcmeParser.g:1555:1: entryRulebooleanExpression : rulebooleanExpression EOF ;
    public final void entryRulebooleanExpression() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1556:1: ( rulebooleanExpression EOF )
            // InternalAcmeParser.g:1557:1: rulebooleanExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            rulebooleanExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulebooleanExpression"


    // $ANTLR start "rulebooleanExpression"
    // InternalAcmeParser.g:1564:1: rulebooleanExpression : ( ( rule__BooleanExpression__Alternatives ) ) ;
    public final void rulebooleanExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1568:2: ( ( ( rule__BooleanExpression__Alternatives ) ) )
            // InternalAcmeParser.g:1569:2: ( ( rule__BooleanExpression__Alternatives ) )
            {
            // InternalAcmeParser.g:1569:2: ( ( rule__BooleanExpression__Alternatives ) )
            // InternalAcmeParser.g:1570:3: ( rule__BooleanExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanExpressionAccess().getAlternatives()); 
            }
            // InternalAcmeParser.g:1571:3: ( rule__BooleanExpression__Alternatives )
            // InternalAcmeParser.g:1571:4: rule__BooleanExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__BooleanExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulebooleanExpression"


    // $ANTLR start "entryRuleimpliesExpression"
    // InternalAcmeParser.g:1580:1: entryRuleimpliesExpression : ruleimpliesExpression EOF ;
    public final void entryRuleimpliesExpression() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1581:1: ( ruleimpliesExpression EOF )
            // InternalAcmeParser.g:1582:1: ruleimpliesExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImpliesExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleimpliesExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImpliesExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleimpliesExpression"


    // $ANTLR start "ruleimpliesExpression"
    // InternalAcmeParser.g:1589:1: ruleimpliesExpression : ( ( rule__ImpliesExpression__Group__0 ) ) ;
    public final void ruleimpliesExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1593:2: ( ( ( rule__ImpliesExpression__Group__0 ) ) )
            // InternalAcmeParser.g:1594:2: ( ( rule__ImpliesExpression__Group__0 ) )
            {
            // InternalAcmeParser.g:1594:2: ( ( rule__ImpliesExpression__Group__0 ) )
            // InternalAcmeParser.g:1595:3: ( rule__ImpliesExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImpliesExpressionAccess().getGroup()); 
            }
            // InternalAcmeParser.g:1596:3: ( rule__ImpliesExpression__Group__0 )
            // InternalAcmeParser.g:1596:4: rule__ImpliesExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ImpliesExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImpliesExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleimpliesExpression"


    // $ANTLR start "entryRuleiffExpression"
    // InternalAcmeParser.g:1605:1: entryRuleiffExpression : ruleiffExpression EOF ;
    public final void entryRuleiffExpression() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1606:1: ( ruleiffExpression EOF )
            // InternalAcmeParser.g:1607:1: ruleiffExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIffExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleiffExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIffExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleiffExpression"


    // $ANTLR start "ruleiffExpression"
    // InternalAcmeParser.g:1614:1: ruleiffExpression : ( ( rule__IffExpression__Group__0 ) ) ;
    public final void ruleiffExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1618:2: ( ( ( rule__IffExpression__Group__0 ) ) )
            // InternalAcmeParser.g:1619:2: ( ( rule__IffExpression__Group__0 ) )
            {
            // InternalAcmeParser.g:1619:2: ( ( rule__IffExpression__Group__0 ) )
            // InternalAcmeParser.g:1620:3: ( rule__IffExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIffExpressionAccess().getGroup()); 
            }
            // InternalAcmeParser.g:1621:3: ( rule__IffExpression__Group__0 )
            // InternalAcmeParser.g:1621:4: rule__IffExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IffExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIffExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleiffExpression"


    // $ANTLR start "entryRulelogicalOrExpression"
    // InternalAcmeParser.g:1630:1: entryRulelogicalOrExpression : rulelogicalOrExpression EOF ;
    public final void entryRulelogicalOrExpression() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1631:1: ( rulelogicalOrExpression EOF )
            // InternalAcmeParser.g:1632:1: rulelogicalOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            rulelogicalOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalOrExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulelogicalOrExpression"


    // $ANTLR start "rulelogicalOrExpression"
    // InternalAcmeParser.g:1639:1: rulelogicalOrExpression : ( ( rule__LogicalOrExpression__Group__0 ) ) ;
    public final void rulelogicalOrExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1643:2: ( ( ( rule__LogicalOrExpression__Group__0 ) ) )
            // InternalAcmeParser.g:1644:2: ( ( rule__LogicalOrExpression__Group__0 ) )
            {
            // InternalAcmeParser.g:1644:2: ( ( rule__LogicalOrExpression__Group__0 ) )
            // InternalAcmeParser.g:1645:3: ( rule__LogicalOrExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalOrExpressionAccess().getGroup()); 
            }
            // InternalAcmeParser.g:1646:3: ( rule__LogicalOrExpression__Group__0 )
            // InternalAcmeParser.g:1646:4: rule__LogicalOrExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__LogicalOrExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalOrExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulelogicalOrExpression"


    // $ANTLR start "entryRulelogicalAndExpression"
    // InternalAcmeParser.g:1655:1: entryRulelogicalAndExpression : rulelogicalAndExpression EOF ;
    public final void entryRulelogicalAndExpression() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1656:1: ( rulelogicalAndExpression EOF )
            // InternalAcmeParser.g:1657:1: rulelogicalAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            rulelogicalAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulelogicalAndExpression"


    // $ANTLR start "rulelogicalAndExpression"
    // InternalAcmeParser.g:1664:1: rulelogicalAndExpression : ( ( rule__LogicalAndExpression__Group__0 ) ) ;
    public final void rulelogicalAndExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1668:2: ( ( ( rule__LogicalAndExpression__Group__0 ) ) )
            // InternalAcmeParser.g:1669:2: ( ( rule__LogicalAndExpression__Group__0 ) )
            {
            // InternalAcmeParser.g:1669:2: ( ( rule__LogicalAndExpression__Group__0 ) )
            // InternalAcmeParser.g:1670:3: ( rule__LogicalAndExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndExpressionAccess().getGroup()); 
            }
            // InternalAcmeParser.g:1671:3: ( rule__LogicalAndExpression__Group__0 )
            // InternalAcmeParser.g:1671:4: rule__LogicalAndExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__LogicalAndExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulelogicalAndExpression"


    // $ANTLR start "entryRuleequalityExpression"
    // InternalAcmeParser.g:1680:1: entryRuleequalityExpression : ruleequalityExpression EOF ;
    public final void entryRuleequalityExpression() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1681:1: ( ruleequalityExpression EOF )
            // InternalAcmeParser.g:1682:1: ruleequalityExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleequalityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleequalityExpression"


    // $ANTLR start "ruleequalityExpression"
    // InternalAcmeParser.g:1689:1: ruleequalityExpression : ( ( rule__EqualityExpression__Group__0 ) ) ;
    public final void ruleequalityExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1693:2: ( ( ( rule__EqualityExpression__Group__0 ) ) )
            // InternalAcmeParser.g:1694:2: ( ( rule__EqualityExpression__Group__0 ) )
            {
            // InternalAcmeParser.g:1694:2: ( ( rule__EqualityExpression__Group__0 ) )
            // InternalAcmeParser.g:1695:3: ( rule__EqualityExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityExpressionAccess().getGroup()); 
            }
            // InternalAcmeParser.g:1696:3: ( rule__EqualityExpression__Group__0 )
            // InternalAcmeParser.g:1696:4: rule__EqualityExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__EqualityExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleequalityExpression"


    // $ANTLR start "entryRulerelationalExpression"
    // InternalAcmeParser.g:1705:1: entryRulerelationalExpression : rulerelationalExpression EOF ;
    public final void entryRulerelationalExpression() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1706:1: ( rulerelationalExpression EOF )
            // InternalAcmeParser.g:1707:1: rulerelationalExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            rulerelationalExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulerelationalExpression"


    // $ANTLR start "rulerelationalExpression"
    // InternalAcmeParser.g:1714:1: rulerelationalExpression : ( ( rule__RelationalExpression__Group__0 ) ) ;
    public final void rulerelationalExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1718:2: ( ( ( rule__RelationalExpression__Group__0 ) ) )
            // InternalAcmeParser.g:1719:2: ( ( rule__RelationalExpression__Group__0 ) )
            {
            // InternalAcmeParser.g:1719:2: ( ( rule__RelationalExpression__Group__0 ) )
            // InternalAcmeParser.g:1720:3: ( rule__RelationalExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getGroup()); 
            }
            // InternalAcmeParser.g:1721:3: ( rule__RelationalExpression__Group__0 )
            // InternalAcmeParser.g:1721:4: rule__RelationalExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__RelationalExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulerelationalExpression"


    // $ANTLR start "entryRuleadditiveExpression"
    // InternalAcmeParser.g:1730:1: entryRuleadditiveExpression : ruleadditiveExpression EOF ;
    public final void entryRuleadditiveExpression() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1731:1: ( ruleadditiveExpression EOF )
            // InternalAcmeParser.g:1732:1: ruleadditiveExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleadditiveExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleadditiveExpression"


    // $ANTLR start "ruleadditiveExpression"
    // InternalAcmeParser.g:1739:1: ruleadditiveExpression : ( ( rule__AdditiveExpression__Group__0 ) ) ;
    public final void ruleadditiveExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1743:2: ( ( ( rule__AdditiveExpression__Group__0 ) ) )
            // InternalAcmeParser.g:1744:2: ( ( rule__AdditiveExpression__Group__0 ) )
            {
            // InternalAcmeParser.g:1744:2: ( ( rule__AdditiveExpression__Group__0 ) )
            // InternalAcmeParser.g:1745:3: ( rule__AdditiveExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getGroup()); 
            }
            // InternalAcmeParser.g:1746:3: ( rule__AdditiveExpression__Group__0 )
            // InternalAcmeParser.g:1746:4: rule__AdditiveExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AdditiveExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleadditiveExpression"


    // $ANTLR start "entryRulemultiplicativeExpression"
    // InternalAcmeParser.g:1755:1: entryRulemultiplicativeExpression : rulemultiplicativeExpression EOF ;
    public final void entryRulemultiplicativeExpression() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1756:1: ( rulemultiplicativeExpression EOF )
            // InternalAcmeParser.g:1757:1: rulemultiplicativeExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            rulemultiplicativeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulemultiplicativeExpression"


    // $ANTLR start "rulemultiplicativeExpression"
    // InternalAcmeParser.g:1764:1: rulemultiplicativeExpression : ( ( rule__MultiplicativeExpression__Group__0 ) ) ;
    public final void rulemultiplicativeExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1768:2: ( ( ( rule__MultiplicativeExpression__Group__0 ) ) )
            // InternalAcmeParser.g:1769:2: ( ( rule__MultiplicativeExpression__Group__0 ) )
            {
            // InternalAcmeParser.g:1769:2: ( ( rule__MultiplicativeExpression__Group__0 ) )
            // InternalAcmeParser.g:1770:3: ( rule__MultiplicativeExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); 
            }
            // InternalAcmeParser.g:1771:3: ( rule__MultiplicativeExpression__Group__0 )
            // InternalAcmeParser.g:1771:4: rule__MultiplicativeExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__MultiplicativeExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulemultiplicativeExpression"


    // $ANTLR start "entryRuleunaryExpression"
    // InternalAcmeParser.g:1780:1: entryRuleunaryExpression : ruleunaryExpression EOF ;
    public final void entryRuleunaryExpression() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1781:1: ( ruleunaryExpression EOF )
            // InternalAcmeParser.g:1782:1: ruleunaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleunaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleunaryExpression"


    // $ANTLR start "ruleunaryExpression"
    // InternalAcmeParser.g:1789:1: ruleunaryExpression : ( ( rule__UnaryExpression__Group__0 ) ) ;
    public final void ruleunaryExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1793:2: ( ( ( rule__UnaryExpression__Group__0 ) ) )
            // InternalAcmeParser.g:1794:2: ( ( rule__UnaryExpression__Group__0 ) )
            {
            // InternalAcmeParser.g:1794:2: ( ( rule__UnaryExpression__Group__0 ) )
            // InternalAcmeParser.g:1795:3: ( rule__UnaryExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionAccess().getGroup()); 
            }
            // InternalAcmeParser.g:1796:3: ( rule__UnaryExpression__Group__0 )
            // InternalAcmeParser.g:1796:4: rule__UnaryExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnaryExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleunaryExpression"


    // $ANTLR start "entryRulenonunaryExpression"
    // InternalAcmeParser.g:1805:1: entryRulenonunaryExpression : rulenonunaryExpression EOF ;
    public final void entryRulenonunaryExpression() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1806:1: ( rulenonunaryExpression EOF )
            // InternalAcmeParser.g:1807:1: rulenonunaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonunaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            rulenonunaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonunaryExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulenonunaryExpression"


    // $ANTLR start "rulenonunaryExpression"
    // InternalAcmeParser.g:1814:1: rulenonunaryExpression : ( ( rule__NonunaryExpression__Alternatives ) ) ;
    public final void rulenonunaryExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1818:2: ( ( ( rule__NonunaryExpression__Alternatives ) ) )
            // InternalAcmeParser.g:1819:2: ( ( rule__NonunaryExpression__Alternatives ) )
            {
            // InternalAcmeParser.g:1819:2: ( ( rule__NonunaryExpression__Alternatives ) )
            // InternalAcmeParser.g:1820:3: ( rule__NonunaryExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonunaryExpressionAccess().getAlternatives()); 
            }
            // InternalAcmeParser.g:1821:3: ( rule__NonunaryExpression__Alternatives )
            // InternalAcmeParser.g:1821:4: rule__NonunaryExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__NonunaryExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonunaryExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulenonunaryExpression"


    // $ANTLR start "entryRuleprimaryExpression"
    // InternalAcmeParser.g:1830:1: entryRuleprimaryExpression : ruleprimaryExpression EOF ;
    public final void entryRuleprimaryExpression() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1831:1: ( ruleprimaryExpression EOF )
            // InternalAcmeParser.g:1832:1: ruleprimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleprimaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleprimaryExpression"


    // $ANTLR start "ruleprimaryExpression"
    // InternalAcmeParser.g:1839:1: ruleprimaryExpression : ( ( rule__PrimaryExpression__Alternatives ) ) ;
    public final void ruleprimaryExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1843:2: ( ( ( rule__PrimaryExpression__Alternatives ) ) )
            // InternalAcmeParser.g:1844:2: ( ( rule__PrimaryExpression__Alternatives ) )
            {
            // InternalAcmeParser.g:1844:2: ( ( rule__PrimaryExpression__Alternatives ) )
            // InternalAcmeParser.g:1845:3: ( rule__PrimaryExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); 
            }
            // InternalAcmeParser.g:1846:3: ( rule__PrimaryExpression__Alternatives )
            // InternalAcmeParser.g:1846:4: rule__PrimaryExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleprimaryExpression"


    // $ANTLR start "entryRuleidExpression"
    // InternalAcmeParser.g:1855:1: entryRuleidExpression : ruleidExpression EOF ;
    public final void entryRuleidExpression() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1856:1: ( ruleidExpression EOF )
            // InternalAcmeParser.g:1857:1: ruleidExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleidExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleidExpression"


    // $ANTLR start "ruleidExpression"
    // InternalAcmeParser.g:1864:1: ruleidExpression : ( ( rule__IdExpression__Alternatives ) ) ;
    public final void ruleidExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1868:2: ( ( ( rule__IdExpression__Alternatives ) ) )
            // InternalAcmeParser.g:1869:2: ( ( rule__IdExpression__Alternatives ) )
            {
            // InternalAcmeParser.g:1869:2: ( ( rule__IdExpression__Alternatives ) )
            // InternalAcmeParser.g:1870:3: ( rule__IdExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdExpressionAccess().getAlternatives()); 
            }
            // InternalAcmeParser.g:1871:3: ( rule__IdExpression__Alternatives )
            // InternalAcmeParser.g:1871:4: rule__IdExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__IdExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleidExpression"


    // $ANTLR start "entryRulepostIdExpression"
    // InternalAcmeParser.g:1880:1: entryRulepostIdExpression : rulepostIdExpression EOF ;
    public final void entryRulepostIdExpression() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1881:1: ( rulepostIdExpression EOF )
            // InternalAcmeParser.g:1882:1: rulepostIdExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostIdExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            rulepostIdExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostIdExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulepostIdExpression"


    // $ANTLR start "rulepostIdExpression"
    // InternalAcmeParser.g:1889:1: rulepostIdExpression : ( ( rule__PostIdExpression__Group__0 ) ) ;
    public final void rulepostIdExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1893:2: ( ( ( rule__PostIdExpression__Group__0 ) ) )
            // InternalAcmeParser.g:1894:2: ( ( rule__PostIdExpression__Group__0 ) )
            {
            // InternalAcmeParser.g:1894:2: ( ( rule__PostIdExpression__Group__0 ) )
            // InternalAcmeParser.g:1895:3: ( rule__PostIdExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostIdExpressionAccess().getGroup()); 
            }
            // InternalAcmeParser.g:1896:3: ( rule__PostIdExpression__Group__0 )
            // InternalAcmeParser.g:1896:4: rule__PostIdExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PostIdExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostIdExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulepostIdExpression"


    // $ANTLR start "entryRulemethodCall"
    // InternalAcmeParser.g:1905:1: entryRulemethodCall : rulemethodCall EOF ;
    public final void entryRulemethodCall() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1906:1: ( rulemethodCall EOF )
            // InternalAcmeParser.g:1907:1: rulemethodCall EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodCallRule()); 
            }
            pushFollow(FOLLOW_1);
            rulemethodCall();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodCallRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulemethodCall"


    // $ANTLR start "rulemethodCall"
    // InternalAcmeParser.g:1914:1: rulemethodCall : ( ( rule__MethodCall__Group__0 ) ) ;
    public final void rulemethodCall() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1918:2: ( ( ( rule__MethodCall__Group__0 ) ) )
            // InternalAcmeParser.g:1919:2: ( ( rule__MethodCall__Group__0 ) )
            {
            // InternalAcmeParser.g:1919:2: ( ( rule__MethodCall__Group__0 ) )
            // InternalAcmeParser.g:1920:3: ( rule__MethodCall__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodCallAccess().getGroup()); 
            }
            // InternalAcmeParser.g:1921:3: ( rule__MethodCall__Group__0 )
            // InternalAcmeParser.g:1921:4: rule__MethodCall__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__MethodCall__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodCallAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulemethodCall"


    // $ANTLR start "entryRuleparam"
    // InternalAcmeParser.g:1930:1: entryRuleparam : ruleparam EOF ;
    public final void entryRuleparam() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1931:1: ( ruleparam EOF )
            // InternalAcmeParser.g:1932:1: ruleparam EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParamRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleparam();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParamRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleparam"


    // $ANTLR start "ruleparam"
    // InternalAcmeParser.g:1939:1: ruleparam : ( ( rule__Param__Group__0 ) ) ;
    public final void ruleparam() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1943:2: ( ( ( rule__Param__Group__0 ) ) )
            // InternalAcmeParser.g:1944:2: ( ( rule__Param__Group__0 ) )
            {
            // InternalAcmeParser.g:1944:2: ( ( rule__Param__Group__0 ) )
            // InternalAcmeParser.g:1945:3: ( rule__Param__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParamAccess().getGroup()); 
            }
            // InternalAcmeParser.g:1946:3: ( rule__Param__Group__0 )
            // InternalAcmeParser.g:1946:4: rule__Param__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Param__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParamAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleparam"


    // $ANTLR start "entryRulequantifiedExpression"
    // InternalAcmeParser.g:1955:1: entryRulequantifiedExpression : rulequantifiedExpression EOF ;
    public final void entryRulequantifiedExpression() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1956:1: ( rulequantifiedExpression EOF )
            // InternalAcmeParser.g:1957:1: rulequantifiedExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            rulequantifiedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulequantifiedExpression"


    // $ANTLR start "rulequantifiedExpression"
    // InternalAcmeParser.g:1964:1: rulequantifiedExpression : ( ( rule__QuantifiedExpression__Alternatives ) ) ;
    public final void rulequantifiedExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1968:2: ( ( ( rule__QuantifiedExpression__Alternatives ) ) )
            // InternalAcmeParser.g:1969:2: ( ( rule__QuantifiedExpression__Alternatives ) )
            {
            // InternalAcmeParser.g:1969:2: ( ( rule__QuantifiedExpression__Alternatives ) )
            // InternalAcmeParser.g:1970:3: ( rule__QuantifiedExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getAlternatives()); 
            }
            // InternalAcmeParser.g:1971:3: ( rule__QuantifiedExpression__Alternatives )
            // InternalAcmeParser.g:1971:4: rule__QuantifiedExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulequantifiedExpression"


    // $ANTLR start "entryRulesetExpression"
    // InternalAcmeParser.g:1980:1: entryRulesetExpression : rulesetExpression EOF ;
    public final void entryRulesetExpression() throws RecognitionException {
        try {
            // InternalAcmeParser.g:1981:1: ( rulesetExpression EOF )
            // InternalAcmeParser.g:1982:1: rulesetExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            rulesetExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulesetExpression"


    // $ANTLR start "rulesetExpression"
    // InternalAcmeParser.g:1989:1: rulesetExpression : ( ruleliteralSet ) ;
    public final void rulesetExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:1993:2: ( ( ruleliteralSet ) )
            // InternalAcmeParser.g:1994:2: ( ruleliteralSet )
            {
            // InternalAcmeParser.g:1994:2: ( ruleliteralSet )
            // InternalAcmeParser.g:1995:3: ruleliteralSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSetExpressionAccess().getLiteralSetParserRuleCall()); 
            }
            pushFollow(FOLLOW_2);
            ruleliteralSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSetExpressionAccess().getLiteralSetParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulesetExpression"


    // $ANTLR start "entryRulepathExpression"
    // InternalAcmeParser.g:2005:1: entryRulepathExpression : rulepathExpression EOF ;
    public final void entryRulepathExpression() throws RecognitionException {
        try {
            // InternalAcmeParser.g:2006:1: ( rulepathExpression EOF )
            // InternalAcmeParser.g:2007:1: rulepathExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            rulepathExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulepathExpression"


    // $ANTLR start "rulepathExpression"
    // InternalAcmeParser.g:2014:1: rulepathExpression : ( ( rule__PathExpression__Group__0 ) ) ;
    public final void rulepathExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2018:2: ( ( ( rule__PathExpression__Group__0 ) ) )
            // InternalAcmeParser.g:2019:2: ( ( rule__PathExpression__Group__0 ) )
            {
            // InternalAcmeParser.g:2019:2: ( ( rule__PathExpression__Group__0 ) )
            // InternalAcmeParser.g:2020:3: ( rule__PathExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathExpressionAccess().getGroup()); 
            }
            // InternalAcmeParser.g:2021:3: ( rule__PathExpression__Group__0 )
            // InternalAcmeParser.g:2021:4: rule__PathExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PathExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulepathExpression"


    // $ANTLR start "entryRulepathExpressionContinuation"
    // InternalAcmeParser.g:2030:1: entryRulepathExpressionContinuation : rulepathExpressionContinuation EOF ;
    public final void entryRulepathExpressionContinuation() throws RecognitionException {
        try {
            // InternalAcmeParser.g:2031:1: ( rulepathExpressionContinuation EOF )
            // InternalAcmeParser.g:2032:1: rulepathExpressionContinuation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathExpressionContinuationRule()); 
            }
            pushFollow(FOLLOW_1);
            rulepathExpressionContinuation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathExpressionContinuationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulepathExpressionContinuation"


    // $ANTLR start "rulepathExpressionContinuation"
    // InternalAcmeParser.g:2039:1: rulepathExpressionContinuation : ( ( rule__PathExpressionContinuation__Group__0 ) ) ;
    public final void rulepathExpressionContinuation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2043:2: ( ( ( rule__PathExpressionContinuation__Group__0 ) ) )
            // InternalAcmeParser.g:2044:2: ( ( rule__PathExpressionContinuation__Group__0 ) )
            {
            // InternalAcmeParser.g:2044:2: ( ( rule__PathExpressionContinuation__Group__0 ) )
            // InternalAcmeParser.g:2045:3: ( rule__PathExpressionContinuation__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathExpressionContinuationAccess().getGroup()); 
            }
            // InternalAcmeParser.g:2046:3: ( rule__PathExpressionContinuation__Group__0 )
            // InternalAcmeParser.g:2046:4: rule__PathExpressionContinuation__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PathExpressionContinuation__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathExpressionContinuationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulepathExpressionContinuation"


    // $ANTLR start "entryRuleliteralSet"
    // InternalAcmeParser.g:2055:1: entryRuleliteralSet : ruleliteralSet EOF ;
    public final void entryRuleliteralSet() throws RecognitionException {
        try {
            // InternalAcmeParser.g:2056:1: ( ruleliteralSet EOF )
            // InternalAcmeParser.g:2057:1: ruleliteralSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralSetRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleliteralSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralSetRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleliteralSet"


    // $ANTLR start "ruleliteralSet"
    // InternalAcmeParser.g:2064:1: ruleliteralSet : ( ( rule__LiteralSet__Group__0 ) ) ;
    public final void ruleliteralSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2068:2: ( ( ( rule__LiteralSet__Group__0 ) ) )
            // InternalAcmeParser.g:2069:2: ( ( rule__LiteralSet__Group__0 ) )
            {
            // InternalAcmeParser.g:2069:2: ( ( rule__LiteralSet__Group__0 ) )
            // InternalAcmeParser.g:2070:3: ( rule__LiteralSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralSetAccess().getGroup()); 
            }
            // InternalAcmeParser.g:2071:3: ( rule__LiteralSet__Group__0 )
            // InternalAcmeParser.g:2071:4: rule__LiteralSet__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__LiteralSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleliteralSet"


    // $ANTLR start "entryRuledataType"
    // InternalAcmeParser.g:2080:1: entryRuledataType : ruledataType EOF ;
    public final void entryRuledataType() throws RecognitionException {
        try {
            // InternalAcmeParser.g:2081:1: ( ruledataType EOF )
            // InternalAcmeParser.g:2082:1: ruledataType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruledataType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuledataType"


    // $ANTLR start "ruledataType"
    // InternalAcmeParser.g:2089:1: ruledataType : ( ( rule__DataType__Alternatives ) ) ;
    public final void ruledataType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2093:2: ( ( ( rule__DataType__Alternatives ) ) )
            // InternalAcmeParser.g:2094:2: ( ( rule__DataType__Alternatives ) )
            {
            // InternalAcmeParser.g:2094:2: ( ( rule__DataType__Alternatives ) )
            // InternalAcmeParser.g:2095:3: ( rule__DataType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getAlternatives()); 
            }
            // InternalAcmeParser.g:2096:3: ( rule__DataType__Alternatives )
            // InternalAcmeParser.g:2096:4: rule__DataType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__DataType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruledataType"


    // $ANTLR start "ruleVisibility"
    // InternalAcmeParser.g:2105:1: ruleVisibility : ( ( rule__Visibility__Alternatives ) ) ;
    public final void ruleVisibility() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2109:1: ( ( ( rule__Visibility__Alternatives ) ) )
            // InternalAcmeParser.g:2110:2: ( ( rule__Visibility__Alternatives ) )
            {
            // InternalAcmeParser.g:2110:2: ( ( rule__Visibility__Alternatives ) )
            // InternalAcmeParser.g:2111:3: ( rule__Visibility__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVisibilityAccess().getAlternatives()); 
            }
            // InternalAcmeParser.g:2112:3: ( rule__Visibility__Alternatives )
            // InternalAcmeParser.g:2112:4: rule__Visibility__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Visibility__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVisibilityAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVisibility"


    // $ANTLR start "ruleExtensability"
    // InternalAcmeParser.g:2121:1: ruleExtensability : ( ( rule__Extensability__Alternatives ) ) ;
    public final void ruleExtensability() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2125:1: ( ( ( rule__Extensability__Alternatives ) ) )
            // InternalAcmeParser.g:2126:2: ( ( rule__Extensability__Alternatives ) )
            {
            // InternalAcmeParser.g:2126:2: ( ( rule__Extensability__Alternatives ) )
            // InternalAcmeParser.g:2127:3: ( rule__Extensability__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtensabilityAccess().getAlternatives()); 
            }
            // InternalAcmeParser.g:2128:3: ( rule__Extensability__Alternatives )
            // InternalAcmeParser.g:2128:4: rule__Extensability__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Extensability__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtensabilityAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExtensability"


    // $ANTLR start "rulePrimitivePropertyType"
    // InternalAcmeParser.g:2137:1: rulePrimitivePropertyType : ( ( rule__PrimitivePropertyType__Alternatives ) ) ;
    public final void rulePrimitivePropertyType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2141:1: ( ( ( rule__PrimitivePropertyType__Alternatives ) ) )
            // InternalAcmeParser.g:2142:2: ( ( rule__PrimitivePropertyType__Alternatives ) )
            {
            // InternalAcmeParser.g:2142:2: ( ( rule__PrimitivePropertyType__Alternatives ) )
            // InternalAcmeParser.g:2143:3: ( rule__PrimitivePropertyType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimitivePropertyTypeAccess().getAlternatives()); 
            }
            // InternalAcmeParser.g:2144:3: ( rule__PrimitivePropertyType__Alternatives )
            // InternalAcmeParser.g:2144:4: rule__PrimitivePropertyType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__PrimitivePropertyType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimitivePropertyTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePrimitivePropertyType"


    // $ANTLR start "ruleAssignKind"
    // InternalAcmeParser.g:2153:1: ruleAssignKind : ( ( rule__AssignKind__Alternatives ) ) ;
    public final void ruleAssignKind() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2157:1: ( ( ( rule__AssignKind__Alternatives ) ) )
            // InternalAcmeParser.g:2158:2: ( ( rule__AssignKind__Alternatives ) )
            {
            // InternalAcmeParser.g:2158:2: ( ( rule__AssignKind__Alternatives ) )
            // InternalAcmeParser.g:2159:3: ( rule__AssignKind__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignKindAccess().getAlternatives()); 
            }
            // InternalAcmeParser.g:2160:3: ( rule__AssignKind__Alternatives )
            // InternalAcmeParser.g:2160:4: rule__AssignKind__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AssignKind__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignKindAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAssignKind"


    // $ANTLR start "rule__AcmeCompUnit__Alternatives_1"
    // InternalAcmeParser.g:2168:1: rule__AcmeCompUnit__Alternatives_1 : ( ( ( rule__AcmeCompUnit__SystemsAssignment_1_0 ) ) | ( ( rule__AcmeCompUnit__FamiliesAssignment_1_1 ) ) );
    public final void rule__AcmeCompUnit__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2172:1: ( ( ( rule__AcmeCompUnit__SystemsAssignment_1_0 ) ) | ( ( rule__AcmeCompUnit__FamiliesAssignment_1_1 ) ) )
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==KW_System) ) {
                alt1=1;
            }
            else if ( (LA1_0==Family) ) {
                alt1=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 1, 0, input);

                throw nvae;
            }
            switch (alt1) {
                case 1 :
                    // InternalAcmeParser.g:2173:2: ( ( rule__AcmeCompUnit__SystemsAssignment_1_0 ) )
                    {
                    // InternalAcmeParser.g:2173:2: ( ( rule__AcmeCompUnit__SystemsAssignment_1_0 ) )
                    // InternalAcmeParser.g:2174:3: ( rule__AcmeCompUnit__SystemsAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeCompUnitAccess().getSystemsAssignment_1_0()); 
                    }
                    // InternalAcmeParser.g:2175:3: ( rule__AcmeCompUnit__SystemsAssignment_1_0 )
                    // InternalAcmeParser.g:2175:4: rule__AcmeCompUnit__SystemsAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeCompUnit__SystemsAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeCompUnitAccess().getSystemsAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:2179:2: ( ( rule__AcmeCompUnit__FamiliesAssignment_1_1 ) )
                    {
                    // InternalAcmeParser.g:2179:2: ( ( rule__AcmeCompUnit__FamiliesAssignment_1_1 ) )
                    // InternalAcmeParser.g:2180:3: ( rule__AcmeCompUnit__FamiliesAssignment_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeCompUnitAccess().getFamiliesAssignment_1_1()); 
                    }
                    // InternalAcmeParser.g:2181:3: ( rule__AcmeCompUnit__FamiliesAssignment_1_1 )
                    // InternalAcmeParser.g:2181:4: rule__AcmeCompUnit__FamiliesAssignment_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeCompUnit__FamiliesAssignment_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeCompUnitAccess().getFamiliesAssignment_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeCompUnit__Alternatives_1"


    // $ANTLR start "rule__AcmeImportDeclaration__Alternatives_1"
    // InternalAcmeParser.g:2189:1: rule__AcmeImportDeclaration__Alternatives_1 : ( ( ( rule__AcmeImportDeclaration__FileAssignment_1_0 ) ) | ( ( rule__AcmeImportDeclaration__LitAssignment_1_1 ) ) );
    public final void rule__AcmeImportDeclaration__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2193:1: ( ( ( rule__AcmeImportDeclaration__FileAssignment_1_0 ) ) | ( ( rule__AcmeImportDeclaration__LitAssignment_1_1 ) ) )
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( ((LA2_0>=DollarSign && LA2_0<=PercentSign)||LA2_0==RULE_ID) ) {
                alt2=1;
            }
            else if ( (LA2_0==RULE_STRING) ) {
                alt2=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }
            switch (alt2) {
                case 1 :
                    // InternalAcmeParser.g:2194:2: ( ( rule__AcmeImportDeclaration__FileAssignment_1_0 ) )
                    {
                    // InternalAcmeParser.g:2194:2: ( ( rule__AcmeImportDeclaration__FileAssignment_1_0 ) )
                    // InternalAcmeParser.g:2195:3: ( rule__AcmeImportDeclaration__FileAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeImportDeclarationAccess().getFileAssignment_1_0()); 
                    }
                    // InternalAcmeParser.g:2196:3: ( rule__AcmeImportDeclaration__FileAssignment_1_0 )
                    // InternalAcmeParser.g:2196:4: rule__AcmeImportDeclaration__FileAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeImportDeclaration__FileAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeImportDeclarationAccess().getFileAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:2200:2: ( ( rule__AcmeImportDeclaration__LitAssignment_1_1 ) )
                    {
                    // InternalAcmeParser.g:2200:2: ( ( rule__AcmeImportDeclaration__LitAssignment_1_1 ) )
                    // InternalAcmeParser.g:2201:3: ( rule__AcmeImportDeclaration__LitAssignment_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeImportDeclarationAccess().getLitAssignment_1_1()); 
                    }
                    // InternalAcmeParser.g:2202:3: ( rule__AcmeImportDeclaration__LitAssignment_1_1 )
                    // InternalAcmeParser.g:2202:4: rule__AcmeImportDeclaration__LitAssignment_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeImportDeclaration__LitAssignment_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeImportDeclarationAccess().getLitAssignment_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeImportDeclaration__Alternatives_1"


    // $ANTLR start "rule__Filename__Alternatives_0"
    // InternalAcmeParser.g:2210:1: rule__Filename__Alternatives_0 : ( ( DollarSign ) | ( PercentSign ) );
    public final void rule__Filename__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2214:1: ( ( DollarSign ) | ( PercentSign ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==DollarSign) ) {
                alt3=1;
            }
            else if ( (LA3_0==PercentSign) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalAcmeParser.g:2215:2: ( DollarSign )
                    {
                    // InternalAcmeParser.g:2215:2: ( DollarSign )
                    // InternalAcmeParser.g:2216:3: DollarSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFilenameAccess().getDollarSignKeyword_0_0()); 
                    }
                    match(input,DollarSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFilenameAccess().getDollarSignKeyword_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:2221:2: ( PercentSign )
                    {
                    // InternalAcmeParser.g:2221:2: ( PercentSign )
                    // InternalAcmeParser.g:2222:3: PercentSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFilenameAccess().getPercentSignKeyword_0_1()); 
                    }
                    match(input,PercentSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFilenameAccess().getPercentSignKeyword_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Filename__Alternatives_0"


    // $ANTLR start "rule__Filename__Alternatives_2_0"
    // InternalAcmeParser.g:2231:1: rule__Filename__Alternatives_2_0 : ( ( FullStop ) | ( Colon ) | ( HyphenMinus ) | ( PlusSign ) | ( Backslash ) | ( ReverseSolidusReverseSolidus ) | ( Solidus ) | ( DollarSign ) | ( PercentSign ) );
    public final void rule__Filename__Alternatives_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2235:1: ( ( FullStop ) | ( Colon ) | ( HyphenMinus ) | ( PlusSign ) | ( Backslash ) | ( ReverseSolidusReverseSolidus ) | ( Solidus ) | ( DollarSign ) | ( PercentSign ) )
            int alt4=9;
            switch ( input.LA(1) ) {
            case FullStop:
                {
                alt4=1;
                }
                break;
            case Colon:
                {
                alt4=2;
                }
                break;
            case HyphenMinus:
                {
                alt4=3;
                }
                break;
            case PlusSign:
                {
                alt4=4;
                }
                break;
            case Backslash:
                {
                alt4=5;
                }
                break;
            case ReverseSolidusReverseSolidus:
                {
                alt4=6;
                }
                break;
            case Solidus:
                {
                alt4=7;
                }
                break;
            case DollarSign:
                {
                alt4=8;
                }
                break;
            case PercentSign:
                {
                alt4=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }

            switch (alt4) {
                case 1 :
                    // InternalAcmeParser.g:2236:2: ( FullStop )
                    {
                    // InternalAcmeParser.g:2236:2: ( FullStop )
                    // InternalAcmeParser.g:2237:3: FullStop
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFilenameAccess().getFullStopKeyword_2_0_0()); 
                    }
                    match(input,FullStop,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFilenameAccess().getFullStopKeyword_2_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:2242:2: ( Colon )
                    {
                    // InternalAcmeParser.g:2242:2: ( Colon )
                    // InternalAcmeParser.g:2243:3: Colon
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFilenameAccess().getColonKeyword_2_0_1()); 
                    }
                    match(input,Colon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFilenameAccess().getColonKeyword_2_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAcmeParser.g:2248:2: ( HyphenMinus )
                    {
                    // InternalAcmeParser.g:2248:2: ( HyphenMinus )
                    // InternalAcmeParser.g:2249:3: HyphenMinus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFilenameAccess().getHyphenMinusKeyword_2_0_2()); 
                    }
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFilenameAccess().getHyphenMinusKeyword_2_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalAcmeParser.g:2254:2: ( PlusSign )
                    {
                    // InternalAcmeParser.g:2254:2: ( PlusSign )
                    // InternalAcmeParser.g:2255:3: PlusSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFilenameAccess().getPlusSignKeyword_2_0_3()); 
                    }
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFilenameAccess().getPlusSignKeyword_2_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalAcmeParser.g:2260:2: ( Backslash )
                    {
                    // InternalAcmeParser.g:2260:2: ( Backslash )
                    // InternalAcmeParser.g:2261:3: Backslash
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFilenameAccess().getBackslashKeyword_2_0_4()); 
                    }
                    match(input,Backslash,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFilenameAccess().getBackslashKeyword_2_0_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalAcmeParser.g:2266:2: ( ReverseSolidusReverseSolidus )
                    {
                    // InternalAcmeParser.g:2266:2: ( ReverseSolidusReverseSolidus )
                    // InternalAcmeParser.g:2267:3: ReverseSolidusReverseSolidus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFilenameAccess().getReverseSolidusReverseSolidusKeyword_2_0_5()); 
                    }
                    match(input,ReverseSolidusReverseSolidus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFilenameAccess().getReverseSolidusReverseSolidusKeyword_2_0_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalAcmeParser.g:2272:2: ( Solidus )
                    {
                    // InternalAcmeParser.g:2272:2: ( Solidus )
                    // InternalAcmeParser.g:2273:3: Solidus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFilenameAccess().getSolidusKeyword_2_0_6()); 
                    }
                    match(input,Solidus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFilenameAccess().getSolidusKeyword_2_0_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalAcmeParser.g:2278:2: ( DollarSign )
                    {
                    // InternalAcmeParser.g:2278:2: ( DollarSign )
                    // InternalAcmeParser.g:2279:3: DollarSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFilenameAccess().getDollarSignKeyword_2_0_7()); 
                    }
                    match(input,DollarSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFilenameAccess().getDollarSignKeyword_2_0_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalAcmeParser.g:2284:2: ( PercentSign )
                    {
                    // InternalAcmeParser.g:2284:2: ( PercentSign )
                    // InternalAcmeParser.g:2285:3: PercentSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFilenameAccess().getPercentSignKeyword_2_0_8()); 
                    }
                    match(input,PercentSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFilenameAccess().getPercentSignKeyword_2_0_8()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Filename__Alternatives_2_0"


    // $ANTLR start "rule__AcmeFamilyDeclaration__Alternatives_2"
    // InternalAcmeParser.g:2294:1: rule__AcmeFamilyDeclaration__Alternatives_2 : ( ( Semicolon ) | ( ( rule__AcmeFamilyDeclaration__Group_2_1__0 ) ) );
    public final void rule__AcmeFamilyDeclaration__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2298:1: ( ( Semicolon ) | ( ( rule__AcmeFamilyDeclaration__Group_2_1__0 ) ) )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==Semicolon) ) {
                alt5=1;
            }
            else if ( (LA5_0==Extends||LA5_0==EqualsSign) ) {
                alt5=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }
            switch (alt5) {
                case 1 :
                    // InternalAcmeParser.g:2299:2: ( Semicolon )
                    {
                    // InternalAcmeParser.g:2299:2: ( Semicolon )
                    // InternalAcmeParser.g:2300:3: Semicolon
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeFamilyDeclarationAccess().getSemicolonKeyword_2_0()); 
                    }
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeFamilyDeclarationAccess().getSemicolonKeyword_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:2305:2: ( ( rule__AcmeFamilyDeclaration__Group_2_1__0 ) )
                    {
                    // InternalAcmeParser.g:2305:2: ( ( rule__AcmeFamilyDeclaration__Group_2_1__0 ) )
                    // InternalAcmeParser.g:2306:3: ( rule__AcmeFamilyDeclaration__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeFamilyDeclarationAccess().getGroup_2_1()); 
                    }
                    // InternalAcmeParser.g:2307:3: ( rule__AcmeFamilyDeclaration__Group_2_1__0 )
                    // InternalAcmeParser.g:2307:4: rule__AcmeFamilyDeclaration__Group_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeFamilyDeclaration__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeFamilyDeclarationAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyDeclaration__Alternatives_2"


    // $ANTLR start "rule__AcmeFamilyDeclaration__Alternatives_2_1_0"
    // InternalAcmeParser.g:2315:1: rule__AcmeFamilyDeclaration__Alternatives_2_1_0 : ( ( ( rule__AcmeFamilyDeclaration__Group_2_1_0_0__0 ) ) | ( EqualsSign ) );
    public final void rule__AcmeFamilyDeclaration__Alternatives_2_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2319:1: ( ( ( rule__AcmeFamilyDeclaration__Group_2_1_0_0__0 ) ) | ( EqualsSign ) )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==Extends) ) {
                alt6=1;
            }
            else if ( (LA6_0==EqualsSign) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalAcmeParser.g:2320:2: ( ( rule__AcmeFamilyDeclaration__Group_2_1_0_0__0 ) )
                    {
                    // InternalAcmeParser.g:2320:2: ( ( rule__AcmeFamilyDeclaration__Group_2_1_0_0__0 ) )
                    // InternalAcmeParser.g:2321:3: ( rule__AcmeFamilyDeclaration__Group_2_1_0_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeFamilyDeclarationAccess().getGroup_2_1_0_0()); 
                    }
                    // InternalAcmeParser.g:2322:3: ( rule__AcmeFamilyDeclaration__Group_2_1_0_0__0 )
                    // InternalAcmeParser.g:2322:4: rule__AcmeFamilyDeclaration__Group_2_1_0_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeFamilyDeclaration__Group_2_1_0_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeFamilyDeclarationAccess().getGroup_2_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:2326:2: ( EqualsSign )
                    {
                    // InternalAcmeParser.g:2326:2: ( EqualsSign )
                    // InternalAcmeParser.g:2327:3: EqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeFamilyDeclarationAccess().getEqualsSignKeyword_2_1_0_1()); 
                    }
                    match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeFamilyDeclarationAccess().getEqualsSignKeyword_2_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyDeclaration__Alternatives_2_1_0"


    // $ANTLR start "rule__AcmeFamilyBody__Alternatives_2"
    // InternalAcmeParser.g:2336:1: rule__AcmeFamilyBody__Alternatives_2 : ( ( ( rule__AcmeFamilyBody__PortTypesAssignment_2_0 ) ) | ( ( rule__AcmeFamilyBody__RoleTypesAssignment_2_1 ) ) | ( ( rule__AcmeFamilyBody__ComponentTypesAssignment_2_2 ) ) | ( ( rule__AcmeFamilyBody__ConnectorTypesAssignment_2_3 ) ) | ( ( rule__AcmeFamilyBody__ElementTypesAssignment_2_4 ) ) | ( ( rule__AcmeFamilyBody__PropertyTypesAssignment_2_5 ) ) | ( ( rule__AcmeFamilyBody__GroupTypesAssignment_2_6 ) ) | ( ( rule__AcmeFamilyBody__FunctionsAssignment_2_7 ) ) | ( ( rule__AcmeFamilyBody__RulesAssignment_2_8 ) ) | ( ( rule__AcmeFamilyBody__ComponentsAssignment_2_9 ) ) | ( ( rule__AcmeFamilyBody__ConnectorsAssignment_2_10 ) ) | ( ( rule__AcmeFamilyBody__PropertiesAssignment_2_11 ) ) | ( ( rule__AcmeFamilyBody__GroupsAssignment_2_12 ) ) | ( ( rule__AcmeFamilyBody__AttachmentsAssignment_2_13 ) ) );
    public final void rule__AcmeFamilyBody__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2340:1: ( ( ( rule__AcmeFamilyBody__PortTypesAssignment_2_0 ) ) | ( ( rule__AcmeFamilyBody__RoleTypesAssignment_2_1 ) ) | ( ( rule__AcmeFamilyBody__ComponentTypesAssignment_2_2 ) ) | ( ( rule__AcmeFamilyBody__ConnectorTypesAssignment_2_3 ) ) | ( ( rule__AcmeFamilyBody__ElementTypesAssignment_2_4 ) ) | ( ( rule__AcmeFamilyBody__PropertyTypesAssignment_2_5 ) ) | ( ( rule__AcmeFamilyBody__GroupTypesAssignment_2_6 ) ) | ( ( rule__AcmeFamilyBody__FunctionsAssignment_2_7 ) ) | ( ( rule__AcmeFamilyBody__RulesAssignment_2_8 ) ) | ( ( rule__AcmeFamilyBody__ComponentsAssignment_2_9 ) ) | ( ( rule__AcmeFamilyBody__ConnectorsAssignment_2_10 ) ) | ( ( rule__AcmeFamilyBody__PropertiesAssignment_2_11 ) ) | ( ( rule__AcmeFamilyBody__GroupsAssignment_2_12 ) ) | ( ( rule__AcmeFamilyBody__AttachmentsAssignment_2_13 ) ) )
            int alt7=14;
            alt7 = dfa7.predict(input);
            switch (alt7) {
                case 1 :
                    // InternalAcmeParser.g:2341:2: ( ( rule__AcmeFamilyBody__PortTypesAssignment_2_0 ) )
                    {
                    // InternalAcmeParser.g:2341:2: ( ( rule__AcmeFamilyBody__PortTypesAssignment_2_0 ) )
                    // InternalAcmeParser.g:2342:3: ( rule__AcmeFamilyBody__PortTypesAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeFamilyBodyAccess().getPortTypesAssignment_2_0()); 
                    }
                    // InternalAcmeParser.g:2343:3: ( rule__AcmeFamilyBody__PortTypesAssignment_2_0 )
                    // InternalAcmeParser.g:2343:4: rule__AcmeFamilyBody__PortTypesAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeFamilyBody__PortTypesAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeFamilyBodyAccess().getPortTypesAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:2347:2: ( ( rule__AcmeFamilyBody__RoleTypesAssignment_2_1 ) )
                    {
                    // InternalAcmeParser.g:2347:2: ( ( rule__AcmeFamilyBody__RoleTypesAssignment_2_1 ) )
                    // InternalAcmeParser.g:2348:3: ( rule__AcmeFamilyBody__RoleTypesAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeFamilyBodyAccess().getRoleTypesAssignment_2_1()); 
                    }
                    // InternalAcmeParser.g:2349:3: ( rule__AcmeFamilyBody__RoleTypesAssignment_2_1 )
                    // InternalAcmeParser.g:2349:4: rule__AcmeFamilyBody__RoleTypesAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeFamilyBody__RoleTypesAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeFamilyBodyAccess().getRoleTypesAssignment_2_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAcmeParser.g:2353:2: ( ( rule__AcmeFamilyBody__ComponentTypesAssignment_2_2 ) )
                    {
                    // InternalAcmeParser.g:2353:2: ( ( rule__AcmeFamilyBody__ComponentTypesAssignment_2_2 ) )
                    // InternalAcmeParser.g:2354:3: ( rule__AcmeFamilyBody__ComponentTypesAssignment_2_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeFamilyBodyAccess().getComponentTypesAssignment_2_2()); 
                    }
                    // InternalAcmeParser.g:2355:3: ( rule__AcmeFamilyBody__ComponentTypesAssignment_2_2 )
                    // InternalAcmeParser.g:2355:4: rule__AcmeFamilyBody__ComponentTypesAssignment_2_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeFamilyBody__ComponentTypesAssignment_2_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeFamilyBodyAccess().getComponentTypesAssignment_2_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalAcmeParser.g:2359:2: ( ( rule__AcmeFamilyBody__ConnectorTypesAssignment_2_3 ) )
                    {
                    // InternalAcmeParser.g:2359:2: ( ( rule__AcmeFamilyBody__ConnectorTypesAssignment_2_3 ) )
                    // InternalAcmeParser.g:2360:3: ( rule__AcmeFamilyBody__ConnectorTypesAssignment_2_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeFamilyBodyAccess().getConnectorTypesAssignment_2_3()); 
                    }
                    // InternalAcmeParser.g:2361:3: ( rule__AcmeFamilyBody__ConnectorTypesAssignment_2_3 )
                    // InternalAcmeParser.g:2361:4: rule__AcmeFamilyBody__ConnectorTypesAssignment_2_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeFamilyBody__ConnectorTypesAssignment_2_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeFamilyBodyAccess().getConnectorTypesAssignment_2_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalAcmeParser.g:2365:2: ( ( rule__AcmeFamilyBody__ElementTypesAssignment_2_4 ) )
                    {
                    // InternalAcmeParser.g:2365:2: ( ( rule__AcmeFamilyBody__ElementTypesAssignment_2_4 ) )
                    // InternalAcmeParser.g:2366:3: ( rule__AcmeFamilyBody__ElementTypesAssignment_2_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeFamilyBodyAccess().getElementTypesAssignment_2_4()); 
                    }
                    // InternalAcmeParser.g:2367:3: ( rule__AcmeFamilyBody__ElementTypesAssignment_2_4 )
                    // InternalAcmeParser.g:2367:4: rule__AcmeFamilyBody__ElementTypesAssignment_2_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeFamilyBody__ElementTypesAssignment_2_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeFamilyBodyAccess().getElementTypesAssignment_2_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalAcmeParser.g:2371:2: ( ( rule__AcmeFamilyBody__PropertyTypesAssignment_2_5 ) )
                    {
                    // InternalAcmeParser.g:2371:2: ( ( rule__AcmeFamilyBody__PropertyTypesAssignment_2_5 ) )
                    // InternalAcmeParser.g:2372:3: ( rule__AcmeFamilyBody__PropertyTypesAssignment_2_5 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeFamilyBodyAccess().getPropertyTypesAssignment_2_5()); 
                    }
                    // InternalAcmeParser.g:2373:3: ( rule__AcmeFamilyBody__PropertyTypesAssignment_2_5 )
                    // InternalAcmeParser.g:2373:4: rule__AcmeFamilyBody__PropertyTypesAssignment_2_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeFamilyBody__PropertyTypesAssignment_2_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeFamilyBodyAccess().getPropertyTypesAssignment_2_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalAcmeParser.g:2377:2: ( ( rule__AcmeFamilyBody__GroupTypesAssignment_2_6 ) )
                    {
                    // InternalAcmeParser.g:2377:2: ( ( rule__AcmeFamilyBody__GroupTypesAssignment_2_6 ) )
                    // InternalAcmeParser.g:2378:3: ( rule__AcmeFamilyBody__GroupTypesAssignment_2_6 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeFamilyBodyAccess().getGroupTypesAssignment_2_6()); 
                    }
                    // InternalAcmeParser.g:2379:3: ( rule__AcmeFamilyBody__GroupTypesAssignment_2_6 )
                    // InternalAcmeParser.g:2379:4: rule__AcmeFamilyBody__GroupTypesAssignment_2_6
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeFamilyBody__GroupTypesAssignment_2_6();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeFamilyBodyAccess().getGroupTypesAssignment_2_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalAcmeParser.g:2383:2: ( ( rule__AcmeFamilyBody__FunctionsAssignment_2_7 ) )
                    {
                    // InternalAcmeParser.g:2383:2: ( ( rule__AcmeFamilyBody__FunctionsAssignment_2_7 ) )
                    // InternalAcmeParser.g:2384:3: ( rule__AcmeFamilyBody__FunctionsAssignment_2_7 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeFamilyBodyAccess().getFunctionsAssignment_2_7()); 
                    }
                    // InternalAcmeParser.g:2385:3: ( rule__AcmeFamilyBody__FunctionsAssignment_2_7 )
                    // InternalAcmeParser.g:2385:4: rule__AcmeFamilyBody__FunctionsAssignment_2_7
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeFamilyBody__FunctionsAssignment_2_7();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeFamilyBodyAccess().getFunctionsAssignment_2_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalAcmeParser.g:2389:2: ( ( rule__AcmeFamilyBody__RulesAssignment_2_8 ) )
                    {
                    // InternalAcmeParser.g:2389:2: ( ( rule__AcmeFamilyBody__RulesAssignment_2_8 ) )
                    // InternalAcmeParser.g:2390:3: ( rule__AcmeFamilyBody__RulesAssignment_2_8 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeFamilyBodyAccess().getRulesAssignment_2_8()); 
                    }
                    // InternalAcmeParser.g:2391:3: ( rule__AcmeFamilyBody__RulesAssignment_2_8 )
                    // InternalAcmeParser.g:2391:4: rule__AcmeFamilyBody__RulesAssignment_2_8
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeFamilyBody__RulesAssignment_2_8();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeFamilyBodyAccess().getRulesAssignment_2_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalAcmeParser.g:2395:2: ( ( rule__AcmeFamilyBody__ComponentsAssignment_2_9 ) )
                    {
                    // InternalAcmeParser.g:2395:2: ( ( rule__AcmeFamilyBody__ComponentsAssignment_2_9 ) )
                    // InternalAcmeParser.g:2396:3: ( rule__AcmeFamilyBody__ComponentsAssignment_2_9 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeFamilyBodyAccess().getComponentsAssignment_2_9()); 
                    }
                    // InternalAcmeParser.g:2397:3: ( rule__AcmeFamilyBody__ComponentsAssignment_2_9 )
                    // InternalAcmeParser.g:2397:4: rule__AcmeFamilyBody__ComponentsAssignment_2_9
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeFamilyBody__ComponentsAssignment_2_9();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeFamilyBodyAccess().getComponentsAssignment_2_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalAcmeParser.g:2401:2: ( ( rule__AcmeFamilyBody__ConnectorsAssignment_2_10 ) )
                    {
                    // InternalAcmeParser.g:2401:2: ( ( rule__AcmeFamilyBody__ConnectorsAssignment_2_10 ) )
                    // InternalAcmeParser.g:2402:3: ( rule__AcmeFamilyBody__ConnectorsAssignment_2_10 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeFamilyBodyAccess().getConnectorsAssignment_2_10()); 
                    }
                    // InternalAcmeParser.g:2403:3: ( rule__AcmeFamilyBody__ConnectorsAssignment_2_10 )
                    // InternalAcmeParser.g:2403:4: rule__AcmeFamilyBody__ConnectorsAssignment_2_10
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeFamilyBody__ConnectorsAssignment_2_10();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeFamilyBodyAccess().getConnectorsAssignment_2_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalAcmeParser.g:2407:2: ( ( rule__AcmeFamilyBody__PropertiesAssignment_2_11 ) )
                    {
                    // InternalAcmeParser.g:2407:2: ( ( rule__AcmeFamilyBody__PropertiesAssignment_2_11 ) )
                    // InternalAcmeParser.g:2408:3: ( rule__AcmeFamilyBody__PropertiesAssignment_2_11 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeFamilyBodyAccess().getPropertiesAssignment_2_11()); 
                    }
                    // InternalAcmeParser.g:2409:3: ( rule__AcmeFamilyBody__PropertiesAssignment_2_11 )
                    // InternalAcmeParser.g:2409:4: rule__AcmeFamilyBody__PropertiesAssignment_2_11
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeFamilyBody__PropertiesAssignment_2_11();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeFamilyBodyAccess().getPropertiesAssignment_2_11()); 
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalAcmeParser.g:2413:2: ( ( rule__AcmeFamilyBody__GroupsAssignment_2_12 ) )
                    {
                    // InternalAcmeParser.g:2413:2: ( ( rule__AcmeFamilyBody__GroupsAssignment_2_12 ) )
                    // InternalAcmeParser.g:2414:3: ( rule__AcmeFamilyBody__GroupsAssignment_2_12 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeFamilyBodyAccess().getGroupsAssignment_2_12()); 
                    }
                    // InternalAcmeParser.g:2415:3: ( rule__AcmeFamilyBody__GroupsAssignment_2_12 )
                    // InternalAcmeParser.g:2415:4: rule__AcmeFamilyBody__GroupsAssignment_2_12
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeFamilyBody__GroupsAssignment_2_12();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeFamilyBodyAccess().getGroupsAssignment_2_12()); 
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalAcmeParser.g:2419:2: ( ( rule__AcmeFamilyBody__AttachmentsAssignment_2_13 ) )
                    {
                    // InternalAcmeParser.g:2419:2: ( ( rule__AcmeFamilyBody__AttachmentsAssignment_2_13 ) )
                    // InternalAcmeParser.g:2420:3: ( rule__AcmeFamilyBody__AttachmentsAssignment_2_13 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeFamilyBodyAccess().getAttachmentsAssignment_2_13()); 
                    }
                    // InternalAcmeParser.g:2421:3: ( rule__AcmeFamilyBody__AttachmentsAssignment_2_13 )
                    // InternalAcmeParser.g:2421:4: rule__AcmeFamilyBody__AttachmentsAssignment_2_13
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeFamilyBody__AttachmentsAssignment_2_13();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeFamilyBodyAccess().getAttachmentsAssignment_2_13()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyBody__Alternatives_2"


    // $ANTLR start "rule__AcmeSystemDeclaration__Alternatives_3"
    // InternalAcmeParser.g:2429:1: rule__AcmeSystemDeclaration__Alternatives_3 : ( ( Semicolon ) | ( ( rule__AcmeSystemDeclaration__Group_3_1__0 ) ) );
    public final void rule__AcmeSystemDeclaration__Alternatives_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2433:1: ( ( Semicolon ) | ( ( rule__AcmeSystemDeclaration__Group_3_1__0 ) ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==Semicolon) ) {
                alt8=1;
            }
            else if ( (LA8_0==EqualsSign) ) {
                alt8=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalAcmeParser.g:2434:2: ( Semicolon )
                    {
                    // InternalAcmeParser.g:2434:2: ( Semicolon )
                    // InternalAcmeParser.g:2435:3: Semicolon
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeSystemDeclarationAccess().getSemicolonKeyword_3_0()); 
                    }
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeSystemDeclarationAccess().getSemicolonKeyword_3_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:2440:2: ( ( rule__AcmeSystemDeclaration__Group_3_1__0 ) )
                    {
                    // InternalAcmeParser.g:2440:2: ( ( rule__AcmeSystemDeclaration__Group_3_1__0 ) )
                    // InternalAcmeParser.g:2441:3: ( rule__AcmeSystemDeclaration__Group_3_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeSystemDeclarationAccess().getGroup_3_1()); 
                    }
                    // InternalAcmeParser.g:2442:3: ( rule__AcmeSystemDeclaration__Group_3_1__0 )
                    // InternalAcmeParser.g:2442:4: rule__AcmeSystemDeclaration__Group_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeSystemDeclaration__Group_3_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeSystemDeclarationAccess().getGroup_3_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Alternatives_3"


    // $ANTLR start "rule__AcmeSystemDeclaration__Alternatives_3_1_1"
    // InternalAcmeParser.g:2450:1: rule__AcmeSystemDeclaration__Alternatives_3_1_1 : ( ( ( rule__AcmeSystemDeclaration__Group_3_1_1_0__0 ) ) | ( ( rule__AcmeSystemDeclaration__Group_3_1_1_1__0 ) ) );
    public final void rule__AcmeSystemDeclaration__Alternatives_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2454:1: ( ( ( rule__AcmeSystemDeclaration__Group_3_1_1_0__0 ) ) | ( ( rule__AcmeSystemDeclaration__Group_3_1_1_1__0 ) ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==LeftCurlyBracket) ) {
                alt9=1;
            }
            else if ( (LA9_0==New) ) {
                alt9=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalAcmeParser.g:2455:2: ( ( rule__AcmeSystemDeclaration__Group_3_1_1_0__0 ) )
                    {
                    // InternalAcmeParser.g:2455:2: ( ( rule__AcmeSystemDeclaration__Group_3_1_1_0__0 ) )
                    // InternalAcmeParser.g:2456:3: ( rule__AcmeSystemDeclaration__Group_3_1_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeSystemDeclarationAccess().getGroup_3_1_1_0()); 
                    }
                    // InternalAcmeParser.g:2457:3: ( rule__AcmeSystemDeclaration__Group_3_1_1_0__0 )
                    // InternalAcmeParser.g:2457:4: rule__AcmeSystemDeclaration__Group_3_1_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeSystemDeclaration__Group_3_1_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeSystemDeclarationAccess().getGroup_3_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:2461:2: ( ( rule__AcmeSystemDeclaration__Group_3_1_1_1__0 ) )
                    {
                    // InternalAcmeParser.g:2461:2: ( ( rule__AcmeSystemDeclaration__Group_3_1_1_1__0 ) )
                    // InternalAcmeParser.g:2462:3: ( rule__AcmeSystemDeclaration__Group_3_1_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeSystemDeclarationAccess().getGroup_3_1_1_1()); 
                    }
                    // InternalAcmeParser.g:2463:3: ( rule__AcmeSystemDeclaration__Group_3_1_1_1__0 )
                    // InternalAcmeParser.g:2463:4: rule__AcmeSystemDeclaration__Group_3_1_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeSystemDeclaration__Group_3_1_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeSystemDeclarationAccess().getGroup_3_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Alternatives_3_1_1"


    // $ANTLR start "rule__AcmeSystemDeclaration__Alternatives_3_1_1_1_3"
    // InternalAcmeParser.g:2471:1: rule__AcmeSystemDeclaration__Alternatives_3_1_1_1_3 : ( ( Semicolon ) | ( ( rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__0 ) ) );
    public final void rule__AcmeSystemDeclaration__Alternatives_3_1_1_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2475:1: ( ( Semicolon ) | ( ( rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__0 ) ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==Semicolon) ) {
                alt10=1;
            }
            else if ( (LA10_0==Extended) ) {
                alt10=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalAcmeParser.g:2476:2: ( Semicolon )
                    {
                    // InternalAcmeParser.g:2476:2: ( Semicolon )
                    // InternalAcmeParser.g:2477:3: Semicolon
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeSystemDeclarationAccess().getSemicolonKeyword_3_1_1_1_3_0()); 
                    }
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeSystemDeclarationAccess().getSemicolonKeyword_3_1_1_1_3_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:2482:2: ( ( rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__0 ) )
                    {
                    // InternalAcmeParser.g:2482:2: ( ( rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__0 ) )
                    // InternalAcmeParser.g:2483:3: ( rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeSystemDeclarationAccess().getGroup_3_1_1_1_3_1()); 
                    }
                    // InternalAcmeParser.g:2484:3: ( rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__0 )
                    // InternalAcmeParser.g:2484:4: rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeSystemDeclarationAccess().getGroup_3_1_1_1_3_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Alternatives_3_1_1_1_3"


    // $ANTLR start "rule__AcmeSystemBody__Alternatives_2"
    // InternalAcmeParser.g:2492:1: rule__AcmeSystemBody__Alternatives_2 : ( ( ( rule__AcmeSystemBody__PropertiesAssignment_2_0 ) ) | ( ( rule__AcmeSystemBody__ComponentsAssignment_2_1 ) ) | ( ( rule__AcmeSystemBody__ConnectorsAssignment_2_2 ) ) | ( ( rule__AcmeSystemBody__AttachmentsAssignment_2_3 ) ) | ( ( rule__AcmeSystemBody__GroupsAssignment_2_4 ) ) | ( ( rule__AcmeSystemBody__RulesAssignment_2_5 ) ) );
    public final void rule__AcmeSystemBody__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2496:1: ( ( ( rule__AcmeSystemBody__PropertiesAssignment_2_0 ) ) | ( ( rule__AcmeSystemBody__ComponentsAssignment_2_1 ) ) | ( ( rule__AcmeSystemBody__ConnectorsAssignment_2_2 ) ) | ( ( rule__AcmeSystemBody__AttachmentsAssignment_2_3 ) ) | ( ( rule__AcmeSystemBody__GroupsAssignment_2_4 ) ) | ( ( rule__AcmeSystemBody__RulesAssignment_2_5 ) ) )
            int alt11=6;
            switch ( input.LA(1) ) {
            case Property:
                {
                alt11=1;
                }
                break;
            case Component:
                {
                alt11=2;
                }
                break;
            case Connector:
                {
                alt11=3;
                }
                break;
            case Attachment:
                {
                alt11=4;
                }
                break;
            case Group:
                {
                alt11=5;
                }
                break;
            case Hueristic:
            case Invariant:
            case Rule:
                {
                alt11=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }

            switch (alt11) {
                case 1 :
                    // InternalAcmeParser.g:2497:2: ( ( rule__AcmeSystemBody__PropertiesAssignment_2_0 ) )
                    {
                    // InternalAcmeParser.g:2497:2: ( ( rule__AcmeSystemBody__PropertiesAssignment_2_0 ) )
                    // InternalAcmeParser.g:2498:3: ( rule__AcmeSystemBody__PropertiesAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeSystemBodyAccess().getPropertiesAssignment_2_0()); 
                    }
                    // InternalAcmeParser.g:2499:3: ( rule__AcmeSystemBody__PropertiesAssignment_2_0 )
                    // InternalAcmeParser.g:2499:4: rule__AcmeSystemBody__PropertiesAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeSystemBody__PropertiesAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeSystemBodyAccess().getPropertiesAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:2503:2: ( ( rule__AcmeSystemBody__ComponentsAssignment_2_1 ) )
                    {
                    // InternalAcmeParser.g:2503:2: ( ( rule__AcmeSystemBody__ComponentsAssignment_2_1 ) )
                    // InternalAcmeParser.g:2504:3: ( rule__AcmeSystemBody__ComponentsAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeSystemBodyAccess().getComponentsAssignment_2_1()); 
                    }
                    // InternalAcmeParser.g:2505:3: ( rule__AcmeSystemBody__ComponentsAssignment_2_1 )
                    // InternalAcmeParser.g:2505:4: rule__AcmeSystemBody__ComponentsAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeSystemBody__ComponentsAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeSystemBodyAccess().getComponentsAssignment_2_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAcmeParser.g:2509:2: ( ( rule__AcmeSystemBody__ConnectorsAssignment_2_2 ) )
                    {
                    // InternalAcmeParser.g:2509:2: ( ( rule__AcmeSystemBody__ConnectorsAssignment_2_2 ) )
                    // InternalAcmeParser.g:2510:3: ( rule__AcmeSystemBody__ConnectorsAssignment_2_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeSystemBodyAccess().getConnectorsAssignment_2_2()); 
                    }
                    // InternalAcmeParser.g:2511:3: ( rule__AcmeSystemBody__ConnectorsAssignment_2_2 )
                    // InternalAcmeParser.g:2511:4: rule__AcmeSystemBody__ConnectorsAssignment_2_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeSystemBody__ConnectorsAssignment_2_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeSystemBodyAccess().getConnectorsAssignment_2_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalAcmeParser.g:2515:2: ( ( rule__AcmeSystemBody__AttachmentsAssignment_2_3 ) )
                    {
                    // InternalAcmeParser.g:2515:2: ( ( rule__AcmeSystemBody__AttachmentsAssignment_2_3 ) )
                    // InternalAcmeParser.g:2516:3: ( rule__AcmeSystemBody__AttachmentsAssignment_2_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeSystemBodyAccess().getAttachmentsAssignment_2_3()); 
                    }
                    // InternalAcmeParser.g:2517:3: ( rule__AcmeSystemBody__AttachmentsAssignment_2_3 )
                    // InternalAcmeParser.g:2517:4: rule__AcmeSystemBody__AttachmentsAssignment_2_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeSystemBody__AttachmentsAssignment_2_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeSystemBodyAccess().getAttachmentsAssignment_2_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalAcmeParser.g:2521:2: ( ( rule__AcmeSystemBody__GroupsAssignment_2_4 ) )
                    {
                    // InternalAcmeParser.g:2521:2: ( ( rule__AcmeSystemBody__GroupsAssignment_2_4 ) )
                    // InternalAcmeParser.g:2522:3: ( rule__AcmeSystemBody__GroupsAssignment_2_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeSystemBodyAccess().getGroupsAssignment_2_4()); 
                    }
                    // InternalAcmeParser.g:2523:3: ( rule__AcmeSystemBody__GroupsAssignment_2_4 )
                    // InternalAcmeParser.g:2523:4: rule__AcmeSystemBody__GroupsAssignment_2_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeSystemBody__GroupsAssignment_2_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeSystemBodyAccess().getGroupsAssignment_2_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalAcmeParser.g:2527:2: ( ( rule__AcmeSystemBody__RulesAssignment_2_5 ) )
                    {
                    // InternalAcmeParser.g:2527:2: ( ( rule__AcmeSystemBody__RulesAssignment_2_5 ) )
                    // InternalAcmeParser.g:2528:3: ( rule__AcmeSystemBody__RulesAssignment_2_5 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeSystemBodyAccess().getRulesAssignment_2_5()); 
                    }
                    // InternalAcmeParser.g:2529:3: ( rule__AcmeSystemBody__RulesAssignment_2_5 )
                    // InternalAcmeParser.g:2529:4: rule__AcmeSystemBody__RulesAssignment_2_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeSystemBody__RulesAssignment_2_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeSystemBodyAccess().getRulesAssignment_2_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemBody__Alternatives_2"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Alternatives_5"
    // InternalAcmeParser.g:2537:1: rule__AcmeElementTypeDeclaration__Alternatives_5 : ( ( Semicolon ) | ( ( rule__AcmeElementTypeDeclaration__Alternatives_5_1 ) ) );
    public final void rule__AcmeElementTypeDeclaration__Alternatives_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2541:1: ( ( Semicolon ) | ( ( rule__AcmeElementTypeDeclaration__Alternatives_5_1 ) ) )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==Semicolon) ) {
                alt12=1;
            }
            else if ( (LA12_0==Extends||LA12_0==EqualsSign) ) {
                alt12=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // InternalAcmeParser.g:2542:2: ( Semicolon )
                    {
                    // InternalAcmeParser.g:2542:2: ( Semicolon )
                    // InternalAcmeParser.g:2543:3: Semicolon
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeElementTypeDeclarationAccess().getSemicolonKeyword_5_0()); 
                    }
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeElementTypeDeclarationAccess().getSemicolonKeyword_5_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:2548:2: ( ( rule__AcmeElementTypeDeclaration__Alternatives_5_1 ) )
                    {
                    // InternalAcmeParser.g:2548:2: ( ( rule__AcmeElementTypeDeclaration__Alternatives_5_1 ) )
                    // InternalAcmeParser.g:2549:3: ( rule__AcmeElementTypeDeclaration__Alternatives_5_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeElementTypeDeclarationAccess().getAlternatives_5_1()); 
                    }
                    // InternalAcmeParser.g:2550:3: ( rule__AcmeElementTypeDeclaration__Alternatives_5_1 )
                    // InternalAcmeParser.g:2550:4: rule__AcmeElementTypeDeclaration__Alternatives_5_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeElementTypeDeclaration__Alternatives_5_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeElementTypeDeclarationAccess().getAlternatives_5_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Alternatives_5"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Alternatives_5_1"
    // InternalAcmeParser.g:2558:1: rule__AcmeElementTypeDeclaration__Alternatives_5_1 : ( ( ( rule__AcmeElementTypeDeclaration__Group_5_1_0__0 ) ) | ( ( rule__AcmeElementTypeDeclaration__Group_5_1_1__0 ) ) );
    public final void rule__AcmeElementTypeDeclaration__Alternatives_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2562:1: ( ( ( rule__AcmeElementTypeDeclaration__Group_5_1_0__0 ) ) | ( ( rule__AcmeElementTypeDeclaration__Group_5_1_1__0 ) ) )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==EqualsSign) ) {
                alt13=1;
            }
            else if ( (LA13_0==Extends) ) {
                alt13=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalAcmeParser.g:2563:2: ( ( rule__AcmeElementTypeDeclaration__Group_5_1_0__0 ) )
                    {
                    // InternalAcmeParser.g:2563:2: ( ( rule__AcmeElementTypeDeclaration__Group_5_1_0__0 ) )
                    // InternalAcmeParser.g:2564:3: ( rule__AcmeElementTypeDeclaration__Group_5_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeElementTypeDeclarationAccess().getGroup_5_1_0()); 
                    }
                    // InternalAcmeParser.g:2565:3: ( rule__AcmeElementTypeDeclaration__Group_5_1_0__0 )
                    // InternalAcmeParser.g:2565:4: rule__AcmeElementTypeDeclaration__Group_5_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeElementTypeDeclaration__Group_5_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeElementTypeDeclarationAccess().getGroup_5_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:2569:2: ( ( rule__AcmeElementTypeDeclaration__Group_5_1_1__0 ) )
                    {
                    // InternalAcmeParser.g:2569:2: ( ( rule__AcmeElementTypeDeclaration__Group_5_1_1__0 ) )
                    // InternalAcmeParser.g:2570:3: ( rule__AcmeElementTypeDeclaration__Group_5_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeElementTypeDeclarationAccess().getGroup_5_1_1()); 
                    }
                    // InternalAcmeParser.g:2571:3: ( rule__AcmeElementTypeDeclaration__Group_5_1_1__0 )
                    // InternalAcmeParser.g:2571:4: rule__AcmeElementTypeDeclaration__Group_5_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeElementTypeDeclaration__Group_5_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeElementTypeDeclarationAccess().getGroup_5_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Alternatives_5_1"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Alternatives_5_1_1_3"
    // InternalAcmeParser.g:2579:1: rule__AcmeElementTypeDeclaration__Alternatives_5_1_1_3 : ( ( Semicolon ) | ( ( rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__0 ) ) );
    public final void rule__AcmeElementTypeDeclaration__Alternatives_5_1_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2583:1: ( ( Semicolon ) | ( ( rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__0 ) ) )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==Semicolon) ) {
                alt14=1;
            }
            else if ( (LA14_0==With) ) {
                alt14=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // InternalAcmeParser.g:2584:2: ( Semicolon )
                    {
                    // InternalAcmeParser.g:2584:2: ( Semicolon )
                    // InternalAcmeParser.g:2585:3: Semicolon
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeElementTypeDeclarationAccess().getSemicolonKeyword_5_1_1_3_0()); 
                    }
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeElementTypeDeclarationAccess().getSemicolonKeyword_5_1_1_3_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:2590:2: ( ( rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__0 ) )
                    {
                    // InternalAcmeParser.g:2590:2: ( ( rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__0 ) )
                    // InternalAcmeParser.g:2591:3: ( rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeElementTypeDeclarationAccess().getGroup_5_1_1_3_1()); 
                    }
                    // InternalAcmeParser.g:2592:3: ( rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__0 )
                    // InternalAcmeParser.g:2592:4: rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeElementTypeDeclarationAccess().getGroup_5_1_1_3_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Alternatives_5_1_1_3"


    // $ANTLR start "rule__AcmeGenericElementBody__Alternatives_2"
    // InternalAcmeParser.g:2600:1: rule__AcmeGenericElementBody__Alternatives_2 : ( ( ( rule__AcmeGenericElementBody__PropertiesAssignment_2_0 ) ) | ( ( rule__AcmeGenericElementBody__RulesAssignment_2_1 ) ) );
    public final void rule__AcmeGenericElementBody__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2604:1: ( ( ( rule__AcmeGenericElementBody__PropertiesAssignment_2_0 ) ) | ( ( rule__AcmeGenericElementBody__RulesAssignment_2_1 ) ) )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==Property) ) {
                alt15=1;
            }
            else if ( ((LA15_0>=Hueristic && LA15_0<=Invariant)||LA15_0==Rule) ) {
                alt15=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // InternalAcmeParser.g:2605:2: ( ( rule__AcmeGenericElementBody__PropertiesAssignment_2_0 ) )
                    {
                    // InternalAcmeParser.g:2605:2: ( ( rule__AcmeGenericElementBody__PropertiesAssignment_2_0 ) )
                    // InternalAcmeParser.g:2606:3: ( rule__AcmeGenericElementBody__PropertiesAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeGenericElementBodyAccess().getPropertiesAssignment_2_0()); 
                    }
                    // InternalAcmeParser.g:2607:3: ( rule__AcmeGenericElementBody__PropertiesAssignment_2_0 )
                    // InternalAcmeParser.g:2607:4: rule__AcmeGenericElementBody__PropertiesAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeGenericElementBody__PropertiesAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeGenericElementBodyAccess().getPropertiesAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:2611:2: ( ( rule__AcmeGenericElementBody__RulesAssignment_2_1 ) )
                    {
                    // InternalAcmeParser.g:2611:2: ( ( rule__AcmeGenericElementBody__RulesAssignment_2_1 ) )
                    // InternalAcmeParser.g:2612:3: ( rule__AcmeGenericElementBody__RulesAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeGenericElementBodyAccess().getRulesAssignment_2_1()); 
                    }
                    // InternalAcmeParser.g:2613:3: ( rule__AcmeGenericElementBody__RulesAssignment_2_1 )
                    // InternalAcmeParser.g:2613:4: rule__AcmeGenericElementBody__RulesAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeGenericElementBody__RulesAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeGenericElementBodyAccess().getRulesAssignment_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGenericElementBody__Alternatives_2"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Alternatives_5"
    // InternalAcmeParser.g:2621:1: rule__AcmeGroupTypeDeclaration__Alternatives_5 : ( ( Semicolon ) | ( ( rule__AcmeGroupTypeDeclaration__Alternatives_5_1 ) ) );
    public final void rule__AcmeGroupTypeDeclaration__Alternatives_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2625:1: ( ( Semicolon ) | ( ( rule__AcmeGroupTypeDeclaration__Alternatives_5_1 ) ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==Semicolon) ) {
                alt16=1;
            }
            else if ( (LA16_0==Extends||LA16_0==EqualsSign) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalAcmeParser.g:2626:2: ( Semicolon )
                    {
                    // InternalAcmeParser.g:2626:2: ( Semicolon )
                    // InternalAcmeParser.g:2627:3: Semicolon
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeGroupTypeDeclarationAccess().getSemicolonKeyword_5_0()); 
                    }
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeGroupTypeDeclarationAccess().getSemicolonKeyword_5_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:2632:2: ( ( rule__AcmeGroupTypeDeclaration__Alternatives_5_1 ) )
                    {
                    // InternalAcmeParser.g:2632:2: ( ( rule__AcmeGroupTypeDeclaration__Alternatives_5_1 ) )
                    // InternalAcmeParser.g:2633:3: ( rule__AcmeGroupTypeDeclaration__Alternatives_5_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeGroupTypeDeclarationAccess().getAlternatives_5_1()); 
                    }
                    // InternalAcmeParser.g:2634:3: ( rule__AcmeGroupTypeDeclaration__Alternatives_5_1 )
                    // InternalAcmeParser.g:2634:4: rule__AcmeGroupTypeDeclaration__Alternatives_5_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeGroupTypeDeclaration__Alternatives_5_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeGroupTypeDeclarationAccess().getAlternatives_5_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Alternatives_5"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Alternatives_5_1"
    // InternalAcmeParser.g:2642:1: rule__AcmeGroupTypeDeclaration__Alternatives_5_1 : ( ( ( rule__AcmeGroupTypeDeclaration__Group_5_1_0__0 ) ) | ( ( rule__AcmeGroupTypeDeclaration__Group_5_1_1__0 ) ) );
    public final void rule__AcmeGroupTypeDeclaration__Alternatives_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2646:1: ( ( ( rule__AcmeGroupTypeDeclaration__Group_5_1_0__0 ) ) | ( ( rule__AcmeGroupTypeDeclaration__Group_5_1_1__0 ) ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==EqualsSign) ) {
                alt17=1;
            }
            else if ( (LA17_0==Extends) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalAcmeParser.g:2647:2: ( ( rule__AcmeGroupTypeDeclaration__Group_5_1_0__0 ) )
                    {
                    // InternalAcmeParser.g:2647:2: ( ( rule__AcmeGroupTypeDeclaration__Group_5_1_0__0 ) )
                    // InternalAcmeParser.g:2648:3: ( rule__AcmeGroupTypeDeclaration__Group_5_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeGroupTypeDeclarationAccess().getGroup_5_1_0()); 
                    }
                    // InternalAcmeParser.g:2649:3: ( rule__AcmeGroupTypeDeclaration__Group_5_1_0__0 )
                    // InternalAcmeParser.g:2649:4: rule__AcmeGroupTypeDeclaration__Group_5_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeGroupTypeDeclaration__Group_5_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeGroupTypeDeclarationAccess().getGroup_5_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:2653:2: ( ( rule__AcmeGroupTypeDeclaration__Group_5_1_1__0 ) )
                    {
                    // InternalAcmeParser.g:2653:2: ( ( rule__AcmeGroupTypeDeclaration__Group_5_1_1__0 ) )
                    // InternalAcmeParser.g:2654:3: ( rule__AcmeGroupTypeDeclaration__Group_5_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeGroupTypeDeclarationAccess().getGroup_5_1_1()); 
                    }
                    // InternalAcmeParser.g:2655:3: ( rule__AcmeGroupTypeDeclaration__Group_5_1_1__0 )
                    // InternalAcmeParser.g:2655:4: rule__AcmeGroupTypeDeclaration__Group_5_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeGroupTypeDeclaration__Group_5_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeGroupTypeDeclarationAccess().getGroup_5_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Alternatives_5_1"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Alternatives_5_1_1_3"
    // InternalAcmeParser.g:2663:1: rule__AcmeGroupTypeDeclaration__Alternatives_5_1_1_3 : ( ( Semicolon ) | ( ( rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__0 ) ) );
    public final void rule__AcmeGroupTypeDeclaration__Alternatives_5_1_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2667:1: ( ( Semicolon ) | ( ( rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__0 ) ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==Semicolon) ) {
                alt18=1;
            }
            else if ( (LA18_0==With) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalAcmeParser.g:2668:2: ( Semicolon )
                    {
                    // InternalAcmeParser.g:2668:2: ( Semicolon )
                    // InternalAcmeParser.g:2669:3: Semicolon
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeGroupTypeDeclarationAccess().getSemicolonKeyword_5_1_1_3_0()); 
                    }
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeGroupTypeDeclarationAccess().getSemicolonKeyword_5_1_1_3_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:2674:2: ( ( rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__0 ) )
                    {
                    // InternalAcmeParser.g:2674:2: ( ( rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__0 ) )
                    // InternalAcmeParser.g:2675:3: ( rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeGroupTypeDeclarationAccess().getGroup_5_1_1_3_1()); 
                    }
                    // InternalAcmeParser.g:2676:3: ( rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__0 )
                    // InternalAcmeParser.g:2676:4: rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeGroupTypeDeclarationAccess().getGroup_5_1_1_3_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Alternatives_5_1_1_3"


    // $ANTLR start "rule__AcmeGroupDeclaration__Alternatives_3"
    // InternalAcmeParser.g:2684:1: rule__AcmeGroupDeclaration__Alternatives_3 : ( ( Semicolon ) | ( ( rule__AcmeGroupDeclaration__Group_3_1__0 ) ) );
    public final void rule__AcmeGroupDeclaration__Alternatives_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2688:1: ( ( Semicolon ) | ( ( rule__AcmeGroupDeclaration__Group_3_1__0 ) ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==Semicolon) ) {
                alt19=1;
            }
            else if ( (LA19_0==EqualsSign) ) {
                alt19=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalAcmeParser.g:2689:2: ( Semicolon )
                    {
                    // InternalAcmeParser.g:2689:2: ( Semicolon )
                    // InternalAcmeParser.g:2690:3: Semicolon
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeGroupDeclarationAccess().getSemicolonKeyword_3_0()); 
                    }
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeGroupDeclarationAccess().getSemicolonKeyword_3_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:2695:2: ( ( rule__AcmeGroupDeclaration__Group_3_1__0 ) )
                    {
                    // InternalAcmeParser.g:2695:2: ( ( rule__AcmeGroupDeclaration__Group_3_1__0 ) )
                    // InternalAcmeParser.g:2696:3: ( rule__AcmeGroupDeclaration__Group_3_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeGroupDeclarationAccess().getGroup_3_1()); 
                    }
                    // InternalAcmeParser.g:2697:3: ( rule__AcmeGroupDeclaration__Group_3_1__0 )
                    // InternalAcmeParser.g:2697:4: rule__AcmeGroupDeclaration__Group_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeGroupDeclaration__Group_3_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeGroupDeclarationAccess().getGroup_3_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Alternatives_3"


    // $ANTLR start "rule__AcmeGroupDeclaration__Alternatives_3_1_1"
    // InternalAcmeParser.g:2705:1: rule__AcmeGroupDeclaration__Alternatives_3_1_1 : ( ( ( rule__AcmeGroupDeclaration__Group_3_1_1_0__0 ) ) | ( ( rule__AcmeGroupDeclaration__Group_3_1_1_1__0 ) ) );
    public final void rule__AcmeGroupDeclaration__Alternatives_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2709:1: ( ( ( rule__AcmeGroupDeclaration__Group_3_1_1_0__0 ) ) | ( ( rule__AcmeGroupDeclaration__Group_3_1_1_1__0 ) ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==LeftCurlyBracket) ) {
                alt20=1;
            }
            else if ( (LA20_0==New) ) {
                alt20=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalAcmeParser.g:2710:2: ( ( rule__AcmeGroupDeclaration__Group_3_1_1_0__0 ) )
                    {
                    // InternalAcmeParser.g:2710:2: ( ( rule__AcmeGroupDeclaration__Group_3_1_1_0__0 ) )
                    // InternalAcmeParser.g:2711:3: ( rule__AcmeGroupDeclaration__Group_3_1_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeGroupDeclarationAccess().getGroup_3_1_1_0()); 
                    }
                    // InternalAcmeParser.g:2712:3: ( rule__AcmeGroupDeclaration__Group_3_1_1_0__0 )
                    // InternalAcmeParser.g:2712:4: rule__AcmeGroupDeclaration__Group_3_1_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeGroupDeclaration__Group_3_1_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeGroupDeclarationAccess().getGroup_3_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:2716:2: ( ( rule__AcmeGroupDeclaration__Group_3_1_1_1__0 ) )
                    {
                    // InternalAcmeParser.g:2716:2: ( ( rule__AcmeGroupDeclaration__Group_3_1_1_1__0 ) )
                    // InternalAcmeParser.g:2717:3: ( rule__AcmeGroupDeclaration__Group_3_1_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeGroupDeclarationAccess().getGroup_3_1_1_1()); 
                    }
                    // InternalAcmeParser.g:2718:3: ( rule__AcmeGroupDeclaration__Group_3_1_1_1__0 )
                    // InternalAcmeParser.g:2718:4: rule__AcmeGroupDeclaration__Group_3_1_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeGroupDeclaration__Group_3_1_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeGroupDeclarationAccess().getGroup_3_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Alternatives_3_1_1"


    // $ANTLR start "rule__AcmeGroupDeclaration__Alternatives_3_1_1_1_3"
    // InternalAcmeParser.g:2726:1: rule__AcmeGroupDeclaration__Alternatives_3_1_1_1_3 : ( ( Semicolon ) | ( ( rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__0 ) ) );
    public final void rule__AcmeGroupDeclaration__Alternatives_3_1_1_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2730:1: ( ( Semicolon ) | ( ( rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__0 ) ) )
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==Semicolon) ) {
                alt21=1;
            }
            else if ( (LA21_0==Extended) ) {
                alt21=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }
            switch (alt21) {
                case 1 :
                    // InternalAcmeParser.g:2731:2: ( Semicolon )
                    {
                    // InternalAcmeParser.g:2731:2: ( Semicolon )
                    // InternalAcmeParser.g:2732:3: Semicolon
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeGroupDeclarationAccess().getSemicolonKeyword_3_1_1_1_3_0()); 
                    }
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeGroupDeclarationAccess().getSemicolonKeyword_3_1_1_1_3_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:2737:2: ( ( rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__0 ) )
                    {
                    // InternalAcmeParser.g:2737:2: ( ( rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__0 ) )
                    // InternalAcmeParser.g:2738:3: ( rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeGroupDeclarationAccess().getGroup_3_1_1_1_3_1()); 
                    }
                    // InternalAcmeParser.g:2739:3: ( rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__0 )
                    // InternalAcmeParser.g:2739:4: rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeGroupDeclarationAccess().getGroup_3_1_1_1_3_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Alternatives_3_1_1_1_3"


    // $ANTLR start "rule__AcmeGroupBody__Alternatives_2"
    // InternalAcmeParser.g:2747:1: rule__AcmeGroupBody__Alternatives_2 : ( ( ( rule__AcmeGroupBody__MembersAssignment_2_0 ) ) | ( ( rule__AcmeGroupBody__PropertiesAssignment_2_1 ) ) | ( ( rule__AcmeGroupBody__RulesAssignment_2_2 ) ) );
    public final void rule__AcmeGroupBody__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2751:1: ( ( ( rule__AcmeGroupBody__MembersAssignment_2_0 ) ) | ( ( rule__AcmeGroupBody__PropertiesAssignment_2_1 ) ) | ( ( rule__AcmeGroupBody__RulesAssignment_2_2 ) ) )
            int alt22=3;
            switch ( input.LA(1) ) {
            case Members:
                {
                alt22=1;
                }
                break;
            case Property:
                {
                alt22=2;
                }
                break;
            case Hueristic:
            case Invariant:
            case Rule:
                {
                alt22=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }

            switch (alt22) {
                case 1 :
                    // InternalAcmeParser.g:2752:2: ( ( rule__AcmeGroupBody__MembersAssignment_2_0 ) )
                    {
                    // InternalAcmeParser.g:2752:2: ( ( rule__AcmeGroupBody__MembersAssignment_2_0 ) )
                    // InternalAcmeParser.g:2753:3: ( rule__AcmeGroupBody__MembersAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeGroupBodyAccess().getMembersAssignment_2_0()); 
                    }
                    // InternalAcmeParser.g:2754:3: ( rule__AcmeGroupBody__MembersAssignment_2_0 )
                    // InternalAcmeParser.g:2754:4: rule__AcmeGroupBody__MembersAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeGroupBody__MembersAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeGroupBodyAccess().getMembersAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:2758:2: ( ( rule__AcmeGroupBody__PropertiesAssignment_2_1 ) )
                    {
                    // InternalAcmeParser.g:2758:2: ( ( rule__AcmeGroupBody__PropertiesAssignment_2_1 ) )
                    // InternalAcmeParser.g:2759:3: ( rule__AcmeGroupBody__PropertiesAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeGroupBodyAccess().getPropertiesAssignment_2_1()); 
                    }
                    // InternalAcmeParser.g:2760:3: ( rule__AcmeGroupBody__PropertiesAssignment_2_1 )
                    // InternalAcmeParser.g:2760:4: rule__AcmeGroupBody__PropertiesAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeGroupBody__PropertiesAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeGroupBodyAccess().getPropertiesAssignment_2_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAcmeParser.g:2764:2: ( ( rule__AcmeGroupBody__RulesAssignment_2_2 ) )
                    {
                    // InternalAcmeParser.g:2764:2: ( ( rule__AcmeGroupBody__RulesAssignment_2_2 ) )
                    // InternalAcmeParser.g:2765:3: ( rule__AcmeGroupBody__RulesAssignment_2_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeGroupBodyAccess().getRulesAssignment_2_2()); 
                    }
                    // InternalAcmeParser.g:2766:3: ( rule__AcmeGroupBody__RulesAssignment_2_2 )
                    // InternalAcmeParser.g:2766:4: rule__AcmeGroupBody__RulesAssignment_2_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeGroupBody__RulesAssignment_2_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeGroupBodyAccess().getRulesAssignment_2_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupBody__Alternatives_2"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Alternatives_5"
    // InternalAcmeParser.g:2774:1: rule__AcmePortTypeDeclaration__Alternatives_5 : ( ( Semicolon ) | ( ( rule__AcmePortTypeDeclaration__Alternatives_5_1 ) ) );
    public final void rule__AcmePortTypeDeclaration__Alternatives_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2778:1: ( ( Semicolon ) | ( ( rule__AcmePortTypeDeclaration__Alternatives_5_1 ) ) )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==Semicolon) ) {
                alt23=1;
            }
            else if ( (LA23_0==Extends||LA23_0==EqualsSign) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalAcmeParser.g:2779:2: ( Semicolon )
                    {
                    // InternalAcmeParser.g:2779:2: ( Semicolon )
                    // InternalAcmeParser.g:2780:3: Semicolon
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePortTypeDeclarationAccess().getSemicolonKeyword_5_0()); 
                    }
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePortTypeDeclarationAccess().getSemicolonKeyword_5_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:2785:2: ( ( rule__AcmePortTypeDeclaration__Alternatives_5_1 ) )
                    {
                    // InternalAcmeParser.g:2785:2: ( ( rule__AcmePortTypeDeclaration__Alternatives_5_1 ) )
                    // InternalAcmeParser.g:2786:3: ( rule__AcmePortTypeDeclaration__Alternatives_5_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePortTypeDeclarationAccess().getAlternatives_5_1()); 
                    }
                    // InternalAcmeParser.g:2787:3: ( rule__AcmePortTypeDeclaration__Alternatives_5_1 )
                    // InternalAcmeParser.g:2787:4: rule__AcmePortTypeDeclaration__Alternatives_5_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePortTypeDeclaration__Alternatives_5_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePortTypeDeclarationAccess().getAlternatives_5_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Alternatives_5"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Alternatives_5_1"
    // InternalAcmeParser.g:2795:1: rule__AcmePortTypeDeclaration__Alternatives_5_1 : ( ( ( rule__AcmePortTypeDeclaration__Group_5_1_0__0 ) ) | ( ( rule__AcmePortTypeDeclaration__Group_5_1_1__0 ) ) );
    public final void rule__AcmePortTypeDeclaration__Alternatives_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2799:1: ( ( ( rule__AcmePortTypeDeclaration__Group_5_1_0__0 ) ) | ( ( rule__AcmePortTypeDeclaration__Group_5_1_1__0 ) ) )
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==EqualsSign) ) {
                alt24=1;
            }
            else if ( (LA24_0==Extends) ) {
                alt24=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }
            switch (alt24) {
                case 1 :
                    // InternalAcmeParser.g:2800:2: ( ( rule__AcmePortTypeDeclaration__Group_5_1_0__0 ) )
                    {
                    // InternalAcmeParser.g:2800:2: ( ( rule__AcmePortTypeDeclaration__Group_5_1_0__0 ) )
                    // InternalAcmeParser.g:2801:3: ( rule__AcmePortTypeDeclaration__Group_5_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePortTypeDeclarationAccess().getGroup_5_1_0()); 
                    }
                    // InternalAcmeParser.g:2802:3: ( rule__AcmePortTypeDeclaration__Group_5_1_0__0 )
                    // InternalAcmeParser.g:2802:4: rule__AcmePortTypeDeclaration__Group_5_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePortTypeDeclaration__Group_5_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePortTypeDeclarationAccess().getGroup_5_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:2806:2: ( ( rule__AcmePortTypeDeclaration__Group_5_1_1__0 ) )
                    {
                    // InternalAcmeParser.g:2806:2: ( ( rule__AcmePortTypeDeclaration__Group_5_1_1__0 ) )
                    // InternalAcmeParser.g:2807:3: ( rule__AcmePortTypeDeclaration__Group_5_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePortTypeDeclarationAccess().getGroup_5_1_1()); 
                    }
                    // InternalAcmeParser.g:2808:3: ( rule__AcmePortTypeDeclaration__Group_5_1_1__0 )
                    // InternalAcmeParser.g:2808:4: rule__AcmePortTypeDeclaration__Group_5_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePortTypeDeclaration__Group_5_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePortTypeDeclarationAccess().getGroup_5_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Alternatives_5_1"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Alternatives_5_1_1_3"
    // InternalAcmeParser.g:2816:1: rule__AcmePortTypeDeclaration__Alternatives_5_1_1_3 : ( ( Semicolon ) | ( ( rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__0 ) ) );
    public final void rule__AcmePortTypeDeclaration__Alternatives_5_1_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2820:1: ( ( Semicolon ) | ( ( rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__0 ) ) )
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==Semicolon) ) {
                alt25=1;
            }
            else if ( (LA25_0==With) ) {
                alt25=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }
            switch (alt25) {
                case 1 :
                    // InternalAcmeParser.g:2821:2: ( Semicolon )
                    {
                    // InternalAcmeParser.g:2821:2: ( Semicolon )
                    // InternalAcmeParser.g:2822:3: Semicolon
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePortTypeDeclarationAccess().getSemicolonKeyword_5_1_1_3_0()); 
                    }
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePortTypeDeclarationAccess().getSemicolonKeyword_5_1_1_3_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:2827:2: ( ( rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__0 ) )
                    {
                    // InternalAcmeParser.g:2827:2: ( ( rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__0 ) )
                    // InternalAcmeParser.g:2828:3: ( rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePortTypeDeclarationAccess().getGroup_5_1_1_3_1()); 
                    }
                    // InternalAcmeParser.g:2829:3: ( rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__0 )
                    // InternalAcmeParser.g:2829:4: rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePortTypeDeclarationAccess().getGroup_5_1_1_3_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Alternatives_5_1_1_3"


    // $ANTLR start "rule__AcmePortDeclaration__Alternatives_3"
    // InternalAcmeParser.g:2837:1: rule__AcmePortDeclaration__Alternatives_3 : ( ( Semicolon ) | ( ( rule__AcmePortDeclaration__Group_3_1__0 ) ) );
    public final void rule__AcmePortDeclaration__Alternatives_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2841:1: ( ( Semicolon ) | ( ( rule__AcmePortDeclaration__Group_3_1__0 ) ) )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==Semicolon) ) {
                alt26=1;
            }
            else if ( (LA26_0==EqualsSign) ) {
                alt26=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }
            switch (alt26) {
                case 1 :
                    // InternalAcmeParser.g:2842:2: ( Semicolon )
                    {
                    // InternalAcmeParser.g:2842:2: ( Semicolon )
                    // InternalAcmeParser.g:2843:3: Semicolon
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePortDeclarationAccess().getSemicolonKeyword_3_0()); 
                    }
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePortDeclarationAccess().getSemicolonKeyword_3_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:2848:2: ( ( rule__AcmePortDeclaration__Group_3_1__0 ) )
                    {
                    // InternalAcmeParser.g:2848:2: ( ( rule__AcmePortDeclaration__Group_3_1__0 ) )
                    // InternalAcmeParser.g:2849:3: ( rule__AcmePortDeclaration__Group_3_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePortDeclarationAccess().getGroup_3_1()); 
                    }
                    // InternalAcmeParser.g:2850:3: ( rule__AcmePortDeclaration__Group_3_1__0 )
                    // InternalAcmeParser.g:2850:4: rule__AcmePortDeclaration__Group_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePortDeclaration__Group_3_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePortDeclarationAccess().getGroup_3_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Alternatives_3"


    // $ANTLR start "rule__AcmePortDeclaration__Alternatives_3_1_1"
    // InternalAcmeParser.g:2858:1: rule__AcmePortDeclaration__Alternatives_3_1_1 : ( ( ( rule__AcmePortDeclaration__Group_3_1_1_0__0 ) ) | ( ( rule__AcmePortDeclaration__Group_3_1_1_1__0 ) ) );
    public final void rule__AcmePortDeclaration__Alternatives_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2862:1: ( ( ( rule__AcmePortDeclaration__Group_3_1_1_0__0 ) ) | ( ( rule__AcmePortDeclaration__Group_3_1_1_1__0 ) ) )
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==LeftCurlyBracket) ) {
                alt27=1;
            }
            else if ( (LA27_0==New) ) {
                alt27=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }
            switch (alt27) {
                case 1 :
                    // InternalAcmeParser.g:2863:2: ( ( rule__AcmePortDeclaration__Group_3_1_1_0__0 ) )
                    {
                    // InternalAcmeParser.g:2863:2: ( ( rule__AcmePortDeclaration__Group_3_1_1_0__0 ) )
                    // InternalAcmeParser.g:2864:3: ( rule__AcmePortDeclaration__Group_3_1_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePortDeclarationAccess().getGroup_3_1_1_0()); 
                    }
                    // InternalAcmeParser.g:2865:3: ( rule__AcmePortDeclaration__Group_3_1_1_0__0 )
                    // InternalAcmeParser.g:2865:4: rule__AcmePortDeclaration__Group_3_1_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePortDeclaration__Group_3_1_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePortDeclarationAccess().getGroup_3_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:2869:2: ( ( rule__AcmePortDeclaration__Group_3_1_1_1__0 ) )
                    {
                    // InternalAcmeParser.g:2869:2: ( ( rule__AcmePortDeclaration__Group_3_1_1_1__0 ) )
                    // InternalAcmeParser.g:2870:3: ( rule__AcmePortDeclaration__Group_3_1_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePortDeclarationAccess().getGroup_3_1_1_1()); 
                    }
                    // InternalAcmeParser.g:2871:3: ( rule__AcmePortDeclaration__Group_3_1_1_1__0 )
                    // InternalAcmeParser.g:2871:4: rule__AcmePortDeclaration__Group_3_1_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePortDeclaration__Group_3_1_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePortDeclarationAccess().getGroup_3_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Alternatives_3_1_1"


    // $ANTLR start "rule__AcmePortDeclaration__Alternatives_3_1_1_1_3"
    // InternalAcmeParser.g:2879:1: rule__AcmePortDeclaration__Alternatives_3_1_1_1_3 : ( ( Semicolon ) | ( ( rule__AcmePortDeclaration__Group_3_1_1_1_3_1__0 ) ) );
    public final void rule__AcmePortDeclaration__Alternatives_3_1_1_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2883:1: ( ( Semicolon ) | ( ( rule__AcmePortDeclaration__Group_3_1_1_1_3_1__0 ) ) )
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==Semicolon) ) {
                alt28=1;
            }
            else if ( (LA28_0==Extended) ) {
                alt28=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }
            switch (alt28) {
                case 1 :
                    // InternalAcmeParser.g:2884:2: ( Semicolon )
                    {
                    // InternalAcmeParser.g:2884:2: ( Semicolon )
                    // InternalAcmeParser.g:2885:3: Semicolon
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePortDeclarationAccess().getSemicolonKeyword_3_1_1_1_3_0()); 
                    }
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePortDeclarationAccess().getSemicolonKeyword_3_1_1_1_3_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:2890:2: ( ( rule__AcmePortDeclaration__Group_3_1_1_1_3_1__0 ) )
                    {
                    // InternalAcmeParser.g:2890:2: ( ( rule__AcmePortDeclaration__Group_3_1_1_1_3_1__0 ) )
                    // InternalAcmeParser.g:2891:3: ( rule__AcmePortDeclaration__Group_3_1_1_1_3_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePortDeclarationAccess().getGroup_3_1_1_1_3_1()); 
                    }
                    // InternalAcmeParser.g:2892:3: ( rule__AcmePortDeclaration__Group_3_1_1_1_3_1__0 )
                    // InternalAcmeParser.g:2892:4: rule__AcmePortDeclaration__Group_3_1_1_1_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePortDeclaration__Group_3_1_1_1_3_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePortDeclarationAccess().getGroup_3_1_1_1_3_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Alternatives_3_1_1_1_3"


    // $ANTLR start "rule__AcmePortBody__Alternatives_2"
    // InternalAcmeParser.g:2900:1: rule__AcmePortBody__Alternatives_2 : ( ( ( rule__AcmePortBody__PropertiesAssignment_2_0 ) ) | ( ( rule__AcmePortBody__RulesAssignment_2_1 ) ) | ( ( rule__AcmePortBody__RepresentationsAssignment_2_2 ) ) );
    public final void rule__AcmePortBody__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2904:1: ( ( ( rule__AcmePortBody__PropertiesAssignment_2_0 ) ) | ( ( rule__AcmePortBody__RulesAssignment_2_1 ) ) | ( ( rule__AcmePortBody__RepresentationsAssignment_2_2 ) ) )
            int alt29=3;
            switch ( input.LA(1) ) {
            case Property:
                {
                alt29=1;
                }
                break;
            case Hueristic:
            case Invariant:
            case Rule:
                {
                alt29=2;
                }
                break;
            case Representation:
                {
                alt29=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }

            switch (alt29) {
                case 1 :
                    // InternalAcmeParser.g:2905:2: ( ( rule__AcmePortBody__PropertiesAssignment_2_0 ) )
                    {
                    // InternalAcmeParser.g:2905:2: ( ( rule__AcmePortBody__PropertiesAssignment_2_0 ) )
                    // InternalAcmeParser.g:2906:3: ( rule__AcmePortBody__PropertiesAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePortBodyAccess().getPropertiesAssignment_2_0()); 
                    }
                    // InternalAcmeParser.g:2907:3: ( rule__AcmePortBody__PropertiesAssignment_2_0 )
                    // InternalAcmeParser.g:2907:4: rule__AcmePortBody__PropertiesAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePortBody__PropertiesAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePortBodyAccess().getPropertiesAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:2911:2: ( ( rule__AcmePortBody__RulesAssignment_2_1 ) )
                    {
                    // InternalAcmeParser.g:2911:2: ( ( rule__AcmePortBody__RulesAssignment_2_1 ) )
                    // InternalAcmeParser.g:2912:3: ( rule__AcmePortBody__RulesAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePortBodyAccess().getRulesAssignment_2_1()); 
                    }
                    // InternalAcmeParser.g:2913:3: ( rule__AcmePortBody__RulesAssignment_2_1 )
                    // InternalAcmeParser.g:2913:4: rule__AcmePortBody__RulesAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePortBody__RulesAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePortBodyAccess().getRulesAssignment_2_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAcmeParser.g:2917:2: ( ( rule__AcmePortBody__RepresentationsAssignment_2_2 ) )
                    {
                    // InternalAcmeParser.g:2917:2: ( ( rule__AcmePortBody__RepresentationsAssignment_2_2 ) )
                    // InternalAcmeParser.g:2918:3: ( rule__AcmePortBody__RepresentationsAssignment_2_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePortBodyAccess().getRepresentationsAssignment_2_2()); 
                    }
                    // InternalAcmeParser.g:2919:3: ( rule__AcmePortBody__RepresentationsAssignment_2_2 )
                    // InternalAcmeParser.g:2919:4: rule__AcmePortBody__RepresentationsAssignment_2_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePortBody__RepresentationsAssignment_2_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePortBodyAccess().getRepresentationsAssignment_2_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortBody__Alternatives_2"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Alternatives_5"
    // InternalAcmeParser.g:2927:1: rule__AcmeRoleTypeDeclaration__Alternatives_5 : ( ( Semicolon ) | ( ( rule__AcmeRoleTypeDeclaration__Alternatives_5_1 ) ) );
    public final void rule__AcmeRoleTypeDeclaration__Alternatives_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2931:1: ( ( Semicolon ) | ( ( rule__AcmeRoleTypeDeclaration__Alternatives_5_1 ) ) )
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==Semicolon) ) {
                alt30=1;
            }
            else if ( (LA30_0==Extends||LA30_0==EqualsSign) ) {
                alt30=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }
            switch (alt30) {
                case 1 :
                    // InternalAcmeParser.g:2932:2: ( Semicolon )
                    {
                    // InternalAcmeParser.g:2932:2: ( Semicolon )
                    // InternalAcmeParser.g:2933:3: Semicolon
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeRoleTypeDeclarationAccess().getSemicolonKeyword_5_0()); 
                    }
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeRoleTypeDeclarationAccess().getSemicolonKeyword_5_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:2938:2: ( ( rule__AcmeRoleTypeDeclaration__Alternatives_5_1 ) )
                    {
                    // InternalAcmeParser.g:2938:2: ( ( rule__AcmeRoleTypeDeclaration__Alternatives_5_1 ) )
                    // InternalAcmeParser.g:2939:3: ( rule__AcmeRoleTypeDeclaration__Alternatives_5_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeRoleTypeDeclarationAccess().getAlternatives_5_1()); 
                    }
                    // InternalAcmeParser.g:2940:3: ( rule__AcmeRoleTypeDeclaration__Alternatives_5_1 )
                    // InternalAcmeParser.g:2940:4: rule__AcmeRoleTypeDeclaration__Alternatives_5_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeRoleTypeDeclaration__Alternatives_5_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeRoleTypeDeclarationAccess().getAlternatives_5_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Alternatives_5"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Alternatives_5_1"
    // InternalAcmeParser.g:2948:1: rule__AcmeRoleTypeDeclaration__Alternatives_5_1 : ( ( ( rule__AcmeRoleTypeDeclaration__Group_5_1_0__0 ) ) | ( ( rule__AcmeRoleTypeDeclaration__Group_5_1_1__0 ) ) );
    public final void rule__AcmeRoleTypeDeclaration__Alternatives_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2952:1: ( ( ( rule__AcmeRoleTypeDeclaration__Group_5_1_0__0 ) ) | ( ( rule__AcmeRoleTypeDeclaration__Group_5_1_1__0 ) ) )
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==EqualsSign) ) {
                alt31=1;
            }
            else if ( (LA31_0==Extends) ) {
                alt31=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }
            switch (alt31) {
                case 1 :
                    // InternalAcmeParser.g:2953:2: ( ( rule__AcmeRoleTypeDeclaration__Group_5_1_0__0 ) )
                    {
                    // InternalAcmeParser.g:2953:2: ( ( rule__AcmeRoleTypeDeclaration__Group_5_1_0__0 ) )
                    // InternalAcmeParser.g:2954:3: ( rule__AcmeRoleTypeDeclaration__Group_5_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeRoleTypeDeclarationAccess().getGroup_5_1_0()); 
                    }
                    // InternalAcmeParser.g:2955:3: ( rule__AcmeRoleTypeDeclaration__Group_5_1_0__0 )
                    // InternalAcmeParser.g:2955:4: rule__AcmeRoleTypeDeclaration__Group_5_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeRoleTypeDeclaration__Group_5_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeRoleTypeDeclarationAccess().getGroup_5_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:2959:2: ( ( rule__AcmeRoleTypeDeclaration__Group_5_1_1__0 ) )
                    {
                    // InternalAcmeParser.g:2959:2: ( ( rule__AcmeRoleTypeDeclaration__Group_5_1_1__0 ) )
                    // InternalAcmeParser.g:2960:3: ( rule__AcmeRoleTypeDeclaration__Group_5_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeRoleTypeDeclarationAccess().getGroup_5_1_1()); 
                    }
                    // InternalAcmeParser.g:2961:3: ( rule__AcmeRoleTypeDeclaration__Group_5_1_1__0 )
                    // InternalAcmeParser.g:2961:4: rule__AcmeRoleTypeDeclaration__Group_5_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeRoleTypeDeclaration__Group_5_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeRoleTypeDeclarationAccess().getGroup_5_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Alternatives_5_1"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Alternatives_5_1_1_3"
    // InternalAcmeParser.g:2969:1: rule__AcmeRoleTypeDeclaration__Alternatives_5_1_1_3 : ( ( Semicolon ) | ( ( rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__0 ) ) );
    public final void rule__AcmeRoleTypeDeclaration__Alternatives_5_1_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2973:1: ( ( Semicolon ) | ( ( rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__0 ) ) )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==Semicolon) ) {
                alt32=1;
            }
            else if ( (LA32_0==With) ) {
                alt32=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }
            switch (alt32) {
                case 1 :
                    // InternalAcmeParser.g:2974:2: ( Semicolon )
                    {
                    // InternalAcmeParser.g:2974:2: ( Semicolon )
                    // InternalAcmeParser.g:2975:3: Semicolon
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeRoleTypeDeclarationAccess().getSemicolonKeyword_5_1_1_3_0()); 
                    }
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeRoleTypeDeclarationAccess().getSemicolonKeyword_5_1_1_3_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:2980:2: ( ( rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__0 ) )
                    {
                    // InternalAcmeParser.g:2980:2: ( ( rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__0 ) )
                    // InternalAcmeParser.g:2981:3: ( rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeRoleTypeDeclarationAccess().getGroup_5_1_1_3_1()); 
                    }
                    // InternalAcmeParser.g:2982:3: ( rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__0 )
                    // InternalAcmeParser.g:2982:4: rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeRoleTypeDeclarationAccess().getGroup_5_1_1_3_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Alternatives_5_1_1_3"


    // $ANTLR start "rule__AcmeRoleDeclaration__Alternatives_3"
    // InternalAcmeParser.g:2990:1: rule__AcmeRoleDeclaration__Alternatives_3 : ( ( Semicolon ) | ( ( rule__AcmeRoleDeclaration__Group_3_1__0 ) ) );
    public final void rule__AcmeRoleDeclaration__Alternatives_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:2994:1: ( ( Semicolon ) | ( ( rule__AcmeRoleDeclaration__Group_3_1__0 ) ) )
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==Semicolon) ) {
                alt33=1;
            }
            else if ( (LA33_0==EqualsSign) ) {
                alt33=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }
            switch (alt33) {
                case 1 :
                    // InternalAcmeParser.g:2995:2: ( Semicolon )
                    {
                    // InternalAcmeParser.g:2995:2: ( Semicolon )
                    // InternalAcmeParser.g:2996:3: Semicolon
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeRoleDeclarationAccess().getSemicolonKeyword_3_0()); 
                    }
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeRoleDeclarationAccess().getSemicolonKeyword_3_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3001:2: ( ( rule__AcmeRoleDeclaration__Group_3_1__0 ) )
                    {
                    // InternalAcmeParser.g:3001:2: ( ( rule__AcmeRoleDeclaration__Group_3_1__0 ) )
                    // InternalAcmeParser.g:3002:3: ( rule__AcmeRoleDeclaration__Group_3_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeRoleDeclarationAccess().getGroup_3_1()); 
                    }
                    // InternalAcmeParser.g:3003:3: ( rule__AcmeRoleDeclaration__Group_3_1__0 )
                    // InternalAcmeParser.g:3003:4: rule__AcmeRoleDeclaration__Group_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeRoleDeclaration__Group_3_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeRoleDeclarationAccess().getGroup_3_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Alternatives_3"


    // $ANTLR start "rule__AcmeRoleDeclaration__Alternatives_3_1_1"
    // InternalAcmeParser.g:3011:1: rule__AcmeRoleDeclaration__Alternatives_3_1_1 : ( ( ( rule__AcmeRoleDeclaration__Group_3_1_1_0__0 ) ) | ( ( rule__AcmeRoleDeclaration__Group_3_1_1_1__0 ) ) );
    public final void rule__AcmeRoleDeclaration__Alternatives_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3015:1: ( ( ( rule__AcmeRoleDeclaration__Group_3_1_1_0__0 ) ) | ( ( rule__AcmeRoleDeclaration__Group_3_1_1_1__0 ) ) )
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==LeftCurlyBracket) ) {
                alt34=1;
            }
            else if ( (LA34_0==New) ) {
                alt34=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }
            switch (alt34) {
                case 1 :
                    // InternalAcmeParser.g:3016:2: ( ( rule__AcmeRoleDeclaration__Group_3_1_1_0__0 ) )
                    {
                    // InternalAcmeParser.g:3016:2: ( ( rule__AcmeRoleDeclaration__Group_3_1_1_0__0 ) )
                    // InternalAcmeParser.g:3017:3: ( rule__AcmeRoleDeclaration__Group_3_1_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeRoleDeclarationAccess().getGroup_3_1_1_0()); 
                    }
                    // InternalAcmeParser.g:3018:3: ( rule__AcmeRoleDeclaration__Group_3_1_1_0__0 )
                    // InternalAcmeParser.g:3018:4: rule__AcmeRoleDeclaration__Group_3_1_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeRoleDeclaration__Group_3_1_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeRoleDeclarationAccess().getGroup_3_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3022:2: ( ( rule__AcmeRoleDeclaration__Group_3_1_1_1__0 ) )
                    {
                    // InternalAcmeParser.g:3022:2: ( ( rule__AcmeRoleDeclaration__Group_3_1_1_1__0 ) )
                    // InternalAcmeParser.g:3023:3: ( rule__AcmeRoleDeclaration__Group_3_1_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeRoleDeclarationAccess().getGroup_3_1_1_1()); 
                    }
                    // InternalAcmeParser.g:3024:3: ( rule__AcmeRoleDeclaration__Group_3_1_1_1__0 )
                    // InternalAcmeParser.g:3024:4: rule__AcmeRoleDeclaration__Group_3_1_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeRoleDeclaration__Group_3_1_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeRoleDeclarationAccess().getGroup_3_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Alternatives_3_1_1"


    // $ANTLR start "rule__AcmeRoleDeclaration__Alternatives_3_1_1_1_3"
    // InternalAcmeParser.g:3032:1: rule__AcmeRoleDeclaration__Alternatives_3_1_1_1_3 : ( ( Semicolon ) | ( ( rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__0 ) ) );
    public final void rule__AcmeRoleDeclaration__Alternatives_3_1_1_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3036:1: ( ( Semicolon ) | ( ( rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__0 ) ) )
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==Semicolon) ) {
                alt35=1;
            }
            else if ( (LA35_0==Extended) ) {
                alt35=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }
            switch (alt35) {
                case 1 :
                    // InternalAcmeParser.g:3037:2: ( Semicolon )
                    {
                    // InternalAcmeParser.g:3037:2: ( Semicolon )
                    // InternalAcmeParser.g:3038:3: Semicolon
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeRoleDeclarationAccess().getSemicolonKeyword_3_1_1_1_3_0()); 
                    }
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeRoleDeclarationAccess().getSemicolonKeyword_3_1_1_1_3_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3043:2: ( ( rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__0 ) )
                    {
                    // InternalAcmeParser.g:3043:2: ( ( rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__0 ) )
                    // InternalAcmeParser.g:3044:3: ( rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeRoleDeclarationAccess().getGroup_3_1_1_1_3_1()); 
                    }
                    // InternalAcmeParser.g:3045:3: ( rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__0 )
                    // InternalAcmeParser.g:3045:4: rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeRoleDeclarationAccess().getGroup_3_1_1_1_3_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Alternatives_3_1_1_1_3"


    // $ANTLR start "rule__AcmeRoleBody__Alternatives_2"
    // InternalAcmeParser.g:3053:1: rule__AcmeRoleBody__Alternatives_2 : ( ( ( rule__AcmeRoleBody__PropertiesAssignment_2_0 ) ) | ( ( rule__AcmeRoleBody__RulesAssignment_2_1 ) ) | ( ( rule__AcmeRoleBody__RepresentationsAssignment_2_2 ) ) );
    public final void rule__AcmeRoleBody__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3057:1: ( ( ( rule__AcmeRoleBody__PropertiesAssignment_2_0 ) ) | ( ( rule__AcmeRoleBody__RulesAssignment_2_1 ) ) | ( ( rule__AcmeRoleBody__RepresentationsAssignment_2_2 ) ) )
            int alt36=3;
            switch ( input.LA(1) ) {
            case Property:
                {
                alt36=1;
                }
                break;
            case Hueristic:
            case Invariant:
            case Rule:
                {
                alt36=2;
                }
                break;
            case Representation:
                {
                alt36=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }

            switch (alt36) {
                case 1 :
                    // InternalAcmeParser.g:3058:2: ( ( rule__AcmeRoleBody__PropertiesAssignment_2_0 ) )
                    {
                    // InternalAcmeParser.g:3058:2: ( ( rule__AcmeRoleBody__PropertiesAssignment_2_0 ) )
                    // InternalAcmeParser.g:3059:3: ( rule__AcmeRoleBody__PropertiesAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeRoleBodyAccess().getPropertiesAssignment_2_0()); 
                    }
                    // InternalAcmeParser.g:3060:3: ( rule__AcmeRoleBody__PropertiesAssignment_2_0 )
                    // InternalAcmeParser.g:3060:4: rule__AcmeRoleBody__PropertiesAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeRoleBody__PropertiesAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeRoleBodyAccess().getPropertiesAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3064:2: ( ( rule__AcmeRoleBody__RulesAssignment_2_1 ) )
                    {
                    // InternalAcmeParser.g:3064:2: ( ( rule__AcmeRoleBody__RulesAssignment_2_1 ) )
                    // InternalAcmeParser.g:3065:3: ( rule__AcmeRoleBody__RulesAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeRoleBodyAccess().getRulesAssignment_2_1()); 
                    }
                    // InternalAcmeParser.g:3066:3: ( rule__AcmeRoleBody__RulesAssignment_2_1 )
                    // InternalAcmeParser.g:3066:4: rule__AcmeRoleBody__RulesAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeRoleBody__RulesAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeRoleBodyAccess().getRulesAssignment_2_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAcmeParser.g:3070:2: ( ( rule__AcmeRoleBody__RepresentationsAssignment_2_2 ) )
                    {
                    // InternalAcmeParser.g:3070:2: ( ( rule__AcmeRoleBody__RepresentationsAssignment_2_2 ) )
                    // InternalAcmeParser.g:3071:3: ( rule__AcmeRoleBody__RepresentationsAssignment_2_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeRoleBodyAccess().getRepresentationsAssignment_2_2()); 
                    }
                    // InternalAcmeParser.g:3072:3: ( rule__AcmeRoleBody__RepresentationsAssignment_2_2 )
                    // InternalAcmeParser.g:3072:4: rule__AcmeRoleBody__RepresentationsAssignment_2_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeRoleBody__RepresentationsAssignment_2_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeRoleBodyAccess().getRepresentationsAssignment_2_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleBody__Alternatives_2"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Alternatives_5"
    // InternalAcmeParser.g:3080:1: rule__AcmeComponentTypeDeclaration__Alternatives_5 : ( ( Semicolon ) | ( ( rule__AcmeComponentTypeDeclaration__Alternatives_5_1 ) ) );
    public final void rule__AcmeComponentTypeDeclaration__Alternatives_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3084:1: ( ( Semicolon ) | ( ( rule__AcmeComponentTypeDeclaration__Alternatives_5_1 ) ) )
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==Semicolon) ) {
                alt37=1;
            }
            else if ( (LA37_0==Extends||LA37_0==EqualsSign) ) {
                alt37=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }
            switch (alt37) {
                case 1 :
                    // InternalAcmeParser.g:3085:2: ( Semicolon )
                    {
                    // InternalAcmeParser.g:3085:2: ( Semicolon )
                    // InternalAcmeParser.g:3086:3: Semicolon
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeComponentTypeDeclarationAccess().getSemicolonKeyword_5_0()); 
                    }
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeComponentTypeDeclarationAccess().getSemicolonKeyword_5_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3091:2: ( ( rule__AcmeComponentTypeDeclaration__Alternatives_5_1 ) )
                    {
                    // InternalAcmeParser.g:3091:2: ( ( rule__AcmeComponentTypeDeclaration__Alternatives_5_1 ) )
                    // InternalAcmeParser.g:3092:3: ( rule__AcmeComponentTypeDeclaration__Alternatives_5_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeComponentTypeDeclarationAccess().getAlternatives_5_1()); 
                    }
                    // InternalAcmeParser.g:3093:3: ( rule__AcmeComponentTypeDeclaration__Alternatives_5_1 )
                    // InternalAcmeParser.g:3093:4: rule__AcmeComponentTypeDeclaration__Alternatives_5_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeComponentTypeDeclaration__Alternatives_5_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeComponentTypeDeclarationAccess().getAlternatives_5_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Alternatives_5"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Alternatives_5_1"
    // InternalAcmeParser.g:3101:1: rule__AcmeComponentTypeDeclaration__Alternatives_5_1 : ( ( ( rule__AcmeComponentTypeDeclaration__Group_5_1_0__0 ) ) | ( ( rule__AcmeComponentTypeDeclaration__Group_5_1_1__0 ) ) );
    public final void rule__AcmeComponentTypeDeclaration__Alternatives_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3105:1: ( ( ( rule__AcmeComponentTypeDeclaration__Group_5_1_0__0 ) ) | ( ( rule__AcmeComponentTypeDeclaration__Group_5_1_1__0 ) ) )
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==EqualsSign) ) {
                alt38=1;
            }
            else if ( (LA38_0==Extends) ) {
                alt38=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;
            }
            switch (alt38) {
                case 1 :
                    // InternalAcmeParser.g:3106:2: ( ( rule__AcmeComponentTypeDeclaration__Group_5_1_0__0 ) )
                    {
                    // InternalAcmeParser.g:3106:2: ( ( rule__AcmeComponentTypeDeclaration__Group_5_1_0__0 ) )
                    // InternalAcmeParser.g:3107:3: ( rule__AcmeComponentTypeDeclaration__Group_5_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeComponentTypeDeclarationAccess().getGroup_5_1_0()); 
                    }
                    // InternalAcmeParser.g:3108:3: ( rule__AcmeComponentTypeDeclaration__Group_5_1_0__0 )
                    // InternalAcmeParser.g:3108:4: rule__AcmeComponentTypeDeclaration__Group_5_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeComponentTypeDeclaration__Group_5_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeComponentTypeDeclarationAccess().getGroup_5_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3112:2: ( ( rule__AcmeComponentTypeDeclaration__Group_5_1_1__0 ) )
                    {
                    // InternalAcmeParser.g:3112:2: ( ( rule__AcmeComponentTypeDeclaration__Group_5_1_1__0 ) )
                    // InternalAcmeParser.g:3113:3: ( rule__AcmeComponentTypeDeclaration__Group_5_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeComponentTypeDeclarationAccess().getGroup_5_1_1()); 
                    }
                    // InternalAcmeParser.g:3114:3: ( rule__AcmeComponentTypeDeclaration__Group_5_1_1__0 )
                    // InternalAcmeParser.g:3114:4: rule__AcmeComponentTypeDeclaration__Group_5_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeComponentTypeDeclaration__Group_5_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeComponentTypeDeclarationAccess().getGroup_5_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Alternatives_5_1"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Alternatives_5_1_1_3"
    // InternalAcmeParser.g:3122:1: rule__AcmeComponentTypeDeclaration__Alternatives_5_1_1_3 : ( ( Semicolon ) | ( ( rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__0 ) ) );
    public final void rule__AcmeComponentTypeDeclaration__Alternatives_5_1_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3126:1: ( ( Semicolon ) | ( ( rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__0 ) ) )
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==Semicolon) ) {
                alt39=1;
            }
            else if ( (LA39_0==With) ) {
                alt39=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;
            }
            switch (alt39) {
                case 1 :
                    // InternalAcmeParser.g:3127:2: ( Semicolon )
                    {
                    // InternalAcmeParser.g:3127:2: ( Semicolon )
                    // InternalAcmeParser.g:3128:3: Semicolon
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeComponentTypeDeclarationAccess().getSemicolonKeyword_5_1_1_3_0()); 
                    }
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeComponentTypeDeclarationAccess().getSemicolonKeyword_5_1_1_3_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3133:2: ( ( rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__0 ) )
                    {
                    // InternalAcmeParser.g:3133:2: ( ( rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__0 ) )
                    // InternalAcmeParser.g:3134:3: ( rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeComponentTypeDeclarationAccess().getGroup_5_1_1_3_1()); 
                    }
                    // InternalAcmeParser.g:3135:3: ( rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__0 )
                    // InternalAcmeParser.g:3135:4: rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeComponentTypeDeclarationAccess().getGroup_5_1_1_3_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Alternatives_5_1_1_3"


    // $ANTLR start "rule__AcmeComponentDeclaration__Alternatives_3"
    // InternalAcmeParser.g:3143:1: rule__AcmeComponentDeclaration__Alternatives_3 : ( ( Semicolon ) | ( ( rule__AcmeComponentDeclaration__Group_3_1__0 ) ) );
    public final void rule__AcmeComponentDeclaration__Alternatives_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3147:1: ( ( Semicolon ) | ( ( rule__AcmeComponentDeclaration__Group_3_1__0 ) ) )
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==Semicolon) ) {
                alt40=1;
            }
            else if ( (LA40_0==EqualsSign) ) {
                alt40=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;
            }
            switch (alt40) {
                case 1 :
                    // InternalAcmeParser.g:3148:2: ( Semicolon )
                    {
                    // InternalAcmeParser.g:3148:2: ( Semicolon )
                    // InternalAcmeParser.g:3149:3: Semicolon
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeComponentDeclarationAccess().getSemicolonKeyword_3_0()); 
                    }
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeComponentDeclarationAccess().getSemicolonKeyword_3_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3154:2: ( ( rule__AcmeComponentDeclaration__Group_3_1__0 ) )
                    {
                    // InternalAcmeParser.g:3154:2: ( ( rule__AcmeComponentDeclaration__Group_3_1__0 ) )
                    // InternalAcmeParser.g:3155:3: ( rule__AcmeComponentDeclaration__Group_3_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeComponentDeclarationAccess().getGroup_3_1()); 
                    }
                    // InternalAcmeParser.g:3156:3: ( rule__AcmeComponentDeclaration__Group_3_1__0 )
                    // InternalAcmeParser.g:3156:4: rule__AcmeComponentDeclaration__Group_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeComponentDeclaration__Group_3_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeComponentDeclarationAccess().getGroup_3_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Alternatives_3"


    // $ANTLR start "rule__AcmeComponentDeclaration__Alternatives_3_1_1"
    // InternalAcmeParser.g:3164:1: rule__AcmeComponentDeclaration__Alternatives_3_1_1 : ( ( ( rule__AcmeComponentDeclaration__Group_3_1_1_0__0 ) ) | ( ( rule__AcmeComponentDeclaration__Group_3_1_1_1__0 ) ) );
    public final void rule__AcmeComponentDeclaration__Alternatives_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3168:1: ( ( ( rule__AcmeComponentDeclaration__Group_3_1_1_0__0 ) ) | ( ( rule__AcmeComponentDeclaration__Group_3_1_1_1__0 ) ) )
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==LeftCurlyBracket) ) {
                alt41=1;
            }
            else if ( (LA41_0==New) ) {
                alt41=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;
            }
            switch (alt41) {
                case 1 :
                    // InternalAcmeParser.g:3169:2: ( ( rule__AcmeComponentDeclaration__Group_3_1_1_0__0 ) )
                    {
                    // InternalAcmeParser.g:3169:2: ( ( rule__AcmeComponentDeclaration__Group_3_1_1_0__0 ) )
                    // InternalAcmeParser.g:3170:3: ( rule__AcmeComponentDeclaration__Group_3_1_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeComponentDeclarationAccess().getGroup_3_1_1_0()); 
                    }
                    // InternalAcmeParser.g:3171:3: ( rule__AcmeComponentDeclaration__Group_3_1_1_0__0 )
                    // InternalAcmeParser.g:3171:4: rule__AcmeComponentDeclaration__Group_3_1_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeComponentDeclaration__Group_3_1_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeComponentDeclarationAccess().getGroup_3_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3175:2: ( ( rule__AcmeComponentDeclaration__Group_3_1_1_1__0 ) )
                    {
                    // InternalAcmeParser.g:3175:2: ( ( rule__AcmeComponentDeclaration__Group_3_1_1_1__0 ) )
                    // InternalAcmeParser.g:3176:3: ( rule__AcmeComponentDeclaration__Group_3_1_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeComponentDeclarationAccess().getGroup_3_1_1_1()); 
                    }
                    // InternalAcmeParser.g:3177:3: ( rule__AcmeComponentDeclaration__Group_3_1_1_1__0 )
                    // InternalAcmeParser.g:3177:4: rule__AcmeComponentDeclaration__Group_3_1_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeComponentDeclaration__Group_3_1_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeComponentDeclarationAccess().getGroup_3_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Alternatives_3_1_1"


    // $ANTLR start "rule__AcmeComponentDeclaration__Alternatives_3_1_1_1_3"
    // InternalAcmeParser.g:3185:1: rule__AcmeComponentDeclaration__Alternatives_3_1_1_1_3 : ( ( Semicolon ) | ( ( rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__0 ) ) );
    public final void rule__AcmeComponentDeclaration__Alternatives_3_1_1_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3189:1: ( ( Semicolon ) | ( ( rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__0 ) ) )
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==Semicolon) ) {
                alt42=1;
            }
            else if ( (LA42_0==Extended) ) {
                alt42=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 42, 0, input);

                throw nvae;
            }
            switch (alt42) {
                case 1 :
                    // InternalAcmeParser.g:3190:2: ( Semicolon )
                    {
                    // InternalAcmeParser.g:3190:2: ( Semicolon )
                    // InternalAcmeParser.g:3191:3: Semicolon
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeComponentDeclarationAccess().getSemicolonKeyword_3_1_1_1_3_0()); 
                    }
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeComponentDeclarationAccess().getSemicolonKeyword_3_1_1_1_3_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3196:2: ( ( rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__0 ) )
                    {
                    // InternalAcmeParser.g:3196:2: ( ( rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__0 ) )
                    // InternalAcmeParser.g:3197:3: ( rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeComponentDeclarationAccess().getGroup_3_1_1_1_3_1()); 
                    }
                    // InternalAcmeParser.g:3198:3: ( rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__0 )
                    // InternalAcmeParser.g:3198:4: rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeComponentDeclarationAccess().getGroup_3_1_1_1_3_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Alternatives_3_1_1_1_3"


    // $ANTLR start "rule__AcmeComponentBody__Alternatives_2"
    // InternalAcmeParser.g:3206:1: rule__AcmeComponentBody__Alternatives_2 : ( ( ( rule__AcmeComponentBody__PortsAssignment_2_0 ) ) | ( ( rule__AcmeComponentBody__PropertiesAssignment_2_1 ) ) | ( ( rule__AcmeComponentBody__RulesAssignment_2_2 ) ) | ( ( rule__AcmeComponentBody__RepresentationsAssignment_2_3 ) ) );
    public final void rule__AcmeComponentBody__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3210:1: ( ( ( rule__AcmeComponentBody__PortsAssignment_2_0 ) ) | ( ( rule__AcmeComponentBody__PropertiesAssignment_2_1 ) ) | ( ( rule__AcmeComponentBody__RulesAssignment_2_2 ) ) | ( ( rule__AcmeComponentBody__RepresentationsAssignment_2_3 ) ) )
            int alt43=4;
            switch ( input.LA(1) ) {
            case Port:
                {
                alt43=1;
                }
                break;
            case Property:
                {
                alt43=2;
                }
                break;
            case Hueristic:
            case Invariant:
            case Rule:
                {
                alt43=3;
                }
                break;
            case Representation:
                {
                alt43=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;
            }

            switch (alt43) {
                case 1 :
                    // InternalAcmeParser.g:3211:2: ( ( rule__AcmeComponentBody__PortsAssignment_2_0 ) )
                    {
                    // InternalAcmeParser.g:3211:2: ( ( rule__AcmeComponentBody__PortsAssignment_2_0 ) )
                    // InternalAcmeParser.g:3212:3: ( rule__AcmeComponentBody__PortsAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeComponentBodyAccess().getPortsAssignment_2_0()); 
                    }
                    // InternalAcmeParser.g:3213:3: ( rule__AcmeComponentBody__PortsAssignment_2_0 )
                    // InternalAcmeParser.g:3213:4: rule__AcmeComponentBody__PortsAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeComponentBody__PortsAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeComponentBodyAccess().getPortsAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3217:2: ( ( rule__AcmeComponentBody__PropertiesAssignment_2_1 ) )
                    {
                    // InternalAcmeParser.g:3217:2: ( ( rule__AcmeComponentBody__PropertiesAssignment_2_1 ) )
                    // InternalAcmeParser.g:3218:3: ( rule__AcmeComponentBody__PropertiesAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeComponentBodyAccess().getPropertiesAssignment_2_1()); 
                    }
                    // InternalAcmeParser.g:3219:3: ( rule__AcmeComponentBody__PropertiesAssignment_2_1 )
                    // InternalAcmeParser.g:3219:4: rule__AcmeComponentBody__PropertiesAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeComponentBody__PropertiesAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeComponentBodyAccess().getPropertiesAssignment_2_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAcmeParser.g:3223:2: ( ( rule__AcmeComponentBody__RulesAssignment_2_2 ) )
                    {
                    // InternalAcmeParser.g:3223:2: ( ( rule__AcmeComponentBody__RulesAssignment_2_2 ) )
                    // InternalAcmeParser.g:3224:3: ( rule__AcmeComponentBody__RulesAssignment_2_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeComponentBodyAccess().getRulesAssignment_2_2()); 
                    }
                    // InternalAcmeParser.g:3225:3: ( rule__AcmeComponentBody__RulesAssignment_2_2 )
                    // InternalAcmeParser.g:3225:4: rule__AcmeComponentBody__RulesAssignment_2_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeComponentBody__RulesAssignment_2_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeComponentBodyAccess().getRulesAssignment_2_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalAcmeParser.g:3229:2: ( ( rule__AcmeComponentBody__RepresentationsAssignment_2_3 ) )
                    {
                    // InternalAcmeParser.g:3229:2: ( ( rule__AcmeComponentBody__RepresentationsAssignment_2_3 ) )
                    // InternalAcmeParser.g:3230:3: ( rule__AcmeComponentBody__RepresentationsAssignment_2_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeComponentBodyAccess().getRepresentationsAssignment_2_3()); 
                    }
                    // InternalAcmeParser.g:3231:3: ( rule__AcmeComponentBody__RepresentationsAssignment_2_3 )
                    // InternalAcmeParser.g:3231:4: rule__AcmeComponentBody__RepresentationsAssignment_2_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeComponentBody__RepresentationsAssignment_2_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeComponentBodyAccess().getRepresentationsAssignment_2_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentBody__Alternatives_2"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Alternatives_5"
    // InternalAcmeParser.g:3239:1: rule__AcmeConnectorTypeDeclaration__Alternatives_5 : ( ( Semicolon ) | ( ( rule__AcmeConnectorTypeDeclaration__Alternatives_5_1 ) ) );
    public final void rule__AcmeConnectorTypeDeclaration__Alternatives_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3243:1: ( ( Semicolon ) | ( ( rule__AcmeConnectorTypeDeclaration__Alternatives_5_1 ) ) )
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==Semicolon) ) {
                alt44=1;
            }
            else if ( (LA44_0==Extends||LA44_0==EqualsSign) ) {
                alt44=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;
            }
            switch (alt44) {
                case 1 :
                    // InternalAcmeParser.g:3244:2: ( Semicolon )
                    {
                    // InternalAcmeParser.g:3244:2: ( Semicolon )
                    // InternalAcmeParser.g:3245:3: Semicolon
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getSemicolonKeyword_5_0()); 
                    }
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getSemicolonKeyword_5_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3250:2: ( ( rule__AcmeConnectorTypeDeclaration__Alternatives_5_1 ) )
                    {
                    // InternalAcmeParser.g:3250:2: ( ( rule__AcmeConnectorTypeDeclaration__Alternatives_5_1 ) )
                    // InternalAcmeParser.g:3251:3: ( rule__AcmeConnectorTypeDeclaration__Alternatives_5_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getAlternatives_5_1()); 
                    }
                    // InternalAcmeParser.g:3252:3: ( rule__AcmeConnectorTypeDeclaration__Alternatives_5_1 )
                    // InternalAcmeParser.g:3252:4: rule__AcmeConnectorTypeDeclaration__Alternatives_5_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeConnectorTypeDeclaration__Alternatives_5_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getAlternatives_5_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Alternatives_5"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Alternatives_5_1"
    // InternalAcmeParser.g:3260:1: rule__AcmeConnectorTypeDeclaration__Alternatives_5_1 : ( ( ( rule__AcmeConnectorTypeDeclaration__Group_5_1_0__0 ) ) | ( ( rule__AcmeConnectorTypeDeclaration__Group_5_1_1__0 ) ) );
    public final void rule__AcmeConnectorTypeDeclaration__Alternatives_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3264:1: ( ( ( rule__AcmeConnectorTypeDeclaration__Group_5_1_0__0 ) ) | ( ( rule__AcmeConnectorTypeDeclaration__Group_5_1_1__0 ) ) )
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==EqualsSign) ) {
                alt45=1;
            }
            else if ( (LA45_0==Extends) ) {
                alt45=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 45, 0, input);

                throw nvae;
            }
            switch (alt45) {
                case 1 :
                    // InternalAcmeParser.g:3265:2: ( ( rule__AcmeConnectorTypeDeclaration__Group_5_1_0__0 ) )
                    {
                    // InternalAcmeParser.g:3265:2: ( ( rule__AcmeConnectorTypeDeclaration__Group_5_1_0__0 ) )
                    // InternalAcmeParser.g:3266:3: ( rule__AcmeConnectorTypeDeclaration__Group_5_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getGroup_5_1_0()); 
                    }
                    // InternalAcmeParser.g:3267:3: ( rule__AcmeConnectorTypeDeclaration__Group_5_1_0__0 )
                    // InternalAcmeParser.g:3267:4: rule__AcmeConnectorTypeDeclaration__Group_5_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeConnectorTypeDeclaration__Group_5_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getGroup_5_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3271:2: ( ( rule__AcmeConnectorTypeDeclaration__Group_5_1_1__0 ) )
                    {
                    // InternalAcmeParser.g:3271:2: ( ( rule__AcmeConnectorTypeDeclaration__Group_5_1_1__0 ) )
                    // InternalAcmeParser.g:3272:3: ( rule__AcmeConnectorTypeDeclaration__Group_5_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getGroup_5_1_1()); 
                    }
                    // InternalAcmeParser.g:3273:3: ( rule__AcmeConnectorTypeDeclaration__Group_5_1_1__0 )
                    // InternalAcmeParser.g:3273:4: rule__AcmeConnectorTypeDeclaration__Group_5_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeConnectorTypeDeclaration__Group_5_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getGroup_5_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Alternatives_5_1"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Alternatives_5_1_1_3"
    // InternalAcmeParser.g:3281:1: rule__AcmeConnectorTypeDeclaration__Alternatives_5_1_1_3 : ( ( Semicolon ) | ( ( rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__0 ) ) );
    public final void rule__AcmeConnectorTypeDeclaration__Alternatives_5_1_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3285:1: ( ( Semicolon ) | ( ( rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__0 ) ) )
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==Semicolon) ) {
                alt46=1;
            }
            else if ( (LA46_0==With) ) {
                alt46=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 46, 0, input);

                throw nvae;
            }
            switch (alt46) {
                case 1 :
                    // InternalAcmeParser.g:3286:2: ( Semicolon )
                    {
                    // InternalAcmeParser.g:3286:2: ( Semicolon )
                    // InternalAcmeParser.g:3287:3: Semicolon
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getSemicolonKeyword_5_1_1_3_0()); 
                    }
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getSemicolonKeyword_5_1_1_3_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3292:2: ( ( rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__0 ) )
                    {
                    // InternalAcmeParser.g:3292:2: ( ( rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__0 ) )
                    // InternalAcmeParser.g:3293:3: ( rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getGroup_5_1_1_3_1()); 
                    }
                    // InternalAcmeParser.g:3294:3: ( rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__0 )
                    // InternalAcmeParser.g:3294:4: rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getGroup_5_1_1_3_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Alternatives_5_1_1_3"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Alternatives_3"
    // InternalAcmeParser.g:3302:1: rule__AcmeConnectorDeclaration__Alternatives_3 : ( ( Semicolon ) | ( ( rule__AcmeConnectorDeclaration__Group_3_1__0 ) ) );
    public final void rule__AcmeConnectorDeclaration__Alternatives_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3306:1: ( ( Semicolon ) | ( ( rule__AcmeConnectorDeclaration__Group_3_1__0 ) ) )
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==Semicolon) ) {
                alt47=1;
            }
            else if ( (LA47_0==EqualsSign) ) {
                alt47=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 47, 0, input);

                throw nvae;
            }
            switch (alt47) {
                case 1 :
                    // InternalAcmeParser.g:3307:2: ( Semicolon )
                    {
                    // InternalAcmeParser.g:3307:2: ( Semicolon )
                    // InternalAcmeParser.g:3308:3: Semicolon
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeConnectorDeclarationAccess().getSemicolonKeyword_3_0()); 
                    }
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeConnectorDeclarationAccess().getSemicolonKeyword_3_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3313:2: ( ( rule__AcmeConnectorDeclaration__Group_3_1__0 ) )
                    {
                    // InternalAcmeParser.g:3313:2: ( ( rule__AcmeConnectorDeclaration__Group_3_1__0 ) )
                    // InternalAcmeParser.g:3314:3: ( rule__AcmeConnectorDeclaration__Group_3_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeConnectorDeclarationAccess().getGroup_3_1()); 
                    }
                    // InternalAcmeParser.g:3315:3: ( rule__AcmeConnectorDeclaration__Group_3_1__0 )
                    // InternalAcmeParser.g:3315:4: rule__AcmeConnectorDeclaration__Group_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeConnectorDeclaration__Group_3_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeConnectorDeclarationAccess().getGroup_3_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Alternatives_3"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Alternatives_3_1_1"
    // InternalAcmeParser.g:3323:1: rule__AcmeConnectorDeclaration__Alternatives_3_1_1 : ( ( ( rule__AcmeConnectorDeclaration__Group_3_1_1_0__0 ) ) | ( ( rule__AcmeConnectorDeclaration__Group_3_1_1_1__0 ) ) );
    public final void rule__AcmeConnectorDeclaration__Alternatives_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3327:1: ( ( ( rule__AcmeConnectorDeclaration__Group_3_1_1_0__0 ) ) | ( ( rule__AcmeConnectorDeclaration__Group_3_1_1_1__0 ) ) )
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==LeftCurlyBracket) ) {
                alt48=1;
            }
            else if ( (LA48_0==New) ) {
                alt48=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 48, 0, input);

                throw nvae;
            }
            switch (alt48) {
                case 1 :
                    // InternalAcmeParser.g:3328:2: ( ( rule__AcmeConnectorDeclaration__Group_3_1_1_0__0 ) )
                    {
                    // InternalAcmeParser.g:3328:2: ( ( rule__AcmeConnectorDeclaration__Group_3_1_1_0__0 ) )
                    // InternalAcmeParser.g:3329:3: ( rule__AcmeConnectorDeclaration__Group_3_1_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeConnectorDeclarationAccess().getGroup_3_1_1_0()); 
                    }
                    // InternalAcmeParser.g:3330:3: ( rule__AcmeConnectorDeclaration__Group_3_1_1_0__0 )
                    // InternalAcmeParser.g:3330:4: rule__AcmeConnectorDeclaration__Group_3_1_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeConnectorDeclaration__Group_3_1_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeConnectorDeclarationAccess().getGroup_3_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3334:2: ( ( rule__AcmeConnectorDeclaration__Group_3_1_1_1__0 ) )
                    {
                    // InternalAcmeParser.g:3334:2: ( ( rule__AcmeConnectorDeclaration__Group_3_1_1_1__0 ) )
                    // InternalAcmeParser.g:3335:3: ( rule__AcmeConnectorDeclaration__Group_3_1_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeConnectorDeclarationAccess().getGroup_3_1_1_1()); 
                    }
                    // InternalAcmeParser.g:3336:3: ( rule__AcmeConnectorDeclaration__Group_3_1_1_1__0 )
                    // InternalAcmeParser.g:3336:4: rule__AcmeConnectorDeclaration__Group_3_1_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeConnectorDeclaration__Group_3_1_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeConnectorDeclarationAccess().getGroup_3_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Alternatives_3_1_1"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Alternatives_3_1_1_1_3"
    // InternalAcmeParser.g:3344:1: rule__AcmeConnectorDeclaration__Alternatives_3_1_1_1_3 : ( ( Semicolon ) | ( ( rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__0 ) ) );
    public final void rule__AcmeConnectorDeclaration__Alternatives_3_1_1_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3348:1: ( ( Semicolon ) | ( ( rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__0 ) ) )
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==Semicolon) ) {
                alt49=1;
            }
            else if ( (LA49_0==Extended) ) {
                alt49=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 49, 0, input);

                throw nvae;
            }
            switch (alt49) {
                case 1 :
                    // InternalAcmeParser.g:3349:2: ( Semicolon )
                    {
                    // InternalAcmeParser.g:3349:2: ( Semicolon )
                    // InternalAcmeParser.g:3350:3: Semicolon
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeConnectorDeclarationAccess().getSemicolonKeyword_3_1_1_1_3_0()); 
                    }
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeConnectorDeclarationAccess().getSemicolonKeyword_3_1_1_1_3_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3355:2: ( ( rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__0 ) )
                    {
                    // InternalAcmeParser.g:3355:2: ( ( rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__0 ) )
                    // InternalAcmeParser.g:3356:3: ( rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeConnectorDeclarationAccess().getGroup_3_1_1_1_3_1()); 
                    }
                    // InternalAcmeParser.g:3357:3: ( rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__0 )
                    // InternalAcmeParser.g:3357:4: rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeConnectorDeclarationAccess().getGroup_3_1_1_1_3_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Alternatives_3_1_1_1_3"


    // $ANTLR start "rule__AcmeConnectorBody__Alternatives_2"
    // InternalAcmeParser.g:3365:1: rule__AcmeConnectorBody__Alternatives_2 : ( ( ( rule__AcmeConnectorBody__RolesAssignment_2_0 ) ) | ( ( rule__AcmeConnectorBody__PropertiesAssignment_2_1 ) ) | ( ( rule__AcmeConnectorBody__RulesAssignment_2_2 ) ) | ( ( rule__AcmeConnectorBody__RepresentationsAssignment_2_3 ) ) );
    public final void rule__AcmeConnectorBody__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3369:1: ( ( ( rule__AcmeConnectorBody__RolesAssignment_2_0 ) ) | ( ( rule__AcmeConnectorBody__PropertiesAssignment_2_1 ) ) | ( ( rule__AcmeConnectorBody__RulesAssignment_2_2 ) ) | ( ( rule__AcmeConnectorBody__RepresentationsAssignment_2_3 ) ) )
            int alt50=4;
            switch ( input.LA(1) ) {
            case Role:
                {
                alt50=1;
                }
                break;
            case Property:
                {
                alt50=2;
                }
                break;
            case Hueristic:
            case Invariant:
            case Rule:
                {
                alt50=3;
                }
                break;
            case Representation:
                {
                alt50=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;
            }

            switch (alt50) {
                case 1 :
                    // InternalAcmeParser.g:3370:2: ( ( rule__AcmeConnectorBody__RolesAssignment_2_0 ) )
                    {
                    // InternalAcmeParser.g:3370:2: ( ( rule__AcmeConnectorBody__RolesAssignment_2_0 ) )
                    // InternalAcmeParser.g:3371:3: ( rule__AcmeConnectorBody__RolesAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeConnectorBodyAccess().getRolesAssignment_2_0()); 
                    }
                    // InternalAcmeParser.g:3372:3: ( rule__AcmeConnectorBody__RolesAssignment_2_0 )
                    // InternalAcmeParser.g:3372:4: rule__AcmeConnectorBody__RolesAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeConnectorBody__RolesAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeConnectorBodyAccess().getRolesAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3376:2: ( ( rule__AcmeConnectorBody__PropertiesAssignment_2_1 ) )
                    {
                    // InternalAcmeParser.g:3376:2: ( ( rule__AcmeConnectorBody__PropertiesAssignment_2_1 ) )
                    // InternalAcmeParser.g:3377:3: ( rule__AcmeConnectorBody__PropertiesAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeConnectorBodyAccess().getPropertiesAssignment_2_1()); 
                    }
                    // InternalAcmeParser.g:3378:3: ( rule__AcmeConnectorBody__PropertiesAssignment_2_1 )
                    // InternalAcmeParser.g:3378:4: rule__AcmeConnectorBody__PropertiesAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeConnectorBody__PropertiesAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeConnectorBodyAccess().getPropertiesAssignment_2_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAcmeParser.g:3382:2: ( ( rule__AcmeConnectorBody__RulesAssignment_2_2 ) )
                    {
                    // InternalAcmeParser.g:3382:2: ( ( rule__AcmeConnectorBody__RulesAssignment_2_2 ) )
                    // InternalAcmeParser.g:3383:3: ( rule__AcmeConnectorBody__RulesAssignment_2_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeConnectorBodyAccess().getRulesAssignment_2_2()); 
                    }
                    // InternalAcmeParser.g:3384:3: ( rule__AcmeConnectorBody__RulesAssignment_2_2 )
                    // InternalAcmeParser.g:3384:4: rule__AcmeConnectorBody__RulesAssignment_2_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeConnectorBody__RulesAssignment_2_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeConnectorBodyAccess().getRulesAssignment_2_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalAcmeParser.g:3388:2: ( ( rule__AcmeConnectorBody__RepresentationsAssignment_2_3 ) )
                    {
                    // InternalAcmeParser.g:3388:2: ( ( rule__AcmeConnectorBody__RepresentationsAssignment_2_3 ) )
                    // InternalAcmeParser.g:3389:3: ( rule__AcmeConnectorBody__RepresentationsAssignment_2_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeConnectorBodyAccess().getRepresentationsAssignment_2_3()); 
                    }
                    // InternalAcmeParser.g:3390:3: ( rule__AcmeConnectorBody__RepresentationsAssignment_2_3 )
                    // InternalAcmeParser.g:3390:4: rule__AcmeConnectorBody__RepresentationsAssignment_2_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeConnectorBody__RepresentationsAssignment_2_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeConnectorBodyAccess().getRepresentationsAssignment_2_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorBody__Alternatives_2"


    // $ANTLR start "rule__AcmePropertyDeclaration__Alternatives_3"
    // InternalAcmeParser.g:3398:1: rule__AcmePropertyDeclaration__Alternatives_3 : ( ( ( rule__AcmePropertyDeclaration__Group_3_0__0 ) ) | ( ( rule__AcmePropertyDeclaration__Group_3_1__0 ) ) );
    public final void rule__AcmePropertyDeclaration__Alternatives_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3402:1: ( ( ( rule__AcmePropertyDeclaration__Group_3_0__0 ) ) | ( ( rule__AcmePropertyDeclaration__Group_3_1__0 ) ) )
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==EqualsSign) ) {
                alt51=1;
            }
            else if ( (LA51_0==U) ) {
                alt51=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 51, 0, input);

                throw nvae;
            }
            switch (alt51) {
                case 1 :
                    // InternalAcmeParser.g:3403:2: ( ( rule__AcmePropertyDeclaration__Group_3_0__0 ) )
                    {
                    // InternalAcmeParser.g:3403:2: ( ( rule__AcmePropertyDeclaration__Group_3_0__0 ) )
                    // InternalAcmeParser.g:3404:3: ( rule__AcmePropertyDeclaration__Group_3_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePropertyDeclarationAccess().getGroup_3_0()); 
                    }
                    // InternalAcmeParser.g:3405:3: ( rule__AcmePropertyDeclaration__Group_3_0__0 )
                    // InternalAcmeParser.g:3405:4: rule__AcmePropertyDeclaration__Group_3_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePropertyDeclaration__Group_3_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePropertyDeclarationAccess().getGroup_3_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3409:2: ( ( rule__AcmePropertyDeclaration__Group_3_1__0 ) )
                    {
                    // InternalAcmeParser.g:3409:2: ( ( rule__AcmePropertyDeclaration__Group_3_1__0 ) )
                    // InternalAcmeParser.g:3410:3: ( rule__AcmePropertyDeclaration__Group_3_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePropertyDeclarationAccess().getGroup_3_1()); 
                    }
                    // InternalAcmeParser.g:3411:3: ( rule__AcmePropertyDeclaration__Group_3_1__0 )
                    // InternalAcmeParser.g:3411:4: rule__AcmePropertyDeclaration__Group_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePropertyDeclaration__Group_3_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePropertyDeclarationAccess().getGroup_3_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyDeclaration__Alternatives_3"


    // $ANTLR start "rule__AcmePropertyValueDeclaration__Alternatives"
    // InternalAcmeParser.g:3419:1: rule__AcmePropertyValueDeclaration__Alternatives : ( ( ( rule__AcmePropertyValueDeclaration__ValueAssignment_0 ) ) | ( ( rule__AcmePropertyValueDeclaration__ValueAssignment_1 ) ) | ( ( rule__AcmePropertyValueDeclaration__ValueAssignment_2 ) ) | ( ( rule__AcmePropertyValueDeclaration__ValueAssignment_3 ) ) | ( ( rule__AcmePropertyValueDeclaration__ValueAssignment_4 ) ) | ( ( rule__AcmePropertyValueDeclaration__ValueAssignment_5 ) ) | ( ( rule__AcmePropertyValueDeclaration__ValueAssignment_6 ) ) | ( ( rule__AcmePropertyValueDeclaration__ValueAssignment_7 ) ) );
    public final void rule__AcmePropertyValueDeclaration__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3423:1: ( ( ( rule__AcmePropertyValueDeclaration__ValueAssignment_0 ) ) | ( ( rule__AcmePropertyValueDeclaration__ValueAssignment_1 ) ) | ( ( rule__AcmePropertyValueDeclaration__ValueAssignment_2 ) ) | ( ( rule__AcmePropertyValueDeclaration__ValueAssignment_3 ) ) | ( ( rule__AcmePropertyValueDeclaration__ValueAssignment_4 ) ) | ( ( rule__AcmePropertyValueDeclaration__ValueAssignment_5 ) ) | ( ( rule__AcmePropertyValueDeclaration__ValueAssignment_6 ) ) | ( ( rule__AcmePropertyValueDeclaration__ValueAssignment_7 ) ) )
            int alt52=8;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt52=1;
                }
                break;
            case RULE_FLOAT:
                {
                alt52=2;
                }
                break;
            case RULE_STRING:
                {
                alt52=3;
                }
                break;
            case False:
            case True:
                {
                alt52=4;
                }
                break;
            case LeftCurlyBracket:
                {
                alt52=5;
                }
                break;
            case LeftSquareBracket:
                {
                alt52=6;
                }
                break;
            case LessThanSign:
                {
                alt52=7;
                }
                break;
            case RULE_ID:
                {
                alt52=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;
            }

            switch (alt52) {
                case 1 :
                    // InternalAcmeParser.g:3424:2: ( ( rule__AcmePropertyValueDeclaration__ValueAssignment_0 ) )
                    {
                    // InternalAcmeParser.g:3424:2: ( ( rule__AcmePropertyValueDeclaration__ValueAssignment_0 ) )
                    // InternalAcmeParser.g:3425:3: ( rule__AcmePropertyValueDeclaration__ValueAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePropertyValueDeclarationAccess().getValueAssignment_0()); 
                    }
                    // InternalAcmeParser.g:3426:3: ( rule__AcmePropertyValueDeclaration__ValueAssignment_0 )
                    // InternalAcmeParser.g:3426:4: rule__AcmePropertyValueDeclaration__ValueAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePropertyValueDeclaration__ValueAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePropertyValueDeclarationAccess().getValueAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3430:2: ( ( rule__AcmePropertyValueDeclaration__ValueAssignment_1 ) )
                    {
                    // InternalAcmeParser.g:3430:2: ( ( rule__AcmePropertyValueDeclaration__ValueAssignment_1 ) )
                    // InternalAcmeParser.g:3431:3: ( rule__AcmePropertyValueDeclaration__ValueAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePropertyValueDeclarationAccess().getValueAssignment_1()); 
                    }
                    // InternalAcmeParser.g:3432:3: ( rule__AcmePropertyValueDeclaration__ValueAssignment_1 )
                    // InternalAcmeParser.g:3432:4: rule__AcmePropertyValueDeclaration__ValueAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePropertyValueDeclaration__ValueAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePropertyValueDeclarationAccess().getValueAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAcmeParser.g:3436:2: ( ( rule__AcmePropertyValueDeclaration__ValueAssignment_2 ) )
                    {
                    // InternalAcmeParser.g:3436:2: ( ( rule__AcmePropertyValueDeclaration__ValueAssignment_2 ) )
                    // InternalAcmeParser.g:3437:3: ( rule__AcmePropertyValueDeclaration__ValueAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePropertyValueDeclarationAccess().getValueAssignment_2()); 
                    }
                    // InternalAcmeParser.g:3438:3: ( rule__AcmePropertyValueDeclaration__ValueAssignment_2 )
                    // InternalAcmeParser.g:3438:4: rule__AcmePropertyValueDeclaration__ValueAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePropertyValueDeclaration__ValueAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePropertyValueDeclarationAccess().getValueAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalAcmeParser.g:3442:2: ( ( rule__AcmePropertyValueDeclaration__ValueAssignment_3 ) )
                    {
                    // InternalAcmeParser.g:3442:2: ( ( rule__AcmePropertyValueDeclaration__ValueAssignment_3 ) )
                    // InternalAcmeParser.g:3443:3: ( rule__AcmePropertyValueDeclaration__ValueAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePropertyValueDeclarationAccess().getValueAssignment_3()); 
                    }
                    // InternalAcmeParser.g:3444:3: ( rule__AcmePropertyValueDeclaration__ValueAssignment_3 )
                    // InternalAcmeParser.g:3444:4: rule__AcmePropertyValueDeclaration__ValueAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePropertyValueDeclaration__ValueAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePropertyValueDeclarationAccess().getValueAssignment_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalAcmeParser.g:3448:2: ( ( rule__AcmePropertyValueDeclaration__ValueAssignment_4 ) )
                    {
                    // InternalAcmeParser.g:3448:2: ( ( rule__AcmePropertyValueDeclaration__ValueAssignment_4 ) )
                    // InternalAcmeParser.g:3449:3: ( rule__AcmePropertyValueDeclaration__ValueAssignment_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePropertyValueDeclarationAccess().getValueAssignment_4()); 
                    }
                    // InternalAcmeParser.g:3450:3: ( rule__AcmePropertyValueDeclaration__ValueAssignment_4 )
                    // InternalAcmeParser.g:3450:4: rule__AcmePropertyValueDeclaration__ValueAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePropertyValueDeclaration__ValueAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePropertyValueDeclarationAccess().getValueAssignment_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalAcmeParser.g:3454:2: ( ( rule__AcmePropertyValueDeclaration__ValueAssignment_5 ) )
                    {
                    // InternalAcmeParser.g:3454:2: ( ( rule__AcmePropertyValueDeclaration__ValueAssignment_5 ) )
                    // InternalAcmeParser.g:3455:3: ( rule__AcmePropertyValueDeclaration__ValueAssignment_5 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePropertyValueDeclarationAccess().getValueAssignment_5()); 
                    }
                    // InternalAcmeParser.g:3456:3: ( rule__AcmePropertyValueDeclaration__ValueAssignment_5 )
                    // InternalAcmeParser.g:3456:4: rule__AcmePropertyValueDeclaration__ValueAssignment_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePropertyValueDeclaration__ValueAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePropertyValueDeclarationAccess().getValueAssignment_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalAcmeParser.g:3460:2: ( ( rule__AcmePropertyValueDeclaration__ValueAssignment_6 ) )
                    {
                    // InternalAcmeParser.g:3460:2: ( ( rule__AcmePropertyValueDeclaration__ValueAssignment_6 ) )
                    // InternalAcmeParser.g:3461:3: ( rule__AcmePropertyValueDeclaration__ValueAssignment_6 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePropertyValueDeclarationAccess().getValueAssignment_6()); 
                    }
                    // InternalAcmeParser.g:3462:3: ( rule__AcmePropertyValueDeclaration__ValueAssignment_6 )
                    // InternalAcmeParser.g:3462:4: rule__AcmePropertyValueDeclaration__ValueAssignment_6
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePropertyValueDeclaration__ValueAssignment_6();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePropertyValueDeclarationAccess().getValueAssignment_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalAcmeParser.g:3466:2: ( ( rule__AcmePropertyValueDeclaration__ValueAssignment_7 ) )
                    {
                    // InternalAcmeParser.g:3466:2: ( ( rule__AcmePropertyValueDeclaration__ValueAssignment_7 ) )
                    // InternalAcmeParser.g:3467:3: ( rule__AcmePropertyValueDeclaration__ValueAssignment_7 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePropertyValueDeclarationAccess().getValueAssignment_7()); 
                    }
                    // InternalAcmeParser.g:3468:3: ( rule__AcmePropertyValueDeclaration__ValueAssignment_7 )
                    // InternalAcmeParser.g:3468:4: rule__AcmePropertyValueDeclaration__ValueAssignment_7
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePropertyValueDeclaration__ValueAssignment_7();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePropertyValueDeclarationAccess().getValueAssignment_7()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyValueDeclaration__Alternatives"


    // $ANTLR start "rule__BooleanLiteral__Alternatives"
    // InternalAcmeParser.g:3476:1: rule__BooleanLiteral__Alternatives : ( ( ( rule__BooleanLiteral__IsTrueAssignment_0 ) ) | ( ( rule__BooleanLiteral__Group_1__0 ) ) );
    public final void rule__BooleanLiteral__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3480:1: ( ( ( rule__BooleanLiteral__IsTrueAssignment_0 ) ) | ( ( rule__BooleanLiteral__Group_1__0 ) ) )
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==True) ) {
                alt53=1;
            }
            else if ( (LA53_0==False) ) {
                alt53=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 53, 0, input);

                throw nvae;
            }
            switch (alt53) {
                case 1 :
                    // InternalAcmeParser.g:3481:2: ( ( rule__BooleanLiteral__IsTrueAssignment_0 ) )
                    {
                    // InternalAcmeParser.g:3481:2: ( ( rule__BooleanLiteral__IsTrueAssignment_0 ) )
                    // InternalAcmeParser.g:3482:3: ( rule__BooleanLiteral__IsTrueAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBooleanLiteralAccess().getIsTrueAssignment_0()); 
                    }
                    // InternalAcmeParser.g:3483:3: ( rule__BooleanLiteral__IsTrueAssignment_0 )
                    // InternalAcmeParser.g:3483:4: rule__BooleanLiteral__IsTrueAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__BooleanLiteral__IsTrueAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBooleanLiteralAccess().getIsTrueAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3487:2: ( ( rule__BooleanLiteral__Group_1__0 ) )
                    {
                    // InternalAcmeParser.g:3487:2: ( ( rule__BooleanLiteral__Group_1__0 ) )
                    // InternalAcmeParser.g:3488:3: ( rule__BooleanLiteral__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBooleanLiteralAccess().getGroup_1()); 
                    }
                    // InternalAcmeParser.g:3489:3: ( rule__BooleanLiteral__Group_1__0 )
                    // InternalAcmeParser.g:3489:4: rule__BooleanLiteral__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__BooleanLiteral__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBooleanLiteralAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanLiteral__Alternatives"


    // $ANTLR start "rule__AcmePropertyCompoundElement__Alternatives"
    // InternalAcmeParser.g:3497:1: rule__AcmePropertyCompoundElement__Alternatives : ( ( ( rule__AcmePropertyCompoundElement__ValueAssignment_0 ) ) | ( ( rule__AcmePropertyCompoundElement__ValueAssignment_1 ) ) | ( ( rule__AcmePropertyCompoundElement__ValueAssignment_2 ) ) );
    public final void rule__AcmePropertyCompoundElement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3501:1: ( ( ( rule__AcmePropertyCompoundElement__ValueAssignment_0 ) ) | ( ( rule__AcmePropertyCompoundElement__ValueAssignment_1 ) ) | ( ( rule__AcmePropertyCompoundElement__ValueAssignment_2 ) ) )
            int alt54=3;
            switch ( input.LA(1) ) {
            case LeftCurlyBracket:
                {
                alt54=1;
                }
                break;
            case LeftSquareBracket:
                {
                alt54=2;
                }
                break;
            case LessThanSign:
                {
                alt54=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 54, 0, input);

                throw nvae;
            }

            switch (alt54) {
                case 1 :
                    // InternalAcmeParser.g:3502:2: ( ( rule__AcmePropertyCompoundElement__ValueAssignment_0 ) )
                    {
                    // InternalAcmeParser.g:3502:2: ( ( rule__AcmePropertyCompoundElement__ValueAssignment_0 ) )
                    // InternalAcmeParser.g:3503:3: ( rule__AcmePropertyCompoundElement__ValueAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePropertyCompoundElementAccess().getValueAssignment_0()); 
                    }
                    // InternalAcmeParser.g:3504:3: ( rule__AcmePropertyCompoundElement__ValueAssignment_0 )
                    // InternalAcmeParser.g:3504:4: rule__AcmePropertyCompoundElement__ValueAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePropertyCompoundElement__ValueAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePropertyCompoundElementAccess().getValueAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3508:2: ( ( rule__AcmePropertyCompoundElement__ValueAssignment_1 ) )
                    {
                    // InternalAcmeParser.g:3508:2: ( ( rule__AcmePropertyCompoundElement__ValueAssignment_1 ) )
                    // InternalAcmeParser.g:3509:3: ( rule__AcmePropertyCompoundElement__ValueAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePropertyCompoundElementAccess().getValueAssignment_1()); 
                    }
                    // InternalAcmeParser.g:3510:3: ( rule__AcmePropertyCompoundElement__ValueAssignment_1 )
                    // InternalAcmeParser.g:3510:4: rule__AcmePropertyCompoundElement__ValueAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePropertyCompoundElement__ValueAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePropertyCompoundElementAccess().getValueAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAcmeParser.g:3514:2: ( ( rule__AcmePropertyCompoundElement__ValueAssignment_2 ) )
                    {
                    // InternalAcmeParser.g:3514:2: ( ( rule__AcmePropertyCompoundElement__ValueAssignment_2 ) )
                    // InternalAcmeParser.g:3515:3: ( rule__AcmePropertyCompoundElement__ValueAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePropertyCompoundElementAccess().getValueAssignment_2()); 
                    }
                    // InternalAcmeParser.g:3516:3: ( rule__AcmePropertyCompoundElement__ValueAssignment_2 )
                    // InternalAcmeParser.g:3516:4: rule__AcmePropertyCompoundElement__ValueAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePropertyCompoundElement__ValueAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePropertyCompoundElementAccess().getValueAssignment_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyCompoundElement__Alternatives"


    // $ANTLR start "rule__AcmePropertyTypeSequence__Alternatives_1"
    // InternalAcmeParser.g:3524:1: rule__AcmePropertyTypeSequence__Alternatives_1 : ( ( Seq ) | ( Sequence ) );
    public final void rule__AcmePropertyTypeSequence__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3528:1: ( ( Seq ) | ( Sequence ) )
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==Seq) ) {
                alt55=1;
            }
            else if ( (LA55_0==Sequence) ) {
                alt55=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;
            }
            switch (alt55) {
                case 1 :
                    // InternalAcmeParser.g:3529:2: ( Seq )
                    {
                    // InternalAcmeParser.g:3529:2: ( Seq )
                    // InternalAcmeParser.g:3530:3: Seq
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePropertyTypeSequenceAccess().getSeqKeyword_1_0()); 
                    }
                    match(input,Seq,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePropertyTypeSequenceAccess().getSeqKeyword_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3535:2: ( Sequence )
                    {
                    // InternalAcmeParser.g:3535:2: ( Sequence )
                    // InternalAcmeParser.g:3536:3: Sequence
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePropertyTypeSequenceAccess().getSequenceKeyword_1_1()); 
                    }
                    match(input,Sequence,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePropertyTypeSequenceAccess().getSequenceKeyword_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeSequence__Alternatives_1"


    // $ANTLR start "rule__AcmePropertyTypeRef__Alternatives"
    // InternalAcmeParser.g:3545:1: rule__AcmePropertyTypeRef__Alternatives : ( ( ( rule__AcmePropertyTypeRef__StructureAssignment_0 ) ) | ( ( rule__AcmePropertyTypeRef__RefAssignment_1 ) ) );
    public final void rule__AcmePropertyTypeRef__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3549:1: ( ( ( rule__AcmePropertyTypeRef__StructureAssignment_0 ) ) | ( ( rule__AcmePropertyTypeRef__RefAssignment_1 ) ) )
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( ((LA56_0>=Sequence && LA56_0<=Boolean)||LA56_0==Double||LA56_0==Record||LA56_0==String||LA56_0==Float||LA56_0==Enum||(LA56_0>=Any && LA56_0<=Int)||(LA56_0>=Seq && LA56_0<=Set)) ) {
                alt56=1;
            }
            else if ( (LA56_0==RULE_ID) ) {
                alt56=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;
            }
            switch (alt56) {
                case 1 :
                    // InternalAcmeParser.g:3550:2: ( ( rule__AcmePropertyTypeRef__StructureAssignment_0 ) )
                    {
                    // InternalAcmeParser.g:3550:2: ( ( rule__AcmePropertyTypeRef__StructureAssignment_0 ) )
                    // InternalAcmeParser.g:3551:3: ( rule__AcmePropertyTypeRef__StructureAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePropertyTypeRefAccess().getStructureAssignment_0()); 
                    }
                    // InternalAcmeParser.g:3552:3: ( rule__AcmePropertyTypeRef__StructureAssignment_0 )
                    // InternalAcmeParser.g:3552:4: rule__AcmePropertyTypeRef__StructureAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePropertyTypeRef__StructureAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePropertyTypeRefAccess().getStructureAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3556:2: ( ( rule__AcmePropertyTypeRef__RefAssignment_1 ) )
                    {
                    // InternalAcmeParser.g:3556:2: ( ( rule__AcmePropertyTypeRef__RefAssignment_1 ) )
                    // InternalAcmeParser.g:3557:3: ( rule__AcmePropertyTypeRef__RefAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePropertyTypeRefAccess().getRefAssignment_1()); 
                    }
                    // InternalAcmeParser.g:3558:3: ( rule__AcmePropertyTypeRef__RefAssignment_1 )
                    // InternalAcmeParser.g:3558:4: rule__AcmePropertyTypeRef__RefAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePropertyTypeRef__RefAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePropertyTypeRefAccess().getRefAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeRef__Alternatives"


    // $ANTLR start "rule__AcmePropertyTypeStructure__Alternatives"
    // InternalAcmeParser.g:3566:1: rule__AcmePropertyTypeStructure__Alternatives : ( ( ( rule__AcmePropertyTypeStructure__PrimitiveAssignment_0 ) ) | ( ( rule__AcmePropertyTypeStructure__StructureAssignment_1 ) ) | ( ( rule__AcmePropertyTypeStructure__StructureAssignment_2 ) ) | ( ( rule__AcmePropertyTypeStructure__StructureAssignment_3 ) ) | ( ( rule__AcmePropertyTypeStructure__NumAssignment_4 ) ) );
    public final void rule__AcmePropertyTypeStructure__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3570:1: ( ( ( rule__AcmePropertyTypeStructure__PrimitiveAssignment_0 ) ) | ( ( rule__AcmePropertyTypeStructure__StructureAssignment_1 ) ) | ( ( rule__AcmePropertyTypeStructure__StructureAssignment_2 ) ) | ( ( rule__AcmePropertyTypeStructure__StructureAssignment_3 ) ) | ( ( rule__AcmePropertyTypeStructure__NumAssignment_4 ) ) )
            int alt57=5;
            switch ( input.LA(1) ) {
            case Boolean:
            case Double:
            case String:
            case Float:
            case Any:
            case Int:
                {
                alt57=1;
                }
                break;
            case Record:
                {
                alt57=2;
                }
                break;
            case Set:
                {
                alt57=3;
                }
                break;
            case Sequence:
            case Seq:
                {
                alt57=4;
                }
                break;
            case Enum:
                {
                alt57=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 57, 0, input);

                throw nvae;
            }

            switch (alt57) {
                case 1 :
                    // InternalAcmeParser.g:3571:2: ( ( rule__AcmePropertyTypeStructure__PrimitiveAssignment_0 ) )
                    {
                    // InternalAcmeParser.g:3571:2: ( ( rule__AcmePropertyTypeStructure__PrimitiveAssignment_0 ) )
                    // InternalAcmeParser.g:3572:3: ( rule__AcmePropertyTypeStructure__PrimitiveAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePropertyTypeStructureAccess().getPrimitiveAssignment_0()); 
                    }
                    // InternalAcmeParser.g:3573:3: ( rule__AcmePropertyTypeStructure__PrimitiveAssignment_0 )
                    // InternalAcmeParser.g:3573:4: rule__AcmePropertyTypeStructure__PrimitiveAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePropertyTypeStructure__PrimitiveAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePropertyTypeStructureAccess().getPrimitiveAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3577:2: ( ( rule__AcmePropertyTypeStructure__StructureAssignment_1 ) )
                    {
                    // InternalAcmeParser.g:3577:2: ( ( rule__AcmePropertyTypeStructure__StructureAssignment_1 ) )
                    // InternalAcmeParser.g:3578:3: ( rule__AcmePropertyTypeStructure__StructureAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePropertyTypeStructureAccess().getStructureAssignment_1()); 
                    }
                    // InternalAcmeParser.g:3579:3: ( rule__AcmePropertyTypeStructure__StructureAssignment_1 )
                    // InternalAcmeParser.g:3579:4: rule__AcmePropertyTypeStructure__StructureAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePropertyTypeStructure__StructureAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePropertyTypeStructureAccess().getStructureAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAcmeParser.g:3583:2: ( ( rule__AcmePropertyTypeStructure__StructureAssignment_2 ) )
                    {
                    // InternalAcmeParser.g:3583:2: ( ( rule__AcmePropertyTypeStructure__StructureAssignment_2 ) )
                    // InternalAcmeParser.g:3584:3: ( rule__AcmePropertyTypeStructure__StructureAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePropertyTypeStructureAccess().getStructureAssignment_2()); 
                    }
                    // InternalAcmeParser.g:3585:3: ( rule__AcmePropertyTypeStructure__StructureAssignment_2 )
                    // InternalAcmeParser.g:3585:4: rule__AcmePropertyTypeStructure__StructureAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePropertyTypeStructure__StructureAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePropertyTypeStructureAccess().getStructureAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalAcmeParser.g:3589:2: ( ( rule__AcmePropertyTypeStructure__StructureAssignment_3 ) )
                    {
                    // InternalAcmeParser.g:3589:2: ( ( rule__AcmePropertyTypeStructure__StructureAssignment_3 ) )
                    // InternalAcmeParser.g:3590:3: ( rule__AcmePropertyTypeStructure__StructureAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePropertyTypeStructureAccess().getStructureAssignment_3()); 
                    }
                    // InternalAcmeParser.g:3591:3: ( rule__AcmePropertyTypeStructure__StructureAssignment_3 )
                    // InternalAcmeParser.g:3591:4: rule__AcmePropertyTypeStructure__StructureAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePropertyTypeStructure__StructureAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePropertyTypeStructureAccess().getStructureAssignment_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalAcmeParser.g:3595:2: ( ( rule__AcmePropertyTypeStructure__NumAssignment_4 ) )
                    {
                    // InternalAcmeParser.g:3595:2: ( ( rule__AcmePropertyTypeStructure__NumAssignment_4 ) )
                    // InternalAcmeParser.g:3596:3: ( rule__AcmePropertyTypeStructure__NumAssignment_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePropertyTypeStructureAccess().getNumAssignment_4()); 
                    }
                    // InternalAcmeParser.g:3597:3: ( rule__AcmePropertyTypeStructure__NumAssignment_4 )
                    // InternalAcmeParser.g:3597:4: rule__AcmePropertyTypeStructure__NumAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePropertyTypeStructure__NumAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePropertyTypeStructureAccess().getNumAssignment_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeStructure__Alternatives"


    // $ANTLR start "rule__AcmePropertyTypeDeclaration__Alternatives_3"
    // InternalAcmeParser.g:3605:1: rule__AcmePropertyTypeDeclaration__Alternatives_3 : ( ( Semicolon ) | ( ( rule__AcmePropertyTypeDeclaration__Group_3_1__0 ) ) );
    public final void rule__AcmePropertyTypeDeclaration__Alternatives_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3609:1: ( ( Semicolon ) | ( ( rule__AcmePropertyTypeDeclaration__Group_3_1__0 ) ) )
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==Semicolon) ) {
                alt58=1;
            }
            else if ( (LA58_0==EqualsSign) ) {
                alt58=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 58, 0, input);

                throw nvae;
            }
            switch (alt58) {
                case 1 :
                    // InternalAcmeParser.g:3610:2: ( Semicolon )
                    {
                    // InternalAcmeParser.g:3610:2: ( Semicolon )
                    // InternalAcmeParser.g:3611:3: Semicolon
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePropertyTypeDeclarationAccess().getSemicolonKeyword_3_0()); 
                    }
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePropertyTypeDeclarationAccess().getSemicolonKeyword_3_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3616:2: ( ( rule__AcmePropertyTypeDeclaration__Group_3_1__0 ) )
                    {
                    // InternalAcmeParser.g:3616:2: ( ( rule__AcmePropertyTypeDeclaration__Group_3_1__0 ) )
                    // InternalAcmeParser.g:3617:3: ( rule__AcmePropertyTypeDeclaration__Group_3_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePropertyTypeDeclarationAccess().getGroup_3_1()); 
                    }
                    // InternalAcmeParser.g:3618:3: ( rule__AcmePropertyTypeDeclaration__Group_3_1__0 )
                    // InternalAcmeParser.g:3618:4: rule__AcmePropertyTypeDeclaration__Group_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePropertyTypeDeclaration__Group_3_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePropertyTypeDeclarationAccess().getGroup_3_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeDeclaration__Alternatives_3"


    // $ANTLR start "rule__AcmePropertyBlockEntry__AssAlternatives_2_0_0"
    // InternalAcmeParser.g:3626:1: rule__AcmePropertyBlockEntry__AssAlternatives_2_0_0 : ( ( EqualsSign ) | ( U ) );
    public final void rule__AcmePropertyBlockEntry__AssAlternatives_2_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3630:1: ( ( EqualsSign ) | ( U ) )
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==EqualsSign) ) {
                alt59=1;
            }
            else if ( (LA59_0==U) ) {
                alt59=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 59, 0, input);

                throw nvae;
            }
            switch (alt59) {
                case 1 :
                    // InternalAcmeParser.g:3631:2: ( EqualsSign )
                    {
                    // InternalAcmeParser.g:3631:2: ( EqualsSign )
                    // InternalAcmeParser.g:3632:3: EqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePropertyBlockEntryAccess().getAssEqualsSignKeyword_2_0_0_0()); 
                    }
                    match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePropertyBlockEntryAccess().getAssEqualsSignKeyword_2_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3637:2: ( U )
                    {
                    // InternalAcmeParser.g:3637:2: ( U )
                    // InternalAcmeParser.g:3638:3: U
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmePropertyBlockEntryAccess().getAssUKeyword_2_0_0_1()); 
                    }
                    match(input,U,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmePropertyBlockEntryAccess().getAssUKeyword_2_0_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyBlockEntry__AssAlternatives_2_0_0"


    // $ANTLR start "rule__DesignRule__KindAlternatives_1_0"
    // InternalAcmeParser.g:3647:1: rule__DesignRule__KindAlternatives_1_0 : ( ( Invariant ) | ( Hueristic ) );
    public final void rule__DesignRule__KindAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3651:1: ( ( Invariant ) | ( Hueristic ) )
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==Invariant) ) {
                alt60=1;
            }
            else if ( (LA60_0==Hueristic) ) {
                alt60=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 60, 0, input);

                throw nvae;
            }
            switch (alt60) {
                case 1 :
                    // InternalAcmeParser.g:3652:2: ( Invariant )
                    {
                    // InternalAcmeParser.g:3652:2: ( Invariant )
                    // InternalAcmeParser.g:3653:3: Invariant
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDesignRuleAccess().getKindInvariantKeyword_1_0_0()); 
                    }
                    match(input,Invariant,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDesignRuleAccess().getKindInvariantKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3658:2: ( Hueristic )
                    {
                    // InternalAcmeParser.g:3658:2: ( Hueristic )
                    // InternalAcmeParser.g:3659:3: Hueristic
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDesignRuleAccess().getKindHueristicKeyword_1_0_1()); 
                    }
                    match(input,Hueristic,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDesignRuleAccess().getKindHueristicKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignRule__KindAlternatives_1_0"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Alternatives"
    // InternalAcmeParser.g:3668:1: rule__DesignAnalysisDeclaration__Alternatives : ( ( ( rule__DesignAnalysisDeclaration__Group_0__0 ) ) | ( ( rule__DesignAnalysisDeclaration__Group_1__0 ) ) );
    public final void rule__DesignAnalysisDeclaration__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3672:1: ( ( ( rule__DesignAnalysisDeclaration__Group_0__0 ) ) | ( ( rule__DesignAnalysisDeclaration__Group_1__0 ) ) )
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==Analysis||LA61_0==Design) ) {
                alt61=1;
            }
            else if ( (LA61_0==External) ) {
                alt61=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 61, 0, input);

                throw nvae;
            }
            switch (alt61) {
                case 1 :
                    // InternalAcmeParser.g:3673:2: ( ( rule__DesignAnalysisDeclaration__Group_0__0 ) )
                    {
                    // InternalAcmeParser.g:3673:2: ( ( rule__DesignAnalysisDeclaration__Group_0__0 ) )
                    // InternalAcmeParser.g:3674:3: ( rule__DesignAnalysisDeclaration__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDesignAnalysisDeclarationAccess().getGroup_0()); 
                    }
                    // InternalAcmeParser.g:3675:3: ( rule__DesignAnalysisDeclaration__Group_0__0 )
                    // InternalAcmeParser.g:3675:4: rule__DesignAnalysisDeclaration__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DesignAnalysisDeclaration__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDesignAnalysisDeclarationAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3679:2: ( ( rule__DesignAnalysisDeclaration__Group_1__0 ) )
                    {
                    // InternalAcmeParser.g:3679:2: ( ( rule__DesignAnalysisDeclaration__Group_1__0 ) )
                    // InternalAcmeParser.g:3680:3: ( rule__DesignAnalysisDeclaration__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDesignAnalysisDeclarationAccess().getGroup_1()); 
                    }
                    // InternalAcmeParser.g:3681:3: ( rule__DesignAnalysisDeclaration__Group_1__0 )
                    // InternalAcmeParser.g:3681:4: rule__DesignAnalysisDeclaration__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DesignAnalysisDeclaration__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDesignAnalysisDeclarationAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Alternatives"


    // $ANTLR start "rule__AcmeTypeRef__Alternatives"
    // InternalAcmeParser.g:3689:1: rule__AcmeTypeRef__Alternatives : ( ( ( rule__AcmeTypeRef__PrimitiveAssignment_0 ) ) | ( ( rule__AcmeTypeRef__StructureAssignment_1 ) ) | ( ( rule__AcmeTypeRef__StructureAssignment_2 ) ) | ( ( rule__AcmeTypeRef__StructureAssignment_3 ) ) | ( ( rule__AcmeTypeRef__NumAssignment_4 ) ) | ( ( rule__AcmeTypeRef__RefAssignment_5 ) ) );
    public final void rule__AcmeTypeRef__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3693:1: ( ( ( rule__AcmeTypeRef__PrimitiveAssignment_0 ) ) | ( ( rule__AcmeTypeRef__StructureAssignment_1 ) ) | ( ( rule__AcmeTypeRef__StructureAssignment_2 ) ) | ( ( rule__AcmeTypeRef__StructureAssignment_3 ) ) | ( ( rule__AcmeTypeRef__NumAssignment_4 ) ) | ( ( rule__AcmeTypeRef__RefAssignment_5 ) ) )
            int alt62=6;
            switch ( input.LA(1) ) {
            case Boolean:
            case Double:
            case String:
            case Float:
            case Any:
            case Int:
                {
                alt62=1;
                }
                break;
            case Record:
                {
                alt62=2;
                }
                break;
            case Set:
                {
                alt62=3;
                }
                break;
            case Sequence:
            case Seq:
                {
                alt62=4;
                }
                break;
            case Enum:
                {
                alt62=5;
                }
                break;
            case RULE_ID:
                {
                alt62=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 62, 0, input);

                throw nvae;
            }

            switch (alt62) {
                case 1 :
                    // InternalAcmeParser.g:3694:2: ( ( rule__AcmeTypeRef__PrimitiveAssignment_0 ) )
                    {
                    // InternalAcmeParser.g:3694:2: ( ( rule__AcmeTypeRef__PrimitiveAssignment_0 ) )
                    // InternalAcmeParser.g:3695:3: ( rule__AcmeTypeRef__PrimitiveAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeTypeRefAccess().getPrimitiveAssignment_0()); 
                    }
                    // InternalAcmeParser.g:3696:3: ( rule__AcmeTypeRef__PrimitiveAssignment_0 )
                    // InternalAcmeParser.g:3696:4: rule__AcmeTypeRef__PrimitiveAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeTypeRef__PrimitiveAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeTypeRefAccess().getPrimitiveAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3700:2: ( ( rule__AcmeTypeRef__StructureAssignment_1 ) )
                    {
                    // InternalAcmeParser.g:3700:2: ( ( rule__AcmeTypeRef__StructureAssignment_1 ) )
                    // InternalAcmeParser.g:3701:3: ( rule__AcmeTypeRef__StructureAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeTypeRefAccess().getStructureAssignment_1()); 
                    }
                    // InternalAcmeParser.g:3702:3: ( rule__AcmeTypeRef__StructureAssignment_1 )
                    // InternalAcmeParser.g:3702:4: rule__AcmeTypeRef__StructureAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeTypeRef__StructureAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeTypeRefAccess().getStructureAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAcmeParser.g:3706:2: ( ( rule__AcmeTypeRef__StructureAssignment_2 ) )
                    {
                    // InternalAcmeParser.g:3706:2: ( ( rule__AcmeTypeRef__StructureAssignment_2 ) )
                    // InternalAcmeParser.g:3707:3: ( rule__AcmeTypeRef__StructureAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeTypeRefAccess().getStructureAssignment_2()); 
                    }
                    // InternalAcmeParser.g:3708:3: ( rule__AcmeTypeRef__StructureAssignment_2 )
                    // InternalAcmeParser.g:3708:4: rule__AcmeTypeRef__StructureAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeTypeRef__StructureAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeTypeRefAccess().getStructureAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalAcmeParser.g:3712:2: ( ( rule__AcmeTypeRef__StructureAssignment_3 ) )
                    {
                    // InternalAcmeParser.g:3712:2: ( ( rule__AcmeTypeRef__StructureAssignment_3 ) )
                    // InternalAcmeParser.g:3713:3: ( rule__AcmeTypeRef__StructureAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeTypeRefAccess().getStructureAssignment_3()); 
                    }
                    // InternalAcmeParser.g:3714:3: ( rule__AcmeTypeRef__StructureAssignment_3 )
                    // InternalAcmeParser.g:3714:4: rule__AcmeTypeRef__StructureAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeTypeRef__StructureAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeTypeRefAccess().getStructureAssignment_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalAcmeParser.g:3718:2: ( ( rule__AcmeTypeRef__NumAssignment_4 ) )
                    {
                    // InternalAcmeParser.g:3718:2: ( ( rule__AcmeTypeRef__NumAssignment_4 ) )
                    // InternalAcmeParser.g:3719:3: ( rule__AcmeTypeRef__NumAssignment_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeTypeRefAccess().getNumAssignment_4()); 
                    }
                    // InternalAcmeParser.g:3720:3: ( rule__AcmeTypeRef__NumAssignment_4 )
                    // InternalAcmeParser.g:3720:4: rule__AcmeTypeRef__NumAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeTypeRef__NumAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeTypeRefAccess().getNumAssignment_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalAcmeParser.g:3724:2: ( ( rule__AcmeTypeRef__RefAssignment_5 ) )
                    {
                    // InternalAcmeParser.g:3724:2: ( ( rule__AcmeTypeRef__RefAssignment_5 ) )
                    // InternalAcmeParser.g:3725:3: ( rule__AcmeTypeRef__RefAssignment_5 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcmeTypeRefAccess().getRefAssignment_5()); 
                    }
                    // InternalAcmeParser.g:3726:3: ( rule__AcmeTypeRef__RefAssignment_5 )
                    // InternalAcmeParser.g:3726:4: rule__AcmeTypeRef__RefAssignment_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeTypeRef__RefAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcmeTypeRefAccess().getRefAssignment_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeTypeRef__Alternatives"


    // $ANTLR start "rule__BooleanExpression__Alternatives"
    // InternalAcmeParser.g:3734:1: rule__BooleanExpression__Alternatives : ( ( ruleimpliesExpression ) | ( rulequantifiedExpression ) );
    public final void rule__BooleanExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3738:1: ( ( ruleimpliesExpression ) | ( rulequantifiedExpression ) )
            int alt63=2;
            switch ( input.LA(1) ) {
            case TNULL:
            case False:
            case True:
            case PlusSignPlusSign:
            case HyphenMinusHyphenMinus:
            case ExclamationMark:
            case Apostrophe:
            case LeftParenthesis:
            case PlusSign:
            case HyphenMinus:
            case Solidus:
            case RULE_FLOAT:
            case RULE_ID:
            case RULE_INT:
            case RULE_STRING:
                {
                alt63=1;
                }
                break;
            case LeftCurlyBracket:
                {
                int LA63_2 = input.LA(2);

                if ( (synpred107_InternalAcmeParser()) ) {
                    alt63=1;
                }
                else if ( (true) ) {
                    alt63=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 63, 2, input);

                    throw nvae;
                }
                }
                break;
            case Exists:
            case Forall:
            case Select:
                {
                alt63=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 63, 0, input);

                throw nvae;
            }

            switch (alt63) {
                case 1 :
                    // InternalAcmeParser.g:3739:2: ( ruleimpliesExpression )
                    {
                    // InternalAcmeParser.g:3739:2: ( ruleimpliesExpression )
                    // InternalAcmeParser.g:3740:3: ruleimpliesExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBooleanExpressionAccess().getImpliesExpressionParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleimpliesExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBooleanExpressionAccess().getImpliesExpressionParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3745:2: ( rulequantifiedExpression )
                    {
                    // InternalAcmeParser.g:3745:2: ( rulequantifiedExpression )
                    // InternalAcmeParser.g:3746:3: rulequantifiedExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBooleanExpressionAccess().getQuantifiedExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    rulequantifiedExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBooleanExpressionAccess().getQuantifiedExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanExpression__Alternatives"


    // $ANTLR start "rule__LogicalOrExpression__Alternatives_1_0"
    // InternalAcmeParser.g:3755:1: rule__LogicalOrExpression__Alternatives_1_0 : ( ( Or ) | ( VerticalLineVerticalLine ) );
    public final void rule__LogicalOrExpression__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3759:1: ( ( Or ) | ( VerticalLineVerticalLine ) )
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==Or) ) {
                alt64=1;
            }
            else if ( (LA64_0==VerticalLineVerticalLine) ) {
                alt64=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 64, 0, input);

                throw nvae;
            }
            switch (alt64) {
                case 1 :
                    // InternalAcmeParser.g:3760:2: ( Or )
                    {
                    // InternalAcmeParser.g:3760:2: ( Or )
                    // InternalAcmeParser.g:3761:3: Or
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLogicalOrExpressionAccess().getOrKeyword_1_0_0()); 
                    }
                    match(input,Or,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLogicalOrExpressionAccess().getOrKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3766:2: ( VerticalLineVerticalLine )
                    {
                    // InternalAcmeParser.g:3766:2: ( VerticalLineVerticalLine )
                    // InternalAcmeParser.g:3767:3: VerticalLineVerticalLine
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLogicalOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_0_1()); 
                    }
                    match(input,VerticalLineVerticalLine,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLogicalOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Alternatives_1_0"


    // $ANTLR start "rule__LogicalAndExpression__Alternatives_1_0"
    // InternalAcmeParser.g:3776:1: rule__LogicalAndExpression__Alternatives_1_0 : ( ( And ) | ( AmpersandAmpersand ) );
    public final void rule__LogicalAndExpression__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3780:1: ( ( And ) | ( AmpersandAmpersand ) )
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==And) ) {
                alt65=1;
            }
            else if ( (LA65_0==AmpersandAmpersand) ) {
                alt65=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 65, 0, input);

                throw nvae;
            }
            switch (alt65) {
                case 1 :
                    // InternalAcmeParser.g:3781:2: ( And )
                    {
                    // InternalAcmeParser.g:3781:2: ( And )
                    // InternalAcmeParser.g:3782:3: And
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLogicalAndExpressionAccess().getAndKeyword_1_0_0()); 
                    }
                    match(input,And,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLogicalAndExpressionAccess().getAndKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3787:2: ( AmpersandAmpersand )
                    {
                    // InternalAcmeParser.g:3787:2: ( AmpersandAmpersand )
                    // InternalAcmeParser.g:3788:3: AmpersandAmpersand
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLogicalAndExpressionAccess().getAmpersandAmpersandKeyword_1_0_1()); 
                    }
                    match(input,AmpersandAmpersand,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLogicalAndExpressionAccess().getAmpersandAmpersandKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Alternatives_1_0"


    // $ANTLR start "rule__EqualityExpression__EqAlternatives_1_0_0"
    // InternalAcmeParser.g:3797:1: rule__EqualityExpression__EqAlternatives_1_0_0 : ( ( ExclamationMarkEqualsSign ) | ( EqualsSignEqualsSign ) );
    public final void rule__EqualityExpression__EqAlternatives_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3801:1: ( ( ExclamationMarkEqualsSign ) | ( EqualsSignEqualsSign ) )
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==ExclamationMarkEqualsSign) ) {
                alt66=1;
            }
            else if ( (LA66_0==EqualsSignEqualsSign) ) {
                alt66=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 66, 0, input);

                throw nvae;
            }
            switch (alt66) {
                case 1 :
                    // InternalAcmeParser.g:3802:2: ( ExclamationMarkEqualsSign )
                    {
                    // InternalAcmeParser.g:3802:2: ( ExclamationMarkEqualsSign )
                    // InternalAcmeParser.g:3803:3: ExclamationMarkEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEqualityExpressionAccess().getEqExclamationMarkEqualsSignKeyword_1_0_0_0()); 
                    }
                    match(input,ExclamationMarkEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEqualityExpressionAccess().getEqExclamationMarkEqualsSignKeyword_1_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3808:2: ( EqualsSignEqualsSign )
                    {
                    // InternalAcmeParser.g:3808:2: ( EqualsSignEqualsSign )
                    // InternalAcmeParser.g:3809:3: EqualsSignEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEqualityExpressionAccess().getEqEqualsSignEqualsSignKeyword_1_0_0_1()); 
                    }
                    match(input,EqualsSignEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEqualityExpressionAccess().getEqEqualsSignEqualsSignKeyword_1_0_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityExpression__EqAlternatives_1_0_0"


    // $ANTLR start "rule__RelationalExpression__RelAlternatives_1_0_0"
    // InternalAcmeParser.g:3818:1: rule__RelationalExpression__RelAlternatives_1_0_0 : ( ( LessThanSign ) | ( LessThanSignEqualsSign ) | ( GreaterThanSign ) | ( GreaterThanSignEqualsSign ) );
    public final void rule__RelationalExpression__RelAlternatives_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3822:1: ( ( LessThanSign ) | ( LessThanSignEqualsSign ) | ( GreaterThanSign ) | ( GreaterThanSignEqualsSign ) )
            int alt67=4;
            switch ( input.LA(1) ) {
            case LessThanSign:
                {
                alt67=1;
                }
                break;
            case LessThanSignEqualsSign:
                {
                alt67=2;
                }
                break;
            case GreaterThanSign:
                {
                alt67=3;
                }
                break;
            case GreaterThanSignEqualsSign:
                {
                alt67=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 67, 0, input);

                throw nvae;
            }

            switch (alt67) {
                case 1 :
                    // InternalAcmeParser.g:3823:2: ( LessThanSign )
                    {
                    // InternalAcmeParser.g:3823:2: ( LessThanSign )
                    // InternalAcmeParser.g:3824:3: LessThanSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalExpressionAccess().getRelLessThanSignKeyword_1_0_0_0()); 
                    }
                    match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalExpressionAccess().getRelLessThanSignKeyword_1_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3829:2: ( LessThanSignEqualsSign )
                    {
                    // InternalAcmeParser.g:3829:2: ( LessThanSignEqualsSign )
                    // InternalAcmeParser.g:3830:3: LessThanSignEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalExpressionAccess().getRelLessThanSignEqualsSignKeyword_1_0_0_1()); 
                    }
                    match(input,LessThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalExpressionAccess().getRelLessThanSignEqualsSignKeyword_1_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAcmeParser.g:3835:2: ( GreaterThanSign )
                    {
                    // InternalAcmeParser.g:3835:2: ( GreaterThanSign )
                    // InternalAcmeParser.g:3836:3: GreaterThanSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalExpressionAccess().getRelGreaterThanSignKeyword_1_0_0_2()); 
                    }
                    match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalExpressionAccess().getRelGreaterThanSignKeyword_1_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalAcmeParser.g:3841:2: ( GreaterThanSignEqualsSign )
                    {
                    // InternalAcmeParser.g:3841:2: ( GreaterThanSignEqualsSign )
                    // InternalAcmeParser.g:3842:3: GreaterThanSignEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRelationalExpressionAccess().getRelGreaterThanSignEqualsSignKeyword_1_0_0_3()); 
                    }
                    match(input,GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRelationalExpressionAccess().getRelGreaterThanSignEqualsSignKeyword_1_0_0_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__RelAlternatives_1_0_0"


    // $ANTLR start "rule__AdditiveExpression__AddAlternatives_1_0_0"
    // InternalAcmeParser.g:3851:1: rule__AdditiveExpression__AddAlternatives_1_0_0 : ( ( PlusSign ) | ( HyphenMinus ) );
    public final void rule__AdditiveExpression__AddAlternatives_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3855:1: ( ( PlusSign ) | ( HyphenMinus ) )
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==PlusSign) ) {
                alt68=1;
            }
            else if ( (LA68_0==HyphenMinus) ) {
                alt68=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 68, 0, input);

                throw nvae;
            }
            switch (alt68) {
                case 1 :
                    // InternalAcmeParser.g:3856:2: ( PlusSign )
                    {
                    // InternalAcmeParser.g:3856:2: ( PlusSign )
                    // InternalAcmeParser.g:3857:3: PlusSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAdditiveExpressionAccess().getAddPlusSignKeyword_1_0_0_0()); 
                    }
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAdditiveExpressionAccess().getAddPlusSignKeyword_1_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3862:2: ( HyphenMinus )
                    {
                    // InternalAcmeParser.g:3862:2: ( HyphenMinus )
                    // InternalAcmeParser.g:3863:3: HyphenMinus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAdditiveExpressionAccess().getAddHyphenMinusKeyword_1_0_0_1()); 
                    }
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAdditiveExpressionAccess().getAddHyphenMinusKeyword_1_0_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__AddAlternatives_1_0_0"


    // $ANTLR start "rule__MultiplicativeExpression__MultAlternatives_1_0_0"
    // InternalAcmeParser.g:3872:1: rule__MultiplicativeExpression__MultAlternatives_1_0_0 : ( ( Asterisk ) | ( Solidus ) | ( PercentSign ) );
    public final void rule__MultiplicativeExpression__MultAlternatives_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3876:1: ( ( Asterisk ) | ( Solidus ) | ( PercentSign ) )
            int alt69=3;
            switch ( input.LA(1) ) {
            case Asterisk:
                {
                alt69=1;
                }
                break;
            case Solidus:
                {
                alt69=2;
                }
                break;
            case PercentSign:
                {
                alt69=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 69, 0, input);

                throw nvae;
            }

            switch (alt69) {
                case 1 :
                    // InternalAcmeParser.g:3877:2: ( Asterisk )
                    {
                    // InternalAcmeParser.g:3877:2: ( Asterisk )
                    // InternalAcmeParser.g:3878:3: Asterisk
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiplicativeExpressionAccess().getMultAsteriskKeyword_1_0_0_0()); 
                    }
                    match(input,Asterisk,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiplicativeExpressionAccess().getMultAsteriskKeyword_1_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3883:2: ( Solidus )
                    {
                    // InternalAcmeParser.g:3883:2: ( Solidus )
                    // InternalAcmeParser.g:3884:3: Solidus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiplicativeExpressionAccess().getMultSolidusKeyword_1_0_0_1()); 
                    }
                    match(input,Solidus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiplicativeExpressionAccess().getMultSolidusKeyword_1_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAcmeParser.g:3889:2: ( PercentSign )
                    {
                    // InternalAcmeParser.g:3889:2: ( PercentSign )
                    // InternalAcmeParser.g:3890:3: PercentSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiplicativeExpressionAccess().getMultPercentSignKeyword_1_0_0_2()); 
                    }
                    match(input,PercentSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiplicativeExpressionAccess().getMultPercentSignKeyword_1_0_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__MultAlternatives_1_0_0"


    // $ANTLR start "rule__UnaryExpression__UnaryAlternatives_0_0"
    // InternalAcmeParser.g:3899:1: rule__UnaryExpression__UnaryAlternatives_0_0 : ( ( PlusSignPlusSign ) | ( HyphenMinusHyphenMinus ) | ( HyphenMinus ) | ( PlusSign ) );
    public final void rule__UnaryExpression__UnaryAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3903:1: ( ( PlusSignPlusSign ) | ( HyphenMinusHyphenMinus ) | ( HyphenMinus ) | ( PlusSign ) )
            int alt70=4;
            switch ( input.LA(1) ) {
            case PlusSignPlusSign:
                {
                alt70=1;
                }
                break;
            case HyphenMinusHyphenMinus:
                {
                alt70=2;
                }
                break;
            case HyphenMinus:
                {
                alt70=3;
                }
                break;
            case PlusSign:
                {
                alt70=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 70, 0, input);

                throw nvae;
            }

            switch (alt70) {
                case 1 :
                    // InternalAcmeParser.g:3904:2: ( PlusSignPlusSign )
                    {
                    // InternalAcmeParser.g:3904:2: ( PlusSignPlusSign )
                    // InternalAcmeParser.g:3905:3: PlusSignPlusSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryExpressionAccess().getUnaryPlusSignPlusSignKeyword_0_0_0()); 
                    }
                    match(input,PlusSignPlusSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryExpressionAccess().getUnaryPlusSignPlusSignKeyword_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3910:2: ( HyphenMinusHyphenMinus )
                    {
                    // InternalAcmeParser.g:3910:2: ( HyphenMinusHyphenMinus )
                    // InternalAcmeParser.g:3911:3: HyphenMinusHyphenMinus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryExpressionAccess().getUnaryHyphenMinusHyphenMinusKeyword_0_0_1()); 
                    }
                    match(input,HyphenMinusHyphenMinus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryExpressionAccess().getUnaryHyphenMinusHyphenMinusKeyword_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAcmeParser.g:3916:2: ( HyphenMinus )
                    {
                    // InternalAcmeParser.g:3916:2: ( HyphenMinus )
                    // InternalAcmeParser.g:3917:3: HyphenMinus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryExpressionAccess().getUnaryHyphenMinusKeyword_0_0_2()); 
                    }
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryExpressionAccess().getUnaryHyphenMinusKeyword_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalAcmeParser.g:3922:2: ( PlusSign )
                    {
                    // InternalAcmeParser.g:3922:2: ( PlusSign )
                    // InternalAcmeParser.g:3923:3: PlusSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryExpressionAccess().getUnaryPlusSignKeyword_0_0_3()); 
                    }
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryExpressionAccess().getUnaryPlusSignKeyword_0_0_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__UnaryAlternatives_0_0"


    // $ANTLR start "rule__UnaryExpression__PostAlternatives_2_0"
    // InternalAcmeParser.g:3932:1: rule__UnaryExpression__PostAlternatives_2_0 : ( ( PlusSignPlusSign ) | ( HyphenMinusHyphenMinus ) );
    public final void rule__UnaryExpression__PostAlternatives_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3936:1: ( ( PlusSignPlusSign ) | ( HyphenMinusHyphenMinus ) )
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==PlusSignPlusSign) ) {
                alt71=1;
            }
            else if ( (LA71_0==HyphenMinusHyphenMinus) ) {
                alt71=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 71, 0, input);

                throw nvae;
            }
            switch (alt71) {
                case 1 :
                    // InternalAcmeParser.g:3937:2: ( PlusSignPlusSign )
                    {
                    // InternalAcmeParser.g:3937:2: ( PlusSignPlusSign )
                    // InternalAcmeParser.g:3938:3: PlusSignPlusSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryExpressionAccess().getPostPlusSignPlusSignKeyword_2_0_0()); 
                    }
                    match(input,PlusSignPlusSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryExpressionAccess().getPostPlusSignPlusSignKeyword_2_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3943:2: ( HyphenMinusHyphenMinus )
                    {
                    // InternalAcmeParser.g:3943:2: ( HyphenMinusHyphenMinus )
                    // InternalAcmeParser.g:3944:3: HyphenMinusHyphenMinus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryExpressionAccess().getPostHyphenMinusHyphenMinusKeyword_2_0_1()); 
                    }
                    match(input,HyphenMinusHyphenMinus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryExpressionAccess().getPostHyphenMinusHyphenMinusKeyword_2_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__PostAlternatives_2_0"


    // $ANTLR start "rule__NonunaryExpression__Alternatives"
    // InternalAcmeParser.g:3953:1: rule__NonunaryExpression__Alternatives : ( ( ( rule__NonunaryExpression__Group_0__0 ) ) | ( ruleprimaryExpression ) );
    public final void rule__NonunaryExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3957:1: ( ( ( rule__NonunaryExpression__Group_0__0 ) ) | ( ruleprimaryExpression ) )
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==ExclamationMark) ) {
                alt72=1;
            }
            else if ( ((LA72_0>=TNULL && LA72_0<=False)||LA72_0==True||(LA72_0>=Apostrophe && LA72_0<=LeftParenthesis)||LA72_0==Solidus||LA72_0==LeftCurlyBracket||(LA72_0>=RULE_FLOAT && LA72_0<=RULE_STRING)) ) {
                alt72=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 72, 0, input);

                throw nvae;
            }
            switch (alt72) {
                case 1 :
                    // InternalAcmeParser.g:3958:2: ( ( rule__NonunaryExpression__Group_0__0 ) )
                    {
                    // InternalAcmeParser.g:3958:2: ( ( rule__NonunaryExpression__Group_0__0 ) )
                    // InternalAcmeParser.g:3959:3: ( rule__NonunaryExpression__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonunaryExpressionAccess().getGroup_0()); 
                    }
                    // InternalAcmeParser.g:3960:3: ( rule__NonunaryExpression__Group_0__0 )
                    // InternalAcmeParser.g:3960:4: rule__NonunaryExpression__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NonunaryExpression__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonunaryExpressionAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3964:2: ( ruleprimaryExpression )
                    {
                    // InternalAcmeParser.g:3964:2: ( ruleprimaryExpression )
                    // InternalAcmeParser.g:3965:3: ruleprimaryExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonunaryExpressionAccess().getPrimaryExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleprimaryExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonunaryExpressionAccess().getPrimaryExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonunaryExpression__Alternatives"


    // $ANTLR start "rule__PrimaryExpression__Alternatives"
    // InternalAcmeParser.g:3974:1: rule__PrimaryExpression__Alternatives : ( ( ruleidExpression ) | ( rulepostIdExpression ) | ( rulesetExpression ) | ( rulepathExpression ) | ( ( rule__PrimaryExpression__Group_4__0 ) ) );
    public final void rule__PrimaryExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:3978:1: ( ( ruleidExpression ) | ( rulepostIdExpression ) | ( rulesetExpression ) | ( rulepathExpression ) | ( ( rule__PrimaryExpression__Group_4__0 ) ) )
            int alt73=5;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA73_1 = input.LA(2);

                if ( (LA73_1==EOF||(LA73_1>=LessThanSignHyphenMinusGreaterThanSign && LA73_1<=And)||(LA73_1>=ExclamationMarkEqualsSign && LA73_1<=SolidusEqualsSign)||(LA73_1>=LessThanSignLessThanSign && LA73_1<=GreaterThanSignEqualsSign)||LA73_1==Or||LA73_1==VerticalLineVerticalLine||LA73_1==PercentSign||(LA73_1>=LeftParenthesis && LA73_1<=Solidus)||(LA73_1>=Semicolon && LA73_1<=GreaterThanSign)||LA73_1==RightSquareBracket||LA73_1==RightCurlyBracket) ) {
                    alt73=1;
                }
                else if ( (LA73_1==Apostrophe) ) {
                    alt73=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 73, 1, input);

                    throw nvae;
                }
                }
                break;
            case TNULL:
            case False:
            case True:
            case Apostrophe:
            case RULE_FLOAT:
            case RULE_INT:
            case RULE_STRING:
                {
                alt73=1;
                }
                break;
            case LeftCurlyBracket:
                {
                alt73=3;
                }
                break;
            case Solidus:
                {
                alt73=4;
                }
                break;
            case LeftParenthesis:
                {
                alt73=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 73, 0, input);

                throw nvae;
            }

            switch (alt73) {
                case 1 :
                    // InternalAcmeParser.g:3979:2: ( ruleidExpression )
                    {
                    // InternalAcmeParser.g:3979:2: ( ruleidExpression )
                    // InternalAcmeParser.g:3980:3: ruleidExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getIdExpressionParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleidExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getIdExpressionParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:3985:2: ( rulepostIdExpression )
                    {
                    // InternalAcmeParser.g:3985:2: ( rulepostIdExpression )
                    // InternalAcmeParser.g:3986:3: rulepostIdExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getPostIdExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    rulepostIdExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getPostIdExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAcmeParser.g:3991:2: ( rulesetExpression )
                    {
                    // InternalAcmeParser.g:3991:2: ( rulesetExpression )
                    // InternalAcmeParser.g:3992:3: rulesetExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getSetExpressionParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    rulesetExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getSetExpressionParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalAcmeParser.g:3997:2: ( rulepathExpression )
                    {
                    // InternalAcmeParser.g:3997:2: ( rulepathExpression )
                    // InternalAcmeParser.g:3998:3: rulepathExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getPathExpressionParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    rulepathExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getPathExpressionParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalAcmeParser.g:4003:2: ( ( rule__PrimaryExpression__Group_4__0 ) )
                    {
                    // InternalAcmeParser.g:4003:2: ( ( rule__PrimaryExpression__Group_4__0 ) )
                    // InternalAcmeParser.g:4004:3: ( rule__PrimaryExpression__Group_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExpressionAccess().getGroup_4()); 
                    }
                    // InternalAcmeParser.g:4005:3: ( rule__PrimaryExpression__Group_4__0 )
                    // InternalAcmeParser.g:4005:4: rule__PrimaryExpression__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PrimaryExpression__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExpressionAccess().getGroup_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__Alternatives"


    // $ANTLR start "rule__IdExpression__Alternatives"
    // InternalAcmeParser.g:4013:1: rule__IdExpression__Alternatives : ( ( rulemethodCall ) | ( ( rule__IdExpression__Group_1__0 ) ) | ( ( rule__IdExpression__Group_2__0 ) ) | ( ( rule__IdExpression__Group_3__0 ) ) | ( ( rule__IdExpression__Group_4__0 ) ) | ( ( rule__IdExpression__Group_5__0 ) ) | ( ( rule__IdExpression__Group_6__0 ) ) | ( ( rule__IdExpression__Group_7__0 ) ) | ( ( rule__IdExpression__Group_8__0 ) ) );
    public final void rule__IdExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4017:1: ( ( rulemethodCall ) | ( ( rule__IdExpression__Group_1__0 ) ) | ( ( rule__IdExpression__Group_2__0 ) ) | ( ( rule__IdExpression__Group_3__0 ) ) | ( ( rule__IdExpression__Group_4__0 ) ) | ( ( rule__IdExpression__Group_5__0 ) ) | ( ( rule__IdExpression__Group_6__0 ) ) | ( ( rule__IdExpression__Group_7__0 ) ) | ( ( rule__IdExpression__Group_8__0 ) ) )
            int alt74=9;
            alt74 = dfa74.predict(input);
            switch (alt74) {
                case 1 :
                    // InternalAcmeParser.g:4018:2: ( rulemethodCall )
                    {
                    // InternalAcmeParser.g:4018:2: ( rulemethodCall )
                    // InternalAcmeParser.g:4019:3: rulemethodCall
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdExpressionAccess().getMethodCallParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    rulemethodCall();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdExpressionAccess().getMethodCallParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:4024:2: ( ( rule__IdExpression__Group_1__0 ) )
                    {
                    // InternalAcmeParser.g:4024:2: ( ( rule__IdExpression__Group_1__0 ) )
                    // InternalAcmeParser.g:4025:3: ( rule__IdExpression__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdExpressionAccess().getGroup_1()); 
                    }
                    // InternalAcmeParser.g:4026:3: ( rule__IdExpression__Group_1__0 )
                    // InternalAcmeParser.g:4026:4: rule__IdExpression__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IdExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdExpressionAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAcmeParser.g:4030:2: ( ( rule__IdExpression__Group_2__0 ) )
                    {
                    // InternalAcmeParser.g:4030:2: ( ( rule__IdExpression__Group_2__0 ) )
                    // InternalAcmeParser.g:4031:3: ( rule__IdExpression__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdExpressionAccess().getGroup_2()); 
                    }
                    // InternalAcmeParser.g:4032:3: ( rule__IdExpression__Group_2__0 )
                    // InternalAcmeParser.g:4032:4: rule__IdExpression__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IdExpression__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdExpressionAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalAcmeParser.g:4036:2: ( ( rule__IdExpression__Group_3__0 ) )
                    {
                    // InternalAcmeParser.g:4036:2: ( ( rule__IdExpression__Group_3__0 ) )
                    // InternalAcmeParser.g:4037:3: ( rule__IdExpression__Group_3__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdExpressionAccess().getGroup_3()); 
                    }
                    // InternalAcmeParser.g:4038:3: ( rule__IdExpression__Group_3__0 )
                    // InternalAcmeParser.g:4038:4: rule__IdExpression__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IdExpression__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdExpressionAccess().getGroup_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalAcmeParser.g:4042:2: ( ( rule__IdExpression__Group_4__0 ) )
                    {
                    // InternalAcmeParser.g:4042:2: ( ( rule__IdExpression__Group_4__0 ) )
                    // InternalAcmeParser.g:4043:3: ( rule__IdExpression__Group_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdExpressionAccess().getGroup_4()); 
                    }
                    // InternalAcmeParser.g:4044:3: ( rule__IdExpression__Group_4__0 )
                    // InternalAcmeParser.g:4044:4: rule__IdExpression__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IdExpression__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdExpressionAccess().getGroup_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalAcmeParser.g:4048:2: ( ( rule__IdExpression__Group_5__0 ) )
                    {
                    // InternalAcmeParser.g:4048:2: ( ( rule__IdExpression__Group_5__0 ) )
                    // InternalAcmeParser.g:4049:3: ( rule__IdExpression__Group_5__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdExpressionAccess().getGroup_5()); 
                    }
                    // InternalAcmeParser.g:4050:3: ( rule__IdExpression__Group_5__0 )
                    // InternalAcmeParser.g:4050:4: rule__IdExpression__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IdExpression__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdExpressionAccess().getGroup_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalAcmeParser.g:4054:2: ( ( rule__IdExpression__Group_6__0 ) )
                    {
                    // InternalAcmeParser.g:4054:2: ( ( rule__IdExpression__Group_6__0 ) )
                    // InternalAcmeParser.g:4055:3: ( rule__IdExpression__Group_6__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdExpressionAccess().getGroup_6()); 
                    }
                    // InternalAcmeParser.g:4056:3: ( rule__IdExpression__Group_6__0 )
                    // InternalAcmeParser.g:4056:4: rule__IdExpression__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IdExpression__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdExpressionAccess().getGroup_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalAcmeParser.g:4060:2: ( ( rule__IdExpression__Group_7__0 ) )
                    {
                    // InternalAcmeParser.g:4060:2: ( ( rule__IdExpression__Group_7__0 ) )
                    // InternalAcmeParser.g:4061:3: ( rule__IdExpression__Group_7__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdExpressionAccess().getGroup_7()); 
                    }
                    // InternalAcmeParser.g:4062:3: ( rule__IdExpression__Group_7__0 )
                    // InternalAcmeParser.g:4062:4: rule__IdExpression__Group_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IdExpression__Group_7__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdExpressionAccess().getGroup_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalAcmeParser.g:4066:2: ( ( rule__IdExpression__Group_8__0 ) )
                    {
                    // InternalAcmeParser.g:4066:2: ( ( rule__IdExpression__Group_8__0 ) )
                    // InternalAcmeParser.g:4067:3: ( rule__IdExpression__Group_8__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdExpressionAccess().getGroup_8()); 
                    }
                    // InternalAcmeParser.g:4068:3: ( rule__IdExpression__Group_8__0 )
                    // InternalAcmeParser.g:4068:4: rule__IdExpression__Group_8__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IdExpression__Group_8__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdExpressionAccess().getGroup_8()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Alternatives"


    // $ANTLR start "rule__Param__DeclaresAlternatives_1_0"
    // InternalAcmeParser.g:4076:1: rule__Param__DeclaresAlternatives_1_0 : ( ( Colon ) | ( ColonExclamationMark ) );
    public final void rule__Param__DeclaresAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4080:1: ( ( Colon ) | ( ColonExclamationMark ) )
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==Colon) ) {
                alt75=1;
            }
            else if ( (LA75_0==ColonExclamationMark) ) {
                alt75=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 75, 0, input);

                throw nvae;
            }
            switch (alt75) {
                case 1 :
                    // InternalAcmeParser.g:4081:2: ( Colon )
                    {
                    // InternalAcmeParser.g:4081:2: ( Colon )
                    // InternalAcmeParser.g:4082:3: Colon
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getParamAccess().getDeclaresColonKeyword_1_0_0()); 
                    }
                    match(input,Colon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getParamAccess().getDeclaresColonKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:4087:2: ( ColonExclamationMark )
                    {
                    // InternalAcmeParser.g:4087:2: ( ColonExclamationMark )
                    // InternalAcmeParser.g:4088:3: ColonExclamationMark
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getParamAccess().getDeclaresColonExclamationMarkKeyword_1_0_1()); 
                    }
                    match(input,ColonExclamationMark,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getParamAccess().getDeclaresColonExclamationMarkKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__DeclaresAlternatives_1_0"


    // $ANTLR start "rule__QuantifiedExpression__Alternatives"
    // InternalAcmeParser.g:4097:1: rule__QuantifiedExpression__Alternatives : ( ( ( rule__QuantifiedExpression__Group_0__0 ) ) | ( ( rule__QuantifiedExpression__Group_1__0 ) ) | ( ( rule__QuantifiedExpression__Group_2__0 ) ) );
    public final void rule__QuantifiedExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4101:1: ( ( ( rule__QuantifiedExpression__Group_0__0 ) ) | ( ( rule__QuantifiedExpression__Group_1__0 ) ) | ( ( rule__QuantifiedExpression__Group_2__0 ) ) )
            int alt76=3;
            switch ( input.LA(1) ) {
            case Forall:
                {
                alt76=1;
                }
                break;
            case Exists:
                {
                alt76=2;
                }
                break;
            case Select:
            case LeftCurlyBracket:
                {
                alt76=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 76, 0, input);

                throw nvae;
            }

            switch (alt76) {
                case 1 :
                    // InternalAcmeParser.g:4102:2: ( ( rule__QuantifiedExpression__Group_0__0 ) )
                    {
                    // InternalAcmeParser.g:4102:2: ( ( rule__QuantifiedExpression__Group_0__0 ) )
                    // InternalAcmeParser.g:4103:3: ( rule__QuantifiedExpression__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQuantifiedExpressionAccess().getGroup_0()); 
                    }
                    // InternalAcmeParser.g:4104:3: ( rule__QuantifiedExpression__Group_0__0 )
                    // InternalAcmeParser.g:4104:4: rule__QuantifiedExpression__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__QuantifiedExpression__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQuantifiedExpressionAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:4108:2: ( ( rule__QuantifiedExpression__Group_1__0 ) )
                    {
                    // InternalAcmeParser.g:4108:2: ( ( rule__QuantifiedExpression__Group_1__0 ) )
                    // InternalAcmeParser.g:4109:3: ( rule__QuantifiedExpression__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQuantifiedExpressionAccess().getGroup_1()); 
                    }
                    // InternalAcmeParser.g:4110:3: ( rule__QuantifiedExpression__Group_1__0 )
                    // InternalAcmeParser.g:4110:4: rule__QuantifiedExpression__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__QuantifiedExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQuantifiedExpressionAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAcmeParser.g:4114:2: ( ( rule__QuantifiedExpression__Group_2__0 ) )
                    {
                    // InternalAcmeParser.g:4114:2: ( ( rule__QuantifiedExpression__Group_2__0 ) )
                    // InternalAcmeParser.g:4115:3: ( rule__QuantifiedExpression__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQuantifiedExpressionAccess().getGroup_2()); 
                    }
                    // InternalAcmeParser.g:4116:3: ( rule__QuantifiedExpression__Group_2__0 )
                    // InternalAcmeParser.g:4116:4: rule__QuantifiedExpression__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__QuantifiedExpression__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQuantifiedExpressionAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Alternatives"


    // $ANTLR start "rule__QuantifiedExpression__RangeAlternatives_0_5_0"
    // InternalAcmeParser.g:4124:1: rule__QuantifiedExpression__RangeAlternatives_0_5_0 : ( ( rulesetExpression ) | ( ruleidExpression ) );
    public final void rule__QuantifiedExpression__RangeAlternatives_0_5_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4128:1: ( ( rulesetExpression ) | ( ruleidExpression ) )
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==LeftCurlyBracket) ) {
                alt77=1;
            }
            else if ( ((LA77_0>=TNULL && LA77_0<=False)||LA77_0==True||LA77_0==Apostrophe||(LA77_0>=RULE_FLOAT && LA77_0<=RULE_STRING)) ) {
                alt77=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 77, 0, input);

                throw nvae;
            }
            switch (alt77) {
                case 1 :
                    // InternalAcmeParser.g:4129:2: ( rulesetExpression )
                    {
                    // InternalAcmeParser.g:4129:2: ( rulesetExpression )
                    // InternalAcmeParser.g:4130:3: rulesetExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQuantifiedExpressionAccess().getRangeSetExpressionParserRuleCall_0_5_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    rulesetExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQuantifiedExpressionAccess().getRangeSetExpressionParserRuleCall_0_5_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:4135:2: ( ruleidExpression )
                    {
                    // InternalAcmeParser.g:4135:2: ( ruleidExpression )
                    // InternalAcmeParser.g:4136:3: ruleidExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQuantifiedExpressionAccess().getRangeIdExpressionParserRuleCall_0_5_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleidExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQuantifiedExpressionAccess().getRangeIdExpressionParserRuleCall_0_5_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__RangeAlternatives_0_5_0"


    // $ANTLR start "rule__QuantifiedExpression__RangeAlternatives_1_5_0"
    // InternalAcmeParser.g:4145:1: rule__QuantifiedExpression__RangeAlternatives_1_5_0 : ( ( rulesetExpression ) | ( ruleidExpression ) );
    public final void rule__QuantifiedExpression__RangeAlternatives_1_5_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4149:1: ( ( rulesetExpression ) | ( ruleidExpression ) )
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==LeftCurlyBracket) ) {
                alt78=1;
            }
            else if ( ((LA78_0>=TNULL && LA78_0<=False)||LA78_0==True||LA78_0==Apostrophe||(LA78_0>=RULE_FLOAT && LA78_0<=RULE_STRING)) ) {
                alt78=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 78, 0, input);

                throw nvae;
            }
            switch (alt78) {
                case 1 :
                    // InternalAcmeParser.g:4150:2: ( rulesetExpression )
                    {
                    // InternalAcmeParser.g:4150:2: ( rulesetExpression )
                    // InternalAcmeParser.g:4151:3: rulesetExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQuantifiedExpressionAccess().getRangeSetExpressionParserRuleCall_1_5_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    rulesetExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQuantifiedExpressionAccess().getRangeSetExpressionParserRuleCall_1_5_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:4156:2: ( ruleidExpression )
                    {
                    // InternalAcmeParser.g:4156:2: ( ruleidExpression )
                    // InternalAcmeParser.g:4157:3: ruleidExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQuantifiedExpressionAccess().getRangeIdExpressionParserRuleCall_1_5_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleidExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQuantifiedExpressionAccess().getRangeIdExpressionParserRuleCall_1_5_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__RangeAlternatives_1_5_0"


    // $ANTLR start "rule__QuantifiedExpression__RangeAlternatives_2_5_0"
    // InternalAcmeParser.g:4166:1: rule__QuantifiedExpression__RangeAlternatives_2_5_0 : ( ( rulesetExpression ) | ( ruleidExpression ) );
    public final void rule__QuantifiedExpression__RangeAlternatives_2_5_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4170:1: ( ( rulesetExpression ) | ( ruleidExpression ) )
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==LeftCurlyBracket) ) {
                alt79=1;
            }
            else if ( ((LA79_0>=TNULL && LA79_0<=False)||LA79_0==True||LA79_0==Apostrophe||(LA79_0>=RULE_FLOAT && LA79_0<=RULE_STRING)) ) {
                alt79=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 79, 0, input);

                throw nvae;
            }
            switch (alt79) {
                case 1 :
                    // InternalAcmeParser.g:4171:2: ( rulesetExpression )
                    {
                    // InternalAcmeParser.g:4171:2: ( rulesetExpression )
                    // InternalAcmeParser.g:4172:3: rulesetExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQuantifiedExpressionAccess().getRangeSetExpressionParserRuleCall_2_5_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    rulesetExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQuantifiedExpressionAccess().getRangeSetExpressionParserRuleCall_2_5_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:4177:2: ( ruleidExpression )
                    {
                    // InternalAcmeParser.g:4177:2: ( ruleidExpression )
                    // InternalAcmeParser.g:4178:3: ruleidExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQuantifiedExpressionAccess().getRangeIdExpressionParserRuleCall_2_5_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleidExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQuantifiedExpressionAccess().getRangeIdExpressionParserRuleCall_2_5_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__RangeAlternatives_2_5_0"


    // $ANTLR start "rule__PathExpression__Alternatives_1"
    // InternalAcmeParser.g:4187:1: rule__PathExpression__Alternatives_1 : ( ( ( rule__PathExpression__IdAssignment_1_0 ) ) | ( ( rule__PathExpression__CallAssignment_1_1 ) ) );
    public final void rule__PathExpression__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4191:1: ( ( ( rule__PathExpression__IdAssignment_1_0 ) ) | ( ( rule__PathExpression__CallAssignment_1_1 ) ) )
            int alt80=2;
            alt80 = dfa80.predict(input);
            switch (alt80) {
                case 1 :
                    // InternalAcmeParser.g:4192:2: ( ( rule__PathExpression__IdAssignment_1_0 ) )
                    {
                    // InternalAcmeParser.g:4192:2: ( ( rule__PathExpression__IdAssignment_1_0 ) )
                    // InternalAcmeParser.g:4193:3: ( rule__PathExpression__IdAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPathExpressionAccess().getIdAssignment_1_0()); 
                    }
                    // InternalAcmeParser.g:4194:3: ( rule__PathExpression__IdAssignment_1_0 )
                    // InternalAcmeParser.g:4194:4: rule__PathExpression__IdAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PathExpression__IdAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPathExpressionAccess().getIdAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:4198:2: ( ( rule__PathExpression__CallAssignment_1_1 ) )
                    {
                    // InternalAcmeParser.g:4198:2: ( ( rule__PathExpression__CallAssignment_1_1 ) )
                    // InternalAcmeParser.g:4199:3: ( rule__PathExpression__CallAssignment_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPathExpressionAccess().getCallAssignment_1_1()); 
                    }
                    // InternalAcmeParser.g:4200:3: ( rule__PathExpression__CallAssignment_1_1 )
                    // InternalAcmeParser.g:4200:4: rule__PathExpression__CallAssignment_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__PathExpression__CallAssignment_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPathExpressionAccess().getCallAssignment_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpression__Alternatives_1"


    // $ANTLR start "rule__PathExpression__DeclaresAlternatives_2_0_0"
    // InternalAcmeParser.g:4208:1: rule__PathExpression__DeclaresAlternatives_2_0_0 : ( ( Colon ) | ( ColonExclamationMark ) );
    public final void rule__PathExpression__DeclaresAlternatives_2_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4212:1: ( ( Colon ) | ( ColonExclamationMark ) )
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==Colon) ) {
                alt81=1;
            }
            else if ( (LA81_0==ColonExclamationMark) ) {
                alt81=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 81, 0, input);

                throw nvae;
            }
            switch (alt81) {
                case 1 :
                    // InternalAcmeParser.g:4213:2: ( Colon )
                    {
                    // InternalAcmeParser.g:4213:2: ( Colon )
                    // InternalAcmeParser.g:4214:3: Colon
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPathExpressionAccess().getDeclaresColonKeyword_2_0_0_0()); 
                    }
                    match(input,Colon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPathExpressionAccess().getDeclaresColonKeyword_2_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:4219:2: ( ColonExclamationMark )
                    {
                    // InternalAcmeParser.g:4219:2: ( ColonExclamationMark )
                    // InternalAcmeParser.g:4220:3: ColonExclamationMark
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPathExpressionAccess().getDeclaresColonExclamationMarkKeyword_2_0_0_1()); 
                    }
                    match(input,ColonExclamationMark,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPathExpressionAccess().getDeclaresColonExclamationMarkKeyword_2_0_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpression__DeclaresAlternatives_2_0_0"


    // $ANTLR start "rule__PathExpressionContinuation__DeclaresAlternatives_4_0_0"
    // InternalAcmeParser.g:4229:1: rule__PathExpressionContinuation__DeclaresAlternatives_4_0_0 : ( ( Colon ) | ( ColonExclamationMark ) );
    public final void rule__PathExpressionContinuation__DeclaresAlternatives_4_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4233:1: ( ( Colon ) | ( ColonExclamationMark ) )
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==Colon) ) {
                alt82=1;
            }
            else if ( (LA82_0==ColonExclamationMark) ) {
                alt82=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 82, 0, input);

                throw nvae;
            }
            switch (alt82) {
                case 1 :
                    // InternalAcmeParser.g:4234:2: ( Colon )
                    {
                    // InternalAcmeParser.g:4234:2: ( Colon )
                    // InternalAcmeParser.g:4235:3: Colon
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPathExpressionContinuationAccess().getDeclaresColonKeyword_4_0_0_0()); 
                    }
                    match(input,Colon,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPathExpressionContinuationAccess().getDeclaresColonKeyword_4_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:4240:2: ( ColonExclamationMark )
                    {
                    // InternalAcmeParser.g:4240:2: ( ColonExclamationMark )
                    // InternalAcmeParser.g:4241:3: ColonExclamationMark
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPathExpressionContinuationAccess().getDeclaresColonExclamationMarkKeyword_4_0_0_1()); 
                    }
                    match(input,ColonExclamationMark,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPathExpressionContinuationAccess().getDeclaresColonExclamationMarkKeyword_4_0_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpressionContinuation__DeclaresAlternatives_4_0_0"


    // $ANTLR start "rule__DataType__Alternatives"
    // InternalAcmeParser.g:4250:1: rule__DataType__Alternatives : ( ( ( rule__DataType__Group_0__0 ) ) | ( ( rule__DataType__Group_1__0 ) ) | ( ( rule__DataType__Group_2__0 ) ) | ( ( rule__DataType__Group_3__0 ) ) | ( ( rule__DataType__Group_4__0 ) ) | ( ( rule__DataType__Group_5__0 ) ) | ( ( rule__DataType__Group_6__0 ) ) | ( ( rule__DataType__Group_7__0 ) ) | ( ( rule__DataType__Group_8__0 ) ) | ( ( rule__DataType__Group_9__0 ) ) | ( ( rule__DataType__Group_10__0 ) ) | ( ( rule__DataType__IAssignment_11 ) ) );
    public final void rule__DataType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4254:1: ( ( ( rule__DataType__Group_0__0 ) ) | ( ( rule__DataType__Group_1__0 ) ) | ( ( rule__DataType__Group_2__0 ) ) | ( ( rule__DataType__Group_3__0 ) ) | ( ( rule__DataType__Group_4__0 ) ) | ( ( rule__DataType__Group_5__0 ) ) | ( ( rule__DataType__Group_6__0 ) ) | ( ( rule__DataType__Group_7__0 ) ) | ( ( rule__DataType__Group_8__0 ) ) | ( ( rule__DataType__Group_9__0 ) ) | ( ( rule__DataType__Group_10__0 ) ) | ( ( rule__DataType__IAssignment_11 ) ) )
            int alt83=12;
            switch ( input.LA(1) ) {
            case Object:
                {
                alt83=1;
                }
                break;
            case Int:
                {
                alt83=2;
                }
                break;
            case Float:
                {
                alt83=3;
                }
                break;
            case Boolean:
                {
                alt83=4;
                }
                break;
            case Bool:
                {
                alt83=5;
                }
                break;
            case Char:
                {
                alt83=6;
                }
                break;
            case String:
                {
                alt83=7;
                }
                break;
            case Set:
                {
                alt83=8;
                }
                break;
            case Sequence:
            case Seq:
                {
                alt83=9;
                }
                break;
            case Record:
                {
                alt83=10;
                }
                break;
            case Enum:
                {
                alt83=11;
                }
                break;
            case RULE_ID:
                {
                alt83=12;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 83, 0, input);

                throw nvae;
            }

            switch (alt83) {
                case 1 :
                    // InternalAcmeParser.g:4255:2: ( ( rule__DataType__Group_0__0 ) )
                    {
                    // InternalAcmeParser.g:4255:2: ( ( rule__DataType__Group_0__0 ) )
                    // InternalAcmeParser.g:4256:3: ( rule__DataType__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeAccess().getGroup_0()); 
                    }
                    // InternalAcmeParser.g:4257:3: ( rule__DataType__Group_0__0 )
                    // InternalAcmeParser.g:4257:4: rule__DataType__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DataType__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:4261:2: ( ( rule__DataType__Group_1__0 ) )
                    {
                    // InternalAcmeParser.g:4261:2: ( ( rule__DataType__Group_1__0 ) )
                    // InternalAcmeParser.g:4262:3: ( rule__DataType__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeAccess().getGroup_1()); 
                    }
                    // InternalAcmeParser.g:4263:3: ( rule__DataType__Group_1__0 )
                    // InternalAcmeParser.g:4263:4: rule__DataType__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DataType__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAcmeParser.g:4267:2: ( ( rule__DataType__Group_2__0 ) )
                    {
                    // InternalAcmeParser.g:4267:2: ( ( rule__DataType__Group_2__0 ) )
                    // InternalAcmeParser.g:4268:3: ( rule__DataType__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeAccess().getGroup_2()); 
                    }
                    // InternalAcmeParser.g:4269:3: ( rule__DataType__Group_2__0 )
                    // InternalAcmeParser.g:4269:4: rule__DataType__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DataType__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalAcmeParser.g:4273:2: ( ( rule__DataType__Group_3__0 ) )
                    {
                    // InternalAcmeParser.g:4273:2: ( ( rule__DataType__Group_3__0 ) )
                    // InternalAcmeParser.g:4274:3: ( rule__DataType__Group_3__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeAccess().getGroup_3()); 
                    }
                    // InternalAcmeParser.g:4275:3: ( rule__DataType__Group_3__0 )
                    // InternalAcmeParser.g:4275:4: rule__DataType__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DataType__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeAccess().getGroup_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalAcmeParser.g:4279:2: ( ( rule__DataType__Group_4__0 ) )
                    {
                    // InternalAcmeParser.g:4279:2: ( ( rule__DataType__Group_4__0 ) )
                    // InternalAcmeParser.g:4280:3: ( rule__DataType__Group_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeAccess().getGroup_4()); 
                    }
                    // InternalAcmeParser.g:4281:3: ( rule__DataType__Group_4__0 )
                    // InternalAcmeParser.g:4281:4: rule__DataType__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DataType__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeAccess().getGroup_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalAcmeParser.g:4285:2: ( ( rule__DataType__Group_5__0 ) )
                    {
                    // InternalAcmeParser.g:4285:2: ( ( rule__DataType__Group_5__0 ) )
                    // InternalAcmeParser.g:4286:3: ( rule__DataType__Group_5__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeAccess().getGroup_5()); 
                    }
                    // InternalAcmeParser.g:4287:3: ( rule__DataType__Group_5__0 )
                    // InternalAcmeParser.g:4287:4: rule__DataType__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DataType__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeAccess().getGroup_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalAcmeParser.g:4291:2: ( ( rule__DataType__Group_6__0 ) )
                    {
                    // InternalAcmeParser.g:4291:2: ( ( rule__DataType__Group_6__0 ) )
                    // InternalAcmeParser.g:4292:3: ( rule__DataType__Group_6__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeAccess().getGroup_6()); 
                    }
                    // InternalAcmeParser.g:4293:3: ( rule__DataType__Group_6__0 )
                    // InternalAcmeParser.g:4293:4: rule__DataType__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DataType__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeAccess().getGroup_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalAcmeParser.g:4297:2: ( ( rule__DataType__Group_7__0 ) )
                    {
                    // InternalAcmeParser.g:4297:2: ( ( rule__DataType__Group_7__0 ) )
                    // InternalAcmeParser.g:4298:3: ( rule__DataType__Group_7__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeAccess().getGroup_7()); 
                    }
                    // InternalAcmeParser.g:4299:3: ( rule__DataType__Group_7__0 )
                    // InternalAcmeParser.g:4299:4: rule__DataType__Group_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DataType__Group_7__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeAccess().getGroup_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalAcmeParser.g:4303:2: ( ( rule__DataType__Group_8__0 ) )
                    {
                    // InternalAcmeParser.g:4303:2: ( ( rule__DataType__Group_8__0 ) )
                    // InternalAcmeParser.g:4304:3: ( rule__DataType__Group_8__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeAccess().getGroup_8()); 
                    }
                    // InternalAcmeParser.g:4305:3: ( rule__DataType__Group_8__0 )
                    // InternalAcmeParser.g:4305:4: rule__DataType__Group_8__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DataType__Group_8__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeAccess().getGroup_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalAcmeParser.g:4309:2: ( ( rule__DataType__Group_9__0 ) )
                    {
                    // InternalAcmeParser.g:4309:2: ( ( rule__DataType__Group_9__0 ) )
                    // InternalAcmeParser.g:4310:3: ( rule__DataType__Group_9__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeAccess().getGroup_9()); 
                    }
                    // InternalAcmeParser.g:4311:3: ( rule__DataType__Group_9__0 )
                    // InternalAcmeParser.g:4311:4: rule__DataType__Group_9__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DataType__Group_9__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeAccess().getGroup_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalAcmeParser.g:4315:2: ( ( rule__DataType__Group_10__0 ) )
                    {
                    // InternalAcmeParser.g:4315:2: ( ( rule__DataType__Group_10__0 ) )
                    // InternalAcmeParser.g:4316:3: ( rule__DataType__Group_10__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeAccess().getGroup_10()); 
                    }
                    // InternalAcmeParser.g:4317:3: ( rule__DataType__Group_10__0 )
                    // InternalAcmeParser.g:4317:4: rule__DataType__Group_10__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DataType__Group_10__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeAccess().getGroup_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalAcmeParser.g:4321:2: ( ( rule__DataType__IAssignment_11 ) )
                    {
                    // InternalAcmeParser.g:4321:2: ( ( rule__DataType__IAssignment_11 ) )
                    // InternalAcmeParser.g:4322:3: ( rule__DataType__IAssignment_11 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeAccess().getIAssignment_11()); 
                    }
                    // InternalAcmeParser.g:4323:3: ( rule__DataType__IAssignment_11 )
                    // InternalAcmeParser.g:4323:4: rule__DataType__IAssignment_11
                    {
                    pushFollow(FOLLOW_2);
                    rule__DataType__IAssignment_11();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeAccess().getIAssignment_11()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Alternatives"


    // $ANTLR start "rule__DataType__Alternatives_8_0"
    // InternalAcmeParser.g:4331:1: rule__DataType__Alternatives_8_0 : ( ( Seq ) | ( Sequence ) );
    public final void rule__DataType__Alternatives_8_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4335:1: ( ( Seq ) | ( Sequence ) )
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==Seq) ) {
                alt84=1;
            }
            else if ( (LA84_0==Sequence) ) {
                alt84=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 84, 0, input);

                throw nvae;
            }
            switch (alt84) {
                case 1 :
                    // InternalAcmeParser.g:4336:2: ( Seq )
                    {
                    // InternalAcmeParser.g:4336:2: ( Seq )
                    // InternalAcmeParser.g:4337:3: Seq
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeAccess().getSeqKeyword_8_0_0()); 
                    }
                    match(input,Seq,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeAccess().getSeqKeyword_8_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:4342:2: ( Sequence )
                    {
                    // InternalAcmeParser.g:4342:2: ( Sequence )
                    // InternalAcmeParser.g:4343:3: Sequence
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeAccess().getSequenceKeyword_8_0_1()); 
                    }
                    match(input,Sequence,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeAccess().getSequenceKeyword_8_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Alternatives_8_0"


    // $ANTLR start "rule__Visibility__Alternatives"
    // InternalAcmeParser.g:4352:1: rule__Visibility__Alternatives : ( ( ( Public ) ) | ( ( Private ) ) );
    public final void rule__Visibility__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4356:1: ( ( ( Public ) ) | ( ( Private ) ) )
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==Public) ) {
                alt85=1;
            }
            else if ( (LA85_0==Private) ) {
                alt85=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 85, 0, input);

                throw nvae;
            }
            switch (alt85) {
                case 1 :
                    // InternalAcmeParser.g:4357:2: ( ( Public ) )
                    {
                    // InternalAcmeParser.g:4357:2: ( ( Public ) )
                    // InternalAcmeParser.g:4358:3: ( Public )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVisibilityAccess().getPUBLICEnumLiteralDeclaration_0()); 
                    }
                    // InternalAcmeParser.g:4359:3: ( Public )
                    // InternalAcmeParser.g:4359:4: Public
                    {
                    match(input,Public,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVisibilityAccess().getPUBLICEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:4363:2: ( ( Private ) )
                    {
                    // InternalAcmeParser.g:4363:2: ( ( Private ) )
                    // InternalAcmeParser.g:4364:3: ( Private )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVisibilityAccess().getPRIVATEEnumLiteralDeclaration_1()); 
                    }
                    // InternalAcmeParser.g:4365:3: ( Private )
                    // InternalAcmeParser.g:4365:4: Private
                    {
                    match(input,Private,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVisibilityAccess().getPRIVATEEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Visibility__Alternatives"


    // $ANTLR start "rule__Extensability__Alternatives"
    // InternalAcmeParser.g:4373:1: rule__Extensability__Alternatives : ( ( ( Final ) ) | ( ( Abstract ) ) );
    public final void rule__Extensability__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4377:1: ( ( ( Final ) ) | ( ( Abstract ) ) )
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==Final) ) {
                alt86=1;
            }
            else if ( (LA86_0==Abstract) ) {
                alt86=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 86, 0, input);

                throw nvae;
            }
            switch (alt86) {
                case 1 :
                    // InternalAcmeParser.g:4378:2: ( ( Final ) )
                    {
                    // InternalAcmeParser.g:4378:2: ( ( Final ) )
                    // InternalAcmeParser.g:4379:3: ( Final )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExtensabilityAccess().getFINALEnumLiteralDeclaration_0()); 
                    }
                    // InternalAcmeParser.g:4380:3: ( Final )
                    // InternalAcmeParser.g:4380:4: Final
                    {
                    match(input,Final,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExtensabilityAccess().getFINALEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:4384:2: ( ( Abstract ) )
                    {
                    // InternalAcmeParser.g:4384:2: ( ( Abstract ) )
                    // InternalAcmeParser.g:4385:3: ( Abstract )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExtensabilityAccess().getABSTRACTEnumLiteralDeclaration_1()); 
                    }
                    // InternalAcmeParser.g:4386:3: ( Abstract )
                    // InternalAcmeParser.g:4386:4: Abstract
                    {
                    match(input,Abstract,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExtensabilityAccess().getABSTRACTEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Extensability__Alternatives"


    // $ANTLR start "rule__PrimitivePropertyType__Alternatives"
    // InternalAcmeParser.g:4394:1: rule__PrimitivePropertyType__Alternatives : ( ( ( Int ) ) | ( ( Float ) ) | ( ( Any ) ) | ( ( Double ) ) | ( ( String ) ) | ( ( Boolean ) ) );
    public final void rule__PrimitivePropertyType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4398:1: ( ( ( Int ) ) | ( ( Float ) ) | ( ( Any ) ) | ( ( Double ) ) | ( ( String ) ) | ( ( Boolean ) ) )
            int alt87=6;
            switch ( input.LA(1) ) {
            case Int:
                {
                alt87=1;
                }
                break;
            case Float:
                {
                alt87=2;
                }
                break;
            case Any:
                {
                alt87=3;
                }
                break;
            case Double:
                {
                alt87=4;
                }
                break;
            case String:
                {
                alt87=5;
                }
                break;
            case Boolean:
                {
                alt87=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 87, 0, input);

                throw nvae;
            }

            switch (alt87) {
                case 1 :
                    // InternalAcmeParser.g:4399:2: ( ( Int ) )
                    {
                    // InternalAcmeParser.g:4399:2: ( ( Int ) )
                    // InternalAcmeParser.g:4400:3: ( Int )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimitivePropertyTypeAccess().getINTEnumLiteralDeclaration_0()); 
                    }
                    // InternalAcmeParser.g:4401:3: ( Int )
                    // InternalAcmeParser.g:4401:4: Int
                    {
                    match(input,Int,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimitivePropertyTypeAccess().getINTEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:4405:2: ( ( Float ) )
                    {
                    // InternalAcmeParser.g:4405:2: ( ( Float ) )
                    // InternalAcmeParser.g:4406:3: ( Float )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimitivePropertyTypeAccess().getFLOATEnumLiteralDeclaration_1()); 
                    }
                    // InternalAcmeParser.g:4407:3: ( Float )
                    // InternalAcmeParser.g:4407:4: Float
                    {
                    match(input,Float,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimitivePropertyTypeAccess().getFLOATEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAcmeParser.g:4411:2: ( ( Any ) )
                    {
                    // InternalAcmeParser.g:4411:2: ( ( Any ) )
                    // InternalAcmeParser.g:4412:3: ( Any )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimitivePropertyTypeAccess().getANYEnumLiteralDeclaration_2()); 
                    }
                    // InternalAcmeParser.g:4413:3: ( Any )
                    // InternalAcmeParser.g:4413:4: Any
                    {
                    match(input,Any,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimitivePropertyTypeAccess().getANYEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalAcmeParser.g:4417:2: ( ( Double ) )
                    {
                    // InternalAcmeParser.g:4417:2: ( ( Double ) )
                    // InternalAcmeParser.g:4418:3: ( Double )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimitivePropertyTypeAccess().getDOUBLEEnumLiteralDeclaration_3()); 
                    }
                    // InternalAcmeParser.g:4419:3: ( Double )
                    // InternalAcmeParser.g:4419:4: Double
                    {
                    match(input,Double,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimitivePropertyTypeAccess().getDOUBLEEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalAcmeParser.g:4423:2: ( ( String ) )
                    {
                    // InternalAcmeParser.g:4423:2: ( ( String ) )
                    // InternalAcmeParser.g:4424:3: ( String )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimitivePropertyTypeAccess().getSTRINGEnumLiteralDeclaration_4()); 
                    }
                    // InternalAcmeParser.g:4425:3: ( String )
                    // InternalAcmeParser.g:4425:4: String
                    {
                    match(input,String,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimitivePropertyTypeAccess().getSTRINGEnumLiteralDeclaration_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalAcmeParser.g:4429:2: ( ( Boolean ) )
                    {
                    // InternalAcmeParser.g:4429:2: ( ( Boolean ) )
                    // InternalAcmeParser.g:4430:3: ( Boolean )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimitivePropertyTypeAccess().getBOOLEANEnumLiteralDeclaration_5()); 
                    }
                    // InternalAcmeParser.g:4431:3: ( Boolean )
                    // InternalAcmeParser.g:4431:4: Boolean
                    {
                    match(input,Boolean,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimitivePropertyTypeAccess().getBOOLEANEnumLiteralDeclaration_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimitivePropertyType__Alternatives"


    // $ANTLR start "rule__AssignKind__Alternatives"
    // InternalAcmeParser.g:4439:1: rule__AssignKind__Alternatives : ( ( ( EqualsSign ) ) | ( ( PlusSignEqualsSign ) ) | ( ( HyphenMinusEqualsSign ) ) | ( ( AsteriskEqualsSign ) ) | ( ( SolidusEqualsSign ) ) | ( ( PercentSignEqualsSign ) ) );
    public final void rule__AssignKind__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4443:1: ( ( ( EqualsSign ) ) | ( ( PlusSignEqualsSign ) ) | ( ( HyphenMinusEqualsSign ) ) | ( ( AsteriskEqualsSign ) ) | ( ( SolidusEqualsSign ) ) | ( ( PercentSignEqualsSign ) ) )
            int alt88=6;
            switch ( input.LA(1) ) {
            case EqualsSign:
                {
                alt88=1;
                }
                break;
            case PlusSignEqualsSign:
                {
                alt88=2;
                }
                break;
            case HyphenMinusEqualsSign:
                {
                alt88=3;
                }
                break;
            case AsteriskEqualsSign:
                {
                alt88=4;
                }
                break;
            case SolidusEqualsSign:
                {
                alt88=5;
                }
                break;
            case PercentSignEqualsSign:
                {
                alt88=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 88, 0, input);

                throw nvae;
            }

            switch (alt88) {
                case 1 :
                    // InternalAcmeParser.g:4444:2: ( ( EqualsSign ) )
                    {
                    // InternalAcmeParser.g:4444:2: ( ( EqualsSign ) )
                    // InternalAcmeParser.g:4445:3: ( EqualsSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignKindAccess().getASSIGNEnumLiteralDeclaration_0()); 
                    }
                    // InternalAcmeParser.g:4446:3: ( EqualsSign )
                    // InternalAcmeParser.g:4446:4: EqualsSign
                    {
                    match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignKindAccess().getASSIGNEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAcmeParser.g:4450:2: ( ( PlusSignEqualsSign ) )
                    {
                    // InternalAcmeParser.g:4450:2: ( ( PlusSignEqualsSign ) )
                    // InternalAcmeParser.g:4451:3: ( PlusSignEqualsSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignKindAccess().getADD_ASSIGNEnumLiteralDeclaration_1()); 
                    }
                    // InternalAcmeParser.g:4452:3: ( PlusSignEqualsSign )
                    // InternalAcmeParser.g:4452:4: PlusSignEqualsSign
                    {
                    match(input,PlusSignEqualsSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignKindAccess().getADD_ASSIGNEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAcmeParser.g:4456:2: ( ( HyphenMinusEqualsSign ) )
                    {
                    // InternalAcmeParser.g:4456:2: ( ( HyphenMinusEqualsSign ) )
                    // InternalAcmeParser.g:4457:3: ( HyphenMinusEqualsSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignKindAccess().getMINUS_ASSIGNEnumLiteralDeclaration_2()); 
                    }
                    // InternalAcmeParser.g:4458:3: ( HyphenMinusEqualsSign )
                    // InternalAcmeParser.g:4458:4: HyphenMinusEqualsSign
                    {
                    match(input,HyphenMinusEqualsSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignKindAccess().getMINUS_ASSIGNEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalAcmeParser.g:4462:2: ( ( AsteriskEqualsSign ) )
                    {
                    // InternalAcmeParser.g:4462:2: ( ( AsteriskEqualsSign ) )
                    // InternalAcmeParser.g:4463:3: ( AsteriskEqualsSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignKindAccess().getMULT_ASSIGNEnumLiteralDeclaration_3()); 
                    }
                    // InternalAcmeParser.g:4464:3: ( AsteriskEqualsSign )
                    // InternalAcmeParser.g:4464:4: AsteriskEqualsSign
                    {
                    match(input,AsteriskEqualsSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignKindAccess().getMULT_ASSIGNEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalAcmeParser.g:4468:2: ( ( SolidusEqualsSign ) )
                    {
                    // InternalAcmeParser.g:4468:2: ( ( SolidusEqualsSign ) )
                    // InternalAcmeParser.g:4469:3: ( SolidusEqualsSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignKindAccess().getDIV_ASSIGNEnumLiteralDeclaration_4()); 
                    }
                    // InternalAcmeParser.g:4470:3: ( SolidusEqualsSign )
                    // InternalAcmeParser.g:4470:4: SolidusEqualsSign
                    {
                    match(input,SolidusEqualsSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignKindAccess().getDIV_ASSIGNEnumLiteralDeclaration_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalAcmeParser.g:4474:2: ( ( PercentSignEqualsSign ) )
                    {
                    // InternalAcmeParser.g:4474:2: ( ( PercentSignEqualsSign ) )
                    // InternalAcmeParser.g:4475:3: ( PercentSignEqualsSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssignKindAccess().getREM_ASSIGNEnumLiteralDeclaration_5()); 
                    }
                    // InternalAcmeParser.g:4476:3: ( PercentSignEqualsSign )
                    // InternalAcmeParser.g:4476:4: PercentSignEqualsSign
                    {
                    match(input,PercentSignEqualsSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssignKindAccess().getREM_ASSIGNEnumLiteralDeclaration_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignKind__Alternatives"


    // $ANTLR start "rule__AcmeCompUnit__Group__0"
    // InternalAcmeParser.g:4484:1: rule__AcmeCompUnit__Group__0 : rule__AcmeCompUnit__Group__0__Impl rule__AcmeCompUnit__Group__1 ;
    public final void rule__AcmeCompUnit__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4488:1: ( rule__AcmeCompUnit__Group__0__Impl rule__AcmeCompUnit__Group__1 )
            // InternalAcmeParser.g:4489:2: rule__AcmeCompUnit__Group__0__Impl rule__AcmeCompUnit__Group__1
            {
            pushFollow(FOLLOW_3);
            rule__AcmeCompUnit__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeCompUnit__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeCompUnit__Group__0"


    // $ANTLR start "rule__AcmeCompUnit__Group__0__Impl"
    // InternalAcmeParser.g:4496:1: rule__AcmeCompUnit__Group__0__Impl : ( ( rule__AcmeCompUnit__ImportsAssignment_0 )* ) ;
    public final void rule__AcmeCompUnit__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4500:1: ( ( ( rule__AcmeCompUnit__ImportsAssignment_0 )* ) )
            // InternalAcmeParser.g:4501:1: ( ( rule__AcmeCompUnit__ImportsAssignment_0 )* )
            {
            // InternalAcmeParser.g:4501:1: ( ( rule__AcmeCompUnit__ImportsAssignment_0 )* )
            // InternalAcmeParser.g:4502:2: ( rule__AcmeCompUnit__ImportsAssignment_0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeCompUnitAccess().getImportsAssignment_0()); 
            }
            // InternalAcmeParser.g:4503:2: ( rule__AcmeCompUnit__ImportsAssignment_0 )*
            loop89:
            do {
                int alt89=2;
                int LA89_0 = input.LA(1);

                if ( (LA89_0==Import) ) {
                    alt89=1;
                }


                switch (alt89) {
            	case 1 :
            	    // InternalAcmeParser.g:4503:3: rule__AcmeCompUnit__ImportsAssignment_0
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__AcmeCompUnit__ImportsAssignment_0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop89;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeCompUnitAccess().getImportsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeCompUnit__Group__0__Impl"


    // $ANTLR start "rule__AcmeCompUnit__Group__1"
    // InternalAcmeParser.g:4511:1: rule__AcmeCompUnit__Group__1 : rule__AcmeCompUnit__Group__1__Impl ;
    public final void rule__AcmeCompUnit__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4515:1: ( rule__AcmeCompUnit__Group__1__Impl )
            // InternalAcmeParser.g:4516:2: rule__AcmeCompUnit__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeCompUnit__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeCompUnit__Group__1"


    // $ANTLR start "rule__AcmeCompUnit__Group__1__Impl"
    // InternalAcmeParser.g:4522:1: rule__AcmeCompUnit__Group__1__Impl : ( ( ( rule__AcmeCompUnit__Alternatives_1 ) ) ( ( rule__AcmeCompUnit__Alternatives_1 )* ) ) ;
    public final void rule__AcmeCompUnit__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4526:1: ( ( ( ( rule__AcmeCompUnit__Alternatives_1 ) ) ( ( rule__AcmeCompUnit__Alternatives_1 )* ) ) )
            // InternalAcmeParser.g:4527:1: ( ( ( rule__AcmeCompUnit__Alternatives_1 ) ) ( ( rule__AcmeCompUnit__Alternatives_1 )* ) )
            {
            // InternalAcmeParser.g:4527:1: ( ( ( rule__AcmeCompUnit__Alternatives_1 ) ) ( ( rule__AcmeCompUnit__Alternatives_1 )* ) )
            // InternalAcmeParser.g:4528:2: ( ( rule__AcmeCompUnit__Alternatives_1 ) ) ( ( rule__AcmeCompUnit__Alternatives_1 )* )
            {
            // InternalAcmeParser.g:4528:2: ( ( rule__AcmeCompUnit__Alternatives_1 ) )
            // InternalAcmeParser.g:4529:3: ( rule__AcmeCompUnit__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeCompUnitAccess().getAlternatives_1()); 
            }
            // InternalAcmeParser.g:4530:3: ( rule__AcmeCompUnit__Alternatives_1 )
            // InternalAcmeParser.g:4530:4: rule__AcmeCompUnit__Alternatives_1
            {
            pushFollow(FOLLOW_5);
            rule__AcmeCompUnit__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeCompUnitAccess().getAlternatives_1()); 
            }

            }

            // InternalAcmeParser.g:4533:2: ( ( rule__AcmeCompUnit__Alternatives_1 )* )
            // InternalAcmeParser.g:4534:3: ( rule__AcmeCompUnit__Alternatives_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeCompUnitAccess().getAlternatives_1()); 
            }
            // InternalAcmeParser.g:4535:3: ( rule__AcmeCompUnit__Alternatives_1 )*
            loop90:
            do {
                int alt90=2;
                int LA90_0 = input.LA(1);

                if ( (LA90_0==Family||LA90_0==KW_System) ) {
                    alt90=1;
                }


                switch (alt90) {
            	case 1 :
            	    // InternalAcmeParser.g:4535:4: rule__AcmeCompUnit__Alternatives_1
            	    {
            	    pushFollow(FOLLOW_5);
            	    rule__AcmeCompUnit__Alternatives_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop90;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeCompUnitAccess().getAlternatives_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeCompUnit__Group__1__Impl"


    // $ANTLR start "rule__AcmeImportDeclaration__Group__0"
    // InternalAcmeParser.g:4545:1: rule__AcmeImportDeclaration__Group__0 : rule__AcmeImportDeclaration__Group__0__Impl rule__AcmeImportDeclaration__Group__1 ;
    public final void rule__AcmeImportDeclaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4549:1: ( rule__AcmeImportDeclaration__Group__0__Impl rule__AcmeImportDeclaration__Group__1 )
            // InternalAcmeParser.g:4550:2: rule__AcmeImportDeclaration__Group__0__Impl rule__AcmeImportDeclaration__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__AcmeImportDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeImportDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeImportDeclaration__Group__0"


    // $ANTLR start "rule__AcmeImportDeclaration__Group__0__Impl"
    // InternalAcmeParser.g:4557:1: rule__AcmeImportDeclaration__Group__0__Impl : ( Import ) ;
    public final void rule__AcmeImportDeclaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4561:1: ( ( Import ) )
            // InternalAcmeParser.g:4562:1: ( Import )
            {
            // InternalAcmeParser.g:4562:1: ( Import )
            // InternalAcmeParser.g:4563:2: Import
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeImportDeclarationAccess().getImportKeyword_0()); 
            }
            match(input,Import,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeImportDeclarationAccess().getImportKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeImportDeclaration__Group__0__Impl"


    // $ANTLR start "rule__AcmeImportDeclaration__Group__1"
    // InternalAcmeParser.g:4572:1: rule__AcmeImportDeclaration__Group__1 : rule__AcmeImportDeclaration__Group__1__Impl rule__AcmeImportDeclaration__Group__2 ;
    public final void rule__AcmeImportDeclaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4576:1: ( rule__AcmeImportDeclaration__Group__1__Impl rule__AcmeImportDeclaration__Group__2 )
            // InternalAcmeParser.g:4577:2: rule__AcmeImportDeclaration__Group__1__Impl rule__AcmeImportDeclaration__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__AcmeImportDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeImportDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeImportDeclaration__Group__1"


    // $ANTLR start "rule__AcmeImportDeclaration__Group__1__Impl"
    // InternalAcmeParser.g:4584:1: rule__AcmeImportDeclaration__Group__1__Impl : ( ( rule__AcmeImportDeclaration__Alternatives_1 ) ) ;
    public final void rule__AcmeImportDeclaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4588:1: ( ( ( rule__AcmeImportDeclaration__Alternatives_1 ) ) )
            // InternalAcmeParser.g:4589:1: ( ( rule__AcmeImportDeclaration__Alternatives_1 ) )
            {
            // InternalAcmeParser.g:4589:1: ( ( rule__AcmeImportDeclaration__Alternatives_1 ) )
            // InternalAcmeParser.g:4590:2: ( rule__AcmeImportDeclaration__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeImportDeclarationAccess().getAlternatives_1()); 
            }
            // InternalAcmeParser.g:4591:2: ( rule__AcmeImportDeclaration__Alternatives_1 )
            // InternalAcmeParser.g:4591:3: rule__AcmeImportDeclaration__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeImportDeclaration__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeImportDeclarationAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeImportDeclaration__Group__1__Impl"


    // $ANTLR start "rule__AcmeImportDeclaration__Group__2"
    // InternalAcmeParser.g:4599:1: rule__AcmeImportDeclaration__Group__2 : rule__AcmeImportDeclaration__Group__2__Impl ;
    public final void rule__AcmeImportDeclaration__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4603:1: ( rule__AcmeImportDeclaration__Group__2__Impl )
            // InternalAcmeParser.g:4604:2: rule__AcmeImportDeclaration__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeImportDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeImportDeclaration__Group__2"


    // $ANTLR start "rule__AcmeImportDeclaration__Group__2__Impl"
    // InternalAcmeParser.g:4610:1: rule__AcmeImportDeclaration__Group__2__Impl : ( Semicolon ) ;
    public final void rule__AcmeImportDeclaration__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4614:1: ( ( Semicolon ) )
            // InternalAcmeParser.g:4615:1: ( Semicolon )
            {
            // InternalAcmeParser.g:4615:1: ( Semicolon )
            // InternalAcmeParser.g:4616:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeImportDeclarationAccess().getSemicolonKeyword_2()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeImportDeclarationAccess().getSemicolonKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeImportDeclaration__Group__2__Impl"


    // $ANTLR start "rule__Filename__Group__0"
    // InternalAcmeParser.g:4626:1: rule__Filename__Group__0 : rule__Filename__Group__0__Impl rule__Filename__Group__1 ;
    public final void rule__Filename__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4630:1: ( rule__Filename__Group__0__Impl rule__Filename__Group__1 )
            // InternalAcmeParser.g:4631:2: rule__Filename__Group__0__Impl rule__Filename__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__Filename__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Filename__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Filename__Group__0"


    // $ANTLR start "rule__Filename__Group__0__Impl"
    // InternalAcmeParser.g:4638:1: rule__Filename__Group__0__Impl : ( ( rule__Filename__Alternatives_0 )? ) ;
    public final void rule__Filename__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4642:1: ( ( ( rule__Filename__Alternatives_0 )? ) )
            // InternalAcmeParser.g:4643:1: ( ( rule__Filename__Alternatives_0 )? )
            {
            // InternalAcmeParser.g:4643:1: ( ( rule__Filename__Alternatives_0 )? )
            // InternalAcmeParser.g:4644:2: ( rule__Filename__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilenameAccess().getAlternatives_0()); 
            }
            // InternalAcmeParser.g:4645:2: ( rule__Filename__Alternatives_0 )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( ((LA91_0>=DollarSign && LA91_0<=PercentSign)) ) {
                alt91=1;
            }
            switch (alt91) {
                case 1 :
                    // InternalAcmeParser.g:4645:3: rule__Filename__Alternatives_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Filename__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilenameAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Filename__Group__0__Impl"


    // $ANTLR start "rule__Filename__Group__1"
    // InternalAcmeParser.g:4653:1: rule__Filename__Group__1 : rule__Filename__Group__1__Impl rule__Filename__Group__2 ;
    public final void rule__Filename__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4657:1: ( rule__Filename__Group__1__Impl rule__Filename__Group__2 )
            // InternalAcmeParser.g:4658:2: rule__Filename__Group__1__Impl rule__Filename__Group__2
            {
            pushFollow(FOLLOW_9);
            rule__Filename__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Filename__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Filename__Group__1"


    // $ANTLR start "rule__Filename__Group__1__Impl"
    // InternalAcmeParser.g:4665:1: rule__Filename__Group__1__Impl : ( RULE_ID ) ;
    public final void rule__Filename__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4669:1: ( ( RULE_ID ) )
            // InternalAcmeParser.g:4670:1: ( RULE_ID )
            {
            // InternalAcmeParser.g:4670:1: ( RULE_ID )
            // InternalAcmeParser.g:4671:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilenameAccess().getIDTerminalRuleCall_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilenameAccess().getIDTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Filename__Group__1__Impl"


    // $ANTLR start "rule__Filename__Group__2"
    // InternalAcmeParser.g:4680:1: rule__Filename__Group__2 : rule__Filename__Group__2__Impl ;
    public final void rule__Filename__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4684:1: ( rule__Filename__Group__2__Impl )
            // InternalAcmeParser.g:4685:2: rule__Filename__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Filename__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Filename__Group__2"


    // $ANTLR start "rule__Filename__Group__2__Impl"
    // InternalAcmeParser.g:4691:1: rule__Filename__Group__2__Impl : ( ( rule__Filename__Group_2__0 )* ) ;
    public final void rule__Filename__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4695:1: ( ( ( rule__Filename__Group_2__0 )* ) )
            // InternalAcmeParser.g:4696:1: ( ( rule__Filename__Group_2__0 )* )
            {
            // InternalAcmeParser.g:4696:1: ( ( rule__Filename__Group_2__0 )* )
            // InternalAcmeParser.g:4697:2: ( rule__Filename__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilenameAccess().getGroup_2()); 
            }
            // InternalAcmeParser.g:4698:2: ( rule__Filename__Group_2__0 )*
            loop92:
            do {
                int alt92=2;
                int LA92_0 = input.LA(1);

                if ( (LA92_0==ReverseSolidusReverseSolidus||(LA92_0>=DollarSign && LA92_0<=PercentSign)||LA92_0==PlusSign||(LA92_0>=HyphenMinus && LA92_0<=Colon)||LA92_0==Backslash) ) {
                    alt92=1;
                }


                switch (alt92) {
            	case 1 :
            	    // InternalAcmeParser.g:4698:3: rule__Filename__Group_2__0
            	    {
            	    pushFollow(FOLLOW_10);
            	    rule__Filename__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop92;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilenameAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Filename__Group__2__Impl"


    // $ANTLR start "rule__Filename__Group_2__0"
    // InternalAcmeParser.g:4707:1: rule__Filename__Group_2__0 : rule__Filename__Group_2__0__Impl rule__Filename__Group_2__1 ;
    public final void rule__Filename__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4711:1: ( rule__Filename__Group_2__0__Impl rule__Filename__Group_2__1 )
            // InternalAcmeParser.g:4712:2: rule__Filename__Group_2__0__Impl rule__Filename__Group_2__1
            {
            pushFollow(FOLLOW_11);
            rule__Filename__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Filename__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Filename__Group_2__0"


    // $ANTLR start "rule__Filename__Group_2__0__Impl"
    // InternalAcmeParser.g:4719:1: rule__Filename__Group_2__0__Impl : ( ( ( rule__Filename__Alternatives_2_0 ) ) ( ( rule__Filename__Alternatives_2_0 )* ) ) ;
    public final void rule__Filename__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4723:1: ( ( ( ( rule__Filename__Alternatives_2_0 ) ) ( ( rule__Filename__Alternatives_2_0 )* ) ) )
            // InternalAcmeParser.g:4724:1: ( ( ( rule__Filename__Alternatives_2_0 ) ) ( ( rule__Filename__Alternatives_2_0 )* ) )
            {
            // InternalAcmeParser.g:4724:1: ( ( ( rule__Filename__Alternatives_2_0 ) ) ( ( rule__Filename__Alternatives_2_0 )* ) )
            // InternalAcmeParser.g:4725:2: ( ( rule__Filename__Alternatives_2_0 ) ) ( ( rule__Filename__Alternatives_2_0 )* )
            {
            // InternalAcmeParser.g:4725:2: ( ( rule__Filename__Alternatives_2_0 ) )
            // InternalAcmeParser.g:4726:3: ( rule__Filename__Alternatives_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilenameAccess().getAlternatives_2_0()); 
            }
            // InternalAcmeParser.g:4727:3: ( rule__Filename__Alternatives_2_0 )
            // InternalAcmeParser.g:4727:4: rule__Filename__Alternatives_2_0
            {
            pushFollow(FOLLOW_10);
            rule__Filename__Alternatives_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilenameAccess().getAlternatives_2_0()); 
            }

            }

            // InternalAcmeParser.g:4730:2: ( ( rule__Filename__Alternatives_2_0 )* )
            // InternalAcmeParser.g:4731:3: ( rule__Filename__Alternatives_2_0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilenameAccess().getAlternatives_2_0()); 
            }
            // InternalAcmeParser.g:4732:3: ( rule__Filename__Alternatives_2_0 )*
            loop93:
            do {
                int alt93=2;
                int LA93_0 = input.LA(1);

                if ( (LA93_0==ReverseSolidusReverseSolidus||(LA93_0>=DollarSign && LA93_0<=PercentSign)||LA93_0==PlusSign||(LA93_0>=HyphenMinus && LA93_0<=Colon)||LA93_0==Backslash) ) {
                    alt93=1;
                }


                switch (alt93) {
            	case 1 :
            	    // InternalAcmeParser.g:4732:4: rule__Filename__Alternatives_2_0
            	    {
            	    pushFollow(FOLLOW_10);
            	    rule__Filename__Alternatives_2_0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop93;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilenameAccess().getAlternatives_2_0()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Filename__Group_2__0__Impl"


    // $ANTLR start "rule__Filename__Group_2__1"
    // InternalAcmeParser.g:4741:1: rule__Filename__Group_2__1 : rule__Filename__Group_2__1__Impl ;
    public final void rule__Filename__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4745:1: ( rule__Filename__Group_2__1__Impl )
            // InternalAcmeParser.g:4746:2: rule__Filename__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Filename__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Filename__Group_2__1"


    // $ANTLR start "rule__Filename__Group_2__1__Impl"
    // InternalAcmeParser.g:4752:1: rule__Filename__Group_2__1__Impl : ( RULE_ID ) ;
    public final void rule__Filename__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4756:1: ( ( RULE_ID ) )
            // InternalAcmeParser.g:4757:1: ( RULE_ID )
            {
            // InternalAcmeParser.g:4757:1: ( RULE_ID )
            // InternalAcmeParser.g:4758:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilenameAccess().getIDTerminalRuleCall_2_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilenameAccess().getIDTerminalRuleCall_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Filename__Group_2__1__Impl"


    // $ANTLR start "rule__AcmeFamilyDeclaration__Group__0"
    // InternalAcmeParser.g:4768:1: rule__AcmeFamilyDeclaration__Group__0 : rule__AcmeFamilyDeclaration__Group__0__Impl rule__AcmeFamilyDeclaration__Group__1 ;
    public final void rule__AcmeFamilyDeclaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4772:1: ( rule__AcmeFamilyDeclaration__Group__0__Impl rule__AcmeFamilyDeclaration__Group__1 )
            // InternalAcmeParser.g:4773:2: rule__AcmeFamilyDeclaration__Group__0__Impl rule__AcmeFamilyDeclaration__Group__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeFamilyDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeFamilyDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyDeclaration__Group__0"


    // $ANTLR start "rule__AcmeFamilyDeclaration__Group__0__Impl"
    // InternalAcmeParser.g:4780:1: rule__AcmeFamilyDeclaration__Group__0__Impl : ( Family ) ;
    public final void rule__AcmeFamilyDeclaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4784:1: ( ( Family ) )
            // InternalAcmeParser.g:4785:1: ( Family )
            {
            // InternalAcmeParser.g:4785:1: ( Family )
            // InternalAcmeParser.g:4786:2: Family
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyDeclarationAccess().getFamilyKeyword_0()); 
            }
            match(input,Family,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyDeclarationAccess().getFamilyKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyDeclaration__Group__0__Impl"


    // $ANTLR start "rule__AcmeFamilyDeclaration__Group__1"
    // InternalAcmeParser.g:4795:1: rule__AcmeFamilyDeclaration__Group__1 : rule__AcmeFamilyDeclaration__Group__1__Impl rule__AcmeFamilyDeclaration__Group__2 ;
    public final void rule__AcmeFamilyDeclaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4799:1: ( rule__AcmeFamilyDeclaration__Group__1__Impl rule__AcmeFamilyDeclaration__Group__2 )
            // InternalAcmeParser.g:4800:2: rule__AcmeFamilyDeclaration__Group__1__Impl rule__AcmeFamilyDeclaration__Group__2
            {
            pushFollow(FOLLOW_12);
            rule__AcmeFamilyDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeFamilyDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyDeclaration__Group__1"


    // $ANTLR start "rule__AcmeFamilyDeclaration__Group__1__Impl"
    // InternalAcmeParser.g:4807:1: rule__AcmeFamilyDeclaration__Group__1__Impl : ( ( rule__AcmeFamilyDeclaration__NameAssignment_1 ) ) ;
    public final void rule__AcmeFamilyDeclaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4811:1: ( ( ( rule__AcmeFamilyDeclaration__NameAssignment_1 ) ) )
            // InternalAcmeParser.g:4812:1: ( ( rule__AcmeFamilyDeclaration__NameAssignment_1 ) )
            {
            // InternalAcmeParser.g:4812:1: ( ( rule__AcmeFamilyDeclaration__NameAssignment_1 ) )
            // InternalAcmeParser.g:4813:2: ( rule__AcmeFamilyDeclaration__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyDeclarationAccess().getNameAssignment_1()); 
            }
            // InternalAcmeParser.g:4814:2: ( rule__AcmeFamilyDeclaration__NameAssignment_1 )
            // InternalAcmeParser.g:4814:3: rule__AcmeFamilyDeclaration__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeFamilyDeclaration__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyDeclarationAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyDeclaration__Group__1__Impl"


    // $ANTLR start "rule__AcmeFamilyDeclaration__Group__2"
    // InternalAcmeParser.g:4822:1: rule__AcmeFamilyDeclaration__Group__2 : rule__AcmeFamilyDeclaration__Group__2__Impl ;
    public final void rule__AcmeFamilyDeclaration__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4826:1: ( rule__AcmeFamilyDeclaration__Group__2__Impl )
            // InternalAcmeParser.g:4827:2: rule__AcmeFamilyDeclaration__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeFamilyDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyDeclaration__Group__2"


    // $ANTLR start "rule__AcmeFamilyDeclaration__Group__2__Impl"
    // InternalAcmeParser.g:4833:1: rule__AcmeFamilyDeclaration__Group__2__Impl : ( ( rule__AcmeFamilyDeclaration__Alternatives_2 ) ) ;
    public final void rule__AcmeFamilyDeclaration__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4837:1: ( ( ( rule__AcmeFamilyDeclaration__Alternatives_2 ) ) )
            // InternalAcmeParser.g:4838:1: ( ( rule__AcmeFamilyDeclaration__Alternatives_2 ) )
            {
            // InternalAcmeParser.g:4838:1: ( ( rule__AcmeFamilyDeclaration__Alternatives_2 ) )
            // InternalAcmeParser.g:4839:2: ( rule__AcmeFamilyDeclaration__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyDeclarationAccess().getAlternatives_2()); 
            }
            // InternalAcmeParser.g:4840:2: ( rule__AcmeFamilyDeclaration__Alternatives_2 )
            // InternalAcmeParser.g:4840:3: rule__AcmeFamilyDeclaration__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__AcmeFamilyDeclaration__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyDeclarationAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyDeclaration__Group__2__Impl"


    // $ANTLR start "rule__AcmeFamilyDeclaration__Group_2_1__0"
    // InternalAcmeParser.g:4849:1: rule__AcmeFamilyDeclaration__Group_2_1__0 : rule__AcmeFamilyDeclaration__Group_2_1__0__Impl rule__AcmeFamilyDeclaration__Group_2_1__1 ;
    public final void rule__AcmeFamilyDeclaration__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4853:1: ( rule__AcmeFamilyDeclaration__Group_2_1__0__Impl rule__AcmeFamilyDeclaration__Group_2_1__1 )
            // InternalAcmeParser.g:4854:2: rule__AcmeFamilyDeclaration__Group_2_1__0__Impl rule__AcmeFamilyDeclaration__Group_2_1__1
            {
            pushFollow(FOLLOW_13);
            rule__AcmeFamilyDeclaration__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeFamilyDeclaration__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyDeclaration__Group_2_1__0"


    // $ANTLR start "rule__AcmeFamilyDeclaration__Group_2_1__0__Impl"
    // InternalAcmeParser.g:4861:1: rule__AcmeFamilyDeclaration__Group_2_1__0__Impl : ( ( rule__AcmeFamilyDeclaration__Alternatives_2_1_0 ) ) ;
    public final void rule__AcmeFamilyDeclaration__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4865:1: ( ( ( rule__AcmeFamilyDeclaration__Alternatives_2_1_0 ) ) )
            // InternalAcmeParser.g:4866:1: ( ( rule__AcmeFamilyDeclaration__Alternatives_2_1_0 ) )
            {
            // InternalAcmeParser.g:4866:1: ( ( rule__AcmeFamilyDeclaration__Alternatives_2_1_0 ) )
            // InternalAcmeParser.g:4867:2: ( rule__AcmeFamilyDeclaration__Alternatives_2_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyDeclarationAccess().getAlternatives_2_1_0()); 
            }
            // InternalAcmeParser.g:4868:2: ( rule__AcmeFamilyDeclaration__Alternatives_2_1_0 )
            // InternalAcmeParser.g:4868:3: rule__AcmeFamilyDeclaration__Alternatives_2_1_0
            {
            pushFollow(FOLLOW_2);
            rule__AcmeFamilyDeclaration__Alternatives_2_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyDeclarationAccess().getAlternatives_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyDeclaration__Group_2_1__0__Impl"


    // $ANTLR start "rule__AcmeFamilyDeclaration__Group_2_1__1"
    // InternalAcmeParser.g:4876:1: rule__AcmeFamilyDeclaration__Group_2_1__1 : rule__AcmeFamilyDeclaration__Group_2_1__1__Impl rule__AcmeFamilyDeclaration__Group_2_1__2 ;
    public final void rule__AcmeFamilyDeclaration__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4880:1: ( rule__AcmeFamilyDeclaration__Group_2_1__1__Impl rule__AcmeFamilyDeclaration__Group_2_1__2 )
            // InternalAcmeParser.g:4881:2: rule__AcmeFamilyDeclaration__Group_2_1__1__Impl rule__AcmeFamilyDeclaration__Group_2_1__2
            {
            pushFollow(FOLLOW_7);
            rule__AcmeFamilyDeclaration__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeFamilyDeclaration__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyDeclaration__Group_2_1__1"


    // $ANTLR start "rule__AcmeFamilyDeclaration__Group_2_1__1__Impl"
    // InternalAcmeParser.g:4888:1: rule__AcmeFamilyDeclaration__Group_2_1__1__Impl : ( ( rule__AcmeFamilyDeclaration__BodyAssignment_2_1_1 ) ) ;
    public final void rule__AcmeFamilyDeclaration__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4892:1: ( ( ( rule__AcmeFamilyDeclaration__BodyAssignment_2_1_1 ) ) )
            // InternalAcmeParser.g:4893:1: ( ( rule__AcmeFamilyDeclaration__BodyAssignment_2_1_1 ) )
            {
            // InternalAcmeParser.g:4893:1: ( ( rule__AcmeFamilyDeclaration__BodyAssignment_2_1_1 ) )
            // InternalAcmeParser.g:4894:2: ( rule__AcmeFamilyDeclaration__BodyAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyDeclarationAccess().getBodyAssignment_2_1_1()); 
            }
            // InternalAcmeParser.g:4895:2: ( rule__AcmeFamilyDeclaration__BodyAssignment_2_1_1 )
            // InternalAcmeParser.g:4895:3: rule__AcmeFamilyDeclaration__BodyAssignment_2_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeFamilyDeclaration__BodyAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyDeclarationAccess().getBodyAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyDeclaration__Group_2_1__1__Impl"


    // $ANTLR start "rule__AcmeFamilyDeclaration__Group_2_1__2"
    // InternalAcmeParser.g:4903:1: rule__AcmeFamilyDeclaration__Group_2_1__2 : rule__AcmeFamilyDeclaration__Group_2_1__2__Impl ;
    public final void rule__AcmeFamilyDeclaration__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4907:1: ( rule__AcmeFamilyDeclaration__Group_2_1__2__Impl )
            // InternalAcmeParser.g:4908:2: rule__AcmeFamilyDeclaration__Group_2_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeFamilyDeclaration__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyDeclaration__Group_2_1__2"


    // $ANTLR start "rule__AcmeFamilyDeclaration__Group_2_1__2__Impl"
    // InternalAcmeParser.g:4914:1: rule__AcmeFamilyDeclaration__Group_2_1__2__Impl : ( ( Semicolon )? ) ;
    public final void rule__AcmeFamilyDeclaration__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4918:1: ( ( ( Semicolon )? ) )
            // InternalAcmeParser.g:4919:1: ( ( Semicolon )? )
            {
            // InternalAcmeParser.g:4919:1: ( ( Semicolon )? )
            // InternalAcmeParser.g:4920:2: ( Semicolon )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyDeclarationAccess().getSemicolonKeyword_2_1_2()); 
            }
            // InternalAcmeParser.g:4921:2: ( Semicolon )?
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==Semicolon) ) {
                alt94=1;
            }
            switch (alt94) {
                case 1 :
                    // InternalAcmeParser.g:4921:3: Semicolon
                    {
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyDeclarationAccess().getSemicolonKeyword_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyDeclaration__Group_2_1__2__Impl"


    // $ANTLR start "rule__AcmeFamilyDeclaration__Group_2_1_0_0__0"
    // InternalAcmeParser.g:4930:1: rule__AcmeFamilyDeclaration__Group_2_1_0_0__0 : rule__AcmeFamilyDeclaration__Group_2_1_0_0__0__Impl rule__AcmeFamilyDeclaration__Group_2_1_0_0__1 ;
    public final void rule__AcmeFamilyDeclaration__Group_2_1_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4934:1: ( rule__AcmeFamilyDeclaration__Group_2_1_0_0__0__Impl rule__AcmeFamilyDeclaration__Group_2_1_0_0__1 )
            // InternalAcmeParser.g:4935:2: rule__AcmeFamilyDeclaration__Group_2_1_0_0__0__Impl rule__AcmeFamilyDeclaration__Group_2_1_0_0__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeFamilyDeclaration__Group_2_1_0_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeFamilyDeclaration__Group_2_1_0_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyDeclaration__Group_2_1_0_0__0"


    // $ANTLR start "rule__AcmeFamilyDeclaration__Group_2_1_0_0__0__Impl"
    // InternalAcmeParser.g:4942:1: rule__AcmeFamilyDeclaration__Group_2_1_0_0__0__Impl : ( Extends ) ;
    public final void rule__AcmeFamilyDeclaration__Group_2_1_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4946:1: ( ( Extends ) )
            // InternalAcmeParser.g:4947:1: ( Extends )
            {
            // InternalAcmeParser.g:4947:1: ( Extends )
            // InternalAcmeParser.g:4948:2: Extends
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyDeclarationAccess().getExtendsKeyword_2_1_0_0_0()); 
            }
            match(input,Extends,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyDeclarationAccess().getExtendsKeyword_2_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyDeclaration__Group_2_1_0_0__0__Impl"


    // $ANTLR start "rule__AcmeFamilyDeclaration__Group_2_1_0_0__1"
    // InternalAcmeParser.g:4957:1: rule__AcmeFamilyDeclaration__Group_2_1_0_0__1 : rule__AcmeFamilyDeclaration__Group_2_1_0_0__1__Impl rule__AcmeFamilyDeclaration__Group_2_1_0_0__2 ;
    public final void rule__AcmeFamilyDeclaration__Group_2_1_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4961:1: ( rule__AcmeFamilyDeclaration__Group_2_1_0_0__1__Impl rule__AcmeFamilyDeclaration__Group_2_1_0_0__2 )
            // InternalAcmeParser.g:4962:2: rule__AcmeFamilyDeclaration__Group_2_1_0_0__1__Impl rule__AcmeFamilyDeclaration__Group_2_1_0_0__2
            {
            pushFollow(FOLLOW_14);
            rule__AcmeFamilyDeclaration__Group_2_1_0_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeFamilyDeclaration__Group_2_1_0_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyDeclaration__Group_2_1_0_0__1"


    // $ANTLR start "rule__AcmeFamilyDeclaration__Group_2_1_0_0__1__Impl"
    // InternalAcmeParser.g:4969:1: rule__AcmeFamilyDeclaration__Group_2_1_0_0__1__Impl : ( ( rule__AcmeFamilyDeclaration__RefsAssignment_2_1_0_0_1 ) ) ;
    public final void rule__AcmeFamilyDeclaration__Group_2_1_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4973:1: ( ( ( rule__AcmeFamilyDeclaration__RefsAssignment_2_1_0_0_1 ) ) )
            // InternalAcmeParser.g:4974:1: ( ( rule__AcmeFamilyDeclaration__RefsAssignment_2_1_0_0_1 ) )
            {
            // InternalAcmeParser.g:4974:1: ( ( rule__AcmeFamilyDeclaration__RefsAssignment_2_1_0_0_1 ) )
            // InternalAcmeParser.g:4975:2: ( rule__AcmeFamilyDeclaration__RefsAssignment_2_1_0_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyDeclarationAccess().getRefsAssignment_2_1_0_0_1()); 
            }
            // InternalAcmeParser.g:4976:2: ( rule__AcmeFamilyDeclaration__RefsAssignment_2_1_0_0_1 )
            // InternalAcmeParser.g:4976:3: rule__AcmeFamilyDeclaration__RefsAssignment_2_1_0_0_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeFamilyDeclaration__RefsAssignment_2_1_0_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyDeclarationAccess().getRefsAssignment_2_1_0_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyDeclaration__Group_2_1_0_0__1__Impl"


    // $ANTLR start "rule__AcmeFamilyDeclaration__Group_2_1_0_0__2"
    // InternalAcmeParser.g:4984:1: rule__AcmeFamilyDeclaration__Group_2_1_0_0__2 : rule__AcmeFamilyDeclaration__Group_2_1_0_0__2__Impl rule__AcmeFamilyDeclaration__Group_2_1_0_0__3 ;
    public final void rule__AcmeFamilyDeclaration__Group_2_1_0_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:4988:1: ( rule__AcmeFamilyDeclaration__Group_2_1_0_0__2__Impl rule__AcmeFamilyDeclaration__Group_2_1_0_0__3 )
            // InternalAcmeParser.g:4989:2: rule__AcmeFamilyDeclaration__Group_2_1_0_0__2__Impl rule__AcmeFamilyDeclaration__Group_2_1_0_0__3
            {
            pushFollow(FOLLOW_14);
            rule__AcmeFamilyDeclaration__Group_2_1_0_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeFamilyDeclaration__Group_2_1_0_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyDeclaration__Group_2_1_0_0__2"


    // $ANTLR start "rule__AcmeFamilyDeclaration__Group_2_1_0_0__2__Impl"
    // InternalAcmeParser.g:4996:1: rule__AcmeFamilyDeclaration__Group_2_1_0_0__2__Impl : ( ( rule__AcmeFamilyDeclaration__Group_2_1_0_0_2__0 )* ) ;
    public final void rule__AcmeFamilyDeclaration__Group_2_1_0_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5000:1: ( ( ( rule__AcmeFamilyDeclaration__Group_2_1_0_0_2__0 )* ) )
            // InternalAcmeParser.g:5001:1: ( ( rule__AcmeFamilyDeclaration__Group_2_1_0_0_2__0 )* )
            {
            // InternalAcmeParser.g:5001:1: ( ( rule__AcmeFamilyDeclaration__Group_2_1_0_0_2__0 )* )
            // InternalAcmeParser.g:5002:2: ( rule__AcmeFamilyDeclaration__Group_2_1_0_0_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyDeclarationAccess().getGroup_2_1_0_0_2()); 
            }
            // InternalAcmeParser.g:5003:2: ( rule__AcmeFamilyDeclaration__Group_2_1_0_0_2__0 )*
            loop95:
            do {
                int alt95=2;
                int LA95_0 = input.LA(1);

                if ( (LA95_0==Comma) ) {
                    alt95=1;
                }


                switch (alt95) {
            	case 1 :
            	    // InternalAcmeParser.g:5003:3: rule__AcmeFamilyDeclaration__Group_2_1_0_0_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__AcmeFamilyDeclaration__Group_2_1_0_0_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop95;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyDeclarationAccess().getGroup_2_1_0_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyDeclaration__Group_2_1_0_0__2__Impl"


    // $ANTLR start "rule__AcmeFamilyDeclaration__Group_2_1_0_0__3"
    // InternalAcmeParser.g:5011:1: rule__AcmeFamilyDeclaration__Group_2_1_0_0__3 : rule__AcmeFamilyDeclaration__Group_2_1_0_0__3__Impl ;
    public final void rule__AcmeFamilyDeclaration__Group_2_1_0_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5015:1: ( rule__AcmeFamilyDeclaration__Group_2_1_0_0__3__Impl )
            // InternalAcmeParser.g:5016:2: rule__AcmeFamilyDeclaration__Group_2_1_0_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeFamilyDeclaration__Group_2_1_0_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyDeclaration__Group_2_1_0_0__3"


    // $ANTLR start "rule__AcmeFamilyDeclaration__Group_2_1_0_0__3__Impl"
    // InternalAcmeParser.g:5022:1: rule__AcmeFamilyDeclaration__Group_2_1_0_0__3__Impl : ( With ) ;
    public final void rule__AcmeFamilyDeclaration__Group_2_1_0_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5026:1: ( ( With ) )
            // InternalAcmeParser.g:5027:1: ( With )
            {
            // InternalAcmeParser.g:5027:1: ( With )
            // InternalAcmeParser.g:5028:2: With
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyDeclarationAccess().getWithKeyword_2_1_0_0_3()); 
            }
            match(input,With,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyDeclarationAccess().getWithKeyword_2_1_0_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyDeclaration__Group_2_1_0_0__3__Impl"


    // $ANTLR start "rule__AcmeFamilyDeclaration__Group_2_1_0_0_2__0"
    // InternalAcmeParser.g:5038:1: rule__AcmeFamilyDeclaration__Group_2_1_0_0_2__0 : rule__AcmeFamilyDeclaration__Group_2_1_0_0_2__0__Impl rule__AcmeFamilyDeclaration__Group_2_1_0_0_2__1 ;
    public final void rule__AcmeFamilyDeclaration__Group_2_1_0_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5042:1: ( rule__AcmeFamilyDeclaration__Group_2_1_0_0_2__0__Impl rule__AcmeFamilyDeclaration__Group_2_1_0_0_2__1 )
            // InternalAcmeParser.g:5043:2: rule__AcmeFamilyDeclaration__Group_2_1_0_0_2__0__Impl rule__AcmeFamilyDeclaration__Group_2_1_0_0_2__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeFamilyDeclaration__Group_2_1_0_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeFamilyDeclaration__Group_2_1_0_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyDeclaration__Group_2_1_0_0_2__0"


    // $ANTLR start "rule__AcmeFamilyDeclaration__Group_2_1_0_0_2__0__Impl"
    // InternalAcmeParser.g:5050:1: rule__AcmeFamilyDeclaration__Group_2_1_0_0_2__0__Impl : ( Comma ) ;
    public final void rule__AcmeFamilyDeclaration__Group_2_1_0_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5054:1: ( ( Comma ) )
            // InternalAcmeParser.g:5055:1: ( Comma )
            {
            // InternalAcmeParser.g:5055:1: ( Comma )
            // InternalAcmeParser.g:5056:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyDeclarationAccess().getCommaKeyword_2_1_0_0_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyDeclarationAccess().getCommaKeyword_2_1_0_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyDeclaration__Group_2_1_0_0_2__0__Impl"


    // $ANTLR start "rule__AcmeFamilyDeclaration__Group_2_1_0_0_2__1"
    // InternalAcmeParser.g:5065:1: rule__AcmeFamilyDeclaration__Group_2_1_0_0_2__1 : rule__AcmeFamilyDeclaration__Group_2_1_0_0_2__1__Impl ;
    public final void rule__AcmeFamilyDeclaration__Group_2_1_0_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5069:1: ( rule__AcmeFamilyDeclaration__Group_2_1_0_0_2__1__Impl )
            // InternalAcmeParser.g:5070:2: rule__AcmeFamilyDeclaration__Group_2_1_0_0_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeFamilyDeclaration__Group_2_1_0_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyDeclaration__Group_2_1_0_0_2__1"


    // $ANTLR start "rule__AcmeFamilyDeclaration__Group_2_1_0_0_2__1__Impl"
    // InternalAcmeParser.g:5076:1: rule__AcmeFamilyDeclaration__Group_2_1_0_0_2__1__Impl : ( ( rule__AcmeFamilyDeclaration__RefsAssignment_2_1_0_0_2_1 ) ) ;
    public final void rule__AcmeFamilyDeclaration__Group_2_1_0_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5080:1: ( ( ( rule__AcmeFamilyDeclaration__RefsAssignment_2_1_0_0_2_1 ) ) )
            // InternalAcmeParser.g:5081:1: ( ( rule__AcmeFamilyDeclaration__RefsAssignment_2_1_0_0_2_1 ) )
            {
            // InternalAcmeParser.g:5081:1: ( ( rule__AcmeFamilyDeclaration__RefsAssignment_2_1_0_0_2_1 ) )
            // InternalAcmeParser.g:5082:2: ( rule__AcmeFamilyDeclaration__RefsAssignment_2_1_0_0_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyDeclarationAccess().getRefsAssignment_2_1_0_0_2_1()); 
            }
            // InternalAcmeParser.g:5083:2: ( rule__AcmeFamilyDeclaration__RefsAssignment_2_1_0_0_2_1 )
            // InternalAcmeParser.g:5083:3: rule__AcmeFamilyDeclaration__RefsAssignment_2_1_0_0_2_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeFamilyDeclaration__RefsAssignment_2_1_0_0_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyDeclarationAccess().getRefsAssignment_2_1_0_0_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyDeclaration__Group_2_1_0_0_2__1__Impl"


    // $ANTLR start "rule__AcmeFamilyBody__Group__0"
    // InternalAcmeParser.g:5092:1: rule__AcmeFamilyBody__Group__0 : rule__AcmeFamilyBody__Group__0__Impl rule__AcmeFamilyBody__Group__1 ;
    public final void rule__AcmeFamilyBody__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5096:1: ( rule__AcmeFamilyBody__Group__0__Impl rule__AcmeFamilyBody__Group__1 )
            // InternalAcmeParser.g:5097:2: rule__AcmeFamilyBody__Group__0__Impl rule__AcmeFamilyBody__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__AcmeFamilyBody__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeFamilyBody__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyBody__Group__0"


    // $ANTLR start "rule__AcmeFamilyBody__Group__0__Impl"
    // InternalAcmeParser.g:5104:1: rule__AcmeFamilyBody__Group__0__Impl : ( () ) ;
    public final void rule__AcmeFamilyBody__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5108:1: ( ( () ) )
            // InternalAcmeParser.g:5109:1: ( () )
            {
            // InternalAcmeParser.g:5109:1: ( () )
            // InternalAcmeParser.g:5110:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyBodyAccess().getAcmeFamilyBodyAction_0()); 
            }
            // InternalAcmeParser.g:5111:2: ()
            // InternalAcmeParser.g:5111:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyBodyAccess().getAcmeFamilyBodyAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyBody__Group__0__Impl"


    // $ANTLR start "rule__AcmeFamilyBody__Group__1"
    // InternalAcmeParser.g:5119:1: rule__AcmeFamilyBody__Group__1 : rule__AcmeFamilyBody__Group__1__Impl rule__AcmeFamilyBody__Group__2 ;
    public final void rule__AcmeFamilyBody__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5123:1: ( rule__AcmeFamilyBody__Group__1__Impl rule__AcmeFamilyBody__Group__2 )
            // InternalAcmeParser.g:5124:2: rule__AcmeFamilyBody__Group__1__Impl rule__AcmeFamilyBody__Group__2
            {
            pushFollow(FOLLOW_16);
            rule__AcmeFamilyBody__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeFamilyBody__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyBody__Group__1"


    // $ANTLR start "rule__AcmeFamilyBody__Group__1__Impl"
    // InternalAcmeParser.g:5131:1: rule__AcmeFamilyBody__Group__1__Impl : ( LeftCurlyBracket ) ;
    public final void rule__AcmeFamilyBody__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5135:1: ( ( LeftCurlyBracket ) )
            // InternalAcmeParser.g:5136:1: ( LeftCurlyBracket )
            {
            // InternalAcmeParser.g:5136:1: ( LeftCurlyBracket )
            // InternalAcmeParser.g:5137:2: LeftCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyBodyAccess().getLeftCurlyBracketKeyword_1()); 
            }
            match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyBodyAccess().getLeftCurlyBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyBody__Group__1__Impl"


    // $ANTLR start "rule__AcmeFamilyBody__Group__2"
    // InternalAcmeParser.g:5146:1: rule__AcmeFamilyBody__Group__2 : rule__AcmeFamilyBody__Group__2__Impl rule__AcmeFamilyBody__Group__3 ;
    public final void rule__AcmeFamilyBody__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5150:1: ( rule__AcmeFamilyBody__Group__2__Impl rule__AcmeFamilyBody__Group__3 )
            // InternalAcmeParser.g:5151:2: rule__AcmeFamilyBody__Group__2__Impl rule__AcmeFamilyBody__Group__3
            {
            pushFollow(FOLLOW_16);
            rule__AcmeFamilyBody__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeFamilyBody__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyBody__Group__2"


    // $ANTLR start "rule__AcmeFamilyBody__Group__2__Impl"
    // InternalAcmeParser.g:5158:1: rule__AcmeFamilyBody__Group__2__Impl : ( ( rule__AcmeFamilyBody__Alternatives_2 )* ) ;
    public final void rule__AcmeFamilyBody__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5162:1: ( ( ( rule__AcmeFamilyBody__Alternatives_2 )* ) )
            // InternalAcmeParser.g:5163:1: ( ( rule__AcmeFamilyBody__Alternatives_2 )* )
            {
            // InternalAcmeParser.g:5163:1: ( ( rule__AcmeFamilyBody__Alternatives_2 )* )
            // InternalAcmeParser.g:5164:2: ( rule__AcmeFamilyBody__Alternatives_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyBodyAccess().getAlternatives_2()); 
            }
            // InternalAcmeParser.g:5165:2: ( rule__AcmeFamilyBody__Alternatives_2 )*
            loop96:
            do {
                int alt96=2;
                int LA96_0 = input.LA(1);

                if ( ((LA96_0>=Attachment && LA96_0<=Analysis)||(LA96_0>=External && LA96_0<=Property)||LA96_0==Element||(LA96_0>=Private && LA96_0<=Design)||LA96_0==Public||LA96_0==Final||LA96_0==Group||(LA96_0>=Port && LA96_0<=Rule)) ) {
                    alt96=1;
                }


                switch (alt96) {
            	case 1 :
            	    // InternalAcmeParser.g:5165:3: rule__AcmeFamilyBody__Alternatives_2
            	    {
            	    pushFollow(FOLLOW_17);
            	    rule__AcmeFamilyBody__Alternatives_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop96;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyBodyAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyBody__Group__2__Impl"


    // $ANTLR start "rule__AcmeFamilyBody__Group__3"
    // InternalAcmeParser.g:5173:1: rule__AcmeFamilyBody__Group__3 : rule__AcmeFamilyBody__Group__3__Impl ;
    public final void rule__AcmeFamilyBody__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5177:1: ( rule__AcmeFamilyBody__Group__3__Impl )
            // InternalAcmeParser.g:5178:2: rule__AcmeFamilyBody__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeFamilyBody__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyBody__Group__3"


    // $ANTLR start "rule__AcmeFamilyBody__Group__3__Impl"
    // InternalAcmeParser.g:5184:1: rule__AcmeFamilyBody__Group__3__Impl : ( RightCurlyBracket ) ;
    public final void rule__AcmeFamilyBody__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5188:1: ( ( RightCurlyBracket ) )
            // InternalAcmeParser.g:5189:1: ( RightCurlyBracket )
            {
            // InternalAcmeParser.g:5189:1: ( RightCurlyBracket )
            // InternalAcmeParser.g:5190:2: RightCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyBodyAccess().getRightCurlyBracketKeyword_3()); 
            }
            match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyBodyAccess().getRightCurlyBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyBody__Group__3__Impl"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group__0"
    // InternalAcmeParser.g:5200:1: rule__AcmeSystemDeclaration__Group__0 : rule__AcmeSystemDeclaration__Group__0__Impl rule__AcmeSystemDeclaration__Group__1 ;
    public final void rule__AcmeSystemDeclaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5204:1: ( rule__AcmeSystemDeclaration__Group__0__Impl rule__AcmeSystemDeclaration__Group__1 )
            // InternalAcmeParser.g:5205:2: rule__AcmeSystemDeclaration__Group__0__Impl rule__AcmeSystemDeclaration__Group__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeSystemDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeSystemDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group__0"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group__0__Impl"
    // InternalAcmeParser.g:5212:1: rule__AcmeSystemDeclaration__Group__0__Impl : ( KW_System ) ;
    public final void rule__AcmeSystemDeclaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5216:1: ( ( KW_System ) )
            // InternalAcmeParser.g:5217:1: ( KW_System )
            {
            // InternalAcmeParser.g:5217:1: ( KW_System )
            // InternalAcmeParser.g:5218:2: KW_System
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemDeclarationAccess().getSystemKeyword_0()); 
            }
            match(input,KW_System,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemDeclarationAccess().getSystemKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group__0__Impl"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group__1"
    // InternalAcmeParser.g:5227:1: rule__AcmeSystemDeclaration__Group__1 : rule__AcmeSystemDeclaration__Group__1__Impl rule__AcmeSystemDeclaration__Group__2 ;
    public final void rule__AcmeSystemDeclaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5231:1: ( rule__AcmeSystemDeclaration__Group__1__Impl rule__AcmeSystemDeclaration__Group__2 )
            // InternalAcmeParser.g:5232:2: rule__AcmeSystemDeclaration__Group__1__Impl rule__AcmeSystemDeclaration__Group__2
            {
            pushFollow(FOLLOW_18);
            rule__AcmeSystemDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeSystemDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group__1"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group__1__Impl"
    // InternalAcmeParser.g:5239:1: rule__AcmeSystemDeclaration__Group__1__Impl : ( ( rule__AcmeSystemDeclaration__NameAssignment_1 ) ) ;
    public final void rule__AcmeSystemDeclaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5243:1: ( ( ( rule__AcmeSystemDeclaration__NameAssignment_1 ) ) )
            // InternalAcmeParser.g:5244:1: ( ( rule__AcmeSystemDeclaration__NameAssignment_1 ) )
            {
            // InternalAcmeParser.g:5244:1: ( ( rule__AcmeSystemDeclaration__NameAssignment_1 ) )
            // InternalAcmeParser.g:5245:2: ( rule__AcmeSystemDeclaration__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemDeclarationAccess().getNameAssignment_1()); 
            }
            // InternalAcmeParser.g:5246:2: ( rule__AcmeSystemDeclaration__NameAssignment_1 )
            // InternalAcmeParser.g:5246:3: rule__AcmeSystemDeclaration__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeSystemDeclaration__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemDeclarationAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group__1__Impl"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group__2"
    // InternalAcmeParser.g:5254:1: rule__AcmeSystemDeclaration__Group__2 : rule__AcmeSystemDeclaration__Group__2__Impl rule__AcmeSystemDeclaration__Group__3 ;
    public final void rule__AcmeSystemDeclaration__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5258:1: ( rule__AcmeSystemDeclaration__Group__2__Impl rule__AcmeSystemDeclaration__Group__3 )
            // InternalAcmeParser.g:5259:2: rule__AcmeSystemDeclaration__Group__2__Impl rule__AcmeSystemDeclaration__Group__3
            {
            pushFollow(FOLLOW_18);
            rule__AcmeSystemDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeSystemDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group__2"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group__2__Impl"
    // InternalAcmeParser.g:5266:1: rule__AcmeSystemDeclaration__Group__2__Impl : ( ( rule__AcmeSystemDeclaration__Group_2__0 )? ) ;
    public final void rule__AcmeSystemDeclaration__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5270:1: ( ( ( rule__AcmeSystemDeclaration__Group_2__0 )? ) )
            // InternalAcmeParser.g:5271:1: ( ( rule__AcmeSystemDeclaration__Group_2__0 )? )
            {
            // InternalAcmeParser.g:5271:1: ( ( rule__AcmeSystemDeclaration__Group_2__0 )? )
            // InternalAcmeParser.g:5272:2: ( rule__AcmeSystemDeclaration__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemDeclarationAccess().getGroup_2()); 
            }
            // InternalAcmeParser.g:5273:2: ( rule__AcmeSystemDeclaration__Group_2__0 )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==Colon) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // InternalAcmeParser.g:5273:3: rule__AcmeSystemDeclaration__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeSystemDeclaration__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemDeclarationAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group__2__Impl"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group__3"
    // InternalAcmeParser.g:5281:1: rule__AcmeSystemDeclaration__Group__3 : rule__AcmeSystemDeclaration__Group__3__Impl ;
    public final void rule__AcmeSystemDeclaration__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5285:1: ( rule__AcmeSystemDeclaration__Group__3__Impl )
            // InternalAcmeParser.g:5286:2: rule__AcmeSystemDeclaration__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeSystemDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group__3"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group__3__Impl"
    // InternalAcmeParser.g:5292:1: rule__AcmeSystemDeclaration__Group__3__Impl : ( ( rule__AcmeSystemDeclaration__Alternatives_3 ) ) ;
    public final void rule__AcmeSystemDeclaration__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5296:1: ( ( ( rule__AcmeSystemDeclaration__Alternatives_3 ) ) )
            // InternalAcmeParser.g:5297:1: ( ( rule__AcmeSystemDeclaration__Alternatives_3 ) )
            {
            // InternalAcmeParser.g:5297:1: ( ( rule__AcmeSystemDeclaration__Alternatives_3 ) )
            // InternalAcmeParser.g:5298:2: ( rule__AcmeSystemDeclaration__Alternatives_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemDeclarationAccess().getAlternatives_3()); 
            }
            // InternalAcmeParser.g:5299:2: ( rule__AcmeSystemDeclaration__Alternatives_3 )
            // InternalAcmeParser.g:5299:3: rule__AcmeSystemDeclaration__Alternatives_3
            {
            pushFollow(FOLLOW_2);
            rule__AcmeSystemDeclaration__Alternatives_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemDeclarationAccess().getAlternatives_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group__3__Impl"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_2__0"
    // InternalAcmeParser.g:5308:1: rule__AcmeSystemDeclaration__Group_2__0 : rule__AcmeSystemDeclaration__Group_2__0__Impl rule__AcmeSystemDeclaration__Group_2__1 ;
    public final void rule__AcmeSystemDeclaration__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5312:1: ( rule__AcmeSystemDeclaration__Group_2__0__Impl rule__AcmeSystemDeclaration__Group_2__1 )
            // InternalAcmeParser.g:5313:2: rule__AcmeSystemDeclaration__Group_2__0__Impl rule__AcmeSystemDeclaration__Group_2__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeSystemDeclaration__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeSystemDeclaration__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_2__0"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_2__0__Impl"
    // InternalAcmeParser.g:5320:1: rule__AcmeSystemDeclaration__Group_2__0__Impl : ( Colon ) ;
    public final void rule__AcmeSystemDeclaration__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5324:1: ( ( Colon ) )
            // InternalAcmeParser.g:5325:1: ( Colon )
            {
            // InternalAcmeParser.g:5325:1: ( Colon )
            // InternalAcmeParser.g:5326:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemDeclarationAccess().getColonKeyword_2_0()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemDeclarationAccess().getColonKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_2__0__Impl"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_2__1"
    // InternalAcmeParser.g:5335:1: rule__AcmeSystemDeclaration__Group_2__1 : rule__AcmeSystemDeclaration__Group_2__1__Impl rule__AcmeSystemDeclaration__Group_2__2 ;
    public final void rule__AcmeSystemDeclaration__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5339:1: ( rule__AcmeSystemDeclaration__Group_2__1__Impl rule__AcmeSystemDeclaration__Group_2__2 )
            // InternalAcmeParser.g:5340:2: rule__AcmeSystemDeclaration__Group_2__1__Impl rule__AcmeSystemDeclaration__Group_2__2
            {
            pushFollow(FOLLOW_19);
            rule__AcmeSystemDeclaration__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeSystemDeclaration__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_2__1"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_2__1__Impl"
    // InternalAcmeParser.g:5347:1: rule__AcmeSystemDeclaration__Group_2__1__Impl : ( ( rule__AcmeSystemDeclaration__DeclaredAssignment_2_1 ) ) ;
    public final void rule__AcmeSystemDeclaration__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5351:1: ( ( ( rule__AcmeSystemDeclaration__DeclaredAssignment_2_1 ) ) )
            // InternalAcmeParser.g:5352:1: ( ( rule__AcmeSystemDeclaration__DeclaredAssignment_2_1 ) )
            {
            // InternalAcmeParser.g:5352:1: ( ( rule__AcmeSystemDeclaration__DeclaredAssignment_2_1 ) )
            // InternalAcmeParser.g:5353:2: ( rule__AcmeSystemDeclaration__DeclaredAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemDeclarationAccess().getDeclaredAssignment_2_1()); 
            }
            // InternalAcmeParser.g:5354:2: ( rule__AcmeSystemDeclaration__DeclaredAssignment_2_1 )
            // InternalAcmeParser.g:5354:3: rule__AcmeSystemDeclaration__DeclaredAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeSystemDeclaration__DeclaredAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemDeclarationAccess().getDeclaredAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_2__1__Impl"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_2__2"
    // InternalAcmeParser.g:5362:1: rule__AcmeSystemDeclaration__Group_2__2 : rule__AcmeSystemDeclaration__Group_2__2__Impl ;
    public final void rule__AcmeSystemDeclaration__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5366:1: ( rule__AcmeSystemDeclaration__Group_2__2__Impl )
            // InternalAcmeParser.g:5367:2: rule__AcmeSystemDeclaration__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeSystemDeclaration__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_2__2"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_2__2__Impl"
    // InternalAcmeParser.g:5373:1: rule__AcmeSystemDeclaration__Group_2__2__Impl : ( ( rule__AcmeSystemDeclaration__Group_2_2__0 )* ) ;
    public final void rule__AcmeSystemDeclaration__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5377:1: ( ( ( rule__AcmeSystemDeclaration__Group_2_2__0 )* ) )
            // InternalAcmeParser.g:5378:1: ( ( rule__AcmeSystemDeclaration__Group_2_2__0 )* )
            {
            // InternalAcmeParser.g:5378:1: ( ( rule__AcmeSystemDeclaration__Group_2_2__0 )* )
            // InternalAcmeParser.g:5379:2: ( rule__AcmeSystemDeclaration__Group_2_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemDeclarationAccess().getGroup_2_2()); 
            }
            // InternalAcmeParser.g:5380:2: ( rule__AcmeSystemDeclaration__Group_2_2__0 )*
            loop98:
            do {
                int alt98=2;
                int LA98_0 = input.LA(1);

                if ( (LA98_0==Comma) ) {
                    alt98=1;
                }


                switch (alt98) {
            	case 1 :
            	    // InternalAcmeParser.g:5380:3: rule__AcmeSystemDeclaration__Group_2_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__AcmeSystemDeclaration__Group_2_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop98;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemDeclarationAccess().getGroup_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_2__2__Impl"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_2_2__0"
    // InternalAcmeParser.g:5389:1: rule__AcmeSystemDeclaration__Group_2_2__0 : rule__AcmeSystemDeclaration__Group_2_2__0__Impl rule__AcmeSystemDeclaration__Group_2_2__1 ;
    public final void rule__AcmeSystemDeclaration__Group_2_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5393:1: ( rule__AcmeSystemDeclaration__Group_2_2__0__Impl rule__AcmeSystemDeclaration__Group_2_2__1 )
            // InternalAcmeParser.g:5394:2: rule__AcmeSystemDeclaration__Group_2_2__0__Impl rule__AcmeSystemDeclaration__Group_2_2__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeSystemDeclaration__Group_2_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeSystemDeclaration__Group_2_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_2_2__0"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_2_2__0__Impl"
    // InternalAcmeParser.g:5401:1: rule__AcmeSystemDeclaration__Group_2_2__0__Impl : ( Comma ) ;
    public final void rule__AcmeSystemDeclaration__Group_2_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5405:1: ( ( Comma ) )
            // InternalAcmeParser.g:5406:1: ( Comma )
            {
            // InternalAcmeParser.g:5406:1: ( Comma )
            // InternalAcmeParser.g:5407:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemDeclarationAccess().getCommaKeyword_2_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemDeclarationAccess().getCommaKeyword_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_2_2__0__Impl"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_2_2__1"
    // InternalAcmeParser.g:5416:1: rule__AcmeSystemDeclaration__Group_2_2__1 : rule__AcmeSystemDeclaration__Group_2_2__1__Impl ;
    public final void rule__AcmeSystemDeclaration__Group_2_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5420:1: ( rule__AcmeSystemDeclaration__Group_2_2__1__Impl )
            // InternalAcmeParser.g:5421:2: rule__AcmeSystemDeclaration__Group_2_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeSystemDeclaration__Group_2_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_2_2__1"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_2_2__1__Impl"
    // InternalAcmeParser.g:5427:1: rule__AcmeSystemDeclaration__Group_2_2__1__Impl : ( ( rule__AcmeSystemDeclaration__DeclaredAssignment_2_2_1 ) ) ;
    public final void rule__AcmeSystemDeclaration__Group_2_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5431:1: ( ( ( rule__AcmeSystemDeclaration__DeclaredAssignment_2_2_1 ) ) )
            // InternalAcmeParser.g:5432:1: ( ( rule__AcmeSystemDeclaration__DeclaredAssignment_2_2_1 ) )
            {
            // InternalAcmeParser.g:5432:1: ( ( rule__AcmeSystemDeclaration__DeclaredAssignment_2_2_1 ) )
            // InternalAcmeParser.g:5433:2: ( rule__AcmeSystemDeclaration__DeclaredAssignment_2_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemDeclarationAccess().getDeclaredAssignment_2_2_1()); 
            }
            // InternalAcmeParser.g:5434:2: ( rule__AcmeSystemDeclaration__DeclaredAssignment_2_2_1 )
            // InternalAcmeParser.g:5434:3: rule__AcmeSystemDeclaration__DeclaredAssignment_2_2_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeSystemDeclaration__DeclaredAssignment_2_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemDeclarationAccess().getDeclaredAssignment_2_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_2_2__1__Impl"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_3_1__0"
    // InternalAcmeParser.g:5443:1: rule__AcmeSystemDeclaration__Group_3_1__0 : rule__AcmeSystemDeclaration__Group_3_1__0__Impl rule__AcmeSystemDeclaration__Group_3_1__1 ;
    public final void rule__AcmeSystemDeclaration__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5447:1: ( rule__AcmeSystemDeclaration__Group_3_1__0__Impl rule__AcmeSystemDeclaration__Group_3_1__1 )
            // InternalAcmeParser.g:5448:2: rule__AcmeSystemDeclaration__Group_3_1__0__Impl rule__AcmeSystemDeclaration__Group_3_1__1
            {
            pushFollow(FOLLOW_20);
            rule__AcmeSystemDeclaration__Group_3_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeSystemDeclaration__Group_3_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_3_1__0"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_3_1__0__Impl"
    // InternalAcmeParser.g:5455:1: rule__AcmeSystemDeclaration__Group_3_1__0__Impl : ( EqualsSign ) ;
    public final void rule__AcmeSystemDeclaration__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5459:1: ( ( EqualsSign ) )
            // InternalAcmeParser.g:5460:1: ( EqualsSign )
            {
            // InternalAcmeParser.g:5460:1: ( EqualsSign )
            // InternalAcmeParser.g:5461:2: EqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemDeclarationAccess().getEqualsSignKeyword_3_1_0()); 
            }
            match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemDeclarationAccess().getEqualsSignKeyword_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_3_1__0__Impl"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_3_1__1"
    // InternalAcmeParser.g:5470:1: rule__AcmeSystemDeclaration__Group_3_1__1 : rule__AcmeSystemDeclaration__Group_3_1__1__Impl ;
    public final void rule__AcmeSystemDeclaration__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5474:1: ( rule__AcmeSystemDeclaration__Group_3_1__1__Impl )
            // InternalAcmeParser.g:5475:2: rule__AcmeSystemDeclaration__Group_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeSystemDeclaration__Group_3_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_3_1__1"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_3_1__1__Impl"
    // InternalAcmeParser.g:5481:1: rule__AcmeSystemDeclaration__Group_3_1__1__Impl : ( ( rule__AcmeSystemDeclaration__Alternatives_3_1_1 ) ) ;
    public final void rule__AcmeSystemDeclaration__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5485:1: ( ( ( rule__AcmeSystemDeclaration__Alternatives_3_1_1 ) ) )
            // InternalAcmeParser.g:5486:1: ( ( rule__AcmeSystemDeclaration__Alternatives_3_1_1 ) )
            {
            // InternalAcmeParser.g:5486:1: ( ( rule__AcmeSystemDeclaration__Alternatives_3_1_1 ) )
            // InternalAcmeParser.g:5487:2: ( rule__AcmeSystemDeclaration__Alternatives_3_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemDeclarationAccess().getAlternatives_3_1_1()); 
            }
            // InternalAcmeParser.g:5488:2: ( rule__AcmeSystemDeclaration__Alternatives_3_1_1 )
            // InternalAcmeParser.g:5488:3: rule__AcmeSystemDeclaration__Alternatives_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeSystemDeclaration__Alternatives_3_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemDeclarationAccess().getAlternatives_3_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_3_1__1__Impl"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_3_1_1_0__0"
    // InternalAcmeParser.g:5497:1: rule__AcmeSystemDeclaration__Group_3_1_1_0__0 : rule__AcmeSystemDeclaration__Group_3_1_1_0__0__Impl rule__AcmeSystemDeclaration__Group_3_1_1_0__1 ;
    public final void rule__AcmeSystemDeclaration__Group_3_1_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5501:1: ( rule__AcmeSystemDeclaration__Group_3_1_1_0__0__Impl rule__AcmeSystemDeclaration__Group_3_1_1_0__1 )
            // InternalAcmeParser.g:5502:2: rule__AcmeSystemDeclaration__Group_3_1_1_0__0__Impl rule__AcmeSystemDeclaration__Group_3_1_1_0__1
            {
            pushFollow(FOLLOW_7);
            rule__AcmeSystemDeclaration__Group_3_1_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeSystemDeclaration__Group_3_1_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_3_1_1_0__0"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_3_1_1_0__0__Impl"
    // InternalAcmeParser.g:5509:1: rule__AcmeSystemDeclaration__Group_3_1_1_0__0__Impl : ( ( rule__AcmeSystemDeclaration__BodyAssignment_3_1_1_0_0 ) ) ;
    public final void rule__AcmeSystemDeclaration__Group_3_1_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5513:1: ( ( ( rule__AcmeSystemDeclaration__BodyAssignment_3_1_1_0_0 ) ) )
            // InternalAcmeParser.g:5514:1: ( ( rule__AcmeSystemDeclaration__BodyAssignment_3_1_1_0_0 ) )
            {
            // InternalAcmeParser.g:5514:1: ( ( rule__AcmeSystemDeclaration__BodyAssignment_3_1_1_0_0 ) )
            // InternalAcmeParser.g:5515:2: ( rule__AcmeSystemDeclaration__BodyAssignment_3_1_1_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemDeclarationAccess().getBodyAssignment_3_1_1_0_0()); 
            }
            // InternalAcmeParser.g:5516:2: ( rule__AcmeSystemDeclaration__BodyAssignment_3_1_1_0_0 )
            // InternalAcmeParser.g:5516:3: rule__AcmeSystemDeclaration__BodyAssignment_3_1_1_0_0
            {
            pushFollow(FOLLOW_2);
            rule__AcmeSystemDeclaration__BodyAssignment_3_1_1_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemDeclarationAccess().getBodyAssignment_3_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_3_1_1_0__0__Impl"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_3_1_1_0__1"
    // InternalAcmeParser.g:5524:1: rule__AcmeSystemDeclaration__Group_3_1_1_0__1 : rule__AcmeSystemDeclaration__Group_3_1_1_0__1__Impl ;
    public final void rule__AcmeSystemDeclaration__Group_3_1_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5528:1: ( rule__AcmeSystemDeclaration__Group_3_1_1_0__1__Impl )
            // InternalAcmeParser.g:5529:2: rule__AcmeSystemDeclaration__Group_3_1_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeSystemDeclaration__Group_3_1_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_3_1_1_0__1"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_3_1_1_0__1__Impl"
    // InternalAcmeParser.g:5535:1: rule__AcmeSystemDeclaration__Group_3_1_1_0__1__Impl : ( ( Semicolon )? ) ;
    public final void rule__AcmeSystemDeclaration__Group_3_1_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5539:1: ( ( ( Semicolon )? ) )
            // InternalAcmeParser.g:5540:1: ( ( Semicolon )? )
            {
            // InternalAcmeParser.g:5540:1: ( ( Semicolon )? )
            // InternalAcmeParser.g:5541:2: ( Semicolon )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemDeclarationAccess().getSemicolonKeyword_3_1_1_0_1()); 
            }
            // InternalAcmeParser.g:5542:2: ( Semicolon )?
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==Semicolon) ) {
                alt99=1;
            }
            switch (alt99) {
                case 1 :
                    // InternalAcmeParser.g:5542:3: Semicolon
                    {
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemDeclarationAccess().getSemicolonKeyword_3_1_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_3_1_1_0__1__Impl"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_3_1_1_1__0"
    // InternalAcmeParser.g:5551:1: rule__AcmeSystemDeclaration__Group_3_1_1_1__0 : rule__AcmeSystemDeclaration__Group_3_1_1_1__0__Impl rule__AcmeSystemDeclaration__Group_3_1_1_1__1 ;
    public final void rule__AcmeSystemDeclaration__Group_3_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5555:1: ( rule__AcmeSystemDeclaration__Group_3_1_1_1__0__Impl rule__AcmeSystemDeclaration__Group_3_1_1_1__1 )
            // InternalAcmeParser.g:5556:2: rule__AcmeSystemDeclaration__Group_3_1_1_1__0__Impl rule__AcmeSystemDeclaration__Group_3_1_1_1__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeSystemDeclaration__Group_3_1_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeSystemDeclaration__Group_3_1_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_3_1_1_1__0"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_3_1_1_1__0__Impl"
    // InternalAcmeParser.g:5563:1: rule__AcmeSystemDeclaration__Group_3_1_1_1__0__Impl : ( New ) ;
    public final void rule__AcmeSystemDeclaration__Group_3_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5567:1: ( ( New ) )
            // InternalAcmeParser.g:5568:1: ( New )
            {
            // InternalAcmeParser.g:5568:1: ( New )
            // InternalAcmeParser.g:5569:2: New
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemDeclarationAccess().getNewKeyword_3_1_1_1_0()); 
            }
            match(input,New,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemDeclarationAccess().getNewKeyword_3_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_3_1_1_1__0__Impl"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_3_1_1_1__1"
    // InternalAcmeParser.g:5578:1: rule__AcmeSystemDeclaration__Group_3_1_1_1__1 : rule__AcmeSystemDeclaration__Group_3_1_1_1__1__Impl rule__AcmeSystemDeclaration__Group_3_1_1_1__2 ;
    public final void rule__AcmeSystemDeclaration__Group_3_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5582:1: ( rule__AcmeSystemDeclaration__Group_3_1_1_1__1__Impl rule__AcmeSystemDeclaration__Group_3_1_1_1__2 )
            // InternalAcmeParser.g:5583:2: rule__AcmeSystemDeclaration__Group_3_1_1_1__1__Impl rule__AcmeSystemDeclaration__Group_3_1_1_1__2
            {
            pushFollow(FOLLOW_21);
            rule__AcmeSystemDeclaration__Group_3_1_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeSystemDeclaration__Group_3_1_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_3_1_1_1__1"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_3_1_1_1__1__Impl"
    // InternalAcmeParser.g:5590:1: rule__AcmeSystemDeclaration__Group_3_1_1_1__1__Impl : ( ( rule__AcmeSystemDeclaration__InstantiatedAssignment_3_1_1_1_1 ) ) ;
    public final void rule__AcmeSystemDeclaration__Group_3_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5594:1: ( ( ( rule__AcmeSystemDeclaration__InstantiatedAssignment_3_1_1_1_1 ) ) )
            // InternalAcmeParser.g:5595:1: ( ( rule__AcmeSystemDeclaration__InstantiatedAssignment_3_1_1_1_1 ) )
            {
            // InternalAcmeParser.g:5595:1: ( ( rule__AcmeSystemDeclaration__InstantiatedAssignment_3_1_1_1_1 ) )
            // InternalAcmeParser.g:5596:2: ( rule__AcmeSystemDeclaration__InstantiatedAssignment_3_1_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemDeclarationAccess().getInstantiatedAssignment_3_1_1_1_1()); 
            }
            // InternalAcmeParser.g:5597:2: ( rule__AcmeSystemDeclaration__InstantiatedAssignment_3_1_1_1_1 )
            // InternalAcmeParser.g:5597:3: rule__AcmeSystemDeclaration__InstantiatedAssignment_3_1_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeSystemDeclaration__InstantiatedAssignment_3_1_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemDeclarationAccess().getInstantiatedAssignment_3_1_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_3_1_1_1__1__Impl"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_3_1_1_1__2"
    // InternalAcmeParser.g:5605:1: rule__AcmeSystemDeclaration__Group_3_1_1_1__2 : rule__AcmeSystemDeclaration__Group_3_1_1_1__2__Impl rule__AcmeSystemDeclaration__Group_3_1_1_1__3 ;
    public final void rule__AcmeSystemDeclaration__Group_3_1_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5609:1: ( rule__AcmeSystemDeclaration__Group_3_1_1_1__2__Impl rule__AcmeSystemDeclaration__Group_3_1_1_1__3 )
            // InternalAcmeParser.g:5610:2: rule__AcmeSystemDeclaration__Group_3_1_1_1__2__Impl rule__AcmeSystemDeclaration__Group_3_1_1_1__3
            {
            pushFollow(FOLLOW_21);
            rule__AcmeSystemDeclaration__Group_3_1_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeSystemDeclaration__Group_3_1_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_3_1_1_1__2"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_3_1_1_1__2__Impl"
    // InternalAcmeParser.g:5617:1: rule__AcmeSystemDeclaration__Group_3_1_1_1__2__Impl : ( ( rule__AcmeSystemDeclaration__Group_3_1_1_1_2__0 )* ) ;
    public final void rule__AcmeSystemDeclaration__Group_3_1_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5621:1: ( ( ( rule__AcmeSystemDeclaration__Group_3_1_1_1_2__0 )* ) )
            // InternalAcmeParser.g:5622:1: ( ( rule__AcmeSystemDeclaration__Group_3_1_1_1_2__0 )* )
            {
            // InternalAcmeParser.g:5622:1: ( ( rule__AcmeSystemDeclaration__Group_3_1_1_1_2__0 )* )
            // InternalAcmeParser.g:5623:2: ( rule__AcmeSystemDeclaration__Group_3_1_1_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemDeclarationAccess().getGroup_3_1_1_1_2()); 
            }
            // InternalAcmeParser.g:5624:2: ( rule__AcmeSystemDeclaration__Group_3_1_1_1_2__0 )*
            loop100:
            do {
                int alt100=2;
                int LA100_0 = input.LA(1);

                if ( (LA100_0==Comma) ) {
                    alt100=1;
                }


                switch (alt100) {
            	case 1 :
            	    // InternalAcmeParser.g:5624:3: rule__AcmeSystemDeclaration__Group_3_1_1_1_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__AcmeSystemDeclaration__Group_3_1_1_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop100;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemDeclarationAccess().getGroup_3_1_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_3_1_1_1__2__Impl"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_3_1_1_1__3"
    // InternalAcmeParser.g:5632:1: rule__AcmeSystemDeclaration__Group_3_1_1_1__3 : rule__AcmeSystemDeclaration__Group_3_1_1_1__3__Impl ;
    public final void rule__AcmeSystemDeclaration__Group_3_1_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5636:1: ( rule__AcmeSystemDeclaration__Group_3_1_1_1__3__Impl )
            // InternalAcmeParser.g:5637:2: rule__AcmeSystemDeclaration__Group_3_1_1_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeSystemDeclaration__Group_3_1_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_3_1_1_1__3"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_3_1_1_1__3__Impl"
    // InternalAcmeParser.g:5643:1: rule__AcmeSystemDeclaration__Group_3_1_1_1__3__Impl : ( ( rule__AcmeSystemDeclaration__Alternatives_3_1_1_1_3 ) ) ;
    public final void rule__AcmeSystemDeclaration__Group_3_1_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5647:1: ( ( ( rule__AcmeSystemDeclaration__Alternatives_3_1_1_1_3 ) ) )
            // InternalAcmeParser.g:5648:1: ( ( rule__AcmeSystemDeclaration__Alternatives_3_1_1_1_3 ) )
            {
            // InternalAcmeParser.g:5648:1: ( ( rule__AcmeSystemDeclaration__Alternatives_3_1_1_1_3 ) )
            // InternalAcmeParser.g:5649:2: ( rule__AcmeSystemDeclaration__Alternatives_3_1_1_1_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemDeclarationAccess().getAlternatives_3_1_1_1_3()); 
            }
            // InternalAcmeParser.g:5650:2: ( rule__AcmeSystemDeclaration__Alternatives_3_1_1_1_3 )
            // InternalAcmeParser.g:5650:3: rule__AcmeSystemDeclaration__Alternatives_3_1_1_1_3
            {
            pushFollow(FOLLOW_2);
            rule__AcmeSystemDeclaration__Alternatives_3_1_1_1_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemDeclarationAccess().getAlternatives_3_1_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_3_1_1_1__3__Impl"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_3_1_1_1_2__0"
    // InternalAcmeParser.g:5659:1: rule__AcmeSystemDeclaration__Group_3_1_1_1_2__0 : rule__AcmeSystemDeclaration__Group_3_1_1_1_2__0__Impl rule__AcmeSystemDeclaration__Group_3_1_1_1_2__1 ;
    public final void rule__AcmeSystemDeclaration__Group_3_1_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5663:1: ( rule__AcmeSystemDeclaration__Group_3_1_1_1_2__0__Impl rule__AcmeSystemDeclaration__Group_3_1_1_1_2__1 )
            // InternalAcmeParser.g:5664:2: rule__AcmeSystemDeclaration__Group_3_1_1_1_2__0__Impl rule__AcmeSystemDeclaration__Group_3_1_1_1_2__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeSystemDeclaration__Group_3_1_1_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeSystemDeclaration__Group_3_1_1_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_3_1_1_1_2__0"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_3_1_1_1_2__0__Impl"
    // InternalAcmeParser.g:5671:1: rule__AcmeSystemDeclaration__Group_3_1_1_1_2__0__Impl : ( Comma ) ;
    public final void rule__AcmeSystemDeclaration__Group_3_1_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5675:1: ( ( Comma ) )
            // InternalAcmeParser.g:5676:1: ( Comma )
            {
            // InternalAcmeParser.g:5676:1: ( Comma )
            // InternalAcmeParser.g:5677:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemDeclarationAccess().getCommaKeyword_3_1_1_1_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemDeclarationAccess().getCommaKeyword_3_1_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_3_1_1_1_2__0__Impl"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_3_1_1_1_2__1"
    // InternalAcmeParser.g:5686:1: rule__AcmeSystemDeclaration__Group_3_1_1_1_2__1 : rule__AcmeSystemDeclaration__Group_3_1_1_1_2__1__Impl ;
    public final void rule__AcmeSystemDeclaration__Group_3_1_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5690:1: ( rule__AcmeSystemDeclaration__Group_3_1_1_1_2__1__Impl )
            // InternalAcmeParser.g:5691:2: rule__AcmeSystemDeclaration__Group_3_1_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeSystemDeclaration__Group_3_1_1_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_3_1_1_1_2__1"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_3_1_1_1_2__1__Impl"
    // InternalAcmeParser.g:5697:1: rule__AcmeSystemDeclaration__Group_3_1_1_1_2__1__Impl : ( ( rule__AcmeSystemDeclaration__InstantiatedAssignment_3_1_1_1_2_1 ) ) ;
    public final void rule__AcmeSystemDeclaration__Group_3_1_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5701:1: ( ( ( rule__AcmeSystemDeclaration__InstantiatedAssignment_3_1_1_1_2_1 ) ) )
            // InternalAcmeParser.g:5702:1: ( ( rule__AcmeSystemDeclaration__InstantiatedAssignment_3_1_1_1_2_1 ) )
            {
            // InternalAcmeParser.g:5702:1: ( ( rule__AcmeSystemDeclaration__InstantiatedAssignment_3_1_1_1_2_1 ) )
            // InternalAcmeParser.g:5703:2: ( rule__AcmeSystemDeclaration__InstantiatedAssignment_3_1_1_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemDeclarationAccess().getInstantiatedAssignment_3_1_1_1_2_1()); 
            }
            // InternalAcmeParser.g:5704:2: ( rule__AcmeSystemDeclaration__InstantiatedAssignment_3_1_1_1_2_1 )
            // InternalAcmeParser.g:5704:3: rule__AcmeSystemDeclaration__InstantiatedAssignment_3_1_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeSystemDeclaration__InstantiatedAssignment_3_1_1_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemDeclarationAccess().getInstantiatedAssignment_3_1_1_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_3_1_1_1_2__1__Impl"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__0"
    // InternalAcmeParser.g:5713:1: rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__0 : rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__0__Impl rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__1 ;
    public final void rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5717:1: ( rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__0__Impl rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__1 )
            // InternalAcmeParser.g:5718:2: rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__0__Impl rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__1
            {
            pushFollow(FOLLOW_22);
            rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__0"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__0__Impl"
    // InternalAcmeParser.g:5725:1: rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__0__Impl : ( Extended ) ;
    public final void rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5729:1: ( ( Extended ) )
            // InternalAcmeParser.g:5730:1: ( Extended )
            {
            // InternalAcmeParser.g:5730:1: ( Extended )
            // InternalAcmeParser.g:5731:2: Extended
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemDeclarationAccess().getExtendedKeyword_3_1_1_1_3_1_0()); 
            }
            match(input,Extended,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemDeclarationAccess().getExtendedKeyword_3_1_1_1_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__0__Impl"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__1"
    // InternalAcmeParser.g:5740:1: rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__1 : rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__1__Impl rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__2 ;
    public final void rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5744:1: ( rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__1__Impl rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__2 )
            // InternalAcmeParser.g:5745:2: rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__1__Impl rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__2
            {
            pushFollow(FOLLOW_13);
            rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__1"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__1__Impl"
    // InternalAcmeParser.g:5752:1: rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__1__Impl : ( With ) ;
    public final void rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5756:1: ( ( With ) )
            // InternalAcmeParser.g:5757:1: ( With )
            {
            // InternalAcmeParser.g:5757:1: ( With )
            // InternalAcmeParser.g:5758:2: With
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemDeclarationAccess().getWithKeyword_3_1_1_1_3_1_1()); 
            }
            match(input,With,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemDeclarationAccess().getWithKeyword_3_1_1_1_3_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__1__Impl"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__2"
    // InternalAcmeParser.g:5767:1: rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__2 : rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__2__Impl rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__3 ;
    public final void rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5771:1: ( rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__2__Impl rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__3 )
            // InternalAcmeParser.g:5772:2: rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__2__Impl rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__3
            {
            pushFollow(FOLLOW_7);
            rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__2"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__2__Impl"
    // InternalAcmeParser.g:5779:1: rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__2__Impl : ( ( rule__AcmeSystemDeclaration__BodyAssignment_3_1_1_1_3_1_2 ) ) ;
    public final void rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5783:1: ( ( ( rule__AcmeSystemDeclaration__BodyAssignment_3_1_1_1_3_1_2 ) ) )
            // InternalAcmeParser.g:5784:1: ( ( rule__AcmeSystemDeclaration__BodyAssignment_3_1_1_1_3_1_2 ) )
            {
            // InternalAcmeParser.g:5784:1: ( ( rule__AcmeSystemDeclaration__BodyAssignment_3_1_1_1_3_1_2 ) )
            // InternalAcmeParser.g:5785:2: ( rule__AcmeSystemDeclaration__BodyAssignment_3_1_1_1_3_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemDeclarationAccess().getBodyAssignment_3_1_1_1_3_1_2()); 
            }
            // InternalAcmeParser.g:5786:2: ( rule__AcmeSystemDeclaration__BodyAssignment_3_1_1_1_3_1_2 )
            // InternalAcmeParser.g:5786:3: rule__AcmeSystemDeclaration__BodyAssignment_3_1_1_1_3_1_2
            {
            pushFollow(FOLLOW_2);
            rule__AcmeSystemDeclaration__BodyAssignment_3_1_1_1_3_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemDeclarationAccess().getBodyAssignment_3_1_1_1_3_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__2__Impl"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__3"
    // InternalAcmeParser.g:5794:1: rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__3 : rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__3__Impl ;
    public final void rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5798:1: ( rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__3__Impl )
            // InternalAcmeParser.g:5799:2: rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__3"


    // $ANTLR start "rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__3__Impl"
    // InternalAcmeParser.g:5805:1: rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__3__Impl : ( ( Semicolon )? ) ;
    public final void rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5809:1: ( ( ( Semicolon )? ) )
            // InternalAcmeParser.g:5810:1: ( ( Semicolon )? )
            {
            // InternalAcmeParser.g:5810:1: ( ( Semicolon )? )
            // InternalAcmeParser.g:5811:2: ( Semicolon )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemDeclarationAccess().getSemicolonKeyword_3_1_1_1_3_1_3()); 
            }
            // InternalAcmeParser.g:5812:2: ( Semicolon )?
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==Semicolon) ) {
                alt101=1;
            }
            switch (alt101) {
                case 1 :
                    // InternalAcmeParser.g:5812:3: Semicolon
                    {
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemDeclarationAccess().getSemicolonKeyword_3_1_1_1_3_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__Group_3_1_1_1_3_1__3__Impl"


    // $ANTLR start "rule__AcmeSystemBody__Group__0"
    // InternalAcmeParser.g:5821:1: rule__AcmeSystemBody__Group__0 : rule__AcmeSystemBody__Group__0__Impl rule__AcmeSystemBody__Group__1 ;
    public final void rule__AcmeSystemBody__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5825:1: ( rule__AcmeSystemBody__Group__0__Impl rule__AcmeSystemBody__Group__1 )
            // InternalAcmeParser.g:5826:2: rule__AcmeSystemBody__Group__0__Impl rule__AcmeSystemBody__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__AcmeSystemBody__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeSystemBody__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemBody__Group__0"


    // $ANTLR start "rule__AcmeSystemBody__Group__0__Impl"
    // InternalAcmeParser.g:5833:1: rule__AcmeSystemBody__Group__0__Impl : ( () ) ;
    public final void rule__AcmeSystemBody__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5837:1: ( ( () ) )
            // InternalAcmeParser.g:5838:1: ( () )
            {
            // InternalAcmeParser.g:5838:1: ( () )
            // InternalAcmeParser.g:5839:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemBodyAccess().getAcmeSystemBodyAction_0()); 
            }
            // InternalAcmeParser.g:5840:2: ()
            // InternalAcmeParser.g:5840:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemBodyAccess().getAcmeSystemBodyAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemBody__Group__0__Impl"


    // $ANTLR start "rule__AcmeSystemBody__Group__1"
    // InternalAcmeParser.g:5848:1: rule__AcmeSystemBody__Group__1 : rule__AcmeSystemBody__Group__1__Impl rule__AcmeSystemBody__Group__2 ;
    public final void rule__AcmeSystemBody__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5852:1: ( rule__AcmeSystemBody__Group__1__Impl rule__AcmeSystemBody__Group__2 )
            // InternalAcmeParser.g:5853:2: rule__AcmeSystemBody__Group__1__Impl rule__AcmeSystemBody__Group__2
            {
            pushFollow(FOLLOW_16);
            rule__AcmeSystemBody__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeSystemBody__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemBody__Group__1"


    // $ANTLR start "rule__AcmeSystemBody__Group__1__Impl"
    // InternalAcmeParser.g:5860:1: rule__AcmeSystemBody__Group__1__Impl : ( LeftCurlyBracket ) ;
    public final void rule__AcmeSystemBody__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5864:1: ( ( LeftCurlyBracket ) )
            // InternalAcmeParser.g:5865:1: ( LeftCurlyBracket )
            {
            // InternalAcmeParser.g:5865:1: ( LeftCurlyBracket )
            // InternalAcmeParser.g:5866:2: LeftCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemBodyAccess().getLeftCurlyBracketKeyword_1()); 
            }
            match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemBodyAccess().getLeftCurlyBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemBody__Group__1__Impl"


    // $ANTLR start "rule__AcmeSystemBody__Group__2"
    // InternalAcmeParser.g:5875:1: rule__AcmeSystemBody__Group__2 : rule__AcmeSystemBody__Group__2__Impl rule__AcmeSystemBody__Group__3 ;
    public final void rule__AcmeSystemBody__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5879:1: ( rule__AcmeSystemBody__Group__2__Impl rule__AcmeSystemBody__Group__3 )
            // InternalAcmeParser.g:5880:2: rule__AcmeSystemBody__Group__2__Impl rule__AcmeSystemBody__Group__3
            {
            pushFollow(FOLLOW_16);
            rule__AcmeSystemBody__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeSystemBody__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemBody__Group__2"


    // $ANTLR start "rule__AcmeSystemBody__Group__2__Impl"
    // InternalAcmeParser.g:5887:1: rule__AcmeSystemBody__Group__2__Impl : ( ( rule__AcmeSystemBody__Alternatives_2 )* ) ;
    public final void rule__AcmeSystemBody__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5891:1: ( ( ( rule__AcmeSystemBody__Alternatives_2 )* ) )
            // InternalAcmeParser.g:5892:1: ( ( rule__AcmeSystemBody__Alternatives_2 )* )
            {
            // InternalAcmeParser.g:5892:1: ( ( rule__AcmeSystemBody__Alternatives_2 )* )
            // InternalAcmeParser.g:5893:2: ( rule__AcmeSystemBody__Alternatives_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemBodyAccess().getAlternatives_2()); 
            }
            // InternalAcmeParser.g:5894:2: ( rule__AcmeSystemBody__Alternatives_2 )*
            loop102:
            do {
                int alt102=2;
                int LA102_0 = input.LA(1);

                if ( ((LA102_0>=Attachment && LA102_0<=Invariant)||LA102_0==Property||LA102_0==Group||LA102_0==Rule) ) {
                    alt102=1;
                }


                switch (alt102) {
            	case 1 :
            	    // InternalAcmeParser.g:5894:3: rule__AcmeSystemBody__Alternatives_2
            	    {
            	    pushFollow(FOLLOW_17);
            	    rule__AcmeSystemBody__Alternatives_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop102;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemBodyAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemBody__Group__2__Impl"


    // $ANTLR start "rule__AcmeSystemBody__Group__3"
    // InternalAcmeParser.g:5902:1: rule__AcmeSystemBody__Group__3 : rule__AcmeSystemBody__Group__3__Impl ;
    public final void rule__AcmeSystemBody__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5906:1: ( rule__AcmeSystemBody__Group__3__Impl )
            // InternalAcmeParser.g:5907:2: rule__AcmeSystemBody__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeSystemBody__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemBody__Group__3"


    // $ANTLR start "rule__AcmeSystemBody__Group__3__Impl"
    // InternalAcmeParser.g:5913:1: rule__AcmeSystemBody__Group__3__Impl : ( RightCurlyBracket ) ;
    public final void rule__AcmeSystemBody__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5917:1: ( ( RightCurlyBracket ) )
            // InternalAcmeParser.g:5918:1: ( RightCurlyBracket )
            {
            // InternalAcmeParser.g:5918:1: ( RightCurlyBracket )
            // InternalAcmeParser.g:5919:2: RightCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemBodyAccess().getRightCurlyBracketKeyword_3()); 
            }
            match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemBodyAccess().getRightCurlyBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemBody__Group__3__Impl"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Group__0"
    // InternalAcmeParser.g:5929:1: rule__AcmeElementTypeDeclaration__Group__0 : rule__AcmeElementTypeDeclaration__Group__0__Impl rule__AcmeElementTypeDeclaration__Group__1 ;
    public final void rule__AcmeElementTypeDeclaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5933:1: ( rule__AcmeElementTypeDeclaration__Group__0__Impl rule__AcmeElementTypeDeclaration__Group__1 )
            // InternalAcmeParser.g:5934:2: rule__AcmeElementTypeDeclaration__Group__0__Impl rule__AcmeElementTypeDeclaration__Group__1
            {
            pushFollow(FOLLOW_23);
            rule__AcmeElementTypeDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeElementTypeDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Group__0"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Group__0__Impl"
    // InternalAcmeParser.g:5941:1: rule__AcmeElementTypeDeclaration__Group__0__Impl : ( ( rule__AcmeElementTypeDeclaration__VisibilityAssignment_0 )? ) ;
    public final void rule__AcmeElementTypeDeclaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5945:1: ( ( ( rule__AcmeElementTypeDeclaration__VisibilityAssignment_0 )? ) )
            // InternalAcmeParser.g:5946:1: ( ( rule__AcmeElementTypeDeclaration__VisibilityAssignment_0 )? )
            {
            // InternalAcmeParser.g:5946:1: ( ( rule__AcmeElementTypeDeclaration__VisibilityAssignment_0 )? )
            // InternalAcmeParser.g:5947:2: ( rule__AcmeElementTypeDeclaration__VisibilityAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeElementTypeDeclarationAccess().getVisibilityAssignment_0()); 
            }
            // InternalAcmeParser.g:5948:2: ( rule__AcmeElementTypeDeclaration__VisibilityAssignment_0 )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==Private||LA103_0==Public) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // InternalAcmeParser.g:5948:3: rule__AcmeElementTypeDeclaration__VisibilityAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeElementTypeDeclaration__VisibilityAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeElementTypeDeclarationAccess().getVisibilityAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Group__0__Impl"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Group__1"
    // InternalAcmeParser.g:5956:1: rule__AcmeElementTypeDeclaration__Group__1 : rule__AcmeElementTypeDeclaration__Group__1__Impl rule__AcmeElementTypeDeclaration__Group__2 ;
    public final void rule__AcmeElementTypeDeclaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5960:1: ( rule__AcmeElementTypeDeclaration__Group__1__Impl rule__AcmeElementTypeDeclaration__Group__2 )
            // InternalAcmeParser.g:5961:2: rule__AcmeElementTypeDeclaration__Group__1__Impl rule__AcmeElementTypeDeclaration__Group__2
            {
            pushFollow(FOLLOW_23);
            rule__AcmeElementTypeDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeElementTypeDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Group__1"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Group__1__Impl"
    // InternalAcmeParser.g:5968:1: rule__AcmeElementTypeDeclaration__Group__1__Impl : ( ( rule__AcmeElementTypeDeclaration__ExtensibilityAssignment_1 )? ) ;
    public final void rule__AcmeElementTypeDeclaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5972:1: ( ( ( rule__AcmeElementTypeDeclaration__ExtensibilityAssignment_1 )? ) )
            // InternalAcmeParser.g:5973:1: ( ( rule__AcmeElementTypeDeclaration__ExtensibilityAssignment_1 )? )
            {
            // InternalAcmeParser.g:5973:1: ( ( rule__AcmeElementTypeDeclaration__ExtensibilityAssignment_1 )? )
            // InternalAcmeParser.g:5974:2: ( rule__AcmeElementTypeDeclaration__ExtensibilityAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeElementTypeDeclarationAccess().getExtensibilityAssignment_1()); 
            }
            // InternalAcmeParser.g:5975:2: ( rule__AcmeElementTypeDeclaration__ExtensibilityAssignment_1 )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==Abstract||LA104_0==Final) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalAcmeParser.g:5975:3: rule__AcmeElementTypeDeclaration__ExtensibilityAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeElementTypeDeclaration__ExtensibilityAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeElementTypeDeclarationAccess().getExtensibilityAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Group__1__Impl"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Group__2"
    // InternalAcmeParser.g:5983:1: rule__AcmeElementTypeDeclaration__Group__2 : rule__AcmeElementTypeDeclaration__Group__2__Impl rule__AcmeElementTypeDeclaration__Group__3 ;
    public final void rule__AcmeElementTypeDeclaration__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5987:1: ( rule__AcmeElementTypeDeclaration__Group__2__Impl rule__AcmeElementTypeDeclaration__Group__3 )
            // InternalAcmeParser.g:5988:2: rule__AcmeElementTypeDeclaration__Group__2__Impl rule__AcmeElementTypeDeclaration__Group__3
            {
            pushFollow(FOLLOW_24);
            rule__AcmeElementTypeDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeElementTypeDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Group__2"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Group__2__Impl"
    // InternalAcmeParser.g:5995:1: rule__AcmeElementTypeDeclaration__Group__2__Impl : ( ( Element ) ) ;
    public final void rule__AcmeElementTypeDeclaration__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:5999:1: ( ( ( Element ) ) )
            // InternalAcmeParser.g:6000:1: ( ( Element ) )
            {
            // InternalAcmeParser.g:6000:1: ( ( Element ) )
            // InternalAcmeParser.g:6001:2: ( Element )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeElementTypeDeclarationAccess().getElementKeyword_2()); 
            }
            // InternalAcmeParser.g:6002:2: ( Element )
            // InternalAcmeParser.g:6002:3: Element
            {
            match(input,Element,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeElementTypeDeclarationAccess().getElementKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Group__2__Impl"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Group__3"
    // InternalAcmeParser.g:6010:1: rule__AcmeElementTypeDeclaration__Group__3 : rule__AcmeElementTypeDeclaration__Group__3__Impl rule__AcmeElementTypeDeclaration__Group__4 ;
    public final void rule__AcmeElementTypeDeclaration__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6014:1: ( rule__AcmeElementTypeDeclaration__Group__3__Impl rule__AcmeElementTypeDeclaration__Group__4 )
            // InternalAcmeParser.g:6015:2: rule__AcmeElementTypeDeclaration__Group__3__Impl rule__AcmeElementTypeDeclaration__Group__4
            {
            pushFollow(FOLLOW_11);
            rule__AcmeElementTypeDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeElementTypeDeclaration__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Group__3"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Group__3__Impl"
    // InternalAcmeParser.g:6022:1: rule__AcmeElementTypeDeclaration__Group__3__Impl : ( Type ) ;
    public final void rule__AcmeElementTypeDeclaration__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6026:1: ( ( Type ) )
            // InternalAcmeParser.g:6027:1: ( Type )
            {
            // InternalAcmeParser.g:6027:1: ( Type )
            // InternalAcmeParser.g:6028:2: Type
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeElementTypeDeclarationAccess().getTypeKeyword_3()); 
            }
            match(input,Type,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeElementTypeDeclarationAccess().getTypeKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Group__3__Impl"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Group__4"
    // InternalAcmeParser.g:6037:1: rule__AcmeElementTypeDeclaration__Group__4 : rule__AcmeElementTypeDeclaration__Group__4__Impl rule__AcmeElementTypeDeclaration__Group__5 ;
    public final void rule__AcmeElementTypeDeclaration__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6041:1: ( rule__AcmeElementTypeDeclaration__Group__4__Impl rule__AcmeElementTypeDeclaration__Group__5 )
            // InternalAcmeParser.g:6042:2: rule__AcmeElementTypeDeclaration__Group__4__Impl rule__AcmeElementTypeDeclaration__Group__5
            {
            pushFollow(FOLLOW_12);
            rule__AcmeElementTypeDeclaration__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeElementTypeDeclaration__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Group__4"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Group__4__Impl"
    // InternalAcmeParser.g:6049:1: rule__AcmeElementTypeDeclaration__Group__4__Impl : ( ( rule__AcmeElementTypeDeclaration__NameAssignment_4 ) ) ;
    public final void rule__AcmeElementTypeDeclaration__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6053:1: ( ( ( rule__AcmeElementTypeDeclaration__NameAssignment_4 ) ) )
            // InternalAcmeParser.g:6054:1: ( ( rule__AcmeElementTypeDeclaration__NameAssignment_4 ) )
            {
            // InternalAcmeParser.g:6054:1: ( ( rule__AcmeElementTypeDeclaration__NameAssignment_4 ) )
            // InternalAcmeParser.g:6055:2: ( rule__AcmeElementTypeDeclaration__NameAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeElementTypeDeclarationAccess().getNameAssignment_4()); 
            }
            // InternalAcmeParser.g:6056:2: ( rule__AcmeElementTypeDeclaration__NameAssignment_4 )
            // InternalAcmeParser.g:6056:3: rule__AcmeElementTypeDeclaration__NameAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__AcmeElementTypeDeclaration__NameAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeElementTypeDeclarationAccess().getNameAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Group__4__Impl"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Group__5"
    // InternalAcmeParser.g:6064:1: rule__AcmeElementTypeDeclaration__Group__5 : rule__AcmeElementTypeDeclaration__Group__5__Impl ;
    public final void rule__AcmeElementTypeDeclaration__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6068:1: ( rule__AcmeElementTypeDeclaration__Group__5__Impl )
            // InternalAcmeParser.g:6069:2: rule__AcmeElementTypeDeclaration__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeElementTypeDeclaration__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Group__5"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Group__5__Impl"
    // InternalAcmeParser.g:6075:1: rule__AcmeElementTypeDeclaration__Group__5__Impl : ( ( rule__AcmeElementTypeDeclaration__Alternatives_5 ) ) ;
    public final void rule__AcmeElementTypeDeclaration__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6079:1: ( ( ( rule__AcmeElementTypeDeclaration__Alternatives_5 ) ) )
            // InternalAcmeParser.g:6080:1: ( ( rule__AcmeElementTypeDeclaration__Alternatives_5 ) )
            {
            // InternalAcmeParser.g:6080:1: ( ( rule__AcmeElementTypeDeclaration__Alternatives_5 ) )
            // InternalAcmeParser.g:6081:2: ( rule__AcmeElementTypeDeclaration__Alternatives_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeElementTypeDeclarationAccess().getAlternatives_5()); 
            }
            // InternalAcmeParser.g:6082:2: ( rule__AcmeElementTypeDeclaration__Alternatives_5 )
            // InternalAcmeParser.g:6082:3: rule__AcmeElementTypeDeclaration__Alternatives_5
            {
            pushFollow(FOLLOW_2);
            rule__AcmeElementTypeDeclaration__Alternatives_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeElementTypeDeclarationAccess().getAlternatives_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Group__5__Impl"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Group_5_1_0__0"
    // InternalAcmeParser.g:6091:1: rule__AcmeElementTypeDeclaration__Group_5_1_0__0 : rule__AcmeElementTypeDeclaration__Group_5_1_0__0__Impl rule__AcmeElementTypeDeclaration__Group_5_1_0__1 ;
    public final void rule__AcmeElementTypeDeclaration__Group_5_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6095:1: ( rule__AcmeElementTypeDeclaration__Group_5_1_0__0__Impl rule__AcmeElementTypeDeclaration__Group_5_1_0__1 )
            // InternalAcmeParser.g:6096:2: rule__AcmeElementTypeDeclaration__Group_5_1_0__0__Impl rule__AcmeElementTypeDeclaration__Group_5_1_0__1
            {
            pushFollow(FOLLOW_13);
            rule__AcmeElementTypeDeclaration__Group_5_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeElementTypeDeclaration__Group_5_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Group_5_1_0__0"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Group_5_1_0__0__Impl"
    // InternalAcmeParser.g:6103:1: rule__AcmeElementTypeDeclaration__Group_5_1_0__0__Impl : ( EqualsSign ) ;
    public final void rule__AcmeElementTypeDeclaration__Group_5_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6107:1: ( ( EqualsSign ) )
            // InternalAcmeParser.g:6108:1: ( EqualsSign )
            {
            // InternalAcmeParser.g:6108:1: ( EqualsSign )
            // InternalAcmeParser.g:6109:2: EqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeElementTypeDeclarationAccess().getEqualsSignKeyword_5_1_0_0()); 
            }
            match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeElementTypeDeclarationAccess().getEqualsSignKeyword_5_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Group_5_1_0__0__Impl"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Group_5_1_0__1"
    // InternalAcmeParser.g:6118:1: rule__AcmeElementTypeDeclaration__Group_5_1_0__1 : rule__AcmeElementTypeDeclaration__Group_5_1_0__1__Impl ;
    public final void rule__AcmeElementTypeDeclaration__Group_5_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6122:1: ( rule__AcmeElementTypeDeclaration__Group_5_1_0__1__Impl )
            // InternalAcmeParser.g:6123:2: rule__AcmeElementTypeDeclaration__Group_5_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeElementTypeDeclaration__Group_5_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Group_5_1_0__1"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Group_5_1_0__1__Impl"
    // InternalAcmeParser.g:6129:1: rule__AcmeElementTypeDeclaration__Group_5_1_0__1__Impl : ( ( rule__AcmeElementTypeDeclaration__BodyAssignment_5_1_0_1 ) ) ;
    public final void rule__AcmeElementTypeDeclaration__Group_5_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6133:1: ( ( ( rule__AcmeElementTypeDeclaration__BodyAssignment_5_1_0_1 ) ) )
            // InternalAcmeParser.g:6134:1: ( ( rule__AcmeElementTypeDeclaration__BodyAssignment_5_1_0_1 ) )
            {
            // InternalAcmeParser.g:6134:1: ( ( rule__AcmeElementTypeDeclaration__BodyAssignment_5_1_0_1 ) )
            // InternalAcmeParser.g:6135:2: ( rule__AcmeElementTypeDeclaration__BodyAssignment_5_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeElementTypeDeclarationAccess().getBodyAssignment_5_1_0_1()); 
            }
            // InternalAcmeParser.g:6136:2: ( rule__AcmeElementTypeDeclaration__BodyAssignment_5_1_0_1 )
            // InternalAcmeParser.g:6136:3: rule__AcmeElementTypeDeclaration__BodyAssignment_5_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeElementTypeDeclaration__BodyAssignment_5_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeElementTypeDeclarationAccess().getBodyAssignment_5_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Group_5_1_0__1__Impl"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Group_5_1_1__0"
    // InternalAcmeParser.g:6145:1: rule__AcmeElementTypeDeclaration__Group_5_1_1__0 : rule__AcmeElementTypeDeclaration__Group_5_1_1__0__Impl rule__AcmeElementTypeDeclaration__Group_5_1_1__1 ;
    public final void rule__AcmeElementTypeDeclaration__Group_5_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6149:1: ( rule__AcmeElementTypeDeclaration__Group_5_1_1__0__Impl rule__AcmeElementTypeDeclaration__Group_5_1_1__1 )
            // InternalAcmeParser.g:6150:2: rule__AcmeElementTypeDeclaration__Group_5_1_1__0__Impl rule__AcmeElementTypeDeclaration__Group_5_1_1__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeElementTypeDeclaration__Group_5_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeElementTypeDeclaration__Group_5_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Group_5_1_1__0"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Group_5_1_1__0__Impl"
    // InternalAcmeParser.g:6157:1: rule__AcmeElementTypeDeclaration__Group_5_1_1__0__Impl : ( Extends ) ;
    public final void rule__AcmeElementTypeDeclaration__Group_5_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6161:1: ( ( Extends ) )
            // InternalAcmeParser.g:6162:1: ( Extends )
            {
            // InternalAcmeParser.g:6162:1: ( Extends )
            // InternalAcmeParser.g:6163:2: Extends
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeElementTypeDeclarationAccess().getExtendsKeyword_5_1_1_0()); 
            }
            match(input,Extends,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeElementTypeDeclarationAccess().getExtendsKeyword_5_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Group_5_1_1__0__Impl"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Group_5_1_1__1"
    // InternalAcmeParser.g:6172:1: rule__AcmeElementTypeDeclaration__Group_5_1_1__1 : rule__AcmeElementTypeDeclaration__Group_5_1_1__1__Impl rule__AcmeElementTypeDeclaration__Group_5_1_1__2 ;
    public final void rule__AcmeElementTypeDeclaration__Group_5_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6176:1: ( rule__AcmeElementTypeDeclaration__Group_5_1_1__1__Impl rule__AcmeElementTypeDeclaration__Group_5_1_1__2 )
            // InternalAcmeParser.g:6177:2: rule__AcmeElementTypeDeclaration__Group_5_1_1__1__Impl rule__AcmeElementTypeDeclaration__Group_5_1_1__2
            {
            pushFollow(FOLLOW_25);
            rule__AcmeElementTypeDeclaration__Group_5_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeElementTypeDeclaration__Group_5_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Group_5_1_1__1"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Group_5_1_1__1__Impl"
    // InternalAcmeParser.g:6184:1: rule__AcmeElementTypeDeclaration__Group_5_1_1__1__Impl : ( ( rule__AcmeElementTypeDeclaration__RefsAssignment_5_1_1_1 ) ) ;
    public final void rule__AcmeElementTypeDeclaration__Group_5_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6188:1: ( ( ( rule__AcmeElementTypeDeclaration__RefsAssignment_5_1_1_1 ) ) )
            // InternalAcmeParser.g:6189:1: ( ( rule__AcmeElementTypeDeclaration__RefsAssignment_5_1_1_1 ) )
            {
            // InternalAcmeParser.g:6189:1: ( ( rule__AcmeElementTypeDeclaration__RefsAssignment_5_1_1_1 ) )
            // InternalAcmeParser.g:6190:2: ( rule__AcmeElementTypeDeclaration__RefsAssignment_5_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeElementTypeDeclarationAccess().getRefsAssignment_5_1_1_1()); 
            }
            // InternalAcmeParser.g:6191:2: ( rule__AcmeElementTypeDeclaration__RefsAssignment_5_1_1_1 )
            // InternalAcmeParser.g:6191:3: rule__AcmeElementTypeDeclaration__RefsAssignment_5_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeElementTypeDeclaration__RefsAssignment_5_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeElementTypeDeclarationAccess().getRefsAssignment_5_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Group_5_1_1__1__Impl"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Group_5_1_1__2"
    // InternalAcmeParser.g:6199:1: rule__AcmeElementTypeDeclaration__Group_5_1_1__2 : rule__AcmeElementTypeDeclaration__Group_5_1_1__2__Impl rule__AcmeElementTypeDeclaration__Group_5_1_1__3 ;
    public final void rule__AcmeElementTypeDeclaration__Group_5_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6203:1: ( rule__AcmeElementTypeDeclaration__Group_5_1_1__2__Impl rule__AcmeElementTypeDeclaration__Group_5_1_1__3 )
            // InternalAcmeParser.g:6204:2: rule__AcmeElementTypeDeclaration__Group_5_1_1__2__Impl rule__AcmeElementTypeDeclaration__Group_5_1_1__3
            {
            pushFollow(FOLLOW_25);
            rule__AcmeElementTypeDeclaration__Group_5_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeElementTypeDeclaration__Group_5_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Group_5_1_1__2"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Group_5_1_1__2__Impl"
    // InternalAcmeParser.g:6211:1: rule__AcmeElementTypeDeclaration__Group_5_1_1__2__Impl : ( ( rule__AcmeElementTypeDeclaration__Group_5_1_1_2__0 )* ) ;
    public final void rule__AcmeElementTypeDeclaration__Group_5_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6215:1: ( ( ( rule__AcmeElementTypeDeclaration__Group_5_1_1_2__0 )* ) )
            // InternalAcmeParser.g:6216:1: ( ( rule__AcmeElementTypeDeclaration__Group_5_1_1_2__0 )* )
            {
            // InternalAcmeParser.g:6216:1: ( ( rule__AcmeElementTypeDeclaration__Group_5_1_1_2__0 )* )
            // InternalAcmeParser.g:6217:2: ( rule__AcmeElementTypeDeclaration__Group_5_1_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeElementTypeDeclarationAccess().getGroup_5_1_1_2()); 
            }
            // InternalAcmeParser.g:6218:2: ( rule__AcmeElementTypeDeclaration__Group_5_1_1_2__0 )*
            loop105:
            do {
                int alt105=2;
                int LA105_0 = input.LA(1);

                if ( (LA105_0==Comma) ) {
                    alt105=1;
                }


                switch (alt105) {
            	case 1 :
            	    // InternalAcmeParser.g:6218:3: rule__AcmeElementTypeDeclaration__Group_5_1_1_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__AcmeElementTypeDeclaration__Group_5_1_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop105;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeElementTypeDeclarationAccess().getGroup_5_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Group_5_1_1__2__Impl"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Group_5_1_1__3"
    // InternalAcmeParser.g:6226:1: rule__AcmeElementTypeDeclaration__Group_5_1_1__3 : rule__AcmeElementTypeDeclaration__Group_5_1_1__3__Impl ;
    public final void rule__AcmeElementTypeDeclaration__Group_5_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6230:1: ( rule__AcmeElementTypeDeclaration__Group_5_1_1__3__Impl )
            // InternalAcmeParser.g:6231:2: rule__AcmeElementTypeDeclaration__Group_5_1_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeElementTypeDeclaration__Group_5_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Group_5_1_1__3"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Group_5_1_1__3__Impl"
    // InternalAcmeParser.g:6237:1: rule__AcmeElementTypeDeclaration__Group_5_1_1__3__Impl : ( ( rule__AcmeElementTypeDeclaration__Alternatives_5_1_1_3 ) ) ;
    public final void rule__AcmeElementTypeDeclaration__Group_5_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6241:1: ( ( ( rule__AcmeElementTypeDeclaration__Alternatives_5_1_1_3 ) ) )
            // InternalAcmeParser.g:6242:1: ( ( rule__AcmeElementTypeDeclaration__Alternatives_5_1_1_3 ) )
            {
            // InternalAcmeParser.g:6242:1: ( ( rule__AcmeElementTypeDeclaration__Alternatives_5_1_1_3 ) )
            // InternalAcmeParser.g:6243:2: ( rule__AcmeElementTypeDeclaration__Alternatives_5_1_1_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeElementTypeDeclarationAccess().getAlternatives_5_1_1_3()); 
            }
            // InternalAcmeParser.g:6244:2: ( rule__AcmeElementTypeDeclaration__Alternatives_5_1_1_3 )
            // InternalAcmeParser.g:6244:3: rule__AcmeElementTypeDeclaration__Alternatives_5_1_1_3
            {
            pushFollow(FOLLOW_2);
            rule__AcmeElementTypeDeclaration__Alternatives_5_1_1_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeElementTypeDeclarationAccess().getAlternatives_5_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Group_5_1_1__3__Impl"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Group_5_1_1_2__0"
    // InternalAcmeParser.g:6253:1: rule__AcmeElementTypeDeclaration__Group_5_1_1_2__0 : rule__AcmeElementTypeDeclaration__Group_5_1_1_2__0__Impl rule__AcmeElementTypeDeclaration__Group_5_1_1_2__1 ;
    public final void rule__AcmeElementTypeDeclaration__Group_5_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6257:1: ( rule__AcmeElementTypeDeclaration__Group_5_1_1_2__0__Impl rule__AcmeElementTypeDeclaration__Group_5_1_1_2__1 )
            // InternalAcmeParser.g:6258:2: rule__AcmeElementTypeDeclaration__Group_5_1_1_2__0__Impl rule__AcmeElementTypeDeclaration__Group_5_1_1_2__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeElementTypeDeclaration__Group_5_1_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeElementTypeDeclaration__Group_5_1_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Group_5_1_1_2__0"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Group_5_1_1_2__0__Impl"
    // InternalAcmeParser.g:6265:1: rule__AcmeElementTypeDeclaration__Group_5_1_1_2__0__Impl : ( Comma ) ;
    public final void rule__AcmeElementTypeDeclaration__Group_5_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6269:1: ( ( Comma ) )
            // InternalAcmeParser.g:6270:1: ( Comma )
            {
            // InternalAcmeParser.g:6270:1: ( Comma )
            // InternalAcmeParser.g:6271:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeElementTypeDeclarationAccess().getCommaKeyword_5_1_1_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeElementTypeDeclarationAccess().getCommaKeyword_5_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Group_5_1_1_2__0__Impl"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Group_5_1_1_2__1"
    // InternalAcmeParser.g:6280:1: rule__AcmeElementTypeDeclaration__Group_5_1_1_2__1 : rule__AcmeElementTypeDeclaration__Group_5_1_1_2__1__Impl ;
    public final void rule__AcmeElementTypeDeclaration__Group_5_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6284:1: ( rule__AcmeElementTypeDeclaration__Group_5_1_1_2__1__Impl )
            // InternalAcmeParser.g:6285:2: rule__AcmeElementTypeDeclaration__Group_5_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeElementTypeDeclaration__Group_5_1_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Group_5_1_1_2__1"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Group_5_1_1_2__1__Impl"
    // InternalAcmeParser.g:6291:1: rule__AcmeElementTypeDeclaration__Group_5_1_1_2__1__Impl : ( ( rule__AcmeElementTypeDeclaration__RefsAssignment_5_1_1_2_1 ) ) ;
    public final void rule__AcmeElementTypeDeclaration__Group_5_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6295:1: ( ( ( rule__AcmeElementTypeDeclaration__RefsAssignment_5_1_1_2_1 ) ) )
            // InternalAcmeParser.g:6296:1: ( ( rule__AcmeElementTypeDeclaration__RefsAssignment_5_1_1_2_1 ) )
            {
            // InternalAcmeParser.g:6296:1: ( ( rule__AcmeElementTypeDeclaration__RefsAssignment_5_1_1_2_1 ) )
            // InternalAcmeParser.g:6297:2: ( rule__AcmeElementTypeDeclaration__RefsAssignment_5_1_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeElementTypeDeclarationAccess().getRefsAssignment_5_1_1_2_1()); 
            }
            // InternalAcmeParser.g:6298:2: ( rule__AcmeElementTypeDeclaration__RefsAssignment_5_1_1_2_1 )
            // InternalAcmeParser.g:6298:3: rule__AcmeElementTypeDeclaration__RefsAssignment_5_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeElementTypeDeclaration__RefsAssignment_5_1_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeElementTypeDeclarationAccess().getRefsAssignment_5_1_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Group_5_1_1_2__1__Impl"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__0"
    // InternalAcmeParser.g:6307:1: rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__0 : rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__0__Impl rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__1 ;
    public final void rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6311:1: ( rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__0__Impl rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__1 )
            // InternalAcmeParser.g:6312:2: rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__0__Impl rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__1
            {
            pushFollow(FOLLOW_13);
            rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__0"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__0__Impl"
    // InternalAcmeParser.g:6319:1: rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__0__Impl : ( With ) ;
    public final void rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6323:1: ( ( With ) )
            // InternalAcmeParser.g:6324:1: ( With )
            {
            // InternalAcmeParser.g:6324:1: ( With )
            // InternalAcmeParser.g:6325:2: With
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeElementTypeDeclarationAccess().getWithKeyword_5_1_1_3_1_0()); 
            }
            match(input,With,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeElementTypeDeclarationAccess().getWithKeyword_5_1_1_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__0__Impl"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__1"
    // InternalAcmeParser.g:6334:1: rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__1 : rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__1__Impl rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__2 ;
    public final void rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6338:1: ( rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__1__Impl rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__2 )
            // InternalAcmeParser.g:6339:2: rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__1__Impl rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__2
            {
            pushFollow(FOLLOW_7);
            rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__1"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__1__Impl"
    // InternalAcmeParser.g:6346:1: rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__1__Impl : ( ( rule__AcmeElementTypeDeclaration__BodyAssignment_5_1_1_3_1_1 ) ) ;
    public final void rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6350:1: ( ( ( rule__AcmeElementTypeDeclaration__BodyAssignment_5_1_1_3_1_1 ) ) )
            // InternalAcmeParser.g:6351:1: ( ( rule__AcmeElementTypeDeclaration__BodyAssignment_5_1_1_3_1_1 ) )
            {
            // InternalAcmeParser.g:6351:1: ( ( rule__AcmeElementTypeDeclaration__BodyAssignment_5_1_1_3_1_1 ) )
            // InternalAcmeParser.g:6352:2: ( rule__AcmeElementTypeDeclaration__BodyAssignment_5_1_1_3_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeElementTypeDeclarationAccess().getBodyAssignment_5_1_1_3_1_1()); 
            }
            // InternalAcmeParser.g:6353:2: ( rule__AcmeElementTypeDeclaration__BodyAssignment_5_1_1_3_1_1 )
            // InternalAcmeParser.g:6353:3: rule__AcmeElementTypeDeclaration__BodyAssignment_5_1_1_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeElementTypeDeclaration__BodyAssignment_5_1_1_3_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeElementTypeDeclarationAccess().getBodyAssignment_5_1_1_3_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__1__Impl"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__2"
    // InternalAcmeParser.g:6361:1: rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__2 : rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__2__Impl ;
    public final void rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6365:1: ( rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__2__Impl )
            // InternalAcmeParser.g:6366:2: rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__2"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__2__Impl"
    // InternalAcmeParser.g:6372:1: rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__2__Impl : ( ( Semicolon )? ) ;
    public final void rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6376:1: ( ( ( Semicolon )? ) )
            // InternalAcmeParser.g:6377:1: ( ( Semicolon )? )
            {
            // InternalAcmeParser.g:6377:1: ( ( Semicolon )? )
            // InternalAcmeParser.g:6378:2: ( Semicolon )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeElementTypeDeclarationAccess().getSemicolonKeyword_5_1_1_3_1_2()); 
            }
            // InternalAcmeParser.g:6379:2: ( Semicolon )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==Semicolon) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // InternalAcmeParser.g:6379:3: Semicolon
                    {
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeElementTypeDeclarationAccess().getSemicolonKeyword_5_1_1_3_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__Group_5_1_1_3_1__2__Impl"


    // $ANTLR start "rule__AcmeGenericElementBody__Group__0"
    // InternalAcmeParser.g:6388:1: rule__AcmeGenericElementBody__Group__0 : rule__AcmeGenericElementBody__Group__0__Impl rule__AcmeGenericElementBody__Group__1 ;
    public final void rule__AcmeGenericElementBody__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6392:1: ( rule__AcmeGenericElementBody__Group__0__Impl rule__AcmeGenericElementBody__Group__1 )
            // InternalAcmeParser.g:6393:2: rule__AcmeGenericElementBody__Group__0__Impl rule__AcmeGenericElementBody__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__AcmeGenericElementBody__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeGenericElementBody__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGenericElementBody__Group__0"


    // $ANTLR start "rule__AcmeGenericElementBody__Group__0__Impl"
    // InternalAcmeParser.g:6400:1: rule__AcmeGenericElementBody__Group__0__Impl : ( () ) ;
    public final void rule__AcmeGenericElementBody__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6404:1: ( ( () ) )
            // InternalAcmeParser.g:6405:1: ( () )
            {
            // InternalAcmeParser.g:6405:1: ( () )
            // InternalAcmeParser.g:6406:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGenericElementBodyAccess().getAcmeGenericElementBodyAction_0()); 
            }
            // InternalAcmeParser.g:6407:2: ()
            // InternalAcmeParser.g:6407:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGenericElementBodyAccess().getAcmeGenericElementBodyAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGenericElementBody__Group__0__Impl"


    // $ANTLR start "rule__AcmeGenericElementBody__Group__1"
    // InternalAcmeParser.g:6415:1: rule__AcmeGenericElementBody__Group__1 : rule__AcmeGenericElementBody__Group__1__Impl rule__AcmeGenericElementBody__Group__2 ;
    public final void rule__AcmeGenericElementBody__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6419:1: ( rule__AcmeGenericElementBody__Group__1__Impl rule__AcmeGenericElementBody__Group__2 )
            // InternalAcmeParser.g:6420:2: rule__AcmeGenericElementBody__Group__1__Impl rule__AcmeGenericElementBody__Group__2
            {
            pushFollow(FOLLOW_26);
            rule__AcmeGenericElementBody__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeGenericElementBody__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGenericElementBody__Group__1"


    // $ANTLR start "rule__AcmeGenericElementBody__Group__1__Impl"
    // InternalAcmeParser.g:6427:1: rule__AcmeGenericElementBody__Group__1__Impl : ( LeftCurlyBracket ) ;
    public final void rule__AcmeGenericElementBody__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6431:1: ( ( LeftCurlyBracket ) )
            // InternalAcmeParser.g:6432:1: ( LeftCurlyBracket )
            {
            // InternalAcmeParser.g:6432:1: ( LeftCurlyBracket )
            // InternalAcmeParser.g:6433:2: LeftCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGenericElementBodyAccess().getLeftCurlyBracketKeyword_1()); 
            }
            match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGenericElementBodyAccess().getLeftCurlyBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGenericElementBody__Group__1__Impl"


    // $ANTLR start "rule__AcmeGenericElementBody__Group__2"
    // InternalAcmeParser.g:6442:1: rule__AcmeGenericElementBody__Group__2 : rule__AcmeGenericElementBody__Group__2__Impl rule__AcmeGenericElementBody__Group__3 ;
    public final void rule__AcmeGenericElementBody__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6446:1: ( rule__AcmeGenericElementBody__Group__2__Impl rule__AcmeGenericElementBody__Group__3 )
            // InternalAcmeParser.g:6447:2: rule__AcmeGenericElementBody__Group__2__Impl rule__AcmeGenericElementBody__Group__3
            {
            pushFollow(FOLLOW_26);
            rule__AcmeGenericElementBody__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeGenericElementBody__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGenericElementBody__Group__2"


    // $ANTLR start "rule__AcmeGenericElementBody__Group__2__Impl"
    // InternalAcmeParser.g:6454:1: rule__AcmeGenericElementBody__Group__2__Impl : ( ( rule__AcmeGenericElementBody__Alternatives_2 )* ) ;
    public final void rule__AcmeGenericElementBody__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6458:1: ( ( ( rule__AcmeGenericElementBody__Alternatives_2 )* ) )
            // InternalAcmeParser.g:6459:1: ( ( rule__AcmeGenericElementBody__Alternatives_2 )* )
            {
            // InternalAcmeParser.g:6459:1: ( ( rule__AcmeGenericElementBody__Alternatives_2 )* )
            // InternalAcmeParser.g:6460:2: ( rule__AcmeGenericElementBody__Alternatives_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGenericElementBodyAccess().getAlternatives_2()); 
            }
            // InternalAcmeParser.g:6461:2: ( rule__AcmeGenericElementBody__Alternatives_2 )*
            loop107:
            do {
                int alt107=2;
                int LA107_0 = input.LA(1);

                if ( ((LA107_0>=Hueristic && LA107_0<=Invariant)||LA107_0==Property||LA107_0==Rule) ) {
                    alt107=1;
                }


                switch (alt107) {
            	case 1 :
            	    // InternalAcmeParser.g:6461:3: rule__AcmeGenericElementBody__Alternatives_2
            	    {
            	    pushFollow(FOLLOW_27);
            	    rule__AcmeGenericElementBody__Alternatives_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop107;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGenericElementBodyAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGenericElementBody__Group__2__Impl"


    // $ANTLR start "rule__AcmeGenericElementBody__Group__3"
    // InternalAcmeParser.g:6469:1: rule__AcmeGenericElementBody__Group__3 : rule__AcmeGenericElementBody__Group__3__Impl ;
    public final void rule__AcmeGenericElementBody__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6473:1: ( rule__AcmeGenericElementBody__Group__3__Impl )
            // InternalAcmeParser.g:6474:2: rule__AcmeGenericElementBody__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeGenericElementBody__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGenericElementBody__Group__3"


    // $ANTLR start "rule__AcmeGenericElementBody__Group__3__Impl"
    // InternalAcmeParser.g:6480:1: rule__AcmeGenericElementBody__Group__3__Impl : ( RightCurlyBracket ) ;
    public final void rule__AcmeGenericElementBody__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6484:1: ( ( RightCurlyBracket ) )
            // InternalAcmeParser.g:6485:1: ( RightCurlyBracket )
            {
            // InternalAcmeParser.g:6485:1: ( RightCurlyBracket )
            // InternalAcmeParser.g:6486:2: RightCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGenericElementBodyAccess().getRightCurlyBracketKeyword_3()); 
            }
            match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGenericElementBodyAccess().getRightCurlyBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGenericElementBody__Group__3__Impl"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Group__0"
    // InternalAcmeParser.g:6496:1: rule__AcmeGroupTypeDeclaration__Group__0 : rule__AcmeGroupTypeDeclaration__Group__0__Impl rule__AcmeGroupTypeDeclaration__Group__1 ;
    public final void rule__AcmeGroupTypeDeclaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6500:1: ( rule__AcmeGroupTypeDeclaration__Group__0__Impl rule__AcmeGroupTypeDeclaration__Group__1 )
            // InternalAcmeParser.g:6501:2: rule__AcmeGroupTypeDeclaration__Group__0__Impl rule__AcmeGroupTypeDeclaration__Group__1
            {
            pushFollow(FOLLOW_28);
            rule__AcmeGroupTypeDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeGroupTypeDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Group__0"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Group__0__Impl"
    // InternalAcmeParser.g:6508:1: rule__AcmeGroupTypeDeclaration__Group__0__Impl : ( ( rule__AcmeGroupTypeDeclaration__VisibilityAssignment_0 )? ) ;
    public final void rule__AcmeGroupTypeDeclaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6512:1: ( ( ( rule__AcmeGroupTypeDeclaration__VisibilityAssignment_0 )? ) )
            // InternalAcmeParser.g:6513:1: ( ( rule__AcmeGroupTypeDeclaration__VisibilityAssignment_0 )? )
            {
            // InternalAcmeParser.g:6513:1: ( ( rule__AcmeGroupTypeDeclaration__VisibilityAssignment_0 )? )
            // InternalAcmeParser.g:6514:2: ( rule__AcmeGroupTypeDeclaration__VisibilityAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupTypeDeclarationAccess().getVisibilityAssignment_0()); 
            }
            // InternalAcmeParser.g:6515:2: ( rule__AcmeGroupTypeDeclaration__VisibilityAssignment_0 )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==Private||LA108_0==Public) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalAcmeParser.g:6515:3: rule__AcmeGroupTypeDeclaration__VisibilityAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeGroupTypeDeclaration__VisibilityAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupTypeDeclarationAccess().getVisibilityAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Group__0__Impl"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Group__1"
    // InternalAcmeParser.g:6523:1: rule__AcmeGroupTypeDeclaration__Group__1 : rule__AcmeGroupTypeDeclaration__Group__1__Impl rule__AcmeGroupTypeDeclaration__Group__2 ;
    public final void rule__AcmeGroupTypeDeclaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6527:1: ( rule__AcmeGroupTypeDeclaration__Group__1__Impl rule__AcmeGroupTypeDeclaration__Group__2 )
            // InternalAcmeParser.g:6528:2: rule__AcmeGroupTypeDeclaration__Group__1__Impl rule__AcmeGroupTypeDeclaration__Group__2
            {
            pushFollow(FOLLOW_28);
            rule__AcmeGroupTypeDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeGroupTypeDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Group__1"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Group__1__Impl"
    // InternalAcmeParser.g:6535:1: rule__AcmeGroupTypeDeclaration__Group__1__Impl : ( ( rule__AcmeGroupTypeDeclaration__ExtensibilityAssignment_1 )? ) ;
    public final void rule__AcmeGroupTypeDeclaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6539:1: ( ( ( rule__AcmeGroupTypeDeclaration__ExtensibilityAssignment_1 )? ) )
            // InternalAcmeParser.g:6540:1: ( ( rule__AcmeGroupTypeDeclaration__ExtensibilityAssignment_1 )? )
            {
            // InternalAcmeParser.g:6540:1: ( ( rule__AcmeGroupTypeDeclaration__ExtensibilityAssignment_1 )? )
            // InternalAcmeParser.g:6541:2: ( rule__AcmeGroupTypeDeclaration__ExtensibilityAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupTypeDeclarationAccess().getExtensibilityAssignment_1()); 
            }
            // InternalAcmeParser.g:6542:2: ( rule__AcmeGroupTypeDeclaration__ExtensibilityAssignment_1 )?
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==Abstract||LA109_0==Final) ) {
                alt109=1;
            }
            switch (alt109) {
                case 1 :
                    // InternalAcmeParser.g:6542:3: rule__AcmeGroupTypeDeclaration__ExtensibilityAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeGroupTypeDeclaration__ExtensibilityAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupTypeDeclarationAccess().getExtensibilityAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Group__1__Impl"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Group__2"
    // InternalAcmeParser.g:6550:1: rule__AcmeGroupTypeDeclaration__Group__2 : rule__AcmeGroupTypeDeclaration__Group__2__Impl rule__AcmeGroupTypeDeclaration__Group__3 ;
    public final void rule__AcmeGroupTypeDeclaration__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6554:1: ( rule__AcmeGroupTypeDeclaration__Group__2__Impl rule__AcmeGroupTypeDeclaration__Group__3 )
            // InternalAcmeParser.g:6555:2: rule__AcmeGroupTypeDeclaration__Group__2__Impl rule__AcmeGroupTypeDeclaration__Group__3
            {
            pushFollow(FOLLOW_24);
            rule__AcmeGroupTypeDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeGroupTypeDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Group__2"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Group__2__Impl"
    // InternalAcmeParser.g:6562:1: rule__AcmeGroupTypeDeclaration__Group__2__Impl : ( ( Group ) ) ;
    public final void rule__AcmeGroupTypeDeclaration__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6566:1: ( ( ( Group ) ) )
            // InternalAcmeParser.g:6567:1: ( ( Group ) )
            {
            // InternalAcmeParser.g:6567:1: ( ( Group ) )
            // InternalAcmeParser.g:6568:2: ( Group )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupTypeDeclarationAccess().getGroupKeyword_2()); 
            }
            // InternalAcmeParser.g:6569:2: ( Group )
            // InternalAcmeParser.g:6569:3: Group
            {
            match(input,Group,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupTypeDeclarationAccess().getGroupKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Group__2__Impl"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Group__3"
    // InternalAcmeParser.g:6577:1: rule__AcmeGroupTypeDeclaration__Group__3 : rule__AcmeGroupTypeDeclaration__Group__3__Impl rule__AcmeGroupTypeDeclaration__Group__4 ;
    public final void rule__AcmeGroupTypeDeclaration__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6581:1: ( rule__AcmeGroupTypeDeclaration__Group__3__Impl rule__AcmeGroupTypeDeclaration__Group__4 )
            // InternalAcmeParser.g:6582:2: rule__AcmeGroupTypeDeclaration__Group__3__Impl rule__AcmeGroupTypeDeclaration__Group__4
            {
            pushFollow(FOLLOW_11);
            rule__AcmeGroupTypeDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeGroupTypeDeclaration__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Group__3"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Group__3__Impl"
    // InternalAcmeParser.g:6589:1: rule__AcmeGroupTypeDeclaration__Group__3__Impl : ( Type ) ;
    public final void rule__AcmeGroupTypeDeclaration__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6593:1: ( ( Type ) )
            // InternalAcmeParser.g:6594:1: ( Type )
            {
            // InternalAcmeParser.g:6594:1: ( Type )
            // InternalAcmeParser.g:6595:2: Type
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupTypeDeclarationAccess().getTypeKeyword_3()); 
            }
            match(input,Type,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupTypeDeclarationAccess().getTypeKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Group__3__Impl"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Group__4"
    // InternalAcmeParser.g:6604:1: rule__AcmeGroupTypeDeclaration__Group__4 : rule__AcmeGroupTypeDeclaration__Group__4__Impl rule__AcmeGroupTypeDeclaration__Group__5 ;
    public final void rule__AcmeGroupTypeDeclaration__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6608:1: ( rule__AcmeGroupTypeDeclaration__Group__4__Impl rule__AcmeGroupTypeDeclaration__Group__5 )
            // InternalAcmeParser.g:6609:2: rule__AcmeGroupTypeDeclaration__Group__4__Impl rule__AcmeGroupTypeDeclaration__Group__5
            {
            pushFollow(FOLLOW_12);
            rule__AcmeGroupTypeDeclaration__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeGroupTypeDeclaration__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Group__4"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Group__4__Impl"
    // InternalAcmeParser.g:6616:1: rule__AcmeGroupTypeDeclaration__Group__4__Impl : ( ( rule__AcmeGroupTypeDeclaration__NameAssignment_4 ) ) ;
    public final void rule__AcmeGroupTypeDeclaration__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6620:1: ( ( ( rule__AcmeGroupTypeDeclaration__NameAssignment_4 ) ) )
            // InternalAcmeParser.g:6621:1: ( ( rule__AcmeGroupTypeDeclaration__NameAssignment_4 ) )
            {
            // InternalAcmeParser.g:6621:1: ( ( rule__AcmeGroupTypeDeclaration__NameAssignment_4 ) )
            // InternalAcmeParser.g:6622:2: ( rule__AcmeGroupTypeDeclaration__NameAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupTypeDeclarationAccess().getNameAssignment_4()); 
            }
            // InternalAcmeParser.g:6623:2: ( rule__AcmeGroupTypeDeclaration__NameAssignment_4 )
            // InternalAcmeParser.g:6623:3: rule__AcmeGroupTypeDeclaration__NameAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__AcmeGroupTypeDeclaration__NameAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupTypeDeclarationAccess().getNameAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Group__4__Impl"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Group__5"
    // InternalAcmeParser.g:6631:1: rule__AcmeGroupTypeDeclaration__Group__5 : rule__AcmeGroupTypeDeclaration__Group__5__Impl ;
    public final void rule__AcmeGroupTypeDeclaration__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6635:1: ( rule__AcmeGroupTypeDeclaration__Group__5__Impl )
            // InternalAcmeParser.g:6636:2: rule__AcmeGroupTypeDeclaration__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeGroupTypeDeclaration__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Group__5"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Group__5__Impl"
    // InternalAcmeParser.g:6642:1: rule__AcmeGroupTypeDeclaration__Group__5__Impl : ( ( rule__AcmeGroupTypeDeclaration__Alternatives_5 ) ) ;
    public final void rule__AcmeGroupTypeDeclaration__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6646:1: ( ( ( rule__AcmeGroupTypeDeclaration__Alternatives_5 ) ) )
            // InternalAcmeParser.g:6647:1: ( ( rule__AcmeGroupTypeDeclaration__Alternatives_5 ) )
            {
            // InternalAcmeParser.g:6647:1: ( ( rule__AcmeGroupTypeDeclaration__Alternatives_5 ) )
            // InternalAcmeParser.g:6648:2: ( rule__AcmeGroupTypeDeclaration__Alternatives_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupTypeDeclarationAccess().getAlternatives_5()); 
            }
            // InternalAcmeParser.g:6649:2: ( rule__AcmeGroupTypeDeclaration__Alternatives_5 )
            // InternalAcmeParser.g:6649:3: rule__AcmeGroupTypeDeclaration__Alternatives_5
            {
            pushFollow(FOLLOW_2);
            rule__AcmeGroupTypeDeclaration__Alternatives_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupTypeDeclarationAccess().getAlternatives_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Group__5__Impl"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Group_5_1_0__0"
    // InternalAcmeParser.g:6658:1: rule__AcmeGroupTypeDeclaration__Group_5_1_0__0 : rule__AcmeGroupTypeDeclaration__Group_5_1_0__0__Impl rule__AcmeGroupTypeDeclaration__Group_5_1_0__1 ;
    public final void rule__AcmeGroupTypeDeclaration__Group_5_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6662:1: ( rule__AcmeGroupTypeDeclaration__Group_5_1_0__0__Impl rule__AcmeGroupTypeDeclaration__Group_5_1_0__1 )
            // InternalAcmeParser.g:6663:2: rule__AcmeGroupTypeDeclaration__Group_5_1_0__0__Impl rule__AcmeGroupTypeDeclaration__Group_5_1_0__1
            {
            pushFollow(FOLLOW_13);
            rule__AcmeGroupTypeDeclaration__Group_5_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeGroupTypeDeclaration__Group_5_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Group_5_1_0__0"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Group_5_1_0__0__Impl"
    // InternalAcmeParser.g:6670:1: rule__AcmeGroupTypeDeclaration__Group_5_1_0__0__Impl : ( EqualsSign ) ;
    public final void rule__AcmeGroupTypeDeclaration__Group_5_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6674:1: ( ( EqualsSign ) )
            // InternalAcmeParser.g:6675:1: ( EqualsSign )
            {
            // InternalAcmeParser.g:6675:1: ( EqualsSign )
            // InternalAcmeParser.g:6676:2: EqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupTypeDeclarationAccess().getEqualsSignKeyword_5_1_0_0()); 
            }
            match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupTypeDeclarationAccess().getEqualsSignKeyword_5_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Group_5_1_0__0__Impl"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Group_5_1_0__1"
    // InternalAcmeParser.g:6685:1: rule__AcmeGroupTypeDeclaration__Group_5_1_0__1 : rule__AcmeGroupTypeDeclaration__Group_5_1_0__1__Impl ;
    public final void rule__AcmeGroupTypeDeclaration__Group_5_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6689:1: ( rule__AcmeGroupTypeDeclaration__Group_5_1_0__1__Impl )
            // InternalAcmeParser.g:6690:2: rule__AcmeGroupTypeDeclaration__Group_5_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeGroupTypeDeclaration__Group_5_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Group_5_1_0__1"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Group_5_1_0__1__Impl"
    // InternalAcmeParser.g:6696:1: rule__AcmeGroupTypeDeclaration__Group_5_1_0__1__Impl : ( ( rule__AcmeGroupTypeDeclaration__BodyAssignment_5_1_0_1 ) ) ;
    public final void rule__AcmeGroupTypeDeclaration__Group_5_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6700:1: ( ( ( rule__AcmeGroupTypeDeclaration__BodyAssignment_5_1_0_1 ) ) )
            // InternalAcmeParser.g:6701:1: ( ( rule__AcmeGroupTypeDeclaration__BodyAssignment_5_1_0_1 ) )
            {
            // InternalAcmeParser.g:6701:1: ( ( rule__AcmeGroupTypeDeclaration__BodyAssignment_5_1_0_1 ) )
            // InternalAcmeParser.g:6702:2: ( rule__AcmeGroupTypeDeclaration__BodyAssignment_5_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupTypeDeclarationAccess().getBodyAssignment_5_1_0_1()); 
            }
            // InternalAcmeParser.g:6703:2: ( rule__AcmeGroupTypeDeclaration__BodyAssignment_5_1_0_1 )
            // InternalAcmeParser.g:6703:3: rule__AcmeGroupTypeDeclaration__BodyAssignment_5_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeGroupTypeDeclaration__BodyAssignment_5_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupTypeDeclarationAccess().getBodyAssignment_5_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Group_5_1_0__1__Impl"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Group_5_1_1__0"
    // InternalAcmeParser.g:6712:1: rule__AcmeGroupTypeDeclaration__Group_5_1_1__0 : rule__AcmeGroupTypeDeclaration__Group_5_1_1__0__Impl rule__AcmeGroupTypeDeclaration__Group_5_1_1__1 ;
    public final void rule__AcmeGroupTypeDeclaration__Group_5_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6716:1: ( rule__AcmeGroupTypeDeclaration__Group_5_1_1__0__Impl rule__AcmeGroupTypeDeclaration__Group_5_1_1__1 )
            // InternalAcmeParser.g:6717:2: rule__AcmeGroupTypeDeclaration__Group_5_1_1__0__Impl rule__AcmeGroupTypeDeclaration__Group_5_1_1__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeGroupTypeDeclaration__Group_5_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeGroupTypeDeclaration__Group_5_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Group_5_1_1__0"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Group_5_1_1__0__Impl"
    // InternalAcmeParser.g:6724:1: rule__AcmeGroupTypeDeclaration__Group_5_1_1__0__Impl : ( Extends ) ;
    public final void rule__AcmeGroupTypeDeclaration__Group_5_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6728:1: ( ( Extends ) )
            // InternalAcmeParser.g:6729:1: ( Extends )
            {
            // InternalAcmeParser.g:6729:1: ( Extends )
            // InternalAcmeParser.g:6730:2: Extends
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupTypeDeclarationAccess().getExtendsKeyword_5_1_1_0()); 
            }
            match(input,Extends,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupTypeDeclarationAccess().getExtendsKeyword_5_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Group_5_1_1__0__Impl"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Group_5_1_1__1"
    // InternalAcmeParser.g:6739:1: rule__AcmeGroupTypeDeclaration__Group_5_1_1__1 : rule__AcmeGroupTypeDeclaration__Group_5_1_1__1__Impl rule__AcmeGroupTypeDeclaration__Group_5_1_1__2 ;
    public final void rule__AcmeGroupTypeDeclaration__Group_5_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6743:1: ( rule__AcmeGroupTypeDeclaration__Group_5_1_1__1__Impl rule__AcmeGroupTypeDeclaration__Group_5_1_1__2 )
            // InternalAcmeParser.g:6744:2: rule__AcmeGroupTypeDeclaration__Group_5_1_1__1__Impl rule__AcmeGroupTypeDeclaration__Group_5_1_1__2
            {
            pushFollow(FOLLOW_25);
            rule__AcmeGroupTypeDeclaration__Group_5_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeGroupTypeDeclaration__Group_5_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Group_5_1_1__1"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Group_5_1_1__1__Impl"
    // InternalAcmeParser.g:6751:1: rule__AcmeGroupTypeDeclaration__Group_5_1_1__1__Impl : ( ( rule__AcmeGroupTypeDeclaration__RefsAssignment_5_1_1_1 ) ) ;
    public final void rule__AcmeGroupTypeDeclaration__Group_5_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6755:1: ( ( ( rule__AcmeGroupTypeDeclaration__RefsAssignment_5_1_1_1 ) ) )
            // InternalAcmeParser.g:6756:1: ( ( rule__AcmeGroupTypeDeclaration__RefsAssignment_5_1_1_1 ) )
            {
            // InternalAcmeParser.g:6756:1: ( ( rule__AcmeGroupTypeDeclaration__RefsAssignment_5_1_1_1 ) )
            // InternalAcmeParser.g:6757:2: ( rule__AcmeGroupTypeDeclaration__RefsAssignment_5_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupTypeDeclarationAccess().getRefsAssignment_5_1_1_1()); 
            }
            // InternalAcmeParser.g:6758:2: ( rule__AcmeGroupTypeDeclaration__RefsAssignment_5_1_1_1 )
            // InternalAcmeParser.g:6758:3: rule__AcmeGroupTypeDeclaration__RefsAssignment_5_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeGroupTypeDeclaration__RefsAssignment_5_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupTypeDeclarationAccess().getRefsAssignment_5_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Group_5_1_1__1__Impl"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Group_5_1_1__2"
    // InternalAcmeParser.g:6766:1: rule__AcmeGroupTypeDeclaration__Group_5_1_1__2 : rule__AcmeGroupTypeDeclaration__Group_5_1_1__2__Impl rule__AcmeGroupTypeDeclaration__Group_5_1_1__3 ;
    public final void rule__AcmeGroupTypeDeclaration__Group_5_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6770:1: ( rule__AcmeGroupTypeDeclaration__Group_5_1_1__2__Impl rule__AcmeGroupTypeDeclaration__Group_5_1_1__3 )
            // InternalAcmeParser.g:6771:2: rule__AcmeGroupTypeDeclaration__Group_5_1_1__2__Impl rule__AcmeGroupTypeDeclaration__Group_5_1_1__3
            {
            pushFollow(FOLLOW_25);
            rule__AcmeGroupTypeDeclaration__Group_5_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeGroupTypeDeclaration__Group_5_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Group_5_1_1__2"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Group_5_1_1__2__Impl"
    // InternalAcmeParser.g:6778:1: rule__AcmeGroupTypeDeclaration__Group_5_1_1__2__Impl : ( ( rule__AcmeGroupTypeDeclaration__Group_5_1_1_2__0 )* ) ;
    public final void rule__AcmeGroupTypeDeclaration__Group_5_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6782:1: ( ( ( rule__AcmeGroupTypeDeclaration__Group_5_1_1_2__0 )* ) )
            // InternalAcmeParser.g:6783:1: ( ( rule__AcmeGroupTypeDeclaration__Group_5_1_1_2__0 )* )
            {
            // InternalAcmeParser.g:6783:1: ( ( rule__AcmeGroupTypeDeclaration__Group_5_1_1_2__0 )* )
            // InternalAcmeParser.g:6784:2: ( rule__AcmeGroupTypeDeclaration__Group_5_1_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupTypeDeclarationAccess().getGroup_5_1_1_2()); 
            }
            // InternalAcmeParser.g:6785:2: ( rule__AcmeGroupTypeDeclaration__Group_5_1_1_2__0 )*
            loop110:
            do {
                int alt110=2;
                int LA110_0 = input.LA(1);

                if ( (LA110_0==Comma) ) {
                    alt110=1;
                }


                switch (alt110) {
            	case 1 :
            	    // InternalAcmeParser.g:6785:3: rule__AcmeGroupTypeDeclaration__Group_5_1_1_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__AcmeGroupTypeDeclaration__Group_5_1_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop110;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupTypeDeclarationAccess().getGroup_5_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Group_5_1_1__2__Impl"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Group_5_1_1__3"
    // InternalAcmeParser.g:6793:1: rule__AcmeGroupTypeDeclaration__Group_5_1_1__3 : rule__AcmeGroupTypeDeclaration__Group_5_1_1__3__Impl ;
    public final void rule__AcmeGroupTypeDeclaration__Group_5_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6797:1: ( rule__AcmeGroupTypeDeclaration__Group_5_1_1__3__Impl )
            // InternalAcmeParser.g:6798:2: rule__AcmeGroupTypeDeclaration__Group_5_1_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeGroupTypeDeclaration__Group_5_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Group_5_1_1__3"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Group_5_1_1__3__Impl"
    // InternalAcmeParser.g:6804:1: rule__AcmeGroupTypeDeclaration__Group_5_1_1__3__Impl : ( ( rule__AcmeGroupTypeDeclaration__Alternatives_5_1_1_3 ) ) ;
    public final void rule__AcmeGroupTypeDeclaration__Group_5_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6808:1: ( ( ( rule__AcmeGroupTypeDeclaration__Alternatives_5_1_1_3 ) ) )
            // InternalAcmeParser.g:6809:1: ( ( rule__AcmeGroupTypeDeclaration__Alternatives_5_1_1_3 ) )
            {
            // InternalAcmeParser.g:6809:1: ( ( rule__AcmeGroupTypeDeclaration__Alternatives_5_1_1_3 ) )
            // InternalAcmeParser.g:6810:2: ( rule__AcmeGroupTypeDeclaration__Alternatives_5_1_1_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupTypeDeclarationAccess().getAlternatives_5_1_1_3()); 
            }
            // InternalAcmeParser.g:6811:2: ( rule__AcmeGroupTypeDeclaration__Alternatives_5_1_1_3 )
            // InternalAcmeParser.g:6811:3: rule__AcmeGroupTypeDeclaration__Alternatives_5_1_1_3
            {
            pushFollow(FOLLOW_2);
            rule__AcmeGroupTypeDeclaration__Alternatives_5_1_1_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupTypeDeclarationAccess().getAlternatives_5_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Group_5_1_1__3__Impl"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Group_5_1_1_2__0"
    // InternalAcmeParser.g:6820:1: rule__AcmeGroupTypeDeclaration__Group_5_1_1_2__0 : rule__AcmeGroupTypeDeclaration__Group_5_1_1_2__0__Impl rule__AcmeGroupTypeDeclaration__Group_5_1_1_2__1 ;
    public final void rule__AcmeGroupTypeDeclaration__Group_5_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6824:1: ( rule__AcmeGroupTypeDeclaration__Group_5_1_1_2__0__Impl rule__AcmeGroupTypeDeclaration__Group_5_1_1_2__1 )
            // InternalAcmeParser.g:6825:2: rule__AcmeGroupTypeDeclaration__Group_5_1_1_2__0__Impl rule__AcmeGroupTypeDeclaration__Group_5_1_1_2__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeGroupTypeDeclaration__Group_5_1_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeGroupTypeDeclaration__Group_5_1_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Group_5_1_1_2__0"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Group_5_1_1_2__0__Impl"
    // InternalAcmeParser.g:6832:1: rule__AcmeGroupTypeDeclaration__Group_5_1_1_2__0__Impl : ( Comma ) ;
    public final void rule__AcmeGroupTypeDeclaration__Group_5_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6836:1: ( ( Comma ) )
            // InternalAcmeParser.g:6837:1: ( Comma )
            {
            // InternalAcmeParser.g:6837:1: ( Comma )
            // InternalAcmeParser.g:6838:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupTypeDeclarationAccess().getCommaKeyword_5_1_1_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupTypeDeclarationAccess().getCommaKeyword_5_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Group_5_1_1_2__0__Impl"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Group_5_1_1_2__1"
    // InternalAcmeParser.g:6847:1: rule__AcmeGroupTypeDeclaration__Group_5_1_1_2__1 : rule__AcmeGroupTypeDeclaration__Group_5_1_1_2__1__Impl ;
    public final void rule__AcmeGroupTypeDeclaration__Group_5_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6851:1: ( rule__AcmeGroupTypeDeclaration__Group_5_1_1_2__1__Impl )
            // InternalAcmeParser.g:6852:2: rule__AcmeGroupTypeDeclaration__Group_5_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeGroupTypeDeclaration__Group_5_1_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Group_5_1_1_2__1"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Group_5_1_1_2__1__Impl"
    // InternalAcmeParser.g:6858:1: rule__AcmeGroupTypeDeclaration__Group_5_1_1_2__1__Impl : ( ( rule__AcmeGroupTypeDeclaration__RefsAssignment_5_1_1_2_1 ) ) ;
    public final void rule__AcmeGroupTypeDeclaration__Group_5_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6862:1: ( ( ( rule__AcmeGroupTypeDeclaration__RefsAssignment_5_1_1_2_1 ) ) )
            // InternalAcmeParser.g:6863:1: ( ( rule__AcmeGroupTypeDeclaration__RefsAssignment_5_1_1_2_1 ) )
            {
            // InternalAcmeParser.g:6863:1: ( ( rule__AcmeGroupTypeDeclaration__RefsAssignment_5_1_1_2_1 ) )
            // InternalAcmeParser.g:6864:2: ( rule__AcmeGroupTypeDeclaration__RefsAssignment_5_1_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupTypeDeclarationAccess().getRefsAssignment_5_1_1_2_1()); 
            }
            // InternalAcmeParser.g:6865:2: ( rule__AcmeGroupTypeDeclaration__RefsAssignment_5_1_1_2_1 )
            // InternalAcmeParser.g:6865:3: rule__AcmeGroupTypeDeclaration__RefsAssignment_5_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeGroupTypeDeclaration__RefsAssignment_5_1_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupTypeDeclarationAccess().getRefsAssignment_5_1_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Group_5_1_1_2__1__Impl"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__0"
    // InternalAcmeParser.g:6874:1: rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__0 : rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__0__Impl rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__1 ;
    public final void rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6878:1: ( rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__0__Impl rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__1 )
            // InternalAcmeParser.g:6879:2: rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__0__Impl rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__1
            {
            pushFollow(FOLLOW_13);
            rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__0"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__0__Impl"
    // InternalAcmeParser.g:6886:1: rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__0__Impl : ( With ) ;
    public final void rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6890:1: ( ( With ) )
            // InternalAcmeParser.g:6891:1: ( With )
            {
            // InternalAcmeParser.g:6891:1: ( With )
            // InternalAcmeParser.g:6892:2: With
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupTypeDeclarationAccess().getWithKeyword_5_1_1_3_1_0()); 
            }
            match(input,With,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupTypeDeclarationAccess().getWithKeyword_5_1_1_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__0__Impl"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__1"
    // InternalAcmeParser.g:6901:1: rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__1 : rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__1__Impl rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__2 ;
    public final void rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6905:1: ( rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__1__Impl rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__2 )
            // InternalAcmeParser.g:6906:2: rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__1__Impl rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__2
            {
            pushFollow(FOLLOW_7);
            rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__1"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__1__Impl"
    // InternalAcmeParser.g:6913:1: rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__1__Impl : ( ( rule__AcmeGroupTypeDeclaration__BodyAssignment_5_1_1_3_1_1 ) ) ;
    public final void rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6917:1: ( ( ( rule__AcmeGroupTypeDeclaration__BodyAssignment_5_1_1_3_1_1 ) ) )
            // InternalAcmeParser.g:6918:1: ( ( rule__AcmeGroupTypeDeclaration__BodyAssignment_5_1_1_3_1_1 ) )
            {
            // InternalAcmeParser.g:6918:1: ( ( rule__AcmeGroupTypeDeclaration__BodyAssignment_5_1_1_3_1_1 ) )
            // InternalAcmeParser.g:6919:2: ( rule__AcmeGroupTypeDeclaration__BodyAssignment_5_1_1_3_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupTypeDeclarationAccess().getBodyAssignment_5_1_1_3_1_1()); 
            }
            // InternalAcmeParser.g:6920:2: ( rule__AcmeGroupTypeDeclaration__BodyAssignment_5_1_1_3_1_1 )
            // InternalAcmeParser.g:6920:3: rule__AcmeGroupTypeDeclaration__BodyAssignment_5_1_1_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeGroupTypeDeclaration__BodyAssignment_5_1_1_3_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupTypeDeclarationAccess().getBodyAssignment_5_1_1_3_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__1__Impl"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__2"
    // InternalAcmeParser.g:6928:1: rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__2 : rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__2__Impl ;
    public final void rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6932:1: ( rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__2__Impl )
            // InternalAcmeParser.g:6933:2: rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__2"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__2__Impl"
    // InternalAcmeParser.g:6939:1: rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__2__Impl : ( ( Semicolon )? ) ;
    public final void rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6943:1: ( ( ( Semicolon )? ) )
            // InternalAcmeParser.g:6944:1: ( ( Semicolon )? )
            {
            // InternalAcmeParser.g:6944:1: ( ( Semicolon )? )
            // InternalAcmeParser.g:6945:2: ( Semicolon )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupTypeDeclarationAccess().getSemicolonKeyword_5_1_1_3_1_2()); 
            }
            // InternalAcmeParser.g:6946:2: ( Semicolon )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==Semicolon) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // InternalAcmeParser.g:6946:3: Semicolon
                    {
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupTypeDeclarationAccess().getSemicolonKeyword_5_1_1_3_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__Group_5_1_1_3_1__2__Impl"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group__0"
    // InternalAcmeParser.g:6955:1: rule__AcmeGroupDeclaration__Group__0 : rule__AcmeGroupDeclaration__Group__0__Impl rule__AcmeGroupDeclaration__Group__1 ;
    public final void rule__AcmeGroupDeclaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6959:1: ( rule__AcmeGroupDeclaration__Group__0__Impl rule__AcmeGroupDeclaration__Group__1 )
            // InternalAcmeParser.g:6960:2: rule__AcmeGroupDeclaration__Group__0__Impl rule__AcmeGroupDeclaration__Group__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeGroupDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeGroupDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group__0"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group__0__Impl"
    // InternalAcmeParser.g:6967:1: rule__AcmeGroupDeclaration__Group__0__Impl : ( Group ) ;
    public final void rule__AcmeGroupDeclaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6971:1: ( ( Group ) )
            // InternalAcmeParser.g:6972:1: ( Group )
            {
            // InternalAcmeParser.g:6972:1: ( Group )
            // InternalAcmeParser.g:6973:2: Group
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupDeclarationAccess().getGroupKeyword_0()); 
            }
            match(input,Group,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupDeclarationAccess().getGroupKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group__0__Impl"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group__1"
    // InternalAcmeParser.g:6982:1: rule__AcmeGroupDeclaration__Group__1 : rule__AcmeGroupDeclaration__Group__1__Impl rule__AcmeGroupDeclaration__Group__2 ;
    public final void rule__AcmeGroupDeclaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6986:1: ( rule__AcmeGroupDeclaration__Group__1__Impl rule__AcmeGroupDeclaration__Group__2 )
            // InternalAcmeParser.g:6987:2: rule__AcmeGroupDeclaration__Group__1__Impl rule__AcmeGroupDeclaration__Group__2
            {
            pushFollow(FOLLOW_18);
            rule__AcmeGroupDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeGroupDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group__1"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group__1__Impl"
    // InternalAcmeParser.g:6994:1: rule__AcmeGroupDeclaration__Group__1__Impl : ( ( rule__AcmeGroupDeclaration__NameAssignment_1 ) ) ;
    public final void rule__AcmeGroupDeclaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:6998:1: ( ( ( rule__AcmeGroupDeclaration__NameAssignment_1 ) ) )
            // InternalAcmeParser.g:6999:1: ( ( rule__AcmeGroupDeclaration__NameAssignment_1 ) )
            {
            // InternalAcmeParser.g:6999:1: ( ( rule__AcmeGroupDeclaration__NameAssignment_1 ) )
            // InternalAcmeParser.g:7000:2: ( rule__AcmeGroupDeclaration__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupDeclarationAccess().getNameAssignment_1()); 
            }
            // InternalAcmeParser.g:7001:2: ( rule__AcmeGroupDeclaration__NameAssignment_1 )
            // InternalAcmeParser.g:7001:3: rule__AcmeGroupDeclaration__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeGroupDeclaration__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupDeclarationAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group__1__Impl"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group__2"
    // InternalAcmeParser.g:7009:1: rule__AcmeGroupDeclaration__Group__2 : rule__AcmeGroupDeclaration__Group__2__Impl rule__AcmeGroupDeclaration__Group__3 ;
    public final void rule__AcmeGroupDeclaration__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7013:1: ( rule__AcmeGroupDeclaration__Group__2__Impl rule__AcmeGroupDeclaration__Group__3 )
            // InternalAcmeParser.g:7014:2: rule__AcmeGroupDeclaration__Group__2__Impl rule__AcmeGroupDeclaration__Group__3
            {
            pushFollow(FOLLOW_18);
            rule__AcmeGroupDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeGroupDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group__2"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group__2__Impl"
    // InternalAcmeParser.g:7021:1: rule__AcmeGroupDeclaration__Group__2__Impl : ( ( rule__AcmeGroupDeclaration__Group_2__0 )? ) ;
    public final void rule__AcmeGroupDeclaration__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7025:1: ( ( ( rule__AcmeGroupDeclaration__Group_2__0 )? ) )
            // InternalAcmeParser.g:7026:1: ( ( rule__AcmeGroupDeclaration__Group_2__0 )? )
            {
            // InternalAcmeParser.g:7026:1: ( ( rule__AcmeGroupDeclaration__Group_2__0 )? )
            // InternalAcmeParser.g:7027:2: ( rule__AcmeGroupDeclaration__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupDeclarationAccess().getGroup_2()); 
            }
            // InternalAcmeParser.g:7028:2: ( rule__AcmeGroupDeclaration__Group_2__0 )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==Colon) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // InternalAcmeParser.g:7028:3: rule__AcmeGroupDeclaration__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeGroupDeclaration__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupDeclarationAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group__2__Impl"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group__3"
    // InternalAcmeParser.g:7036:1: rule__AcmeGroupDeclaration__Group__3 : rule__AcmeGroupDeclaration__Group__3__Impl ;
    public final void rule__AcmeGroupDeclaration__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7040:1: ( rule__AcmeGroupDeclaration__Group__3__Impl )
            // InternalAcmeParser.g:7041:2: rule__AcmeGroupDeclaration__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeGroupDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group__3"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group__3__Impl"
    // InternalAcmeParser.g:7047:1: rule__AcmeGroupDeclaration__Group__3__Impl : ( ( rule__AcmeGroupDeclaration__Alternatives_3 ) ) ;
    public final void rule__AcmeGroupDeclaration__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7051:1: ( ( ( rule__AcmeGroupDeclaration__Alternatives_3 ) ) )
            // InternalAcmeParser.g:7052:1: ( ( rule__AcmeGroupDeclaration__Alternatives_3 ) )
            {
            // InternalAcmeParser.g:7052:1: ( ( rule__AcmeGroupDeclaration__Alternatives_3 ) )
            // InternalAcmeParser.g:7053:2: ( rule__AcmeGroupDeclaration__Alternatives_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupDeclarationAccess().getAlternatives_3()); 
            }
            // InternalAcmeParser.g:7054:2: ( rule__AcmeGroupDeclaration__Alternatives_3 )
            // InternalAcmeParser.g:7054:3: rule__AcmeGroupDeclaration__Alternatives_3
            {
            pushFollow(FOLLOW_2);
            rule__AcmeGroupDeclaration__Alternatives_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupDeclarationAccess().getAlternatives_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group__3__Impl"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_2__0"
    // InternalAcmeParser.g:7063:1: rule__AcmeGroupDeclaration__Group_2__0 : rule__AcmeGroupDeclaration__Group_2__0__Impl rule__AcmeGroupDeclaration__Group_2__1 ;
    public final void rule__AcmeGroupDeclaration__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7067:1: ( rule__AcmeGroupDeclaration__Group_2__0__Impl rule__AcmeGroupDeclaration__Group_2__1 )
            // InternalAcmeParser.g:7068:2: rule__AcmeGroupDeclaration__Group_2__0__Impl rule__AcmeGroupDeclaration__Group_2__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeGroupDeclaration__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeGroupDeclaration__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_2__0"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_2__0__Impl"
    // InternalAcmeParser.g:7075:1: rule__AcmeGroupDeclaration__Group_2__0__Impl : ( Colon ) ;
    public final void rule__AcmeGroupDeclaration__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7079:1: ( ( Colon ) )
            // InternalAcmeParser.g:7080:1: ( Colon )
            {
            // InternalAcmeParser.g:7080:1: ( Colon )
            // InternalAcmeParser.g:7081:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupDeclarationAccess().getColonKeyword_2_0()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupDeclarationAccess().getColonKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_2__0__Impl"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_2__1"
    // InternalAcmeParser.g:7090:1: rule__AcmeGroupDeclaration__Group_2__1 : rule__AcmeGroupDeclaration__Group_2__1__Impl rule__AcmeGroupDeclaration__Group_2__2 ;
    public final void rule__AcmeGroupDeclaration__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7094:1: ( rule__AcmeGroupDeclaration__Group_2__1__Impl rule__AcmeGroupDeclaration__Group_2__2 )
            // InternalAcmeParser.g:7095:2: rule__AcmeGroupDeclaration__Group_2__1__Impl rule__AcmeGroupDeclaration__Group_2__2
            {
            pushFollow(FOLLOW_19);
            rule__AcmeGroupDeclaration__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeGroupDeclaration__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_2__1"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_2__1__Impl"
    // InternalAcmeParser.g:7102:1: rule__AcmeGroupDeclaration__Group_2__1__Impl : ( ( rule__AcmeGroupDeclaration__DeclaredAssignment_2_1 ) ) ;
    public final void rule__AcmeGroupDeclaration__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7106:1: ( ( ( rule__AcmeGroupDeclaration__DeclaredAssignment_2_1 ) ) )
            // InternalAcmeParser.g:7107:1: ( ( rule__AcmeGroupDeclaration__DeclaredAssignment_2_1 ) )
            {
            // InternalAcmeParser.g:7107:1: ( ( rule__AcmeGroupDeclaration__DeclaredAssignment_2_1 ) )
            // InternalAcmeParser.g:7108:2: ( rule__AcmeGroupDeclaration__DeclaredAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupDeclarationAccess().getDeclaredAssignment_2_1()); 
            }
            // InternalAcmeParser.g:7109:2: ( rule__AcmeGroupDeclaration__DeclaredAssignment_2_1 )
            // InternalAcmeParser.g:7109:3: rule__AcmeGroupDeclaration__DeclaredAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeGroupDeclaration__DeclaredAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupDeclarationAccess().getDeclaredAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_2__1__Impl"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_2__2"
    // InternalAcmeParser.g:7117:1: rule__AcmeGroupDeclaration__Group_2__2 : rule__AcmeGroupDeclaration__Group_2__2__Impl ;
    public final void rule__AcmeGroupDeclaration__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7121:1: ( rule__AcmeGroupDeclaration__Group_2__2__Impl )
            // InternalAcmeParser.g:7122:2: rule__AcmeGroupDeclaration__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeGroupDeclaration__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_2__2"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_2__2__Impl"
    // InternalAcmeParser.g:7128:1: rule__AcmeGroupDeclaration__Group_2__2__Impl : ( ( rule__AcmeGroupDeclaration__Group_2_2__0 )* ) ;
    public final void rule__AcmeGroupDeclaration__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7132:1: ( ( ( rule__AcmeGroupDeclaration__Group_2_2__0 )* ) )
            // InternalAcmeParser.g:7133:1: ( ( rule__AcmeGroupDeclaration__Group_2_2__0 )* )
            {
            // InternalAcmeParser.g:7133:1: ( ( rule__AcmeGroupDeclaration__Group_2_2__0 )* )
            // InternalAcmeParser.g:7134:2: ( rule__AcmeGroupDeclaration__Group_2_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupDeclarationAccess().getGroup_2_2()); 
            }
            // InternalAcmeParser.g:7135:2: ( rule__AcmeGroupDeclaration__Group_2_2__0 )*
            loop113:
            do {
                int alt113=2;
                int LA113_0 = input.LA(1);

                if ( (LA113_0==Comma) ) {
                    alt113=1;
                }


                switch (alt113) {
            	case 1 :
            	    // InternalAcmeParser.g:7135:3: rule__AcmeGroupDeclaration__Group_2_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__AcmeGroupDeclaration__Group_2_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop113;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupDeclarationAccess().getGroup_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_2__2__Impl"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_2_2__0"
    // InternalAcmeParser.g:7144:1: rule__AcmeGroupDeclaration__Group_2_2__0 : rule__AcmeGroupDeclaration__Group_2_2__0__Impl rule__AcmeGroupDeclaration__Group_2_2__1 ;
    public final void rule__AcmeGroupDeclaration__Group_2_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7148:1: ( rule__AcmeGroupDeclaration__Group_2_2__0__Impl rule__AcmeGroupDeclaration__Group_2_2__1 )
            // InternalAcmeParser.g:7149:2: rule__AcmeGroupDeclaration__Group_2_2__0__Impl rule__AcmeGroupDeclaration__Group_2_2__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeGroupDeclaration__Group_2_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeGroupDeclaration__Group_2_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_2_2__0"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_2_2__0__Impl"
    // InternalAcmeParser.g:7156:1: rule__AcmeGroupDeclaration__Group_2_2__0__Impl : ( Comma ) ;
    public final void rule__AcmeGroupDeclaration__Group_2_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7160:1: ( ( Comma ) )
            // InternalAcmeParser.g:7161:1: ( Comma )
            {
            // InternalAcmeParser.g:7161:1: ( Comma )
            // InternalAcmeParser.g:7162:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupDeclarationAccess().getCommaKeyword_2_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupDeclarationAccess().getCommaKeyword_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_2_2__0__Impl"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_2_2__1"
    // InternalAcmeParser.g:7171:1: rule__AcmeGroupDeclaration__Group_2_2__1 : rule__AcmeGroupDeclaration__Group_2_2__1__Impl ;
    public final void rule__AcmeGroupDeclaration__Group_2_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7175:1: ( rule__AcmeGroupDeclaration__Group_2_2__1__Impl )
            // InternalAcmeParser.g:7176:2: rule__AcmeGroupDeclaration__Group_2_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeGroupDeclaration__Group_2_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_2_2__1"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_2_2__1__Impl"
    // InternalAcmeParser.g:7182:1: rule__AcmeGroupDeclaration__Group_2_2__1__Impl : ( ( rule__AcmeGroupDeclaration__DeclaredAssignment_2_2_1 ) ) ;
    public final void rule__AcmeGroupDeclaration__Group_2_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7186:1: ( ( ( rule__AcmeGroupDeclaration__DeclaredAssignment_2_2_1 ) ) )
            // InternalAcmeParser.g:7187:1: ( ( rule__AcmeGroupDeclaration__DeclaredAssignment_2_2_1 ) )
            {
            // InternalAcmeParser.g:7187:1: ( ( rule__AcmeGroupDeclaration__DeclaredAssignment_2_2_1 ) )
            // InternalAcmeParser.g:7188:2: ( rule__AcmeGroupDeclaration__DeclaredAssignment_2_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupDeclarationAccess().getDeclaredAssignment_2_2_1()); 
            }
            // InternalAcmeParser.g:7189:2: ( rule__AcmeGroupDeclaration__DeclaredAssignment_2_2_1 )
            // InternalAcmeParser.g:7189:3: rule__AcmeGroupDeclaration__DeclaredAssignment_2_2_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeGroupDeclaration__DeclaredAssignment_2_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupDeclarationAccess().getDeclaredAssignment_2_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_2_2__1__Impl"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_3_1__0"
    // InternalAcmeParser.g:7198:1: rule__AcmeGroupDeclaration__Group_3_1__0 : rule__AcmeGroupDeclaration__Group_3_1__0__Impl rule__AcmeGroupDeclaration__Group_3_1__1 ;
    public final void rule__AcmeGroupDeclaration__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7202:1: ( rule__AcmeGroupDeclaration__Group_3_1__0__Impl rule__AcmeGroupDeclaration__Group_3_1__1 )
            // InternalAcmeParser.g:7203:2: rule__AcmeGroupDeclaration__Group_3_1__0__Impl rule__AcmeGroupDeclaration__Group_3_1__1
            {
            pushFollow(FOLLOW_20);
            rule__AcmeGroupDeclaration__Group_3_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeGroupDeclaration__Group_3_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_3_1__0"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_3_1__0__Impl"
    // InternalAcmeParser.g:7210:1: rule__AcmeGroupDeclaration__Group_3_1__0__Impl : ( EqualsSign ) ;
    public final void rule__AcmeGroupDeclaration__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7214:1: ( ( EqualsSign ) )
            // InternalAcmeParser.g:7215:1: ( EqualsSign )
            {
            // InternalAcmeParser.g:7215:1: ( EqualsSign )
            // InternalAcmeParser.g:7216:2: EqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupDeclarationAccess().getEqualsSignKeyword_3_1_0()); 
            }
            match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupDeclarationAccess().getEqualsSignKeyword_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_3_1__0__Impl"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_3_1__1"
    // InternalAcmeParser.g:7225:1: rule__AcmeGroupDeclaration__Group_3_1__1 : rule__AcmeGroupDeclaration__Group_3_1__1__Impl ;
    public final void rule__AcmeGroupDeclaration__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7229:1: ( rule__AcmeGroupDeclaration__Group_3_1__1__Impl )
            // InternalAcmeParser.g:7230:2: rule__AcmeGroupDeclaration__Group_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeGroupDeclaration__Group_3_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_3_1__1"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_3_1__1__Impl"
    // InternalAcmeParser.g:7236:1: rule__AcmeGroupDeclaration__Group_3_1__1__Impl : ( ( rule__AcmeGroupDeclaration__Alternatives_3_1_1 ) ) ;
    public final void rule__AcmeGroupDeclaration__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7240:1: ( ( ( rule__AcmeGroupDeclaration__Alternatives_3_1_1 ) ) )
            // InternalAcmeParser.g:7241:1: ( ( rule__AcmeGroupDeclaration__Alternatives_3_1_1 ) )
            {
            // InternalAcmeParser.g:7241:1: ( ( rule__AcmeGroupDeclaration__Alternatives_3_1_1 ) )
            // InternalAcmeParser.g:7242:2: ( rule__AcmeGroupDeclaration__Alternatives_3_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupDeclarationAccess().getAlternatives_3_1_1()); 
            }
            // InternalAcmeParser.g:7243:2: ( rule__AcmeGroupDeclaration__Alternatives_3_1_1 )
            // InternalAcmeParser.g:7243:3: rule__AcmeGroupDeclaration__Alternatives_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeGroupDeclaration__Alternatives_3_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupDeclarationAccess().getAlternatives_3_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_3_1__1__Impl"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_3_1_1_0__0"
    // InternalAcmeParser.g:7252:1: rule__AcmeGroupDeclaration__Group_3_1_1_0__0 : rule__AcmeGroupDeclaration__Group_3_1_1_0__0__Impl rule__AcmeGroupDeclaration__Group_3_1_1_0__1 ;
    public final void rule__AcmeGroupDeclaration__Group_3_1_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7256:1: ( rule__AcmeGroupDeclaration__Group_3_1_1_0__0__Impl rule__AcmeGroupDeclaration__Group_3_1_1_0__1 )
            // InternalAcmeParser.g:7257:2: rule__AcmeGroupDeclaration__Group_3_1_1_0__0__Impl rule__AcmeGroupDeclaration__Group_3_1_1_0__1
            {
            pushFollow(FOLLOW_7);
            rule__AcmeGroupDeclaration__Group_3_1_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeGroupDeclaration__Group_3_1_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_3_1_1_0__0"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_3_1_1_0__0__Impl"
    // InternalAcmeParser.g:7264:1: rule__AcmeGroupDeclaration__Group_3_1_1_0__0__Impl : ( ( rule__AcmeGroupDeclaration__BodyAssignment_3_1_1_0_0 ) ) ;
    public final void rule__AcmeGroupDeclaration__Group_3_1_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7268:1: ( ( ( rule__AcmeGroupDeclaration__BodyAssignment_3_1_1_0_0 ) ) )
            // InternalAcmeParser.g:7269:1: ( ( rule__AcmeGroupDeclaration__BodyAssignment_3_1_1_0_0 ) )
            {
            // InternalAcmeParser.g:7269:1: ( ( rule__AcmeGroupDeclaration__BodyAssignment_3_1_1_0_0 ) )
            // InternalAcmeParser.g:7270:2: ( rule__AcmeGroupDeclaration__BodyAssignment_3_1_1_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupDeclarationAccess().getBodyAssignment_3_1_1_0_0()); 
            }
            // InternalAcmeParser.g:7271:2: ( rule__AcmeGroupDeclaration__BodyAssignment_3_1_1_0_0 )
            // InternalAcmeParser.g:7271:3: rule__AcmeGroupDeclaration__BodyAssignment_3_1_1_0_0
            {
            pushFollow(FOLLOW_2);
            rule__AcmeGroupDeclaration__BodyAssignment_3_1_1_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupDeclarationAccess().getBodyAssignment_3_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_3_1_1_0__0__Impl"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_3_1_1_0__1"
    // InternalAcmeParser.g:7279:1: rule__AcmeGroupDeclaration__Group_3_1_1_0__1 : rule__AcmeGroupDeclaration__Group_3_1_1_0__1__Impl ;
    public final void rule__AcmeGroupDeclaration__Group_3_1_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7283:1: ( rule__AcmeGroupDeclaration__Group_3_1_1_0__1__Impl )
            // InternalAcmeParser.g:7284:2: rule__AcmeGroupDeclaration__Group_3_1_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeGroupDeclaration__Group_3_1_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_3_1_1_0__1"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_3_1_1_0__1__Impl"
    // InternalAcmeParser.g:7290:1: rule__AcmeGroupDeclaration__Group_3_1_1_0__1__Impl : ( ( Semicolon )? ) ;
    public final void rule__AcmeGroupDeclaration__Group_3_1_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7294:1: ( ( ( Semicolon )? ) )
            // InternalAcmeParser.g:7295:1: ( ( Semicolon )? )
            {
            // InternalAcmeParser.g:7295:1: ( ( Semicolon )? )
            // InternalAcmeParser.g:7296:2: ( Semicolon )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupDeclarationAccess().getSemicolonKeyword_3_1_1_0_1()); 
            }
            // InternalAcmeParser.g:7297:2: ( Semicolon )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==Semicolon) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // InternalAcmeParser.g:7297:3: Semicolon
                    {
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupDeclarationAccess().getSemicolonKeyword_3_1_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_3_1_1_0__1__Impl"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_3_1_1_1__0"
    // InternalAcmeParser.g:7306:1: rule__AcmeGroupDeclaration__Group_3_1_1_1__0 : rule__AcmeGroupDeclaration__Group_3_1_1_1__0__Impl rule__AcmeGroupDeclaration__Group_3_1_1_1__1 ;
    public final void rule__AcmeGroupDeclaration__Group_3_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7310:1: ( rule__AcmeGroupDeclaration__Group_3_1_1_1__0__Impl rule__AcmeGroupDeclaration__Group_3_1_1_1__1 )
            // InternalAcmeParser.g:7311:2: rule__AcmeGroupDeclaration__Group_3_1_1_1__0__Impl rule__AcmeGroupDeclaration__Group_3_1_1_1__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeGroupDeclaration__Group_3_1_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeGroupDeclaration__Group_3_1_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_3_1_1_1__0"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_3_1_1_1__0__Impl"
    // InternalAcmeParser.g:7318:1: rule__AcmeGroupDeclaration__Group_3_1_1_1__0__Impl : ( New ) ;
    public final void rule__AcmeGroupDeclaration__Group_3_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7322:1: ( ( New ) )
            // InternalAcmeParser.g:7323:1: ( New )
            {
            // InternalAcmeParser.g:7323:1: ( New )
            // InternalAcmeParser.g:7324:2: New
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupDeclarationAccess().getNewKeyword_3_1_1_1_0()); 
            }
            match(input,New,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupDeclarationAccess().getNewKeyword_3_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_3_1_1_1__0__Impl"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_3_1_1_1__1"
    // InternalAcmeParser.g:7333:1: rule__AcmeGroupDeclaration__Group_3_1_1_1__1 : rule__AcmeGroupDeclaration__Group_3_1_1_1__1__Impl rule__AcmeGroupDeclaration__Group_3_1_1_1__2 ;
    public final void rule__AcmeGroupDeclaration__Group_3_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7337:1: ( rule__AcmeGroupDeclaration__Group_3_1_1_1__1__Impl rule__AcmeGroupDeclaration__Group_3_1_1_1__2 )
            // InternalAcmeParser.g:7338:2: rule__AcmeGroupDeclaration__Group_3_1_1_1__1__Impl rule__AcmeGroupDeclaration__Group_3_1_1_1__2
            {
            pushFollow(FOLLOW_21);
            rule__AcmeGroupDeclaration__Group_3_1_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeGroupDeclaration__Group_3_1_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_3_1_1_1__1"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_3_1_1_1__1__Impl"
    // InternalAcmeParser.g:7345:1: rule__AcmeGroupDeclaration__Group_3_1_1_1__1__Impl : ( ( rule__AcmeGroupDeclaration__InstantiatedAssignment_3_1_1_1_1 ) ) ;
    public final void rule__AcmeGroupDeclaration__Group_3_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7349:1: ( ( ( rule__AcmeGroupDeclaration__InstantiatedAssignment_3_1_1_1_1 ) ) )
            // InternalAcmeParser.g:7350:1: ( ( rule__AcmeGroupDeclaration__InstantiatedAssignment_3_1_1_1_1 ) )
            {
            // InternalAcmeParser.g:7350:1: ( ( rule__AcmeGroupDeclaration__InstantiatedAssignment_3_1_1_1_1 ) )
            // InternalAcmeParser.g:7351:2: ( rule__AcmeGroupDeclaration__InstantiatedAssignment_3_1_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupDeclarationAccess().getInstantiatedAssignment_3_1_1_1_1()); 
            }
            // InternalAcmeParser.g:7352:2: ( rule__AcmeGroupDeclaration__InstantiatedAssignment_3_1_1_1_1 )
            // InternalAcmeParser.g:7352:3: rule__AcmeGroupDeclaration__InstantiatedAssignment_3_1_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeGroupDeclaration__InstantiatedAssignment_3_1_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupDeclarationAccess().getInstantiatedAssignment_3_1_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_3_1_1_1__1__Impl"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_3_1_1_1__2"
    // InternalAcmeParser.g:7360:1: rule__AcmeGroupDeclaration__Group_3_1_1_1__2 : rule__AcmeGroupDeclaration__Group_3_1_1_1__2__Impl rule__AcmeGroupDeclaration__Group_3_1_1_1__3 ;
    public final void rule__AcmeGroupDeclaration__Group_3_1_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7364:1: ( rule__AcmeGroupDeclaration__Group_3_1_1_1__2__Impl rule__AcmeGroupDeclaration__Group_3_1_1_1__3 )
            // InternalAcmeParser.g:7365:2: rule__AcmeGroupDeclaration__Group_3_1_1_1__2__Impl rule__AcmeGroupDeclaration__Group_3_1_1_1__3
            {
            pushFollow(FOLLOW_21);
            rule__AcmeGroupDeclaration__Group_3_1_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeGroupDeclaration__Group_3_1_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_3_1_1_1__2"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_3_1_1_1__2__Impl"
    // InternalAcmeParser.g:7372:1: rule__AcmeGroupDeclaration__Group_3_1_1_1__2__Impl : ( ( rule__AcmeGroupDeclaration__Group_3_1_1_1_2__0 )* ) ;
    public final void rule__AcmeGroupDeclaration__Group_3_1_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7376:1: ( ( ( rule__AcmeGroupDeclaration__Group_3_1_1_1_2__0 )* ) )
            // InternalAcmeParser.g:7377:1: ( ( rule__AcmeGroupDeclaration__Group_3_1_1_1_2__0 )* )
            {
            // InternalAcmeParser.g:7377:1: ( ( rule__AcmeGroupDeclaration__Group_3_1_1_1_2__0 )* )
            // InternalAcmeParser.g:7378:2: ( rule__AcmeGroupDeclaration__Group_3_1_1_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupDeclarationAccess().getGroup_3_1_1_1_2()); 
            }
            // InternalAcmeParser.g:7379:2: ( rule__AcmeGroupDeclaration__Group_3_1_1_1_2__0 )*
            loop115:
            do {
                int alt115=2;
                int LA115_0 = input.LA(1);

                if ( (LA115_0==Comma) ) {
                    alt115=1;
                }


                switch (alt115) {
            	case 1 :
            	    // InternalAcmeParser.g:7379:3: rule__AcmeGroupDeclaration__Group_3_1_1_1_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__AcmeGroupDeclaration__Group_3_1_1_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop115;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupDeclarationAccess().getGroup_3_1_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_3_1_1_1__2__Impl"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_3_1_1_1__3"
    // InternalAcmeParser.g:7387:1: rule__AcmeGroupDeclaration__Group_3_1_1_1__3 : rule__AcmeGroupDeclaration__Group_3_1_1_1__3__Impl ;
    public final void rule__AcmeGroupDeclaration__Group_3_1_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7391:1: ( rule__AcmeGroupDeclaration__Group_3_1_1_1__3__Impl )
            // InternalAcmeParser.g:7392:2: rule__AcmeGroupDeclaration__Group_3_1_1_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeGroupDeclaration__Group_3_1_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_3_1_1_1__3"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_3_1_1_1__3__Impl"
    // InternalAcmeParser.g:7398:1: rule__AcmeGroupDeclaration__Group_3_1_1_1__3__Impl : ( ( rule__AcmeGroupDeclaration__Alternatives_3_1_1_1_3 ) ) ;
    public final void rule__AcmeGroupDeclaration__Group_3_1_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7402:1: ( ( ( rule__AcmeGroupDeclaration__Alternatives_3_1_1_1_3 ) ) )
            // InternalAcmeParser.g:7403:1: ( ( rule__AcmeGroupDeclaration__Alternatives_3_1_1_1_3 ) )
            {
            // InternalAcmeParser.g:7403:1: ( ( rule__AcmeGroupDeclaration__Alternatives_3_1_1_1_3 ) )
            // InternalAcmeParser.g:7404:2: ( rule__AcmeGroupDeclaration__Alternatives_3_1_1_1_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupDeclarationAccess().getAlternatives_3_1_1_1_3()); 
            }
            // InternalAcmeParser.g:7405:2: ( rule__AcmeGroupDeclaration__Alternatives_3_1_1_1_3 )
            // InternalAcmeParser.g:7405:3: rule__AcmeGroupDeclaration__Alternatives_3_1_1_1_3
            {
            pushFollow(FOLLOW_2);
            rule__AcmeGroupDeclaration__Alternatives_3_1_1_1_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupDeclarationAccess().getAlternatives_3_1_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_3_1_1_1__3__Impl"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_3_1_1_1_2__0"
    // InternalAcmeParser.g:7414:1: rule__AcmeGroupDeclaration__Group_3_1_1_1_2__0 : rule__AcmeGroupDeclaration__Group_3_1_1_1_2__0__Impl rule__AcmeGroupDeclaration__Group_3_1_1_1_2__1 ;
    public final void rule__AcmeGroupDeclaration__Group_3_1_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7418:1: ( rule__AcmeGroupDeclaration__Group_3_1_1_1_2__0__Impl rule__AcmeGroupDeclaration__Group_3_1_1_1_2__1 )
            // InternalAcmeParser.g:7419:2: rule__AcmeGroupDeclaration__Group_3_1_1_1_2__0__Impl rule__AcmeGroupDeclaration__Group_3_1_1_1_2__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeGroupDeclaration__Group_3_1_1_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeGroupDeclaration__Group_3_1_1_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_3_1_1_1_2__0"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_3_1_1_1_2__0__Impl"
    // InternalAcmeParser.g:7426:1: rule__AcmeGroupDeclaration__Group_3_1_1_1_2__0__Impl : ( Comma ) ;
    public final void rule__AcmeGroupDeclaration__Group_3_1_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7430:1: ( ( Comma ) )
            // InternalAcmeParser.g:7431:1: ( Comma )
            {
            // InternalAcmeParser.g:7431:1: ( Comma )
            // InternalAcmeParser.g:7432:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupDeclarationAccess().getCommaKeyword_3_1_1_1_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupDeclarationAccess().getCommaKeyword_3_1_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_3_1_1_1_2__0__Impl"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_3_1_1_1_2__1"
    // InternalAcmeParser.g:7441:1: rule__AcmeGroupDeclaration__Group_3_1_1_1_2__1 : rule__AcmeGroupDeclaration__Group_3_1_1_1_2__1__Impl ;
    public final void rule__AcmeGroupDeclaration__Group_3_1_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7445:1: ( rule__AcmeGroupDeclaration__Group_3_1_1_1_2__1__Impl )
            // InternalAcmeParser.g:7446:2: rule__AcmeGroupDeclaration__Group_3_1_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeGroupDeclaration__Group_3_1_1_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_3_1_1_1_2__1"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_3_1_1_1_2__1__Impl"
    // InternalAcmeParser.g:7452:1: rule__AcmeGroupDeclaration__Group_3_1_1_1_2__1__Impl : ( ( rule__AcmeGroupDeclaration__InstantiatedAssignment_3_1_1_1_2_1 ) ) ;
    public final void rule__AcmeGroupDeclaration__Group_3_1_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7456:1: ( ( ( rule__AcmeGroupDeclaration__InstantiatedAssignment_3_1_1_1_2_1 ) ) )
            // InternalAcmeParser.g:7457:1: ( ( rule__AcmeGroupDeclaration__InstantiatedAssignment_3_1_1_1_2_1 ) )
            {
            // InternalAcmeParser.g:7457:1: ( ( rule__AcmeGroupDeclaration__InstantiatedAssignment_3_1_1_1_2_1 ) )
            // InternalAcmeParser.g:7458:2: ( rule__AcmeGroupDeclaration__InstantiatedAssignment_3_1_1_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupDeclarationAccess().getInstantiatedAssignment_3_1_1_1_2_1()); 
            }
            // InternalAcmeParser.g:7459:2: ( rule__AcmeGroupDeclaration__InstantiatedAssignment_3_1_1_1_2_1 )
            // InternalAcmeParser.g:7459:3: rule__AcmeGroupDeclaration__InstantiatedAssignment_3_1_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeGroupDeclaration__InstantiatedAssignment_3_1_1_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupDeclarationAccess().getInstantiatedAssignment_3_1_1_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_3_1_1_1_2__1__Impl"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__0"
    // InternalAcmeParser.g:7468:1: rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__0 : rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__0__Impl rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__1 ;
    public final void rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7472:1: ( rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__0__Impl rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__1 )
            // InternalAcmeParser.g:7473:2: rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__0__Impl rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__1
            {
            pushFollow(FOLLOW_22);
            rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__0"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__0__Impl"
    // InternalAcmeParser.g:7480:1: rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__0__Impl : ( Extended ) ;
    public final void rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7484:1: ( ( Extended ) )
            // InternalAcmeParser.g:7485:1: ( Extended )
            {
            // InternalAcmeParser.g:7485:1: ( Extended )
            // InternalAcmeParser.g:7486:2: Extended
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupDeclarationAccess().getExtendedKeyword_3_1_1_1_3_1_0()); 
            }
            match(input,Extended,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupDeclarationAccess().getExtendedKeyword_3_1_1_1_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__0__Impl"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__1"
    // InternalAcmeParser.g:7495:1: rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__1 : rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__1__Impl rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__2 ;
    public final void rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7499:1: ( rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__1__Impl rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__2 )
            // InternalAcmeParser.g:7500:2: rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__1__Impl rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__2
            {
            pushFollow(FOLLOW_13);
            rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__1"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__1__Impl"
    // InternalAcmeParser.g:7507:1: rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__1__Impl : ( With ) ;
    public final void rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7511:1: ( ( With ) )
            // InternalAcmeParser.g:7512:1: ( With )
            {
            // InternalAcmeParser.g:7512:1: ( With )
            // InternalAcmeParser.g:7513:2: With
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupDeclarationAccess().getWithKeyword_3_1_1_1_3_1_1()); 
            }
            match(input,With,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupDeclarationAccess().getWithKeyword_3_1_1_1_3_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__1__Impl"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__2"
    // InternalAcmeParser.g:7522:1: rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__2 : rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__2__Impl rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__3 ;
    public final void rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7526:1: ( rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__2__Impl rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__3 )
            // InternalAcmeParser.g:7527:2: rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__2__Impl rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__3
            {
            pushFollow(FOLLOW_7);
            rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__2"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__2__Impl"
    // InternalAcmeParser.g:7534:1: rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__2__Impl : ( ( rule__AcmeGroupDeclaration__BodyAssignment_3_1_1_1_3_1_2 ) ) ;
    public final void rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7538:1: ( ( ( rule__AcmeGroupDeclaration__BodyAssignment_3_1_1_1_3_1_2 ) ) )
            // InternalAcmeParser.g:7539:1: ( ( rule__AcmeGroupDeclaration__BodyAssignment_3_1_1_1_3_1_2 ) )
            {
            // InternalAcmeParser.g:7539:1: ( ( rule__AcmeGroupDeclaration__BodyAssignment_3_1_1_1_3_1_2 ) )
            // InternalAcmeParser.g:7540:2: ( rule__AcmeGroupDeclaration__BodyAssignment_3_1_1_1_3_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupDeclarationAccess().getBodyAssignment_3_1_1_1_3_1_2()); 
            }
            // InternalAcmeParser.g:7541:2: ( rule__AcmeGroupDeclaration__BodyAssignment_3_1_1_1_3_1_2 )
            // InternalAcmeParser.g:7541:3: rule__AcmeGroupDeclaration__BodyAssignment_3_1_1_1_3_1_2
            {
            pushFollow(FOLLOW_2);
            rule__AcmeGroupDeclaration__BodyAssignment_3_1_1_1_3_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupDeclarationAccess().getBodyAssignment_3_1_1_1_3_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__2__Impl"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__3"
    // InternalAcmeParser.g:7549:1: rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__3 : rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__3__Impl ;
    public final void rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7553:1: ( rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__3__Impl )
            // InternalAcmeParser.g:7554:2: rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__3"


    // $ANTLR start "rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__3__Impl"
    // InternalAcmeParser.g:7560:1: rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__3__Impl : ( ( Semicolon )? ) ;
    public final void rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7564:1: ( ( ( Semicolon )? ) )
            // InternalAcmeParser.g:7565:1: ( ( Semicolon )? )
            {
            // InternalAcmeParser.g:7565:1: ( ( Semicolon )? )
            // InternalAcmeParser.g:7566:2: ( Semicolon )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupDeclarationAccess().getSemicolonKeyword_3_1_1_1_3_1_3()); 
            }
            // InternalAcmeParser.g:7567:2: ( Semicolon )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==Semicolon) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // InternalAcmeParser.g:7567:3: Semicolon
                    {
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupDeclarationAccess().getSemicolonKeyword_3_1_1_1_3_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__Group_3_1_1_1_3_1__3__Impl"


    // $ANTLR start "rule__AcmeGroupBody__Group__0"
    // InternalAcmeParser.g:7576:1: rule__AcmeGroupBody__Group__0 : rule__AcmeGroupBody__Group__0__Impl rule__AcmeGroupBody__Group__1 ;
    public final void rule__AcmeGroupBody__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7580:1: ( rule__AcmeGroupBody__Group__0__Impl rule__AcmeGroupBody__Group__1 )
            // InternalAcmeParser.g:7581:2: rule__AcmeGroupBody__Group__0__Impl rule__AcmeGroupBody__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__AcmeGroupBody__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeGroupBody__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupBody__Group__0"


    // $ANTLR start "rule__AcmeGroupBody__Group__0__Impl"
    // InternalAcmeParser.g:7588:1: rule__AcmeGroupBody__Group__0__Impl : ( () ) ;
    public final void rule__AcmeGroupBody__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7592:1: ( ( () ) )
            // InternalAcmeParser.g:7593:1: ( () )
            {
            // InternalAcmeParser.g:7593:1: ( () )
            // InternalAcmeParser.g:7594:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupBodyAccess().getAcmeGroupBodyAction_0()); 
            }
            // InternalAcmeParser.g:7595:2: ()
            // InternalAcmeParser.g:7595:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupBodyAccess().getAcmeGroupBodyAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupBody__Group__0__Impl"


    // $ANTLR start "rule__AcmeGroupBody__Group__1"
    // InternalAcmeParser.g:7603:1: rule__AcmeGroupBody__Group__1 : rule__AcmeGroupBody__Group__1__Impl rule__AcmeGroupBody__Group__2 ;
    public final void rule__AcmeGroupBody__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7607:1: ( rule__AcmeGroupBody__Group__1__Impl rule__AcmeGroupBody__Group__2 )
            // InternalAcmeParser.g:7608:2: rule__AcmeGroupBody__Group__1__Impl rule__AcmeGroupBody__Group__2
            {
            pushFollow(FOLLOW_29);
            rule__AcmeGroupBody__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeGroupBody__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupBody__Group__1"


    // $ANTLR start "rule__AcmeGroupBody__Group__1__Impl"
    // InternalAcmeParser.g:7615:1: rule__AcmeGroupBody__Group__1__Impl : ( LeftCurlyBracket ) ;
    public final void rule__AcmeGroupBody__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7619:1: ( ( LeftCurlyBracket ) )
            // InternalAcmeParser.g:7620:1: ( LeftCurlyBracket )
            {
            // InternalAcmeParser.g:7620:1: ( LeftCurlyBracket )
            // InternalAcmeParser.g:7621:2: LeftCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupBodyAccess().getLeftCurlyBracketKeyword_1()); 
            }
            match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupBodyAccess().getLeftCurlyBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupBody__Group__1__Impl"


    // $ANTLR start "rule__AcmeGroupBody__Group__2"
    // InternalAcmeParser.g:7630:1: rule__AcmeGroupBody__Group__2 : rule__AcmeGroupBody__Group__2__Impl rule__AcmeGroupBody__Group__3 ;
    public final void rule__AcmeGroupBody__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7634:1: ( rule__AcmeGroupBody__Group__2__Impl rule__AcmeGroupBody__Group__3 )
            // InternalAcmeParser.g:7635:2: rule__AcmeGroupBody__Group__2__Impl rule__AcmeGroupBody__Group__3
            {
            pushFollow(FOLLOW_29);
            rule__AcmeGroupBody__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeGroupBody__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupBody__Group__2"


    // $ANTLR start "rule__AcmeGroupBody__Group__2__Impl"
    // InternalAcmeParser.g:7642:1: rule__AcmeGroupBody__Group__2__Impl : ( ( rule__AcmeGroupBody__Alternatives_2 )* ) ;
    public final void rule__AcmeGroupBody__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7646:1: ( ( ( rule__AcmeGroupBody__Alternatives_2 )* ) )
            // InternalAcmeParser.g:7647:1: ( ( rule__AcmeGroupBody__Alternatives_2 )* )
            {
            // InternalAcmeParser.g:7647:1: ( ( rule__AcmeGroupBody__Alternatives_2 )* )
            // InternalAcmeParser.g:7648:2: ( rule__AcmeGroupBody__Alternatives_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupBodyAccess().getAlternatives_2()); 
            }
            // InternalAcmeParser.g:7649:2: ( rule__AcmeGroupBody__Alternatives_2 )*
            loop117:
            do {
                int alt117=2;
                int LA117_0 = input.LA(1);

                if ( ((LA117_0>=Hueristic && LA117_0<=Invariant)||LA117_0==Property||LA117_0==Members||LA117_0==Rule) ) {
                    alt117=1;
                }


                switch (alt117) {
            	case 1 :
            	    // InternalAcmeParser.g:7649:3: rule__AcmeGroupBody__Alternatives_2
            	    {
            	    pushFollow(FOLLOW_30);
            	    rule__AcmeGroupBody__Alternatives_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop117;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupBodyAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupBody__Group__2__Impl"


    // $ANTLR start "rule__AcmeGroupBody__Group__3"
    // InternalAcmeParser.g:7657:1: rule__AcmeGroupBody__Group__3 : rule__AcmeGroupBody__Group__3__Impl ;
    public final void rule__AcmeGroupBody__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7661:1: ( rule__AcmeGroupBody__Group__3__Impl )
            // InternalAcmeParser.g:7662:2: rule__AcmeGroupBody__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeGroupBody__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupBody__Group__3"


    // $ANTLR start "rule__AcmeGroupBody__Group__3__Impl"
    // InternalAcmeParser.g:7668:1: rule__AcmeGroupBody__Group__3__Impl : ( RightCurlyBracket ) ;
    public final void rule__AcmeGroupBody__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7672:1: ( ( RightCurlyBracket ) )
            // InternalAcmeParser.g:7673:1: ( RightCurlyBracket )
            {
            // InternalAcmeParser.g:7673:1: ( RightCurlyBracket )
            // InternalAcmeParser.g:7674:2: RightCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupBodyAccess().getRightCurlyBracketKeyword_3()); 
            }
            match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupBodyAccess().getRightCurlyBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupBody__Group__3__Impl"


    // $ANTLR start "rule__MembersBlock__Group__0"
    // InternalAcmeParser.g:7684:1: rule__MembersBlock__Group__0 : rule__MembersBlock__Group__0__Impl rule__MembersBlock__Group__1 ;
    public final void rule__MembersBlock__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7688:1: ( rule__MembersBlock__Group__0__Impl rule__MembersBlock__Group__1 )
            // InternalAcmeParser.g:7689:2: rule__MembersBlock__Group__0__Impl rule__MembersBlock__Group__1
            {
            pushFollow(FOLLOW_31);
            rule__MembersBlock__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MembersBlock__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MembersBlock__Group__0"


    // $ANTLR start "rule__MembersBlock__Group__0__Impl"
    // InternalAcmeParser.g:7696:1: rule__MembersBlock__Group__0__Impl : ( () ) ;
    public final void rule__MembersBlock__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7700:1: ( ( () ) )
            // InternalAcmeParser.g:7701:1: ( () )
            {
            // InternalAcmeParser.g:7701:1: ( () )
            // InternalAcmeParser.g:7702:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMembersBlockAccess().getMembersBlockAction_0()); 
            }
            // InternalAcmeParser.g:7703:2: ()
            // InternalAcmeParser.g:7703:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMembersBlockAccess().getMembersBlockAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MembersBlock__Group__0__Impl"


    // $ANTLR start "rule__MembersBlock__Group__1"
    // InternalAcmeParser.g:7711:1: rule__MembersBlock__Group__1 : rule__MembersBlock__Group__1__Impl rule__MembersBlock__Group__2 ;
    public final void rule__MembersBlock__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7715:1: ( rule__MembersBlock__Group__1__Impl rule__MembersBlock__Group__2 )
            // InternalAcmeParser.g:7716:2: rule__MembersBlock__Group__1__Impl rule__MembersBlock__Group__2
            {
            pushFollow(FOLLOW_13);
            rule__MembersBlock__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MembersBlock__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MembersBlock__Group__1"


    // $ANTLR start "rule__MembersBlock__Group__1__Impl"
    // InternalAcmeParser.g:7723:1: rule__MembersBlock__Group__1__Impl : ( Members ) ;
    public final void rule__MembersBlock__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7727:1: ( ( Members ) )
            // InternalAcmeParser.g:7728:1: ( Members )
            {
            // InternalAcmeParser.g:7728:1: ( Members )
            // InternalAcmeParser.g:7729:2: Members
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMembersBlockAccess().getMembersKeyword_1()); 
            }
            match(input,Members,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMembersBlockAccess().getMembersKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MembersBlock__Group__1__Impl"


    // $ANTLR start "rule__MembersBlock__Group__2"
    // InternalAcmeParser.g:7738:1: rule__MembersBlock__Group__2 : rule__MembersBlock__Group__2__Impl rule__MembersBlock__Group__3 ;
    public final void rule__MembersBlock__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7742:1: ( rule__MembersBlock__Group__2__Impl rule__MembersBlock__Group__3 )
            // InternalAcmeParser.g:7743:2: rule__MembersBlock__Group__2__Impl rule__MembersBlock__Group__3
            {
            pushFollow(FOLLOW_32);
            rule__MembersBlock__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MembersBlock__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MembersBlock__Group__2"


    // $ANTLR start "rule__MembersBlock__Group__2__Impl"
    // InternalAcmeParser.g:7750:1: rule__MembersBlock__Group__2__Impl : ( LeftCurlyBracket ) ;
    public final void rule__MembersBlock__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7754:1: ( ( LeftCurlyBracket ) )
            // InternalAcmeParser.g:7755:1: ( LeftCurlyBracket )
            {
            // InternalAcmeParser.g:7755:1: ( LeftCurlyBracket )
            // InternalAcmeParser.g:7756:2: LeftCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMembersBlockAccess().getLeftCurlyBracketKeyword_2()); 
            }
            match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMembersBlockAccess().getLeftCurlyBracketKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MembersBlock__Group__2__Impl"


    // $ANTLR start "rule__MembersBlock__Group__3"
    // InternalAcmeParser.g:7765:1: rule__MembersBlock__Group__3 : rule__MembersBlock__Group__3__Impl rule__MembersBlock__Group__4 ;
    public final void rule__MembersBlock__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7769:1: ( rule__MembersBlock__Group__3__Impl rule__MembersBlock__Group__4 )
            // InternalAcmeParser.g:7770:2: rule__MembersBlock__Group__3__Impl rule__MembersBlock__Group__4
            {
            pushFollow(FOLLOW_32);
            rule__MembersBlock__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MembersBlock__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MembersBlock__Group__3"


    // $ANTLR start "rule__MembersBlock__Group__3__Impl"
    // InternalAcmeParser.g:7777:1: rule__MembersBlock__Group__3__Impl : ( ( rule__MembersBlock__Group_3__0 )? ) ;
    public final void rule__MembersBlock__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7781:1: ( ( ( rule__MembersBlock__Group_3__0 )? ) )
            // InternalAcmeParser.g:7782:1: ( ( rule__MembersBlock__Group_3__0 )? )
            {
            // InternalAcmeParser.g:7782:1: ( ( rule__MembersBlock__Group_3__0 )? )
            // InternalAcmeParser.g:7783:2: ( rule__MembersBlock__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMembersBlockAccess().getGroup_3()); 
            }
            // InternalAcmeParser.g:7784:2: ( rule__MembersBlock__Group_3__0 )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==RULE_ID) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // InternalAcmeParser.g:7784:3: rule__MembersBlock__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__MembersBlock__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMembersBlockAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MembersBlock__Group__3__Impl"


    // $ANTLR start "rule__MembersBlock__Group__4"
    // InternalAcmeParser.g:7792:1: rule__MembersBlock__Group__4 : rule__MembersBlock__Group__4__Impl ;
    public final void rule__MembersBlock__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7796:1: ( rule__MembersBlock__Group__4__Impl )
            // InternalAcmeParser.g:7797:2: rule__MembersBlock__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MembersBlock__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MembersBlock__Group__4"


    // $ANTLR start "rule__MembersBlock__Group__4__Impl"
    // InternalAcmeParser.g:7803:1: rule__MembersBlock__Group__4__Impl : ( RightCurlyBracket ) ;
    public final void rule__MembersBlock__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7807:1: ( ( RightCurlyBracket ) )
            // InternalAcmeParser.g:7808:1: ( RightCurlyBracket )
            {
            // InternalAcmeParser.g:7808:1: ( RightCurlyBracket )
            // InternalAcmeParser.g:7809:2: RightCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMembersBlockAccess().getRightCurlyBracketKeyword_4()); 
            }
            match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMembersBlockAccess().getRightCurlyBracketKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MembersBlock__Group__4__Impl"


    // $ANTLR start "rule__MembersBlock__Group_3__0"
    // InternalAcmeParser.g:7819:1: rule__MembersBlock__Group_3__0 : rule__MembersBlock__Group_3__0__Impl rule__MembersBlock__Group_3__1 ;
    public final void rule__MembersBlock__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7823:1: ( rule__MembersBlock__Group_3__0__Impl rule__MembersBlock__Group_3__1 )
            // InternalAcmeParser.g:7824:2: rule__MembersBlock__Group_3__0__Impl rule__MembersBlock__Group_3__1
            {
            pushFollow(FOLLOW_19);
            rule__MembersBlock__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MembersBlock__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MembersBlock__Group_3__0"


    // $ANTLR start "rule__MembersBlock__Group_3__0__Impl"
    // InternalAcmeParser.g:7831:1: rule__MembersBlock__Group_3__0__Impl : ( ( rule__MembersBlock__RefsAssignment_3_0 ) ) ;
    public final void rule__MembersBlock__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7835:1: ( ( ( rule__MembersBlock__RefsAssignment_3_0 ) ) )
            // InternalAcmeParser.g:7836:1: ( ( rule__MembersBlock__RefsAssignment_3_0 ) )
            {
            // InternalAcmeParser.g:7836:1: ( ( rule__MembersBlock__RefsAssignment_3_0 ) )
            // InternalAcmeParser.g:7837:2: ( rule__MembersBlock__RefsAssignment_3_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMembersBlockAccess().getRefsAssignment_3_0()); 
            }
            // InternalAcmeParser.g:7838:2: ( rule__MembersBlock__RefsAssignment_3_0 )
            // InternalAcmeParser.g:7838:3: rule__MembersBlock__RefsAssignment_3_0
            {
            pushFollow(FOLLOW_2);
            rule__MembersBlock__RefsAssignment_3_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMembersBlockAccess().getRefsAssignment_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MembersBlock__Group_3__0__Impl"


    // $ANTLR start "rule__MembersBlock__Group_3__1"
    // InternalAcmeParser.g:7846:1: rule__MembersBlock__Group_3__1 : rule__MembersBlock__Group_3__1__Impl ;
    public final void rule__MembersBlock__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7850:1: ( rule__MembersBlock__Group_3__1__Impl )
            // InternalAcmeParser.g:7851:2: rule__MembersBlock__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MembersBlock__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MembersBlock__Group_3__1"


    // $ANTLR start "rule__MembersBlock__Group_3__1__Impl"
    // InternalAcmeParser.g:7857:1: rule__MembersBlock__Group_3__1__Impl : ( ( rule__MembersBlock__Group_3_1__0 ) ) ;
    public final void rule__MembersBlock__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7861:1: ( ( ( rule__MembersBlock__Group_3_1__0 ) ) )
            // InternalAcmeParser.g:7862:1: ( ( rule__MembersBlock__Group_3_1__0 ) )
            {
            // InternalAcmeParser.g:7862:1: ( ( rule__MembersBlock__Group_3_1__0 ) )
            // InternalAcmeParser.g:7863:2: ( rule__MembersBlock__Group_3_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMembersBlockAccess().getGroup_3_1()); 
            }
            // InternalAcmeParser.g:7864:2: ( rule__MembersBlock__Group_3_1__0 )
            // InternalAcmeParser.g:7864:3: rule__MembersBlock__Group_3_1__0
            {
            pushFollow(FOLLOW_2);
            rule__MembersBlock__Group_3_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMembersBlockAccess().getGroup_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MembersBlock__Group_3__1__Impl"


    // $ANTLR start "rule__MembersBlock__Group_3_1__0"
    // InternalAcmeParser.g:7873:1: rule__MembersBlock__Group_3_1__0 : rule__MembersBlock__Group_3_1__0__Impl rule__MembersBlock__Group_3_1__1 ;
    public final void rule__MembersBlock__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7877:1: ( rule__MembersBlock__Group_3_1__0__Impl rule__MembersBlock__Group_3_1__1 )
            // InternalAcmeParser.g:7878:2: rule__MembersBlock__Group_3_1__0__Impl rule__MembersBlock__Group_3_1__1
            {
            pushFollow(FOLLOW_11);
            rule__MembersBlock__Group_3_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MembersBlock__Group_3_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MembersBlock__Group_3_1__0"


    // $ANTLR start "rule__MembersBlock__Group_3_1__0__Impl"
    // InternalAcmeParser.g:7885:1: rule__MembersBlock__Group_3_1__0__Impl : ( Comma ) ;
    public final void rule__MembersBlock__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7889:1: ( ( Comma ) )
            // InternalAcmeParser.g:7890:1: ( Comma )
            {
            // InternalAcmeParser.g:7890:1: ( Comma )
            // InternalAcmeParser.g:7891:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMembersBlockAccess().getCommaKeyword_3_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMembersBlockAccess().getCommaKeyword_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MembersBlock__Group_3_1__0__Impl"


    // $ANTLR start "rule__MembersBlock__Group_3_1__1"
    // InternalAcmeParser.g:7900:1: rule__MembersBlock__Group_3_1__1 : rule__MembersBlock__Group_3_1__1__Impl ;
    public final void rule__MembersBlock__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7904:1: ( rule__MembersBlock__Group_3_1__1__Impl )
            // InternalAcmeParser.g:7905:2: rule__MembersBlock__Group_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MembersBlock__Group_3_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MembersBlock__Group_3_1__1"


    // $ANTLR start "rule__MembersBlock__Group_3_1__1__Impl"
    // InternalAcmeParser.g:7911:1: rule__MembersBlock__Group_3_1__1__Impl : ( ( rule__MembersBlock__RefsAssignment_3_1_1 ) ) ;
    public final void rule__MembersBlock__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7915:1: ( ( ( rule__MembersBlock__RefsAssignment_3_1_1 ) ) )
            // InternalAcmeParser.g:7916:1: ( ( rule__MembersBlock__RefsAssignment_3_1_1 ) )
            {
            // InternalAcmeParser.g:7916:1: ( ( rule__MembersBlock__RefsAssignment_3_1_1 ) )
            // InternalAcmeParser.g:7917:2: ( rule__MembersBlock__RefsAssignment_3_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMembersBlockAccess().getRefsAssignment_3_1_1()); 
            }
            // InternalAcmeParser.g:7918:2: ( rule__MembersBlock__RefsAssignment_3_1_1 )
            // InternalAcmeParser.g:7918:3: rule__MembersBlock__RefsAssignment_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__MembersBlock__RefsAssignment_3_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMembersBlockAccess().getRefsAssignment_3_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MembersBlock__Group_3_1__1__Impl"


    // $ANTLR start "rule__QualifiedIdentifier__Group__0"
    // InternalAcmeParser.g:7927:1: rule__QualifiedIdentifier__Group__0 : rule__QualifiedIdentifier__Group__0__Impl rule__QualifiedIdentifier__Group__1 ;
    public final void rule__QualifiedIdentifier__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7931:1: ( rule__QualifiedIdentifier__Group__0__Impl rule__QualifiedIdentifier__Group__1 )
            // InternalAcmeParser.g:7932:2: rule__QualifiedIdentifier__Group__0__Impl rule__QualifiedIdentifier__Group__1
            {
            pushFollow(FOLLOW_33);
            rule__QualifiedIdentifier__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QualifiedIdentifier__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedIdentifier__Group__0"


    // $ANTLR start "rule__QualifiedIdentifier__Group__0__Impl"
    // InternalAcmeParser.g:7939:1: rule__QualifiedIdentifier__Group__0__Impl : ( RULE_ID ) ;
    public final void rule__QualifiedIdentifier__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7943:1: ( ( RULE_ID ) )
            // InternalAcmeParser.g:7944:1: ( RULE_ID )
            {
            // InternalAcmeParser.g:7944:1: ( RULE_ID )
            // InternalAcmeParser.g:7945:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedIdentifierAccess().getIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedIdentifierAccess().getIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedIdentifier__Group__0__Impl"


    // $ANTLR start "rule__QualifiedIdentifier__Group__1"
    // InternalAcmeParser.g:7954:1: rule__QualifiedIdentifier__Group__1 : rule__QualifiedIdentifier__Group__1__Impl ;
    public final void rule__QualifiedIdentifier__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7958:1: ( rule__QualifiedIdentifier__Group__1__Impl )
            // InternalAcmeParser.g:7959:2: rule__QualifiedIdentifier__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedIdentifier__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedIdentifier__Group__1"


    // $ANTLR start "rule__QualifiedIdentifier__Group__1__Impl"
    // InternalAcmeParser.g:7965:1: rule__QualifiedIdentifier__Group__1__Impl : ( ( rule__QualifiedIdentifier__Group_1__0 )* ) ;
    public final void rule__QualifiedIdentifier__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7969:1: ( ( ( rule__QualifiedIdentifier__Group_1__0 )* ) )
            // InternalAcmeParser.g:7970:1: ( ( rule__QualifiedIdentifier__Group_1__0 )* )
            {
            // InternalAcmeParser.g:7970:1: ( ( rule__QualifiedIdentifier__Group_1__0 )* )
            // InternalAcmeParser.g:7971:2: ( rule__QualifiedIdentifier__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedIdentifierAccess().getGroup_1()); 
            }
            // InternalAcmeParser.g:7972:2: ( rule__QualifiedIdentifier__Group_1__0 )*
            loop119:
            do {
                int alt119=2;
                int LA119_0 = input.LA(1);

                if ( (LA119_0==FullStop) ) {
                    alt119=1;
                }


                switch (alt119) {
            	case 1 :
            	    // InternalAcmeParser.g:7972:3: rule__QualifiedIdentifier__Group_1__0
            	    {
            	    pushFollow(FOLLOW_34);
            	    rule__QualifiedIdentifier__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop119;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedIdentifierAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedIdentifier__Group__1__Impl"


    // $ANTLR start "rule__QualifiedIdentifier__Group_1__0"
    // InternalAcmeParser.g:7981:1: rule__QualifiedIdentifier__Group_1__0 : rule__QualifiedIdentifier__Group_1__0__Impl rule__QualifiedIdentifier__Group_1__1 ;
    public final void rule__QualifiedIdentifier__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7985:1: ( rule__QualifiedIdentifier__Group_1__0__Impl rule__QualifiedIdentifier__Group_1__1 )
            // InternalAcmeParser.g:7986:2: rule__QualifiedIdentifier__Group_1__0__Impl rule__QualifiedIdentifier__Group_1__1
            {
            pushFollow(FOLLOW_11);
            rule__QualifiedIdentifier__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QualifiedIdentifier__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedIdentifier__Group_1__0"


    // $ANTLR start "rule__QualifiedIdentifier__Group_1__0__Impl"
    // InternalAcmeParser.g:7993:1: rule__QualifiedIdentifier__Group_1__0__Impl : ( FullStop ) ;
    public final void rule__QualifiedIdentifier__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:7997:1: ( ( FullStop ) )
            // InternalAcmeParser.g:7998:1: ( FullStop )
            {
            // InternalAcmeParser.g:7998:1: ( FullStop )
            // InternalAcmeParser.g:7999:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedIdentifierAccess().getFullStopKeyword_1_0()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedIdentifierAccess().getFullStopKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedIdentifier__Group_1__0__Impl"


    // $ANTLR start "rule__QualifiedIdentifier__Group_1__1"
    // InternalAcmeParser.g:8008:1: rule__QualifiedIdentifier__Group_1__1 : rule__QualifiedIdentifier__Group_1__1__Impl ;
    public final void rule__QualifiedIdentifier__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8012:1: ( rule__QualifiedIdentifier__Group_1__1__Impl )
            // InternalAcmeParser.g:8013:2: rule__QualifiedIdentifier__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedIdentifier__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedIdentifier__Group_1__1"


    // $ANTLR start "rule__QualifiedIdentifier__Group_1__1__Impl"
    // InternalAcmeParser.g:8019:1: rule__QualifiedIdentifier__Group_1__1__Impl : ( RULE_ID ) ;
    public final void rule__QualifiedIdentifier__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8023:1: ( ( RULE_ID ) )
            // InternalAcmeParser.g:8024:1: ( RULE_ID )
            {
            // InternalAcmeParser.g:8024:1: ( RULE_ID )
            // InternalAcmeParser.g:8025:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedIdentifierAccess().getIDTerminalRuleCall_1_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedIdentifierAccess().getIDTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedIdentifier__Group_1__1__Impl"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Group__0"
    // InternalAcmeParser.g:8035:1: rule__AcmePortTypeDeclaration__Group__0 : rule__AcmePortTypeDeclaration__Group__0__Impl rule__AcmePortTypeDeclaration__Group__1 ;
    public final void rule__AcmePortTypeDeclaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8039:1: ( rule__AcmePortTypeDeclaration__Group__0__Impl rule__AcmePortTypeDeclaration__Group__1 )
            // InternalAcmeParser.g:8040:2: rule__AcmePortTypeDeclaration__Group__0__Impl rule__AcmePortTypeDeclaration__Group__1
            {
            pushFollow(FOLLOW_35);
            rule__AcmePortTypeDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePortTypeDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Group__0"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Group__0__Impl"
    // InternalAcmeParser.g:8047:1: rule__AcmePortTypeDeclaration__Group__0__Impl : ( ( rule__AcmePortTypeDeclaration__VisibilityAssignment_0 )? ) ;
    public final void rule__AcmePortTypeDeclaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8051:1: ( ( ( rule__AcmePortTypeDeclaration__VisibilityAssignment_0 )? ) )
            // InternalAcmeParser.g:8052:1: ( ( rule__AcmePortTypeDeclaration__VisibilityAssignment_0 )? )
            {
            // InternalAcmeParser.g:8052:1: ( ( rule__AcmePortTypeDeclaration__VisibilityAssignment_0 )? )
            // InternalAcmeParser.g:8053:2: ( rule__AcmePortTypeDeclaration__VisibilityAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortTypeDeclarationAccess().getVisibilityAssignment_0()); 
            }
            // InternalAcmeParser.g:8054:2: ( rule__AcmePortTypeDeclaration__VisibilityAssignment_0 )?
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==Private||LA120_0==Public) ) {
                alt120=1;
            }
            switch (alt120) {
                case 1 :
                    // InternalAcmeParser.g:8054:3: rule__AcmePortTypeDeclaration__VisibilityAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePortTypeDeclaration__VisibilityAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortTypeDeclarationAccess().getVisibilityAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Group__0__Impl"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Group__1"
    // InternalAcmeParser.g:8062:1: rule__AcmePortTypeDeclaration__Group__1 : rule__AcmePortTypeDeclaration__Group__1__Impl rule__AcmePortTypeDeclaration__Group__2 ;
    public final void rule__AcmePortTypeDeclaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8066:1: ( rule__AcmePortTypeDeclaration__Group__1__Impl rule__AcmePortTypeDeclaration__Group__2 )
            // InternalAcmeParser.g:8067:2: rule__AcmePortTypeDeclaration__Group__1__Impl rule__AcmePortTypeDeclaration__Group__2
            {
            pushFollow(FOLLOW_35);
            rule__AcmePortTypeDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePortTypeDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Group__1"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Group__1__Impl"
    // InternalAcmeParser.g:8074:1: rule__AcmePortTypeDeclaration__Group__1__Impl : ( ( rule__AcmePortTypeDeclaration__ExtensibilityAssignment_1 )? ) ;
    public final void rule__AcmePortTypeDeclaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8078:1: ( ( ( rule__AcmePortTypeDeclaration__ExtensibilityAssignment_1 )? ) )
            // InternalAcmeParser.g:8079:1: ( ( rule__AcmePortTypeDeclaration__ExtensibilityAssignment_1 )? )
            {
            // InternalAcmeParser.g:8079:1: ( ( rule__AcmePortTypeDeclaration__ExtensibilityAssignment_1 )? )
            // InternalAcmeParser.g:8080:2: ( rule__AcmePortTypeDeclaration__ExtensibilityAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortTypeDeclarationAccess().getExtensibilityAssignment_1()); 
            }
            // InternalAcmeParser.g:8081:2: ( rule__AcmePortTypeDeclaration__ExtensibilityAssignment_1 )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==Abstract||LA121_0==Final) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // InternalAcmeParser.g:8081:3: rule__AcmePortTypeDeclaration__ExtensibilityAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePortTypeDeclaration__ExtensibilityAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortTypeDeclarationAccess().getExtensibilityAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Group__1__Impl"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Group__2"
    // InternalAcmeParser.g:8089:1: rule__AcmePortTypeDeclaration__Group__2 : rule__AcmePortTypeDeclaration__Group__2__Impl rule__AcmePortTypeDeclaration__Group__3 ;
    public final void rule__AcmePortTypeDeclaration__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8093:1: ( rule__AcmePortTypeDeclaration__Group__2__Impl rule__AcmePortTypeDeclaration__Group__3 )
            // InternalAcmeParser.g:8094:2: rule__AcmePortTypeDeclaration__Group__2__Impl rule__AcmePortTypeDeclaration__Group__3
            {
            pushFollow(FOLLOW_24);
            rule__AcmePortTypeDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePortTypeDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Group__2"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Group__2__Impl"
    // InternalAcmeParser.g:8101:1: rule__AcmePortTypeDeclaration__Group__2__Impl : ( ( Port ) ) ;
    public final void rule__AcmePortTypeDeclaration__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8105:1: ( ( ( Port ) ) )
            // InternalAcmeParser.g:8106:1: ( ( Port ) )
            {
            // InternalAcmeParser.g:8106:1: ( ( Port ) )
            // InternalAcmeParser.g:8107:2: ( Port )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortTypeDeclarationAccess().getPortKeyword_2()); 
            }
            // InternalAcmeParser.g:8108:2: ( Port )
            // InternalAcmeParser.g:8108:3: Port
            {
            match(input,Port,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortTypeDeclarationAccess().getPortKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Group__2__Impl"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Group__3"
    // InternalAcmeParser.g:8116:1: rule__AcmePortTypeDeclaration__Group__3 : rule__AcmePortTypeDeclaration__Group__3__Impl rule__AcmePortTypeDeclaration__Group__4 ;
    public final void rule__AcmePortTypeDeclaration__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8120:1: ( rule__AcmePortTypeDeclaration__Group__3__Impl rule__AcmePortTypeDeclaration__Group__4 )
            // InternalAcmeParser.g:8121:2: rule__AcmePortTypeDeclaration__Group__3__Impl rule__AcmePortTypeDeclaration__Group__4
            {
            pushFollow(FOLLOW_11);
            rule__AcmePortTypeDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePortTypeDeclaration__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Group__3"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Group__3__Impl"
    // InternalAcmeParser.g:8128:1: rule__AcmePortTypeDeclaration__Group__3__Impl : ( Type ) ;
    public final void rule__AcmePortTypeDeclaration__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8132:1: ( ( Type ) )
            // InternalAcmeParser.g:8133:1: ( Type )
            {
            // InternalAcmeParser.g:8133:1: ( Type )
            // InternalAcmeParser.g:8134:2: Type
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortTypeDeclarationAccess().getTypeKeyword_3()); 
            }
            match(input,Type,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortTypeDeclarationAccess().getTypeKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Group__3__Impl"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Group__4"
    // InternalAcmeParser.g:8143:1: rule__AcmePortTypeDeclaration__Group__4 : rule__AcmePortTypeDeclaration__Group__4__Impl rule__AcmePortTypeDeclaration__Group__5 ;
    public final void rule__AcmePortTypeDeclaration__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8147:1: ( rule__AcmePortTypeDeclaration__Group__4__Impl rule__AcmePortTypeDeclaration__Group__5 )
            // InternalAcmeParser.g:8148:2: rule__AcmePortTypeDeclaration__Group__4__Impl rule__AcmePortTypeDeclaration__Group__5
            {
            pushFollow(FOLLOW_12);
            rule__AcmePortTypeDeclaration__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePortTypeDeclaration__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Group__4"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Group__4__Impl"
    // InternalAcmeParser.g:8155:1: rule__AcmePortTypeDeclaration__Group__4__Impl : ( ( rule__AcmePortTypeDeclaration__NameAssignment_4 ) ) ;
    public final void rule__AcmePortTypeDeclaration__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8159:1: ( ( ( rule__AcmePortTypeDeclaration__NameAssignment_4 ) ) )
            // InternalAcmeParser.g:8160:1: ( ( rule__AcmePortTypeDeclaration__NameAssignment_4 ) )
            {
            // InternalAcmeParser.g:8160:1: ( ( rule__AcmePortTypeDeclaration__NameAssignment_4 ) )
            // InternalAcmeParser.g:8161:2: ( rule__AcmePortTypeDeclaration__NameAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortTypeDeclarationAccess().getNameAssignment_4()); 
            }
            // InternalAcmeParser.g:8162:2: ( rule__AcmePortTypeDeclaration__NameAssignment_4 )
            // InternalAcmeParser.g:8162:3: rule__AcmePortTypeDeclaration__NameAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__AcmePortTypeDeclaration__NameAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortTypeDeclarationAccess().getNameAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Group__4__Impl"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Group__5"
    // InternalAcmeParser.g:8170:1: rule__AcmePortTypeDeclaration__Group__5 : rule__AcmePortTypeDeclaration__Group__5__Impl ;
    public final void rule__AcmePortTypeDeclaration__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8174:1: ( rule__AcmePortTypeDeclaration__Group__5__Impl )
            // InternalAcmeParser.g:8175:2: rule__AcmePortTypeDeclaration__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePortTypeDeclaration__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Group__5"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Group__5__Impl"
    // InternalAcmeParser.g:8181:1: rule__AcmePortTypeDeclaration__Group__5__Impl : ( ( rule__AcmePortTypeDeclaration__Alternatives_5 ) ) ;
    public final void rule__AcmePortTypeDeclaration__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8185:1: ( ( ( rule__AcmePortTypeDeclaration__Alternatives_5 ) ) )
            // InternalAcmeParser.g:8186:1: ( ( rule__AcmePortTypeDeclaration__Alternatives_5 ) )
            {
            // InternalAcmeParser.g:8186:1: ( ( rule__AcmePortTypeDeclaration__Alternatives_5 ) )
            // InternalAcmeParser.g:8187:2: ( rule__AcmePortTypeDeclaration__Alternatives_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortTypeDeclarationAccess().getAlternatives_5()); 
            }
            // InternalAcmeParser.g:8188:2: ( rule__AcmePortTypeDeclaration__Alternatives_5 )
            // InternalAcmeParser.g:8188:3: rule__AcmePortTypeDeclaration__Alternatives_5
            {
            pushFollow(FOLLOW_2);
            rule__AcmePortTypeDeclaration__Alternatives_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortTypeDeclarationAccess().getAlternatives_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Group__5__Impl"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Group_5_1_0__0"
    // InternalAcmeParser.g:8197:1: rule__AcmePortTypeDeclaration__Group_5_1_0__0 : rule__AcmePortTypeDeclaration__Group_5_1_0__0__Impl rule__AcmePortTypeDeclaration__Group_5_1_0__1 ;
    public final void rule__AcmePortTypeDeclaration__Group_5_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8201:1: ( rule__AcmePortTypeDeclaration__Group_5_1_0__0__Impl rule__AcmePortTypeDeclaration__Group_5_1_0__1 )
            // InternalAcmeParser.g:8202:2: rule__AcmePortTypeDeclaration__Group_5_1_0__0__Impl rule__AcmePortTypeDeclaration__Group_5_1_0__1
            {
            pushFollow(FOLLOW_13);
            rule__AcmePortTypeDeclaration__Group_5_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePortTypeDeclaration__Group_5_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Group_5_1_0__0"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Group_5_1_0__0__Impl"
    // InternalAcmeParser.g:8209:1: rule__AcmePortTypeDeclaration__Group_5_1_0__0__Impl : ( EqualsSign ) ;
    public final void rule__AcmePortTypeDeclaration__Group_5_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8213:1: ( ( EqualsSign ) )
            // InternalAcmeParser.g:8214:1: ( EqualsSign )
            {
            // InternalAcmeParser.g:8214:1: ( EqualsSign )
            // InternalAcmeParser.g:8215:2: EqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortTypeDeclarationAccess().getEqualsSignKeyword_5_1_0_0()); 
            }
            match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortTypeDeclarationAccess().getEqualsSignKeyword_5_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Group_5_1_0__0__Impl"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Group_5_1_0__1"
    // InternalAcmeParser.g:8224:1: rule__AcmePortTypeDeclaration__Group_5_1_0__1 : rule__AcmePortTypeDeclaration__Group_5_1_0__1__Impl rule__AcmePortTypeDeclaration__Group_5_1_0__2 ;
    public final void rule__AcmePortTypeDeclaration__Group_5_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8228:1: ( rule__AcmePortTypeDeclaration__Group_5_1_0__1__Impl rule__AcmePortTypeDeclaration__Group_5_1_0__2 )
            // InternalAcmeParser.g:8229:2: rule__AcmePortTypeDeclaration__Group_5_1_0__1__Impl rule__AcmePortTypeDeclaration__Group_5_1_0__2
            {
            pushFollow(FOLLOW_7);
            rule__AcmePortTypeDeclaration__Group_5_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePortTypeDeclaration__Group_5_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Group_5_1_0__1"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Group_5_1_0__1__Impl"
    // InternalAcmeParser.g:8236:1: rule__AcmePortTypeDeclaration__Group_5_1_0__1__Impl : ( ( rule__AcmePortTypeDeclaration__BodyAssignment_5_1_0_1 ) ) ;
    public final void rule__AcmePortTypeDeclaration__Group_5_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8240:1: ( ( ( rule__AcmePortTypeDeclaration__BodyAssignment_5_1_0_1 ) ) )
            // InternalAcmeParser.g:8241:1: ( ( rule__AcmePortTypeDeclaration__BodyAssignment_5_1_0_1 ) )
            {
            // InternalAcmeParser.g:8241:1: ( ( rule__AcmePortTypeDeclaration__BodyAssignment_5_1_0_1 ) )
            // InternalAcmeParser.g:8242:2: ( rule__AcmePortTypeDeclaration__BodyAssignment_5_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortTypeDeclarationAccess().getBodyAssignment_5_1_0_1()); 
            }
            // InternalAcmeParser.g:8243:2: ( rule__AcmePortTypeDeclaration__BodyAssignment_5_1_0_1 )
            // InternalAcmeParser.g:8243:3: rule__AcmePortTypeDeclaration__BodyAssignment_5_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmePortTypeDeclaration__BodyAssignment_5_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortTypeDeclarationAccess().getBodyAssignment_5_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Group_5_1_0__1__Impl"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Group_5_1_0__2"
    // InternalAcmeParser.g:8251:1: rule__AcmePortTypeDeclaration__Group_5_1_0__2 : rule__AcmePortTypeDeclaration__Group_5_1_0__2__Impl ;
    public final void rule__AcmePortTypeDeclaration__Group_5_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8255:1: ( rule__AcmePortTypeDeclaration__Group_5_1_0__2__Impl )
            // InternalAcmeParser.g:8256:2: rule__AcmePortTypeDeclaration__Group_5_1_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePortTypeDeclaration__Group_5_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Group_5_1_0__2"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Group_5_1_0__2__Impl"
    // InternalAcmeParser.g:8262:1: rule__AcmePortTypeDeclaration__Group_5_1_0__2__Impl : ( ( Semicolon )? ) ;
    public final void rule__AcmePortTypeDeclaration__Group_5_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8266:1: ( ( ( Semicolon )? ) )
            // InternalAcmeParser.g:8267:1: ( ( Semicolon )? )
            {
            // InternalAcmeParser.g:8267:1: ( ( Semicolon )? )
            // InternalAcmeParser.g:8268:2: ( Semicolon )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortTypeDeclarationAccess().getSemicolonKeyword_5_1_0_2()); 
            }
            // InternalAcmeParser.g:8269:2: ( Semicolon )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==Semicolon) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // InternalAcmeParser.g:8269:3: Semicolon
                    {
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortTypeDeclarationAccess().getSemicolonKeyword_5_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Group_5_1_0__2__Impl"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Group_5_1_1__0"
    // InternalAcmeParser.g:8278:1: rule__AcmePortTypeDeclaration__Group_5_1_1__0 : rule__AcmePortTypeDeclaration__Group_5_1_1__0__Impl rule__AcmePortTypeDeclaration__Group_5_1_1__1 ;
    public final void rule__AcmePortTypeDeclaration__Group_5_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8282:1: ( rule__AcmePortTypeDeclaration__Group_5_1_1__0__Impl rule__AcmePortTypeDeclaration__Group_5_1_1__1 )
            // InternalAcmeParser.g:8283:2: rule__AcmePortTypeDeclaration__Group_5_1_1__0__Impl rule__AcmePortTypeDeclaration__Group_5_1_1__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmePortTypeDeclaration__Group_5_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePortTypeDeclaration__Group_5_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Group_5_1_1__0"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Group_5_1_1__0__Impl"
    // InternalAcmeParser.g:8290:1: rule__AcmePortTypeDeclaration__Group_5_1_1__0__Impl : ( Extends ) ;
    public final void rule__AcmePortTypeDeclaration__Group_5_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8294:1: ( ( Extends ) )
            // InternalAcmeParser.g:8295:1: ( Extends )
            {
            // InternalAcmeParser.g:8295:1: ( Extends )
            // InternalAcmeParser.g:8296:2: Extends
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortTypeDeclarationAccess().getExtendsKeyword_5_1_1_0()); 
            }
            match(input,Extends,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortTypeDeclarationAccess().getExtendsKeyword_5_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Group_5_1_1__0__Impl"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Group_5_1_1__1"
    // InternalAcmeParser.g:8305:1: rule__AcmePortTypeDeclaration__Group_5_1_1__1 : rule__AcmePortTypeDeclaration__Group_5_1_1__1__Impl rule__AcmePortTypeDeclaration__Group_5_1_1__2 ;
    public final void rule__AcmePortTypeDeclaration__Group_5_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8309:1: ( rule__AcmePortTypeDeclaration__Group_5_1_1__1__Impl rule__AcmePortTypeDeclaration__Group_5_1_1__2 )
            // InternalAcmeParser.g:8310:2: rule__AcmePortTypeDeclaration__Group_5_1_1__1__Impl rule__AcmePortTypeDeclaration__Group_5_1_1__2
            {
            pushFollow(FOLLOW_25);
            rule__AcmePortTypeDeclaration__Group_5_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePortTypeDeclaration__Group_5_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Group_5_1_1__1"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Group_5_1_1__1__Impl"
    // InternalAcmeParser.g:8317:1: rule__AcmePortTypeDeclaration__Group_5_1_1__1__Impl : ( ( rule__AcmePortTypeDeclaration__RefsAssignment_5_1_1_1 ) ) ;
    public final void rule__AcmePortTypeDeclaration__Group_5_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8321:1: ( ( ( rule__AcmePortTypeDeclaration__RefsAssignment_5_1_1_1 ) ) )
            // InternalAcmeParser.g:8322:1: ( ( rule__AcmePortTypeDeclaration__RefsAssignment_5_1_1_1 ) )
            {
            // InternalAcmeParser.g:8322:1: ( ( rule__AcmePortTypeDeclaration__RefsAssignment_5_1_1_1 ) )
            // InternalAcmeParser.g:8323:2: ( rule__AcmePortTypeDeclaration__RefsAssignment_5_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortTypeDeclarationAccess().getRefsAssignment_5_1_1_1()); 
            }
            // InternalAcmeParser.g:8324:2: ( rule__AcmePortTypeDeclaration__RefsAssignment_5_1_1_1 )
            // InternalAcmeParser.g:8324:3: rule__AcmePortTypeDeclaration__RefsAssignment_5_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmePortTypeDeclaration__RefsAssignment_5_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortTypeDeclarationAccess().getRefsAssignment_5_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Group_5_1_1__1__Impl"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Group_5_1_1__2"
    // InternalAcmeParser.g:8332:1: rule__AcmePortTypeDeclaration__Group_5_1_1__2 : rule__AcmePortTypeDeclaration__Group_5_1_1__2__Impl rule__AcmePortTypeDeclaration__Group_5_1_1__3 ;
    public final void rule__AcmePortTypeDeclaration__Group_5_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8336:1: ( rule__AcmePortTypeDeclaration__Group_5_1_1__2__Impl rule__AcmePortTypeDeclaration__Group_5_1_1__3 )
            // InternalAcmeParser.g:8337:2: rule__AcmePortTypeDeclaration__Group_5_1_1__2__Impl rule__AcmePortTypeDeclaration__Group_5_1_1__3
            {
            pushFollow(FOLLOW_25);
            rule__AcmePortTypeDeclaration__Group_5_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePortTypeDeclaration__Group_5_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Group_5_1_1__2"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Group_5_1_1__2__Impl"
    // InternalAcmeParser.g:8344:1: rule__AcmePortTypeDeclaration__Group_5_1_1__2__Impl : ( ( rule__AcmePortTypeDeclaration__Group_5_1_1_2__0 )* ) ;
    public final void rule__AcmePortTypeDeclaration__Group_5_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8348:1: ( ( ( rule__AcmePortTypeDeclaration__Group_5_1_1_2__0 )* ) )
            // InternalAcmeParser.g:8349:1: ( ( rule__AcmePortTypeDeclaration__Group_5_1_1_2__0 )* )
            {
            // InternalAcmeParser.g:8349:1: ( ( rule__AcmePortTypeDeclaration__Group_5_1_1_2__0 )* )
            // InternalAcmeParser.g:8350:2: ( rule__AcmePortTypeDeclaration__Group_5_1_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortTypeDeclarationAccess().getGroup_5_1_1_2()); 
            }
            // InternalAcmeParser.g:8351:2: ( rule__AcmePortTypeDeclaration__Group_5_1_1_2__0 )*
            loop123:
            do {
                int alt123=2;
                int LA123_0 = input.LA(1);

                if ( (LA123_0==Comma) ) {
                    alt123=1;
                }


                switch (alt123) {
            	case 1 :
            	    // InternalAcmeParser.g:8351:3: rule__AcmePortTypeDeclaration__Group_5_1_1_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__AcmePortTypeDeclaration__Group_5_1_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop123;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortTypeDeclarationAccess().getGroup_5_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Group_5_1_1__2__Impl"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Group_5_1_1__3"
    // InternalAcmeParser.g:8359:1: rule__AcmePortTypeDeclaration__Group_5_1_1__3 : rule__AcmePortTypeDeclaration__Group_5_1_1__3__Impl ;
    public final void rule__AcmePortTypeDeclaration__Group_5_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8363:1: ( rule__AcmePortTypeDeclaration__Group_5_1_1__3__Impl )
            // InternalAcmeParser.g:8364:2: rule__AcmePortTypeDeclaration__Group_5_1_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePortTypeDeclaration__Group_5_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Group_5_1_1__3"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Group_5_1_1__3__Impl"
    // InternalAcmeParser.g:8370:1: rule__AcmePortTypeDeclaration__Group_5_1_1__3__Impl : ( ( rule__AcmePortTypeDeclaration__Alternatives_5_1_1_3 ) ) ;
    public final void rule__AcmePortTypeDeclaration__Group_5_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8374:1: ( ( ( rule__AcmePortTypeDeclaration__Alternatives_5_1_1_3 ) ) )
            // InternalAcmeParser.g:8375:1: ( ( rule__AcmePortTypeDeclaration__Alternatives_5_1_1_3 ) )
            {
            // InternalAcmeParser.g:8375:1: ( ( rule__AcmePortTypeDeclaration__Alternatives_5_1_1_3 ) )
            // InternalAcmeParser.g:8376:2: ( rule__AcmePortTypeDeclaration__Alternatives_5_1_1_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortTypeDeclarationAccess().getAlternatives_5_1_1_3()); 
            }
            // InternalAcmeParser.g:8377:2: ( rule__AcmePortTypeDeclaration__Alternatives_5_1_1_3 )
            // InternalAcmeParser.g:8377:3: rule__AcmePortTypeDeclaration__Alternatives_5_1_1_3
            {
            pushFollow(FOLLOW_2);
            rule__AcmePortTypeDeclaration__Alternatives_5_1_1_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortTypeDeclarationAccess().getAlternatives_5_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Group_5_1_1__3__Impl"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Group_5_1_1_2__0"
    // InternalAcmeParser.g:8386:1: rule__AcmePortTypeDeclaration__Group_5_1_1_2__0 : rule__AcmePortTypeDeclaration__Group_5_1_1_2__0__Impl rule__AcmePortTypeDeclaration__Group_5_1_1_2__1 ;
    public final void rule__AcmePortTypeDeclaration__Group_5_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8390:1: ( rule__AcmePortTypeDeclaration__Group_5_1_1_2__0__Impl rule__AcmePortTypeDeclaration__Group_5_1_1_2__1 )
            // InternalAcmeParser.g:8391:2: rule__AcmePortTypeDeclaration__Group_5_1_1_2__0__Impl rule__AcmePortTypeDeclaration__Group_5_1_1_2__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmePortTypeDeclaration__Group_5_1_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePortTypeDeclaration__Group_5_1_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Group_5_1_1_2__0"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Group_5_1_1_2__0__Impl"
    // InternalAcmeParser.g:8398:1: rule__AcmePortTypeDeclaration__Group_5_1_1_2__0__Impl : ( Comma ) ;
    public final void rule__AcmePortTypeDeclaration__Group_5_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8402:1: ( ( Comma ) )
            // InternalAcmeParser.g:8403:1: ( Comma )
            {
            // InternalAcmeParser.g:8403:1: ( Comma )
            // InternalAcmeParser.g:8404:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortTypeDeclarationAccess().getCommaKeyword_5_1_1_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortTypeDeclarationAccess().getCommaKeyword_5_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Group_5_1_1_2__0__Impl"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Group_5_1_1_2__1"
    // InternalAcmeParser.g:8413:1: rule__AcmePortTypeDeclaration__Group_5_1_1_2__1 : rule__AcmePortTypeDeclaration__Group_5_1_1_2__1__Impl ;
    public final void rule__AcmePortTypeDeclaration__Group_5_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8417:1: ( rule__AcmePortTypeDeclaration__Group_5_1_1_2__1__Impl )
            // InternalAcmeParser.g:8418:2: rule__AcmePortTypeDeclaration__Group_5_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePortTypeDeclaration__Group_5_1_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Group_5_1_1_2__1"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Group_5_1_1_2__1__Impl"
    // InternalAcmeParser.g:8424:1: rule__AcmePortTypeDeclaration__Group_5_1_1_2__1__Impl : ( ( rule__AcmePortTypeDeclaration__RefsAssignment_5_1_1_2_1 ) ) ;
    public final void rule__AcmePortTypeDeclaration__Group_5_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8428:1: ( ( ( rule__AcmePortTypeDeclaration__RefsAssignment_5_1_1_2_1 ) ) )
            // InternalAcmeParser.g:8429:1: ( ( rule__AcmePortTypeDeclaration__RefsAssignment_5_1_1_2_1 ) )
            {
            // InternalAcmeParser.g:8429:1: ( ( rule__AcmePortTypeDeclaration__RefsAssignment_5_1_1_2_1 ) )
            // InternalAcmeParser.g:8430:2: ( rule__AcmePortTypeDeclaration__RefsAssignment_5_1_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortTypeDeclarationAccess().getRefsAssignment_5_1_1_2_1()); 
            }
            // InternalAcmeParser.g:8431:2: ( rule__AcmePortTypeDeclaration__RefsAssignment_5_1_1_2_1 )
            // InternalAcmeParser.g:8431:3: rule__AcmePortTypeDeclaration__RefsAssignment_5_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmePortTypeDeclaration__RefsAssignment_5_1_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortTypeDeclarationAccess().getRefsAssignment_5_1_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Group_5_1_1_2__1__Impl"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__0"
    // InternalAcmeParser.g:8440:1: rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__0 : rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__0__Impl rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__1 ;
    public final void rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8444:1: ( rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__0__Impl rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__1 )
            // InternalAcmeParser.g:8445:2: rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__0__Impl rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__1
            {
            pushFollow(FOLLOW_13);
            rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__0"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__0__Impl"
    // InternalAcmeParser.g:8452:1: rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__0__Impl : ( With ) ;
    public final void rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8456:1: ( ( With ) )
            // InternalAcmeParser.g:8457:1: ( With )
            {
            // InternalAcmeParser.g:8457:1: ( With )
            // InternalAcmeParser.g:8458:2: With
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortTypeDeclarationAccess().getWithKeyword_5_1_1_3_1_0()); 
            }
            match(input,With,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortTypeDeclarationAccess().getWithKeyword_5_1_1_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__0__Impl"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__1"
    // InternalAcmeParser.g:8467:1: rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__1 : rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__1__Impl rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__2 ;
    public final void rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8471:1: ( rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__1__Impl rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__2 )
            // InternalAcmeParser.g:8472:2: rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__1__Impl rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__2
            {
            pushFollow(FOLLOW_7);
            rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__1"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__1__Impl"
    // InternalAcmeParser.g:8479:1: rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__1__Impl : ( ( rule__AcmePortTypeDeclaration__BodyAssignment_5_1_1_3_1_1 ) ) ;
    public final void rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8483:1: ( ( ( rule__AcmePortTypeDeclaration__BodyAssignment_5_1_1_3_1_1 ) ) )
            // InternalAcmeParser.g:8484:1: ( ( rule__AcmePortTypeDeclaration__BodyAssignment_5_1_1_3_1_1 ) )
            {
            // InternalAcmeParser.g:8484:1: ( ( rule__AcmePortTypeDeclaration__BodyAssignment_5_1_1_3_1_1 ) )
            // InternalAcmeParser.g:8485:2: ( rule__AcmePortTypeDeclaration__BodyAssignment_5_1_1_3_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortTypeDeclarationAccess().getBodyAssignment_5_1_1_3_1_1()); 
            }
            // InternalAcmeParser.g:8486:2: ( rule__AcmePortTypeDeclaration__BodyAssignment_5_1_1_3_1_1 )
            // InternalAcmeParser.g:8486:3: rule__AcmePortTypeDeclaration__BodyAssignment_5_1_1_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmePortTypeDeclaration__BodyAssignment_5_1_1_3_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortTypeDeclarationAccess().getBodyAssignment_5_1_1_3_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__1__Impl"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__2"
    // InternalAcmeParser.g:8494:1: rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__2 : rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__2__Impl ;
    public final void rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8498:1: ( rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__2__Impl )
            // InternalAcmeParser.g:8499:2: rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__2"


    // $ANTLR start "rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__2__Impl"
    // InternalAcmeParser.g:8505:1: rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__2__Impl : ( ( Semicolon )? ) ;
    public final void rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8509:1: ( ( ( Semicolon )? ) )
            // InternalAcmeParser.g:8510:1: ( ( Semicolon )? )
            {
            // InternalAcmeParser.g:8510:1: ( ( Semicolon )? )
            // InternalAcmeParser.g:8511:2: ( Semicolon )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortTypeDeclarationAccess().getSemicolonKeyword_5_1_1_3_1_2()); 
            }
            // InternalAcmeParser.g:8512:2: ( Semicolon )?
            int alt124=2;
            int LA124_0 = input.LA(1);

            if ( (LA124_0==Semicolon) ) {
                alt124=1;
            }
            switch (alt124) {
                case 1 :
                    // InternalAcmeParser.g:8512:3: Semicolon
                    {
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortTypeDeclarationAccess().getSemicolonKeyword_5_1_1_3_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__Group_5_1_1_3_1__2__Impl"


    // $ANTLR start "rule__AcmePortDeclaration__Group__0"
    // InternalAcmeParser.g:8521:1: rule__AcmePortDeclaration__Group__0 : rule__AcmePortDeclaration__Group__0__Impl rule__AcmePortDeclaration__Group__1 ;
    public final void rule__AcmePortDeclaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8525:1: ( rule__AcmePortDeclaration__Group__0__Impl rule__AcmePortDeclaration__Group__1 )
            // InternalAcmeParser.g:8526:2: rule__AcmePortDeclaration__Group__0__Impl rule__AcmePortDeclaration__Group__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmePortDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePortDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group__0"


    // $ANTLR start "rule__AcmePortDeclaration__Group__0__Impl"
    // InternalAcmeParser.g:8533:1: rule__AcmePortDeclaration__Group__0__Impl : ( Port ) ;
    public final void rule__AcmePortDeclaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8537:1: ( ( Port ) )
            // InternalAcmeParser.g:8538:1: ( Port )
            {
            // InternalAcmeParser.g:8538:1: ( Port )
            // InternalAcmeParser.g:8539:2: Port
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortDeclarationAccess().getPortKeyword_0()); 
            }
            match(input,Port,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortDeclarationAccess().getPortKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group__0__Impl"


    // $ANTLR start "rule__AcmePortDeclaration__Group__1"
    // InternalAcmeParser.g:8548:1: rule__AcmePortDeclaration__Group__1 : rule__AcmePortDeclaration__Group__1__Impl rule__AcmePortDeclaration__Group__2 ;
    public final void rule__AcmePortDeclaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8552:1: ( rule__AcmePortDeclaration__Group__1__Impl rule__AcmePortDeclaration__Group__2 )
            // InternalAcmeParser.g:8553:2: rule__AcmePortDeclaration__Group__1__Impl rule__AcmePortDeclaration__Group__2
            {
            pushFollow(FOLLOW_18);
            rule__AcmePortDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePortDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group__1"


    // $ANTLR start "rule__AcmePortDeclaration__Group__1__Impl"
    // InternalAcmeParser.g:8560:1: rule__AcmePortDeclaration__Group__1__Impl : ( ( rule__AcmePortDeclaration__NameAssignment_1 ) ) ;
    public final void rule__AcmePortDeclaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8564:1: ( ( ( rule__AcmePortDeclaration__NameAssignment_1 ) ) )
            // InternalAcmeParser.g:8565:1: ( ( rule__AcmePortDeclaration__NameAssignment_1 ) )
            {
            // InternalAcmeParser.g:8565:1: ( ( rule__AcmePortDeclaration__NameAssignment_1 ) )
            // InternalAcmeParser.g:8566:2: ( rule__AcmePortDeclaration__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortDeclarationAccess().getNameAssignment_1()); 
            }
            // InternalAcmeParser.g:8567:2: ( rule__AcmePortDeclaration__NameAssignment_1 )
            // InternalAcmeParser.g:8567:3: rule__AcmePortDeclaration__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmePortDeclaration__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortDeclarationAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group__1__Impl"


    // $ANTLR start "rule__AcmePortDeclaration__Group__2"
    // InternalAcmeParser.g:8575:1: rule__AcmePortDeclaration__Group__2 : rule__AcmePortDeclaration__Group__2__Impl rule__AcmePortDeclaration__Group__3 ;
    public final void rule__AcmePortDeclaration__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8579:1: ( rule__AcmePortDeclaration__Group__2__Impl rule__AcmePortDeclaration__Group__3 )
            // InternalAcmeParser.g:8580:2: rule__AcmePortDeclaration__Group__2__Impl rule__AcmePortDeclaration__Group__3
            {
            pushFollow(FOLLOW_18);
            rule__AcmePortDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePortDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group__2"


    // $ANTLR start "rule__AcmePortDeclaration__Group__2__Impl"
    // InternalAcmeParser.g:8587:1: rule__AcmePortDeclaration__Group__2__Impl : ( ( rule__AcmePortDeclaration__Group_2__0 )? ) ;
    public final void rule__AcmePortDeclaration__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8591:1: ( ( ( rule__AcmePortDeclaration__Group_2__0 )? ) )
            // InternalAcmeParser.g:8592:1: ( ( rule__AcmePortDeclaration__Group_2__0 )? )
            {
            // InternalAcmeParser.g:8592:1: ( ( rule__AcmePortDeclaration__Group_2__0 )? )
            // InternalAcmeParser.g:8593:2: ( rule__AcmePortDeclaration__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortDeclarationAccess().getGroup_2()); 
            }
            // InternalAcmeParser.g:8594:2: ( rule__AcmePortDeclaration__Group_2__0 )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==Colon) ) {
                alt125=1;
            }
            switch (alt125) {
                case 1 :
                    // InternalAcmeParser.g:8594:3: rule__AcmePortDeclaration__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePortDeclaration__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortDeclarationAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group__2__Impl"


    // $ANTLR start "rule__AcmePortDeclaration__Group__3"
    // InternalAcmeParser.g:8602:1: rule__AcmePortDeclaration__Group__3 : rule__AcmePortDeclaration__Group__3__Impl ;
    public final void rule__AcmePortDeclaration__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8606:1: ( rule__AcmePortDeclaration__Group__3__Impl )
            // InternalAcmeParser.g:8607:2: rule__AcmePortDeclaration__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePortDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group__3"


    // $ANTLR start "rule__AcmePortDeclaration__Group__3__Impl"
    // InternalAcmeParser.g:8613:1: rule__AcmePortDeclaration__Group__3__Impl : ( ( rule__AcmePortDeclaration__Alternatives_3 ) ) ;
    public final void rule__AcmePortDeclaration__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8617:1: ( ( ( rule__AcmePortDeclaration__Alternatives_3 ) ) )
            // InternalAcmeParser.g:8618:1: ( ( rule__AcmePortDeclaration__Alternatives_3 ) )
            {
            // InternalAcmeParser.g:8618:1: ( ( rule__AcmePortDeclaration__Alternatives_3 ) )
            // InternalAcmeParser.g:8619:2: ( rule__AcmePortDeclaration__Alternatives_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortDeclarationAccess().getAlternatives_3()); 
            }
            // InternalAcmeParser.g:8620:2: ( rule__AcmePortDeclaration__Alternatives_3 )
            // InternalAcmeParser.g:8620:3: rule__AcmePortDeclaration__Alternatives_3
            {
            pushFollow(FOLLOW_2);
            rule__AcmePortDeclaration__Alternatives_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortDeclarationAccess().getAlternatives_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group__3__Impl"


    // $ANTLR start "rule__AcmePortDeclaration__Group_2__0"
    // InternalAcmeParser.g:8629:1: rule__AcmePortDeclaration__Group_2__0 : rule__AcmePortDeclaration__Group_2__0__Impl rule__AcmePortDeclaration__Group_2__1 ;
    public final void rule__AcmePortDeclaration__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8633:1: ( rule__AcmePortDeclaration__Group_2__0__Impl rule__AcmePortDeclaration__Group_2__1 )
            // InternalAcmeParser.g:8634:2: rule__AcmePortDeclaration__Group_2__0__Impl rule__AcmePortDeclaration__Group_2__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmePortDeclaration__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePortDeclaration__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_2__0"


    // $ANTLR start "rule__AcmePortDeclaration__Group_2__0__Impl"
    // InternalAcmeParser.g:8641:1: rule__AcmePortDeclaration__Group_2__0__Impl : ( Colon ) ;
    public final void rule__AcmePortDeclaration__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8645:1: ( ( Colon ) )
            // InternalAcmeParser.g:8646:1: ( Colon )
            {
            // InternalAcmeParser.g:8646:1: ( Colon )
            // InternalAcmeParser.g:8647:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortDeclarationAccess().getColonKeyword_2_0()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortDeclarationAccess().getColonKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_2__0__Impl"


    // $ANTLR start "rule__AcmePortDeclaration__Group_2__1"
    // InternalAcmeParser.g:8656:1: rule__AcmePortDeclaration__Group_2__1 : rule__AcmePortDeclaration__Group_2__1__Impl rule__AcmePortDeclaration__Group_2__2 ;
    public final void rule__AcmePortDeclaration__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8660:1: ( rule__AcmePortDeclaration__Group_2__1__Impl rule__AcmePortDeclaration__Group_2__2 )
            // InternalAcmeParser.g:8661:2: rule__AcmePortDeclaration__Group_2__1__Impl rule__AcmePortDeclaration__Group_2__2
            {
            pushFollow(FOLLOW_19);
            rule__AcmePortDeclaration__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePortDeclaration__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_2__1"


    // $ANTLR start "rule__AcmePortDeclaration__Group_2__1__Impl"
    // InternalAcmeParser.g:8668:1: rule__AcmePortDeclaration__Group_2__1__Impl : ( ( rule__AcmePortDeclaration__DeclaredAssignment_2_1 ) ) ;
    public final void rule__AcmePortDeclaration__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8672:1: ( ( ( rule__AcmePortDeclaration__DeclaredAssignment_2_1 ) ) )
            // InternalAcmeParser.g:8673:1: ( ( rule__AcmePortDeclaration__DeclaredAssignment_2_1 ) )
            {
            // InternalAcmeParser.g:8673:1: ( ( rule__AcmePortDeclaration__DeclaredAssignment_2_1 ) )
            // InternalAcmeParser.g:8674:2: ( rule__AcmePortDeclaration__DeclaredAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortDeclarationAccess().getDeclaredAssignment_2_1()); 
            }
            // InternalAcmeParser.g:8675:2: ( rule__AcmePortDeclaration__DeclaredAssignment_2_1 )
            // InternalAcmeParser.g:8675:3: rule__AcmePortDeclaration__DeclaredAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmePortDeclaration__DeclaredAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortDeclarationAccess().getDeclaredAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_2__1__Impl"


    // $ANTLR start "rule__AcmePortDeclaration__Group_2__2"
    // InternalAcmeParser.g:8683:1: rule__AcmePortDeclaration__Group_2__2 : rule__AcmePortDeclaration__Group_2__2__Impl ;
    public final void rule__AcmePortDeclaration__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8687:1: ( rule__AcmePortDeclaration__Group_2__2__Impl )
            // InternalAcmeParser.g:8688:2: rule__AcmePortDeclaration__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePortDeclaration__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_2__2"


    // $ANTLR start "rule__AcmePortDeclaration__Group_2__2__Impl"
    // InternalAcmeParser.g:8694:1: rule__AcmePortDeclaration__Group_2__2__Impl : ( ( rule__AcmePortDeclaration__Group_2_2__0 )* ) ;
    public final void rule__AcmePortDeclaration__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8698:1: ( ( ( rule__AcmePortDeclaration__Group_2_2__0 )* ) )
            // InternalAcmeParser.g:8699:1: ( ( rule__AcmePortDeclaration__Group_2_2__0 )* )
            {
            // InternalAcmeParser.g:8699:1: ( ( rule__AcmePortDeclaration__Group_2_2__0 )* )
            // InternalAcmeParser.g:8700:2: ( rule__AcmePortDeclaration__Group_2_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortDeclarationAccess().getGroup_2_2()); 
            }
            // InternalAcmeParser.g:8701:2: ( rule__AcmePortDeclaration__Group_2_2__0 )*
            loop126:
            do {
                int alt126=2;
                int LA126_0 = input.LA(1);

                if ( (LA126_0==Comma) ) {
                    alt126=1;
                }


                switch (alt126) {
            	case 1 :
            	    // InternalAcmeParser.g:8701:3: rule__AcmePortDeclaration__Group_2_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__AcmePortDeclaration__Group_2_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop126;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortDeclarationAccess().getGroup_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_2__2__Impl"


    // $ANTLR start "rule__AcmePortDeclaration__Group_2_2__0"
    // InternalAcmeParser.g:8710:1: rule__AcmePortDeclaration__Group_2_2__0 : rule__AcmePortDeclaration__Group_2_2__0__Impl rule__AcmePortDeclaration__Group_2_2__1 ;
    public final void rule__AcmePortDeclaration__Group_2_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8714:1: ( rule__AcmePortDeclaration__Group_2_2__0__Impl rule__AcmePortDeclaration__Group_2_2__1 )
            // InternalAcmeParser.g:8715:2: rule__AcmePortDeclaration__Group_2_2__0__Impl rule__AcmePortDeclaration__Group_2_2__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmePortDeclaration__Group_2_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePortDeclaration__Group_2_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_2_2__0"


    // $ANTLR start "rule__AcmePortDeclaration__Group_2_2__0__Impl"
    // InternalAcmeParser.g:8722:1: rule__AcmePortDeclaration__Group_2_2__0__Impl : ( Comma ) ;
    public final void rule__AcmePortDeclaration__Group_2_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8726:1: ( ( Comma ) )
            // InternalAcmeParser.g:8727:1: ( Comma )
            {
            // InternalAcmeParser.g:8727:1: ( Comma )
            // InternalAcmeParser.g:8728:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortDeclarationAccess().getCommaKeyword_2_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortDeclarationAccess().getCommaKeyword_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_2_2__0__Impl"


    // $ANTLR start "rule__AcmePortDeclaration__Group_2_2__1"
    // InternalAcmeParser.g:8737:1: rule__AcmePortDeclaration__Group_2_2__1 : rule__AcmePortDeclaration__Group_2_2__1__Impl ;
    public final void rule__AcmePortDeclaration__Group_2_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8741:1: ( rule__AcmePortDeclaration__Group_2_2__1__Impl )
            // InternalAcmeParser.g:8742:2: rule__AcmePortDeclaration__Group_2_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePortDeclaration__Group_2_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_2_2__1"


    // $ANTLR start "rule__AcmePortDeclaration__Group_2_2__1__Impl"
    // InternalAcmeParser.g:8748:1: rule__AcmePortDeclaration__Group_2_2__1__Impl : ( ( rule__AcmePortDeclaration__DeclaredAssignment_2_2_1 ) ) ;
    public final void rule__AcmePortDeclaration__Group_2_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8752:1: ( ( ( rule__AcmePortDeclaration__DeclaredAssignment_2_2_1 ) ) )
            // InternalAcmeParser.g:8753:1: ( ( rule__AcmePortDeclaration__DeclaredAssignment_2_2_1 ) )
            {
            // InternalAcmeParser.g:8753:1: ( ( rule__AcmePortDeclaration__DeclaredAssignment_2_2_1 ) )
            // InternalAcmeParser.g:8754:2: ( rule__AcmePortDeclaration__DeclaredAssignment_2_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortDeclarationAccess().getDeclaredAssignment_2_2_1()); 
            }
            // InternalAcmeParser.g:8755:2: ( rule__AcmePortDeclaration__DeclaredAssignment_2_2_1 )
            // InternalAcmeParser.g:8755:3: rule__AcmePortDeclaration__DeclaredAssignment_2_2_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmePortDeclaration__DeclaredAssignment_2_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortDeclarationAccess().getDeclaredAssignment_2_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_2_2__1__Impl"


    // $ANTLR start "rule__AcmePortDeclaration__Group_3_1__0"
    // InternalAcmeParser.g:8764:1: rule__AcmePortDeclaration__Group_3_1__0 : rule__AcmePortDeclaration__Group_3_1__0__Impl rule__AcmePortDeclaration__Group_3_1__1 ;
    public final void rule__AcmePortDeclaration__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8768:1: ( rule__AcmePortDeclaration__Group_3_1__0__Impl rule__AcmePortDeclaration__Group_3_1__1 )
            // InternalAcmeParser.g:8769:2: rule__AcmePortDeclaration__Group_3_1__0__Impl rule__AcmePortDeclaration__Group_3_1__1
            {
            pushFollow(FOLLOW_20);
            rule__AcmePortDeclaration__Group_3_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePortDeclaration__Group_3_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_3_1__0"


    // $ANTLR start "rule__AcmePortDeclaration__Group_3_1__0__Impl"
    // InternalAcmeParser.g:8776:1: rule__AcmePortDeclaration__Group_3_1__0__Impl : ( EqualsSign ) ;
    public final void rule__AcmePortDeclaration__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8780:1: ( ( EqualsSign ) )
            // InternalAcmeParser.g:8781:1: ( EqualsSign )
            {
            // InternalAcmeParser.g:8781:1: ( EqualsSign )
            // InternalAcmeParser.g:8782:2: EqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortDeclarationAccess().getEqualsSignKeyword_3_1_0()); 
            }
            match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortDeclarationAccess().getEqualsSignKeyword_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_3_1__0__Impl"


    // $ANTLR start "rule__AcmePortDeclaration__Group_3_1__1"
    // InternalAcmeParser.g:8791:1: rule__AcmePortDeclaration__Group_3_1__1 : rule__AcmePortDeclaration__Group_3_1__1__Impl ;
    public final void rule__AcmePortDeclaration__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8795:1: ( rule__AcmePortDeclaration__Group_3_1__1__Impl )
            // InternalAcmeParser.g:8796:2: rule__AcmePortDeclaration__Group_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePortDeclaration__Group_3_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_3_1__1"


    // $ANTLR start "rule__AcmePortDeclaration__Group_3_1__1__Impl"
    // InternalAcmeParser.g:8802:1: rule__AcmePortDeclaration__Group_3_1__1__Impl : ( ( rule__AcmePortDeclaration__Alternatives_3_1_1 ) ) ;
    public final void rule__AcmePortDeclaration__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8806:1: ( ( ( rule__AcmePortDeclaration__Alternatives_3_1_1 ) ) )
            // InternalAcmeParser.g:8807:1: ( ( rule__AcmePortDeclaration__Alternatives_3_1_1 ) )
            {
            // InternalAcmeParser.g:8807:1: ( ( rule__AcmePortDeclaration__Alternatives_3_1_1 ) )
            // InternalAcmeParser.g:8808:2: ( rule__AcmePortDeclaration__Alternatives_3_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortDeclarationAccess().getAlternatives_3_1_1()); 
            }
            // InternalAcmeParser.g:8809:2: ( rule__AcmePortDeclaration__Alternatives_3_1_1 )
            // InternalAcmeParser.g:8809:3: rule__AcmePortDeclaration__Alternatives_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmePortDeclaration__Alternatives_3_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortDeclarationAccess().getAlternatives_3_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_3_1__1__Impl"


    // $ANTLR start "rule__AcmePortDeclaration__Group_3_1_1_0__0"
    // InternalAcmeParser.g:8818:1: rule__AcmePortDeclaration__Group_3_1_1_0__0 : rule__AcmePortDeclaration__Group_3_1_1_0__0__Impl rule__AcmePortDeclaration__Group_3_1_1_0__1 ;
    public final void rule__AcmePortDeclaration__Group_3_1_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8822:1: ( rule__AcmePortDeclaration__Group_3_1_1_0__0__Impl rule__AcmePortDeclaration__Group_3_1_1_0__1 )
            // InternalAcmeParser.g:8823:2: rule__AcmePortDeclaration__Group_3_1_1_0__0__Impl rule__AcmePortDeclaration__Group_3_1_1_0__1
            {
            pushFollow(FOLLOW_7);
            rule__AcmePortDeclaration__Group_3_1_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePortDeclaration__Group_3_1_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_3_1_1_0__0"


    // $ANTLR start "rule__AcmePortDeclaration__Group_3_1_1_0__0__Impl"
    // InternalAcmeParser.g:8830:1: rule__AcmePortDeclaration__Group_3_1_1_0__0__Impl : ( ( rule__AcmePortDeclaration__BodyAssignment_3_1_1_0_0 ) ) ;
    public final void rule__AcmePortDeclaration__Group_3_1_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8834:1: ( ( ( rule__AcmePortDeclaration__BodyAssignment_3_1_1_0_0 ) ) )
            // InternalAcmeParser.g:8835:1: ( ( rule__AcmePortDeclaration__BodyAssignment_3_1_1_0_0 ) )
            {
            // InternalAcmeParser.g:8835:1: ( ( rule__AcmePortDeclaration__BodyAssignment_3_1_1_0_0 ) )
            // InternalAcmeParser.g:8836:2: ( rule__AcmePortDeclaration__BodyAssignment_3_1_1_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortDeclarationAccess().getBodyAssignment_3_1_1_0_0()); 
            }
            // InternalAcmeParser.g:8837:2: ( rule__AcmePortDeclaration__BodyAssignment_3_1_1_0_0 )
            // InternalAcmeParser.g:8837:3: rule__AcmePortDeclaration__BodyAssignment_3_1_1_0_0
            {
            pushFollow(FOLLOW_2);
            rule__AcmePortDeclaration__BodyAssignment_3_1_1_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortDeclarationAccess().getBodyAssignment_3_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_3_1_1_0__0__Impl"


    // $ANTLR start "rule__AcmePortDeclaration__Group_3_1_1_0__1"
    // InternalAcmeParser.g:8845:1: rule__AcmePortDeclaration__Group_3_1_1_0__1 : rule__AcmePortDeclaration__Group_3_1_1_0__1__Impl ;
    public final void rule__AcmePortDeclaration__Group_3_1_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8849:1: ( rule__AcmePortDeclaration__Group_3_1_1_0__1__Impl )
            // InternalAcmeParser.g:8850:2: rule__AcmePortDeclaration__Group_3_1_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePortDeclaration__Group_3_1_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_3_1_1_0__1"


    // $ANTLR start "rule__AcmePortDeclaration__Group_3_1_1_0__1__Impl"
    // InternalAcmeParser.g:8856:1: rule__AcmePortDeclaration__Group_3_1_1_0__1__Impl : ( ( Semicolon )? ) ;
    public final void rule__AcmePortDeclaration__Group_3_1_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8860:1: ( ( ( Semicolon )? ) )
            // InternalAcmeParser.g:8861:1: ( ( Semicolon )? )
            {
            // InternalAcmeParser.g:8861:1: ( ( Semicolon )? )
            // InternalAcmeParser.g:8862:2: ( Semicolon )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortDeclarationAccess().getSemicolonKeyword_3_1_1_0_1()); 
            }
            // InternalAcmeParser.g:8863:2: ( Semicolon )?
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==Semicolon) ) {
                alt127=1;
            }
            switch (alt127) {
                case 1 :
                    // InternalAcmeParser.g:8863:3: Semicolon
                    {
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortDeclarationAccess().getSemicolonKeyword_3_1_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_3_1_1_0__1__Impl"


    // $ANTLR start "rule__AcmePortDeclaration__Group_3_1_1_1__0"
    // InternalAcmeParser.g:8872:1: rule__AcmePortDeclaration__Group_3_1_1_1__0 : rule__AcmePortDeclaration__Group_3_1_1_1__0__Impl rule__AcmePortDeclaration__Group_3_1_1_1__1 ;
    public final void rule__AcmePortDeclaration__Group_3_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8876:1: ( rule__AcmePortDeclaration__Group_3_1_1_1__0__Impl rule__AcmePortDeclaration__Group_3_1_1_1__1 )
            // InternalAcmeParser.g:8877:2: rule__AcmePortDeclaration__Group_3_1_1_1__0__Impl rule__AcmePortDeclaration__Group_3_1_1_1__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmePortDeclaration__Group_3_1_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePortDeclaration__Group_3_1_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_3_1_1_1__0"


    // $ANTLR start "rule__AcmePortDeclaration__Group_3_1_1_1__0__Impl"
    // InternalAcmeParser.g:8884:1: rule__AcmePortDeclaration__Group_3_1_1_1__0__Impl : ( New ) ;
    public final void rule__AcmePortDeclaration__Group_3_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8888:1: ( ( New ) )
            // InternalAcmeParser.g:8889:1: ( New )
            {
            // InternalAcmeParser.g:8889:1: ( New )
            // InternalAcmeParser.g:8890:2: New
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortDeclarationAccess().getNewKeyword_3_1_1_1_0()); 
            }
            match(input,New,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortDeclarationAccess().getNewKeyword_3_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_3_1_1_1__0__Impl"


    // $ANTLR start "rule__AcmePortDeclaration__Group_3_1_1_1__1"
    // InternalAcmeParser.g:8899:1: rule__AcmePortDeclaration__Group_3_1_1_1__1 : rule__AcmePortDeclaration__Group_3_1_1_1__1__Impl rule__AcmePortDeclaration__Group_3_1_1_1__2 ;
    public final void rule__AcmePortDeclaration__Group_3_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8903:1: ( rule__AcmePortDeclaration__Group_3_1_1_1__1__Impl rule__AcmePortDeclaration__Group_3_1_1_1__2 )
            // InternalAcmeParser.g:8904:2: rule__AcmePortDeclaration__Group_3_1_1_1__1__Impl rule__AcmePortDeclaration__Group_3_1_1_1__2
            {
            pushFollow(FOLLOW_21);
            rule__AcmePortDeclaration__Group_3_1_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePortDeclaration__Group_3_1_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_3_1_1_1__1"


    // $ANTLR start "rule__AcmePortDeclaration__Group_3_1_1_1__1__Impl"
    // InternalAcmeParser.g:8911:1: rule__AcmePortDeclaration__Group_3_1_1_1__1__Impl : ( ( rule__AcmePortDeclaration__InstantiatedAssignment_3_1_1_1_1 ) ) ;
    public final void rule__AcmePortDeclaration__Group_3_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8915:1: ( ( ( rule__AcmePortDeclaration__InstantiatedAssignment_3_1_1_1_1 ) ) )
            // InternalAcmeParser.g:8916:1: ( ( rule__AcmePortDeclaration__InstantiatedAssignment_3_1_1_1_1 ) )
            {
            // InternalAcmeParser.g:8916:1: ( ( rule__AcmePortDeclaration__InstantiatedAssignment_3_1_1_1_1 ) )
            // InternalAcmeParser.g:8917:2: ( rule__AcmePortDeclaration__InstantiatedAssignment_3_1_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortDeclarationAccess().getInstantiatedAssignment_3_1_1_1_1()); 
            }
            // InternalAcmeParser.g:8918:2: ( rule__AcmePortDeclaration__InstantiatedAssignment_3_1_1_1_1 )
            // InternalAcmeParser.g:8918:3: rule__AcmePortDeclaration__InstantiatedAssignment_3_1_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmePortDeclaration__InstantiatedAssignment_3_1_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortDeclarationAccess().getInstantiatedAssignment_3_1_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_3_1_1_1__1__Impl"


    // $ANTLR start "rule__AcmePortDeclaration__Group_3_1_1_1__2"
    // InternalAcmeParser.g:8926:1: rule__AcmePortDeclaration__Group_3_1_1_1__2 : rule__AcmePortDeclaration__Group_3_1_1_1__2__Impl rule__AcmePortDeclaration__Group_3_1_1_1__3 ;
    public final void rule__AcmePortDeclaration__Group_3_1_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8930:1: ( rule__AcmePortDeclaration__Group_3_1_1_1__2__Impl rule__AcmePortDeclaration__Group_3_1_1_1__3 )
            // InternalAcmeParser.g:8931:2: rule__AcmePortDeclaration__Group_3_1_1_1__2__Impl rule__AcmePortDeclaration__Group_3_1_1_1__3
            {
            pushFollow(FOLLOW_21);
            rule__AcmePortDeclaration__Group_3_1_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePortDeclaration__Group_3_1_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_3_1_1_1__2"


    // $ANTLR start "rule__AcmePortDeclaration__Group_3_1_1_1__2__Impl"
    // InternalAcmeParser.g:8938:1: rule__AcmePortDeclaration__Group_3_1_1_1__2__Impl : ( ( rule__AcmePortDeclaration__Group_3_1_1_1_2__0 )* ) ;
    public final void rule__AcmePortDeclaration__Group_3_1_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8942:1: ( ( ( rule__AcmePortDeclaration__Group_3_1_1_1_2__0 )* ) )
            // InternalAcmeParser.g:8943:1: ( ( rule__AcmePortDeclaration__Group_3_1_1_1_2__0 )* )
            {
            // InternalAcmeParser.g:8943:1: ( ( rule__AcmePortDeclaration__Group_3_1_1_1_2__0 )* )
            // InternalAcmeParser.g:8944:2: ( rule__AcmePortDeclaration__Group_3_1_1_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortDeclarationAccess().getGroup_3_1_1_1_2()); 
            }
            // InternalAcmeParser.g:8945:2: ( rule__AcmePortDeclaration__Group_3_1_1_1_2__0 )*
            loop128:
            do {
                int alt128=2;
                int LA128_0 = input.LA(1);

                if ( (LA128_0==Comma) ) {
                    alt128=1;
                }


                switch (alt128) {
            	case 1 :
            	    // InternalAcmeParser.g:8945:3: rule__AcmePortDeclaration__Group_3_1_1_1_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__AcmePortDeclaration__Group_3_1_1_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop128;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortDeclarationAccess().getGroup_3_1_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_3_1_1_1__2__Impl"


    // $ANTLR start "rule__AcmePortDeclaration__Group_3_1_1_1__3"
    // InternalAcmeParser.g:8953:1: rule__AcmePortDeclaration__Group_3_1_1_1__3 : rule__AcmePortDeclaration__Group_3_1_1_1__3__Impl ;
    public final void rule__AcmePortDeclaration__Group_3_1_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8957:1: ( rule__AcmePortDeclaration__Group_3_1_1_1__3__Impl )
            // InternalAcmeParser.g:8958:2: rule__AcmePortDeclaration__Group_3_1_1_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePortDeclaration__Group_3_1_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_3_1_1_1__3"


    // $ANTLR start "rule__AcmePortDeclaration__Group_3_1_1_1__3__Impl"
    // InternalAcmeParser.g:8964:1: rule__AcmePortDeclaration__Group_3_1_1_1__3__Impl : ( ( rule__AcmePortDeclaration__Alternatives_3_1_1_1_3 ) ) ;
    public final void rule__AcmePortDeclaration__Group_3_1_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8968:1: ( ( ( rule__AcmePortDeclaration__Alternatives_3_1_1_1_3 ) ) )
            // InternalAcmeParser.g:8969:1: ( ( rule__AcmePortDeclaration__Alternatives_3_1_1_1_3 ) )
            {
            // InternalAcmeParser.g:8969:1: ( ( rule__AcmePortDeclaration__Alternatives_3_1_1_1_3 ) )
            // InternalAcmeParser.g:8970:2: ( rule__AcmePortDeclaration__Alternatives_3_1_1_1_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortDeclarationAccess().getAlternatives_3_1_1_1_3()); 
            }
            // InternalAcmeParser.g:8971:2: ( rule__AcmePortDeclaration__Alternatives_3_1_1_1_3 )
            // InternalAcmeParser.g:8971:3: rule__AcmePortDeclaration__Alternatives_3_1_1_1_3
            {
            pushFollow(FOLLOW_2);
            rule__AcmePortDeclaration__Alternatives_3_1_1_1_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortDeclarationAccess().getAlternatives_3_1_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_3_1_1_1__3__Impl"


    // $ANTLR start "rule__AcmePortDeclaration__Group_3_1_1_1_2__0"
    // InternalAcmeParser.g:8980:1: rule__AcmePortDeclaration__Group_3_1_1_1_2__0 : rule__AcmePortDeclaration__Group_3_1_1_1_2__0__Impl rule__AcmePortDeclaration__Group_3_1_1_1_2__1 ;
    public final void rule__AcmePortDeclaration__Group_3_1_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8984:1: ( rule__AcmePortDeclaration__Group_3_1_1_1_2__0__Impl rule__AcmePortDeclaration__Group_3_1_1_1_2__1 )
            // InternalAcmeParser.g:8985:2: rule__AcmePortDeclaration__Group_3_1_1_1_2__0__Impl rule__AcmePortDeclaration__Group_3_1_1_1_2__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmePortDeclaration__Group_3_1_1_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePortDeclaration__Group_3_1_1_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_3_1_1_1_2__0"


    // $ANTLR start "rule__AcmePortDeclaration__Group_3_1_1_1_2__0__Impl"
    // InternalAcmeParser.g:8992:1: rule__AcmePortDeclaration__Group_3_1_1_1_2__0__Impl : ( Comma ) ;
    public final void rule__AcmePortDeclaration__Group_3_1_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:8996:1: ( ( Comma ) )
            // InternalAcmeParser.g:8997:1: ( Comma )
            {
            // InternalAcmeParser.g:8997:1: ( Comma )
            // InternalAcmeParser.g:8998:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortDeclarationAccess().getCommaKeyword_3_1_1_1_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortDeclarationAccess().getCommaKeyword_3_1_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_3_1_1_1_2__0__Impl"


    // $ANTLR start "rule__AcmePortDeclaration__Group_3_1_1_1_2__1"
    // InternalAcmeParser.g:9007:1: rule__AcmePortDeclaration__Group_3_1_1_1_2__1 : rule__AcmePortDeclaration__Group_3_1_1_1_2__1__Impl ;
    public final void rule__AcmePortDeclaration__Group_3_1_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9011:1: ( rule__AcmePortDeclaration__Group_3_1_1_1_2__1__Impl )
            // InternalAcmeParser.g:9012:2: rule__AcmePortDeclaration__Group_3_1_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePortDeclaration__Group_3_1_1_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_3_1_1_1_2__1"


    // $ANTLR start "rule__AcmePortDeclaration__Group_3_1_1_1_2__1__Impl"
    // InternalAcmeParser.g:9018:1: rule__AcmePortDeclaration__Group_3_1_1_1_2__1__Impl : ( ( rule__AcmePortDeclaration__InstantiatedAssignment_3_1_1_1_2_1 ) ) ;
    public final void rule__AcmePortDeclaration__Group_3_1_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9022:1: ( ( ( rule__AcmePortDeclaration__InstantiatedAssignment_3_1_1_1_2_1 ) ) )
            // InternalAcmeParser.g:9023:1: ( ( rule__AcmePortDeclaration__InstantiatedAssignment_3_1_1_1_2_1 ) )
            {
            // InternalAcmeParser.g:9023:1: ( ( rule__AcmePortDeclaration__InstantiatedAssignment_3_1_1_1_2_1 ) )
            // InternalAcmeParser.g:9024:2: ( rule__AcmePortDeclaration__InstantiatedAssignment_3_1_1_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortDeclarationAccess().getInstantiatedAssignment_3_1_1_1_2_1()); 
            }
            // InternalAcmeParser.g:9025:2: ( rule__AcmePortDeclaration__InstantiatedAssignment_3_1_1_1_2_1 )
            // InternalAcmeParser.g:9025:3: rule__AcmePortDeclaration__InstantiatedAssignment_3_1_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmePortDeclaration__InstantiatedAssignment_3_1_1_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortDeclarationAccess().getInstantiatedAssignment_3_1_1_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_3_1_1_1_2__1__Impl"


    // $ANTLR start "rule__AcmePortDeclaration__Group_3_1_1_1_3_1__0"
    // InternalAcmeParser.g:9034:1: rule__AcmePortDeclaration__Group_3_1_1_1_3_1__0 : rule__AcmePortDeclaration__Group_3_1_1_1_3_1__0__Impl rule__AcmePortDeclaration__Group_3_1_1_1_3_1__1 ;
    public final void rule__AcmePortDeclaration__Group_3_1_1_1_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9038:1: ( rule__AcmePortDeclaration__Group_3_1_1_1_3_1__0__Impl rule__AcmePortDeclaration__Group_3_1_1_1_3_1__1 )
            // InternalAcmeParser.g:9039:2: rule__AcmePortDeclaration__Group_3_1_1_1_3_1__0__Impl rule__AcmePortDeclaration__Group_3_1_1_1_3_1__1
            {
            pushFollow(FOLLOW_22);
            rule__AcmePortDeclaration__Group_3_1_1_1_3_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePortDeclaration__Group_3_1_1_1_3_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_3_1_1_1_3_1__0"


    // $ANTLR start "rule__AcmePortDeclaration__Group_3_1_1_1_3_1__0__Impl"
    // InternalAcmeParser.g:9046:1: rule__AcmePortDeclaration__Group_3_1_1_1_3_1__0__Impl : ( Extended ) ;
    public final void rule__AcmePortDeclaration__Group_3_1_1_1_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9050:1: ( ( Extended ) )
            // InternalAcmeParser.g:9051:1: ( Extended )
            {
            // InternalAcmeParser.g:9051:1: ( Extended )
            // InternalAcmeParser.g:9052:2: Extended
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortDeclarationAccess().getExtendedKeyword_3_1_1_1_3_1_0()); 
            }
            match(input,Extended,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortDeclarationAccess().getExtendedKeyword_3_1_1_1_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_3_1_1_1_3_1__0__Impl"


    // $ANTLR start "rule__AcmePortDeclaration__Group_3_1_1_1_3_1__1"
    // InternalAcmeParser.g:9061:1: rule__AcmePortDeclaration__Group_3_1_1_1_3_1__1 : rule__AcmePortDeclaration__Group_3_1_1_1_3_1__1__Impl rule__AcmePortDeclaration__Group_3_1_1_1_3_1__2 ;
    public final void rule__AcmePortDeclaration__Group_3_1_1_1_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9065:1: ( rule__AcmePortDeclaration__Group_3_1_1_1_3_1__1__Impl rule__AcmePortDeclaration__Group_3_1_1_1_3_1__2 )
            // InternalAcmeParser.g:9066:2: rule__AcmePortDeclaration__Group_3_1_1_1_3_1__1__Impl rule__AcmePortDeclaration__Group_3_1_1_1_3_1__2
            {
            pushFollow(FOLLOW_13);
            rule__AcmePortDeclaration__Group_3_1_1_1_3_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePortDeclaration__Group_3_1_1_1_3_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_3_1_1_1_3_1__1"


    // $ANTLR start "rule__AcmePortDeclaration__Group_3_1_1_1_3_1__1__Impl"
    // InternalAcmeParser.g:9073:1: rule__AcmePortDeclaration__Group_3_1_1_1_3_1__1__Impl : ( With ) ;
    public final void rule__AcmePortDeclaration__Group_3_1_1_1_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9077:1: ( ( With ) )
            // InternalAcmeParser.g:9078:1: ( With )
            {
            // InternalAcmeParser.g:9078:1: ( With )
            // InternalAcmeParser.g:9079:2: With
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortDeclarationAccess().getWithKeyword_3_1_1_1_3_1_1()); 
            }
            match(input,With,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortDeclarationAccess().getWithKeyword_3_1_1_1_3_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_3_1_1_1_3_1__1__Impl"


    // $ANTLR start "rule__AcmePortDeclaration__Group_3_1_1_1_3_1__2"
    // InternalAcmeParser.g:9088:1: rule__AcmePortDeclaration__Group_3_1_1_1_3_1__2 : rule__AcmePortDeclaration__Group_3_1_1_1_3_1__2__Impl rule__AcmePortDeclaration__Group_3_1_1_1_3_1__3 ;
    public final void rule__AcmePortDeclaration__Group_3_1_1_1_3_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9092:1: ( rule__AcmePortDeclaration__Group_3_1_1_1_3_1__2__Impl rule__AcmePortDeclaration__Group_3_1_1_1_3_1__3 )
            // InternalAcmeParser.g:9093:2: rule__AcmePortDeclaration__Group_3_1_1_1_3_1__2__Impl rule__AcmePortDeclaration__Group_3_1_1_1_3_1__3
            {
            pushFollow(FOLLOW_7);
            rule__AcmePortDeclaration__Group_3_1_1_1_3_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePortDeclaration__Group_3_1_1_1_3_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_3_1_1_1_3_1__2"


    // $ANTLR start "rule__AcmePortDeclaration__Group_3_1_1_1_3_1__2__Impl"
    // InternalAcmeParser.g:9100:1: rule__AcmePortDeclaration__Group_3_1_1_1_3_1__2__Impl : ( ( rule__AcmePortDeclaration__BodyAssignment_3_1_1_1_3_1_2 ) ) ;
    public final void rule__AcmePortDeclaration__Group_3_1_1_1_3_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9104:1: ( ( ( rule__AcmePortDeclaration__BodyAssignment_3_1_1_1_3_1_2 ) ) )
            // InternalAcmeParser.g:9105:1: ( ( rule__AcmePortDeclaration__BodyAssignment_3_1_1_1_3_1_2 ) )
            {
            // InternalAcmeParser.g:9105:1: ( ( rule__AcmePortDeclaration__BodyAssignment_3_1_1_1_3_1_2 ) )
            // InternalAcmeParser.g:9106:2: ( rule__AcmePortDeclaration__BodyAssignment_3_1_1_1_3_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortDeclarationAccess().getBodyAssignment_3_1_1_1_3_1_2()); 
            }
            // InternalAcmeParser.g:9107:2: ( rule__AcmePortDeclaration__BodyAssignment_3_1_1_1_3_1_2 )
            // InternalAcmeParser.g:9107:3: rule__AcmePortDeclaration__BodyAssignment_3_1_1_1_3_1_2
            {
            pushFollow(FOLLOW_2);
            rule__AcmePortDeclaration__BodyAssignment_3_1_1_1_3_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortDeclarationAccess().getBodyAssignment_3_1_1_1_3_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_3_1_1_1_3_1__2__Impl"


    // $ANTLR start "rule__AcmePortDeclaration__Group_3_1_1_1_3_1__3"
    // InternalAcmeParser.g:9115:1: rule__AcmePortDeclaration__Group_3_1_1_1_3_1__3 : rule__AcmePortDeclaration__Group_3_1_1_1_3_1__3__Impl ;
    public final void rule__AcmePortDeclaration__Group_3_1_1_1_3_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9119:1: ( rule__AcmePortDeclaration__Group_3_1_1_1_3_1__3__Impl )
            // InternalAcmeParser.g:9120:2: rule__AcmePortDeclaration__Group_3_1_1_1_3_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePortDeclaration__Group_3_1_1_1_3_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_3_1_1_1_3_1__3"


    // $ANTLR start "rule__AcmePortDeclaration__Group_3_1_1_1_3_1__3__Impl"
    // InternalAcmeParser.g:9126:1: rule__AcmePortDeclaration__Group_3_1_1_1_3_1__3__Impl : ( ( Semicolon )? ) ;
    public final void rule__AcmePortDeclaration__Group_3_1_1_1_3_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9130:1: ( ( ( Semicolon )? ) )
            // InternalAcmeParser.g:9131:1: ( ( Semicolon )? )
            {
            // InternalAcmeParser.g:9131:1: ( ( Semicolon )? )
            // InternalAcmeParser.g:9132:2: ( Semicolon )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortDeclarationAccess().getSemicolonKeyword_3_1_1_1_3_1_3()); 
            }
            // InternalAcmeParser.g:9133:2: ( Semicolon )?
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==Semicolon) ) {
                alt129=1;
            }
            switch (alt129) {
                case 1 :
                    // InternalAcmeParser.g:9133:3: Semicolon
                    {
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortDeclarationAccess().getSemicolonKeyword_3_1_1_1_3_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__Group_3_1_1_1_3_1__3__Impl"


    // $ANTLR start "rule__AcmePortBody__Group__0"
    // InternalAcmeParser.g:9142:1: rule__AcmePortBody__Group__0 : rule__AcmePortBody__Group__0__Impl rule__AcmePortBody__Group__1 ;
    public final void rule__AcmePortBody__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9146:1: ( rule__AcmePortBody__Group__0__Impl rule__AcmePortBody__Group__1 )
            // InternalAcmeParser.g:9147:2: rule__AcmePortBody__Group__0__Impl rule__AcmePortBody__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__AcmePortBody__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePortBody__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortBody__Group__0"


    // $ANTLR start "rule__AcmePortBody__Group__0__Impl"
    // InternalAcmeParser.g:9154:1: rule__AcmePortBody__Group__0__Impl : ( () ) ;
    public final void rule__AcmePortBody__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9158:1: ( ( () ) )
            // InternalAcmeParser.g:9159:1: ( () )
            {
            // InternalAcmeParser.g:9159:1: ( () )
            // InternalAcmeParser.g:9160:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortBodyAccess().getAcmePortBodyAction_0()); 
            }
            // InternalAcmeParser.g:9161:2: ()
            // InternalAcmeParser.g:9161:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortBodyAccess().getAcmePortBodyAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortBody__Group__0__Impl"


    // $ANTLR start "rule__AcmePortBody__Group__1"
    // InternalAcmeParser.g:9169:1: rule__AcmePortBody__Group__1 : rule__AcmePortBody__Group__1__Impl rule__AcmePortBody__Group__2 ;
    public final void rule__AcmePortBody__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9173:1: ( rule__AcmePortBody__Group__1__Impl rule__AcmePortBody__Group__2 )
            // InternalAcmeParser.g:9174:2: rule__AcmePortBody__Group__1__Impl rule__AcmePortBody__Group__2
            {
            pushFollow(FOLLOW_36);
            rule__AcmePortBody__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePortBody__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortBody__Group__1"


    // $ANTLR start "rule__AcmePortBody__Group__1__Impl"
    // InternalAcmeParser.g:9181:1: rule__AcmePortBody__Group__1__Impl : ( LeftCurlyBracket ) ;
    public final void rule__AcmePortBody__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9185:1: ( ( LeftCurlyBracket ) )
            // InternalAcmeParser.g:9186:1: ( LeftCurlyBracket )
            {
            // InternalAcmeParser.g:9186:1: ( LeftCurlyBracket )
            // InternalAcmeParser.g:9187:2: LeftCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortBodyAccess().getLeftCurlyBracketKeyword_1()); 
            }
            match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortBodyAccess().getLeftCurlyBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortBody__Group__1__Impl"


    // $ANTLR start "rule__AcmePortBody__Group__2"
    // InternalAcmeParser.g:9196:1: rule__AcmePortBody__Group__2 : rule__AcmePortBody__Group__2__Impl rule__AcmePortBody__Group__3 ;
    public final void rule__AcmePortBody__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9200:1: ( rule__AcmePortBody__Group__2__Impl rule__AcmePortBody__Group__3 )
            // InternalAcmeParser.g:9201:2: rule__AcmePortBody__Group__2__Impl rule__AcmePortBody__Group__3
            {
            pushFollow(FOLLOW_36);
            rule__AcmePortBody__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePortBody__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortBody__Group__2"


    // $ANTLR start "rule__AcmePortBody__Group__2__Impl"
    // InternalAcmeParser.g:9208:1: rule__AcmePortBody__Group__2__Impl : ( ( rule__AcmePortBody__Alternatives_2 )* ) ;
    public final void rule__AcmePortBody__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9212:1: ( ( ( rule__AcmePortBody__Alternatives_2 )* ) )
            // InternalAcmeParser.g:9213:1: ( ( rule__AcmePortBody__Alternatives_2 )* )
            {
            // InternalAcmeParser.g:9213:1: ( ( rule__AcmePortBody__Alternatives_2 )* )
            // InternalAcmeParser.g:9214:2: ( rule__AcmePortBody__Alternatives_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortBodyAccess().getAlternatives_2()); 
            }
            // InternalAcmeParser.g:9215:2: ( rule__AcmePortBody__Alternatives_2 )*
            loop130:
            do {
                int alt130=2;
                int LA130_0 = input.LA(1);

                if ( (LA130_0==Representation||(LA130_0>=Hueristic && LA130_0<=Invariant)||LA130_0==Property||LA130_0==Rule) ) {
                    alt130=1;
                }


                switch (alt130) {
            	case 1 :
            	    // InternalAcmeParser.g:9215:3: rule__AcmePortBody__Alternatives_2
            	    {
            	    pushFollow(FOLLOW_37);
            	    rule__AcmePortBody__Alternatives_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop130;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortBodyAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortBody__Group__2__Impl"


    // $ANTLR start "rule__AcmePortBody__Group__3"
    // InternalAcmeParser.g:9223:1: rule__AcmePortBody__Group__3 : rule__AcmePortBody__Group__3__Impl ;
    public final void rule__AcmePortBody__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9227:1: ( rule__AcmePortBody__Group__3__Impl )
            // InternalAcmeParser.g:9228:2: rule__AcmePortBody__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePortBody__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortBody__Group__3"


    // $ANTLR start "rule__AcmePortBody__Group__3__Impl"
    // InternalAcmeParser.g:9234:1: rule__AcmePortBody__Group__3__Impl : ( RightCurlyBracket ) ;
    public final void rule__AcmePortBody__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9238:1: ( ( RightCurlyBracket ) )
            // InternalAcmeParser.g:9239:1: ( RightCurlyBracket )
            {
            // InternalAcmeParser.g:9239:1: ( RightCurlyBracket )
            // InternalAcmeParser.g:9240:2: RightCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortBodyAccess().getRightCurlyBracketKeyword_3()); 
            }
            match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortBodyAccess().getRightCurlyBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortBody__Group__3__Impl"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Group__0"
    // InternalAcmeParser.g:9250:1: rule__AcmeRoleTypeDeclaration__Group__0 : rule__AcmeRoleTypeDeclaration__Group__0__Impl rule__AcmeRoleTypeDeclaration__Group__1 ;
    public final void rule__AcmeRoleTypeDeclaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9254:1: ( rule__AcmeRoleTypeDeclaration__Group__0__Impl rule__AcmeRoleTypeDeclaration__Group__1 )
            // InternalAcmeParser.g:9255:2: rule__AcmeRoleTypeDeclaration__Group__0__Impl rule__AcmeRoleTypeDeclaration__Group__1
            {
            pushFollow(FOLLOW_38);
            rule__AcmeRoleTypeDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeRoleTypeDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Group__0"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Group__0__Impl"
    // InternalAcmeParser.g:9262:1: rule__AcmeRoleTypeDeclaration__Group__0__Impl : ( ( rule__AcmeRoleTypeDeclaration__VisibilityAssignment_0 )? ) ;
    public final void rule__AcmeRoleTypeDeclaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9266:1: ( ( ( rule__AcmeRoleTypeDeclaration__VisibilityAssignment_0 )? ) )
            // InternalAcmeParser.g:9267:1: ( ( rule__AcmeRoleTypeDeclaration__VisibilityAssignment_0 )? )
            {
            // InternalAcmeParser.g:9267:1: ( ( rule__AcmeRoleTypeDeclaration__VisibilityAssignment_0 )? )
            // InternalAcmeParser.g:9268:2: ( rule__AcmeRoleTypeDeclaration__VisibilityAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleTypeDeclarationAccess().getVisibilityAssignment_0()); 
            }
            // InternalAcmeParser.g:9269:2: ( rule__AcmeRoleTypeDeclaration__VisibilityAssignment_0 )?
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==Private||LA131_0==Public) ) {
                alt131=1;
            }
            switch (alt131) {
                case 1 :
                    // InternalAcmeParser.g:9269:3: rule__AcmeRoleTypeDeclaration__VisibilityAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeRoleTypeDeclaration__VisibilityAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleTypeDeclarationAccess().getVisibilityAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Group__0__Impl"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Group__1"
    // InternalAcmeParser.g:9277:1: rule__AcmeRoleTypeDeclaration__Group__1 : rule__AcmeRoleTypeDeclaration__Group__1__Impl rule__AcmeRoleTypeDeclaration__Group__2 ;
    public final void rule__AcmeRoleTypeDeclaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9281:1: ( rule__AcmeRoleTypeDeclaration__Group__1__Impl rule__AcmeRoleTypeDeclaration__Group__2 )
            // InternalAcmeParser.g:9282:2: rule__AcmeRoleTypeDeclaration__Group__1__Impl rule__AcmeRoleTypeDeclaration__Group__2
            {
            pushFollow(FOLLOW_38);
            rule__AcmeRoleTypeDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeRoleTypeDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Group__1"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Group__1__Impl"
    // InternalAcmeParser.g:9289:1: rule__AcmeRoleTypeDeclaration__Group__1__Impl : ( ( rule__AcmeRoleTypeDeclaration__ExtensibilityAssignment_1 )? ) ;
    public final void rule__AcmeRoleTypeDeclaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9293:1: ( ( ( rule__AcmeRoleTypeDeclaration__ExtensibilityAssignment_1 )? ) )
            // InternalAcmeParser.g:9294:1: ( ( rule__AcmeRoleTypeDeclaration__ExtensibilityAssignment_1 )? )
            {
            // InternalAcmeParser.g:9294:1: ( ( rule__AcmeRoleTypeDeclaration__ExtensibilityAssignment_1 )? )
            // InternalAcmeParser.g:9295:2: ( rule__AcmeRoleTypeDeclaration__ExtensibilityAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleTypeDeclarationAccess().getExtensibilityAssignment_1()); 
            }
            // InternalAcmeParser.g:9296:2: ( rule__AcmeRoleTypeDeclaration__ExtensibilityAssignment_1 )?
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==Abstract||LA132_0==Final) ) {
                alt132=1;
            }
            switch (alt132) {
                case 1 :
                    // InternalAcmeParser.g:9296:3: rule__AcmeRoleTypeDeclaration__ExtensibilityAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeRoleTypeDeclaration__ExtensibilityAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleTypeDeclarationAccess().getExtensibilityAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Group__1__Impl"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Group__2"
    // InternalAcmeParser.g:9304:1: rule__AcmeRoleTypeDeclaration__Group__2 : rule__AcmeRoleTypeDeclaration__Group__2__Impl rule__AcmeRoleTypeDeclaration__Group__3 ;
    public final void rule__AcmeRoleTypeDeclaration__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9308:1: ( rule__AcmeRoleTypeDeclaration__Group__2__Impl rule__AcmeRoleTypeDeclaration__Group__3 )
            // InternalAcmeParser.g:9309:2: rule__AcmeRoleTypeDeclaration__Group__2__Impl rule__AcmeRoleTypeDeclaration__Group__3
            {
            pushFollow(FOLLOW_24);
            rule__AcmeRoleTypeDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeRoleTypeDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Group__2"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Group__2__Impl"
    // InternalAcmeParser.g:9316:1: rule__AcmeRoleTypeDeclaration__Group__2__Impl : ( ( Role ) ) ;
    public final void rule__AcmeRoleTypeDeclaration__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9320:1: ( ( ( Role ) ) )
            // InternalAcmeParser.g:9321:1: ( ( Role ) )
            {
            // InternalAcmeParser.g:9321:1: ( ( Role ) )
            // InternalAcmeParser.g:9322:2: ( Role )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleTypeDeclarationAccess().getRoleKeyword_2()); 
            }
            // InternalAcmeParser.g:9323:2: ( Role )
            // InternalAcmeParser.g:9323:3: Role
            {
            match(input,Role,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleTypeDeclarationAccess().getRoleKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Group__2__Impl"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Group__3"
    // InternalAcmeParser.g:9331:1: rule__AcmeRoleTypeDeclaration__Group__3 : rule__AcmeRoleTypeDeclaration__Group__3__Impl rule__AcmeRoleTypeDeclaration__Group__4 ;
    public final void rule__AcmeRoleTypeDeclaration__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9335:1: ( rule__AcmeRoleTypeDeclaration__Group__3__Impl rule__AcmeRoleTypeDeclaration__Group__4 )
            // InternalAcmeParser.g:9336:2: rule__AcmeRoleTypeDeclaration__Group__3__Impl rule__AcmeRoleTypeDeclaration__Group__4
            {
            pushFollow(FOLLOW_11);
            rule__AcmeRoleTypeDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeRoleTypeDeclaration__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Group__3"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Group__3__Impl"
    // InternalAcmeParser.g:9343:1: rule__AcmeRoleTypeDeclaration__Group__3__Impl : ( Type ) ;
    public final void rule__AcmeRoleTypeDeclaration__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9347:1: ( ( Type ) )
            // InternalAcmeParser.g:9348:1: ( Type )
            {
            // InternalAcmeParser.g:9348:1: ( Type )
            // InternalAcmeParser.g:9349:2: Type
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleTypeDeclarationAccess().getTypeKeyword_3()); 
            }
            match(input,Type,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleTypeDeclarationAccess().getTypeKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Group__3__Impl"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Group__4"
    // InternalAcmeParser.g:9358:1: rule__AcmeRoleTypeDeclaration__Group__4 : rule__AcmeRoleTypeDeclaration__Group__4__Impl rule__AcmeRoleTypeDeclaration__Group__5 ;
    public final void rule__AcmeRoleTypeDeclaration__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9362:1: ( rule__AcmeRoleTypeDeclaration__Group__4__Impl rule__AcmeRoleTypeDeclaration__Group__5 )
            // InternalAcmeParser.g:9363:2: rule__AcmeRoleTypeDeclaration__Group__4__Impl rule__AcmeRoleTypeDeclaration__Group__5
            {
            pushFollow(FOLLOW_12);
            rule__AcmeRoleTypeDeclaration__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeRoleTypeDeclaration__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Group__4"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Group__4__Impl"
    // InternalAcmeParser.g:9370:1: rule__AcmeRoleTypeDeclaration__Group__4__Impl : ( ( rule__AcmeRoleTypeDeclaration__NameAssignment_4 ) ) ;
    public final void rule__AcmeRoleTypeDeclaration__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9374:1: ( ( ( rule__AcmeRoleTypeDeclaration__NameAssignment_4 ) ) )
            // InternalAcmeParser.g:9375:1: ( ( rule__AcmeRoleTypeDeclaration__NameAssignment_4 ) )
            {
            // InternalAcmeParser.g:9375:1: ( ( rule__AcmeRoleTypeDeclaration__NameAssignment_4 ) )
            // InternalAcmeParser.g:9376:2: ( rule__AcmeRoleTypeDeclaration__NameAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleTypeDeclarationAccess().getNameAssignment_4()); 
            }
            // InternalAcmeParser.g:9377:2: ( rule__AcmeRoleTypeDeclaration__NameAssignment_4 )
            // InternalAcmeParser.g:9377:3: rule__AcmeRoleTypeDeclaration__NameAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__AcmeRoleTypeDeclaration__NameAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleTypeDeclarationAccess().getNameAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Group__4__Impl"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Group__5"
    // InternalAcmeParser.g:9385:1: rule__AcmeRoleTypeDeclaration__Group__5 : rule__AcmeRoleTypeDeclaration__Group__5__Impl ;
    public final void rule__AcmeRoleTypeDeclaration__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9389:1: ( rule__AcmeRoleTypeDeclaration__Group__5__Impl )
            // InternalAcmeParser.g:9390:2: rule__AcmeRoleTypeDeclaration__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeRoleTypeDeclaration__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Group__5"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Group__5__Impl"
    // InternalAcmeParser.g:9396:1: rule__AcmeRoleTypeDeclaration__Group__5__Impl : ( ( rule__AcmeRoleTypeDeclaration__Alternatives_5 ) ) ;
    public final void rule__AcmeRoleTypeDeclaration__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9400:1: ( ( ( rule__AcmeRoleTypeDeclaration__Alternatives_5 ) ) )
            // InternalAcmeParser.g:9401:1: ( ( rule__AcmeRoleTypeDeclaration__Alternatives_5 ) )
            {
            // InternalAcmeParser.g:9401:1: ( ( rule__AcmeRoleTypeDeclaration__Alternatives_5 ) )
            // InternalAcmeParser.g:9402:2: ( rule__AcmeRoleTypeDeclaration__Alternatives_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleTypeDeclarationAccess().getAlternatives_5()); 
            }
            // InternalAcmeParser.g:9403:2: ( rule__AcmeRoleTypeDeclaration__Alternatives_5 )
            // InternalAcmeParser.g:9403:3: rule__AcmeRoleTypeDeclaration__Alternatives_5
            {
            pushFollow(FOLLOW_2);
            rule__AcmeRoleTypeDeclaration__Alternatives_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleTypeDeclarationAccess().getAlternatives_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Group__5__Impl"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Group_5_1_0__0"
    // InternalAcmeParser.g:9412:1: rule__AcmeRoleTypeDeclaration__Group_5_1_0__0 : rule__AcmeRoleTypeDeclaration__Group_5_1_0__0__Impl rule__AcmeRoleTypeDeclaration__Group_5_1_0__1 ;
    public final void rule__AcmeRoleTypeDeclaration__Group_5_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9416:1: ( rule__AcmeRoleTypeDeclaration__Group_5_1_0__0__Impl rule__AcmeRoleTypeDeclaration__Group_5_1_0__1 )
            // InternalAcmeParser.g:9417:2: rule__AcmeRoleTypeDeclaration__Group_5_1_0__0__Impl rule__AcmeRoleTypeDeclaration__Group_5_1_0__1
            {
            pushFollow(FOLLOW_13);
            rule__AcmeRoleTypeDeclaration__Group_5_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeRoleTypeDeclaration__Group_5_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Group_5_1_0__0"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Group_5_1_0__0__Impl"
    // InternalAcmeParser.g:9424:1: rule__AcmeRoleTypeDeclaration__Group_5_1_0__0__Impl : ( EqualsSign ) ;
    public final void rule__AcmeRoleTypeDeclaration__Group_5_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9428:1: ( ( EqualsSign ) )
            // InternalAcmeParser.g:9429:1: ( EqualsSign )
            {
            // InternalAcmeParser.g:9429:1: ( EqualsSign )
            // InternalAcmeParser.g:9430:2: EqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleTypeDeclarationAccess().getEqualsSignKeyword_5_1_0_0()); 
            }
            match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleTypeDeclarationAccess().getEqualsSignKeyword_5_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Group_5_1_0__0__Impl"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Group_5_1_0__1"
    // InternalAcmeParser.g:9439:1: rule__AcmeRoleTypeDeclaration__Group_5_1_0__1 : rule__AcmeRoleTypeDeclaration__Group_5_1_0__1__Impl ;
    public final void rule__AcmeRoleTypeDeclaration__Group_5_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9443:1: ( rule__AcmeRoleTypeDeclaration__Group_5_1_0__1__Impl )
            // InternalAcmeParser.g:9444:2: rule__AcmeRoleTypeDeclaration__Group_5_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeRoleTypeDeclaration__Group_5_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Group_5_1_0__1"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Group_5_1_0__1__Impl"
    // InternalAcmeParser.g:9450:1: rule__AcmeRoleTypeDeclaration__Group_5_1_0__1__Impl : ( ( rule__AcmeRoleTypeDeclaration__BodyAssignment_5_1_0_1 ) ) ;
    public final void rule__AcmeRoleTypeDeclaration__Group_5_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9454:1: ( ( ( rule__AcmeRoleTypeDeclaration__BodyAssignment_5_1_0_1 ) ) )
            // InternalAcmeParser.g:9455:1: ( ( rule__AcmeRoleTypeDeclaration__BodyAssignment_5_1_0_1 ) )
            {
            // InternalAcmeParser.g:9455:1: ( ( rule__AcmeRoleTypeDeclaration__BodyAssignment_5_1_0_1 ) )
            // InternalAcmeParser.g:9456:2: ( rule__AcmeRoleTypeDeclaration__BodyAssignment_5_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleTypeDeclarationAccess().getBodyAssignment_5_1_0_1()); 
            }
            // InternalAcmeParser.g:9457:2: ( rule__AcmeRoleTypeDeclaration__BodyAssignment_5_1_0_1 )
            // InternalAcmeParser.g:9457:3: rule__AcmeRoleTypeDeclaration__BodyAssignment_5_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeRoleTypeDeclaration__BodyAssignment_5_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleTypeDeclarationAccess().getBodyAssignment_5_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Group_5_1_0__1__Impl"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Group_5_1_1__0"
    // InternalAcmeParser.g:9466:1: rule__AcmeRoleTypeDeclaration__Group_5_1_1__0 : rule__AcmeRoleTypeDeclaration__Group_5_1_1__0__Impl rule__AcmeRoleTypeDeclaration__Group_5_1_1__1 ;
    public final void rule__AcmeRoleTypeDeclaration__Group_5_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9470:1: ( rule__AcmeRoleTypeDeclaration__Group_5_1_1__0__Impl rule__AcmeRoleTypeDeclaration__Group_5_1_1__1 )
            // InternalAcmeParser.g:9471:2: rule__AcmeRoleTypeDeclaration__Group_5_1_1__0__Impl rule__AcmeRoleTypeDeclaration__Group_5_1_1__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeRoleTypeDeclaration__Group_5_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeRoleTypeDeclaration__Group_5_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Group_5_1_1__0"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Group_5_1_1__0__Impl"
    // InternalAcmeParser.g:9478:1: rule__AcmeRoleTypeDeclaration__Group_5_1_1__0__Impl : ( Extends ) ;
    public final void rule__AcmeRoleTypeDeclaration__Group_5_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9482:1: ( ( Extends ) )
            // InternalAcmeParser.g:9483:1: ( Extends )
            {
            // InternalAcmeParser.g:9483:1: ( Extends )
            // InternalAcmeParser.g:9484:2: Extends
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleTypeDeclarationAccess().getExtendsKeyword_5_1_1_0()); 
            }
            match(input,Extends,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleTypeDeclarationAccess().getExtendsKeyword_5_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Group_5_1_1__0__Impl"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Group_5_1_1__1"
    // InternalAcmeParser.g:9493:1: rule__AcmeRoleTypeDeclaration__Group_5_1_1__1 : rule__AcmeRoleTypeDeclaration__Group_5_1_1__1__Impl rule__AcmeRoleTypeDeclaration__Group_5_1_1__2 ;
    public final void rule__AcmeRoleTypeDeclaration__Group_5_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9497:1: ( rule__AcmeRoleTypeDeclaration__Group_5_1_1__1__Impl rule__AcmeRoleTypeDeclaration__Group_5_1_1__2 )
            // InternalAcmeParser.g:9498:2: rule__AcmeRoleTypeDeclaration__Group_5_1_1__1__Impl rule__AcmeRoleTypeDeclaration__Group_5_1_1__2
            {
            pushFollow(FOLLOW_25);
            rule__AcmeRoleTypeDeclaration__Group_5_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeRoleTypeDeclaration__Group_5_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Group_5_1_1__1"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Group_5_1_1__1__Impl"
    // InternalAcmeParser.g:9505:1: rule__AcmeRoleTypeDeclaration__Group_5_1_1__1__Impl : ( ( rule__AcmeRoleTypeDeclaration__RefsAssignment_5_1_1_1 ) ) ;
    public final void rule__AcmeRoleTypeDeclaration__Group_5_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9509:1: ( ( ( rule__AcmeRoleTypeDeclaration__RefsAssignment_5_1_1_1 ) ) )
            // InternalAcmeParser.g:9510:1: ( ( rule__AcmeRoleTypeDeclaration__RefsAssignment_5_1_1_1 ) )
            {
            // InternalAcmeParser.g:9510:1: ( ( rule__AcmeRoleTypeDeclaration__RefsAssignment_5_1_1_1 ) )
            // InternalAcmeParser.g:9511:2: ( rule__AcmeRoleTypeDeclaration__RefsAssignment_5_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleTypeDeclarationAccess().getRefsAssignment_5_1_1_1()); 
            }
            // InternalAcmeParser.g:9512:2: ( rule__AcmeRoleTypeDeclaration__RefsAssignment_5_1_1_1 )
            // InternalAcmeParser.g:9512:3: rule__AcmeRoleTypeDeclaration__RefsAssignment_5_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeRoleTypeDeclaration__RefsAssignment_5_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleTypeDeclarationAccess().getRefsAssignment_5_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Group_5_1_1__1__Impl"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Group_5_1_1__2"
    // InternalAcmeParser.g:9520:1: rule__AcmeRoleTypeDeclaration__Group_5_1_1__2 : rule__AcmeRoleTypeDeclaration__Group_5_1_1__2__Impl rule__AcmeRoleTypeDeclaration__Group_5_1_1__3 ;
    public final void rule__AcmeRoleTypeDeclaration__Group_5_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9524:1: ( rule__AcmeRoleTypeDeclaration__Group_5_1_1__2__Impl rule__AcmeRoleTypeDeclaration__Group_5_1_1__3 )
            // InternalAcmeParser.g:9525:2: rule__AcmeRoleTypeDeclaration__Group_5_1_1__2__Impl rule__AcmeRoleTypeDeclaration__Group_5_1_1__3
            {
            pushFollow(FOLLOW_25);
            rule__AcmeRoleTypeDeclaration__Group_5_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeRoleTypeDeclaration__Group_5_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Group_5_1_1__2"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Group_5_1_1__2__Impl"
    // InternalAcmeParser.g:9532:1: rule__AcmeRoleTypeDeclaration__Group_5_1_1__2__Impl : ( ( rule__AcmeRoleTypeDeclaration__Group_5_1_1_2__0 )* ) ;
    public final void rule__AcmeRoleTypeDeclaration__Group_5_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9536:1: ( ( ( rule__AcmeRoleTypeDeclaration__Group_5_1_1_2__0 )* ) )
            // InternalAcmeParser.g:9537:1: ( ( rule__AcmeRoleTypeDeclaration__Group_5_1_1_2__0 )* )
            {
            // InternalAcmeParser.g:9537:1: ( ( rule__AcmeRoleTypeDeclaration__Group_5_1_1_2__0 )* )
            // InternalAcmeParser.g:9538:2: ( rule__AcmeRoleTypeDeclaration__Group_5_1_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleTypeDeclarationAccess().getGroup_5_1_1_2()); 
            }
            // InternalAcmeParser.g:9539:2: ( rule__AcmeRoleTypeDeclaration__Group_5_1_1_2__0 )*
            loop133:
            do {
                int alt133=2;
                int LA133_0 = input.LA(1);

                if ( (LA133_0==Comma) ) {
                    alt133=1;
                }


                switch (alt133) {
            	case 1 :
            	    // InternalAcmeParser.g:9539:3: rule__AcmeRoleTypeDeclaration__Group_5_1_1_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__AcmeRoleTypeDeclaration__Group_5_1_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop133;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleTypeDeclarationAccess().getGroup_5_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Group_5_1_1__2__Impl"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Group_5_1_1__3"
    // InternalAcmeParser.g:9547:1: rule__AcmeRoleTypeDeclaration__Group_5_1_1__3 : rule__AcmeRoleTypeDeclaration__Group_5_1_1__3__Impl ;
    public final void rule__AcmeRoleTypeDeclaration__Group_5_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9551:1: ( rule__AcmeRoleTypeDeclaration__Group_5_1_1__3__Impl )
            // InternalAcmeParser.g:9552:2: rule__AcmeRoleTypeDeclaration__Group_5_1_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeRoleTypeDeclaration__Group_5_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Group_5_1_1__3"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Group_5_1_1__3__Impl"
    // InternalAcmeParser.g:9558:1: rule__AcmeRoleTypeDeclaration__Group_5_1_1__3__Impl : ( ( rule__AcmeRoleTypeDeclaration__Alternatives_5_1_1_3 ) ) ;
    public final void rule__AcmeRoleTypeDeclaration__Group_5_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9562:1: ( ( ( rule__AcmeRoleTypeDeclaration__Alternatives_5_1_1_3 ) ) )
            // InternalAcmeParser.g:9563:1: ( ( rule__AcmeRoleTypeDeclaration__Alternatives_5_1_1_3 ) )
            {
            // InternalAcmeParser.g:9563:1: ( ( rule__AcmeRoleTypeDeclaration__Alternatives_5_1_1_3 ) )
            // InternalAcmeParser.g:9564:2: ( rule__AcmeRoleTypeDeclaration__Alternatives_5_1_1_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleTypeDeclarationAccess().getAlternatives_5_1_1_3()); 
            }
            // InternalAcmeParser.g:9565:2: ( rule__AcmeRoleTypeDeclaration__Alternatives_5_1_1_3 )
            // InternalAcmeParser.g:9565:3: rule__AcmeRoleTypeDeclaration__Alternatives_5_1_1_3
            {
            pushFollow(FOLLOW_2);
            rule__AcmeRoleTypeDeclaration__Alternatives_5_1_1_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleTypeDeclarationAccess().getAlternatives_5_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Group_5_1_1__3__Impl"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Group_5_1_1_2__0"
    // InternalAcmeParser.g:9574:1: rule__AcmeRoleTypeDeclaration__Group_5_1_1_2__0 : rule__AcmeRoleTypeDeclaration__Group_5_1_1_2__0__Impl rule__AcmeRoleTypeDeclaration__Group_5_1_1_2__1 ;
    public final void rule__AcmeRoleTypeDeclaration__Group_5_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9578:1: ( rule__AcmeRoleTypeDeclaration__Group_5_1_1_2__0__Impl rule__AcmeRoleTypeDeclaration__Group_5_1_1_2__1 )
            // InternalAcmeParser.g:9579:2: rule__AcmeRoleTypeDeclaration__Group_5_1_1_2__0__Impl rule__AcmeRoleTypeDeclaration__Group_5_1_1_2__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeRoleTypeDeclaration__Group_5_1_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeRoleTypeDeclaration__Group_5_1_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Group_5_1_1_2__0"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Group_5_1_1_2__0__Impl"
    // InternalAcmeParser.g:9586:1: rule__AcmeRoleTypeDeclaration__Group_5_1_1_2__0__Impl : ( Comma ) ;
    public final void rule__AcmeRoleTypeDeclaration__Group_5_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9590:1: ( ( Comma ) )
            // InternalAcmeParser.g:9591:1: ( Comma )
            {
            // InternalAcmeParser.g:9591:1: ( Comma )
            // InternalAcmeParser.g:9592:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleTypeDeclarationAccess().getCommaKeyword_5_1_1_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleTypeDeclarationAccess().getCommaKeyword_5_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Group_5_1_1_2__0__Impl"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Group_5_1_1_2__1"
    // InternalAcmeParser.g:9601:1: rule__AcmeRoleTypeDeclaration__Group_5_1_1_2__1 : rule__AcmeRoleTypeDeclaration__Group_5_1_1_2__1__Impl ;
    public final void rule__AcmeRoleTypeDeclaration__Group_5_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9605:1: ( rule__AcmeRoleTypeDeclaration__Group_5_1_1_2__1__Impl )
            // InternalAcmeParser.g:9606:2: rule__AcmeRoleTypeDeclaration__Group_5_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeRoleTypeDeclaration__Group_5_1_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Group_5_1_1_2__1"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Group_5_1_1_2__1__Impl"
    // InternalAcmeParser.g:9612:1: rule__AcmeRoleTypeDeclaration__Group_5_1_1_2__1__Impl : ( ( rule__AcmeRoleTypeDeclaration__RefsAssignment_5_1_1_2_1 ) ) ;
    public final void rule__AcmeRoleTypeDeclaration__Group_5_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9616:1: ( ( ( rule__AcmeRoleTypeDeclaration__RefsAssignment_5_1_1_2_1 ) ) )
            // InternalAcmeParser.g:9617:1: ( ( rule__AcmeRoleTypeDeclaration__RefsAssignment_5_1_1_2_1 ) )
            {
            // InternalAcmeParser.g:9617:1: ( ( rule__AcmeRoleTypeDeclaration__RefsAssignment_5_1_1_2_1 ) )
            // InternalAcmeParser.g:9618:2: ( rule__AcmeRoleTypeDeclaration__RefsAssignment_5_1_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleTypeDeclarationAccess().getRefsAssignment_5_1_1_2_1()); 
            }
            // InternalAcmeParser.g:9619:2: ( rule__AcmeRoleTypeDeclaration__RefsAssignment_5_1_1_2_1 )
            // InternalAcmeParser.g:9619:3: rule__AcmeRoleTypeDeclaration__RefsAssignment_5_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeRoleTypeDeclaration__RefsAssignment_5_1_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleTypeDeclarationAccess().getRefsAssignment_5_1_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Group_5_1_1_2__1__Impl"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__0"
    // InternalAcmeParser.g:9628:1: rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__0 : rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__0__Impl rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__1 ;
    public final void rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9632:1: ( rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__0__Impl rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__1 )
            // InternalAcmeParser.g:9633:2: rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__0__Impl rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__1
            {
            pushFollow(FOLLOW_13);
            rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__0"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__0__Impl"
    // InternalAcmeParser.g:9640:1: rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__0__Impl : ( With ) ;
    public final void rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9644:1: ( ( With ) )
            // InternalAcmeParser.g:9645:1: ( With )
            {
            // InternalAcmeParser.g:9645:1: ( With )
            // InternalAcmeParser.g:9646:2: With
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleTypeDeclarationAccess().getWithKeyword_5_1_1_3_1_0()); 
            }
            match(input,With,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleTypeDeclarationAccess().getWithKeyword_5_1_1_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__0__Impl"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__1"
    // InternalAcmeParser.g:9655:1: rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__1 : rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__1__Impl rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__2 ;
    public final void rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9659:1: ( rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__1__Impl rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__2 )
            // InternalAcmeParser.g:9660:2: rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__1__Impl rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__2
            {
            pushFollow(FOLLOW_7);
            rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__1"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__1__Impl"
    // InternalAcmeParser.g:9667:1: rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__1__Impl : ( ( rule__AcmeRoleTypeDeclaration__BodyAssignment_5_1_1_3_1_1 ) ) ;
    public final void rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9671:1: ( ( ( rule__AcmeRoleTypeDeclaration__BodyAssignment_5_1_1_3_1_1 ) ) )
            // InternalAcmeParser.g:9672:1: ( ( rule__AcmeRoleTypeDeclaration__BodyAssignment_5_1_1_3_1_1 ) )
            {
            // InternalAcmeParser.g:9672:1: ( ( rule__AcmeRoleTypeDeclaration__BodyAssignment_5_1_1_3_1_1 ) )
            // InternalAcmeParser.g:9673:2: ( rule__AcmeRoleTypeDeclaration__BodyAssignment_5_1_1_3_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleTypeDeclarationAccess().getBodyAssignment_5_1_1_3_1_1()); 
            }
            // InternalAcmeParser.g:9674:2: ( rule__AcmeRoleTypeDeclaration__BodyAssignment_5_1_1_3_1_1 )
            // InternalAcmeParser.g:9674:3: rule__AcmeRoleTypeDeclaration__BodyAssignment_5_1_1_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeRoleTypeDeclaration__BodyAssignment_5_1_1_3_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleTypeDeclarationAccess().getBodyAssignment_5_1_1_3_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__1__Impl"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__2"
    // InternalAcmeParser.g:9682:1: rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__2 : rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__2__Impl ;
    public final void rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9686:1: ( rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__2__Impl )
            // InternalAcmeParser.g:9687:2: rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__2"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__2__Impl"
    // InternalAcmeParser.g:9693:1: rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__2__Impl : ( ( Semicolon )? ) ;
    public final void rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9697:1: ( ( ( Semicolon )? ) )
            // InternalAcmeParser.g:9698:1: ( ( Semicolon )? )
            {
            // InternalAcmeParser.g:9698:1: ( ( Semicolon )? )
            // InternalAcmeParser.g:9699:2: ( Semicolon )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleTypeDeclarationAccess().getSemicolonKeyword_5_1_1_3_1_2()); 
            }
            // InternalAcmeParser.g:9700:2: ( Semicolon )?
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==Semicolon) ) {
                alt134=1;
            }
            switch (alt134) {
                case 1 :
                    // InternalAcmeParser.g:9700:3: Semicolon
                    {
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleTypeDeclarationAccess().getSemicolonKeyword_5_1_1_3_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__Group_5_1_1_3_1__2__Impl"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group__0"
    // InternalAcmeParser.g:9709:1: rule__AcmeRoleDeclaration__Group__0 : rule__AcmeRoleDeclaration__Group__0__Impl rule__AcmeRoleDeclaration__Group__1 ;
    public final void rule__AcmeRoleDeclaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9713:1: ( rule__AcmeRoleDeclaration__Group__0__Impl rule__AcmeRoleDeclaration__Group__1 )
            // InternalAcmeParser.g:9714:2: rule__AcmeRoleDeclaration__Group__0__Impl rule__AcmeRoleDeclaration__Group__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeRoleDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeRoleDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group__0"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group__0__Impl"
    // InternalAcmeParser.g:9721:1: rule__AcmeRoleDeclaration__Group__0__Impl : ( Role ) ;
    public final void rule__AcmeRoleDeclaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9725:1: ( ( Role ) )
            // InternalAcmeParser.g:9726:1: ( Role )
            {
            // InternalAcmeParser.g:9726:1: ( Role )
            // InternalAcmeParser.g:9727:2: Role
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleDeclarationAccess().getRoleKeyword_0()); 
            }
            match(input,Role,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleDeclarationAccess().getRoleKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group__0__Impl"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group__1"
    // InternalAcmeParser.g:9736:1: rule__AcmeRoleDeclaration__Group__1 : rule__AcmeRoleDeclaration__Group__1__Impl rule__AcmeRoleDeclaration__Group__2 ;
    public final void rule__AcmeRoleDeclaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9740:1: ( rule__AcmeRoleDeclaration__Group__1__Impl rule__AcmeRoleDeclaration__Group__2 )
            // InternalAcmeParser.g:9741:2: rule__AcmeRoleDeclaration__Group__1__Impl rule__AcmeRoleDeclaration__Group__2
            {
            pushFollow(FOLLOW_18);
            rule__AcmeRoleDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeRoleDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group__1"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group__1__Impl"
    // InternalAcmeParser.g:9748:1: rule__AcmeRoleDeclaration__Group__1__Impl : ( ( rule__AcmeRoleDeclaration__NameAssignment_1 ) ) ;
    public final void rule__AcmeRoleDeclaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9752:1: ( ( ( rule__AcmeRoleDeclaration__NameAssignment_1 ) ) )
            // InternalAcmeParser.g:9753:1: ( ( rule__AcmeRoleDeclaration__NameAssignment_1 ) )
            {
            // InternalAcmeParser.g:9753:1: ( ( rule__AcmeRoleDeclaration__NameAssignment_1 ) )
            // InternalAcmeParser.g:9754:2: ( rule__AcmeRoleDeclaration__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleDeclarationAccess().getNameAssignment_1()); 
            }
            // InternalAcmeParser.g:9755:2: ( rule__AcmeRoleDeclaration__NameAssignment_1 )
            // InternalAcmeParser.g:9755:3: rule__AcmeRoleDeclaration__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeRoleDeclaration__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleDeclarationAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group__1__Impl"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group__2"
    // InternalAcmeParser.g:9763:1: rule__AcmeRoleDeclaration__Group__2 : rule__AcmeRoleDeclaration__Group__2__Impl rule__AcmeRoleDeclaration__Group__3 ;
    public final void rule__AcmeRoleDeclaration__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9767:1: ( rule__AcmeRoleDeclaration__Group__2__Impl rule__AcmeRoleDeclaration__Group__3 )
            // InternalAcmeParser.g:9768:2: rule__AcmeRoleDeclaration__Group__2__Impl rule__AcmeRoleDeclaration__Group__3
            {
            pushFollow(FOLLOW_18);
            rule__AcmeRoleDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeRoleDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group__2"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group__2__Impl"
    // InternalAcmeParser.g:9775:1: rule__AcmeRoleDeclaration__Group__2__Impl : ( ( rule__AcmeRoleDeclaration__Group_2__0 )? ) ;
    public final void rule__AcmeRoleDeclaration__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9779:1: ( ( ( rule__AcmeRoleDeclaration__Group_2__0 )? ) )
            // InternalAcmeParser.g:9780:1: ( ( rule__AcmeRoleDeclaration__Group_2__0 )? )
            {
            // InternalAcmeParser.g:9780:1: ( ( rule__AcmeRoleDeclaration__Group_2__0 )? )
            // InternalAcmeParser.g:9781:2: ( rule__AcmeRoleDeclaration__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleDeclarationAccess().getGroup_2()); 
            }
            // InternalAcmeParser.g:9782:2: ( rule__AcmeRoleDeclaration__Group_2__0 )?
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==Colon) ) {
                alt135=1;
            }
            switch (alt135) {
                case 1 :
                    // InternalAcmeParser.g:9782:3: rule__AcmeRoleDeclaration__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeRoleDeclaration__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleDeclarationAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group__2__Impl"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group__3"
    // InternalAcmeParser.g:9790:1: rule__AcmeRoleDeclaration__Group__3 : rule__AcmeRoleDeclaration__Group__3__Impl ;
    public final void rule__AcmeRoleDeclaration__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9794:1: ( rule__AcmeRoleDeclaration__Group__3__Impl )
            // InternalAcmeParser.g:9795:2: rule__AcmeRoleDeclaration__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeRoleDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group__3"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group__3__Impl"
    // InternalAcmeParser.g:9801:1: rule__AcmeRoleDeclaration__Group__3__Impl : ( ( rule__AcmeRoleDeclaration__Alternatives_3 ) ) ;
    public final void rule__AcmeRoleDeclaration__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9805:1: ( ( ( rule__AcmeRoleDeclaration__Alternatives_3 ) ) )
            // InternalAcmeParser.g:9806:1: ( ( rule__AcmeRoleDeclaration__Alternatives_3 ) )
            {
            // InternalAcmeParser.g:9806:1: ( ( rule__AcmeRoleDeclaration__Alternatives_3 ) )
            // InternalAcmeParser.g:9807:2: ( rule__AcmeRoleDeclaration__Alternatives_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleDeclarationAccess().getAlternatives_3()); 
            }
            // InternalAcmeParser.g:9808:2: ( rule__AcmeRoleDeclaration__Alternatives_3 )
            // InternalAcmeParser.g:9808:3: rule__AcmeRoleDeclaration__Alternatives_3
            {
            pushFollow(FOLLOW_2);
            rule__AcmeRoleDeclaration__Alternatives_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleDeclarationAccess().getAlternatives_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group__3__Impl"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_2__0"
    // InternalAcmeParser.g:9817:1: rule__AcmeRoleDeclaration__Group_2__0 : rule__AcmeRoleDeclaration__Group_2__0__Impl rule__AcmeRoleDeclaration__Group_2__1 ;
    public final void rule__AcmeRoleDeclaration__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9821:1: ( rule__AcmeRoleDeclaration__Group_2__0__Impl rule__AcmeRoleDeclaration__Group_2__1 )
            // InternalAcmeParser.g:9822:2: rule__AcmeRoleDeclaration__Group_2__0__Impl rule__AcmeRoleDeclaration__Group_2__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeRoleDeclaration__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeRoleDeclaration__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_2__0"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_2__0__Impl"
    // InternalAcmeParser.g:9829:1: rule__AcmeRoleDeclaration__Group_2__0__Impl : ( Colon ) ;
    public final void rule__AcmeRoleDeclaration__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9833:1: ( ( Colon ) )
            // InternalAcmeParser.g:9834:1: ( Colon )
            {
            // InternalAcmeParser.g:9834:1: ( Colon )
            // InternalAcmeParser.g:9835:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleDeclarationAccess().getColonKeyword_2_0()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleDeclarationAccess().getColonKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_2__0__Impl"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_2__1"
    // InternalAcmeParser.g:9844:1: rule__AcmeRoleDeclaration__Group_2__1 : rule__AcmeRoleDeclaration__Group_2__1__Impl rule__AcmeRoleDeclaration__Group_2__2 ;
    public final void rule__AcmeRoleDeclaration__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9848:1: ( rule__AcmeRoleDeclaration__Group_2__1__Impl rule__AcmeRoleDeclaration__Group_2__2 )
            // InternalAcmeParser.g:9849:2: rule__AcmeRoleDeclaration__Group_2__1__Impl rule__AcmeRoleDeclaration__Group_2__2
            {
            pushFollow(FOLLOW_19);
            rule__AcmeRoleDeclaration__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeRoleDeclaration__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_2__1"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_2__1__Impl"
    // InternalAcmeParser.g:9856:1: rule__AcmeRoleDeclaration__Group_2__1__Impl : ( ( rule__AcmeRoleDeclaration__DeclaredAssignment_2_1 ) ) ;
    public final void rule__AcmeRoleDeclaration__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9860:1: ( ( ( rule__AcmeRoleDeclaration__DeclaredAssignment_2_1 ) ) )
            // InternalAcmeParser.g:9861:1: ( ( rule__AcmeRoleDeclaration__DeclaredAssignment_2_1 ) )
            {
            // InternalAcmeParser.g:9861:1: ( ( rule__AcmeRoleDeclaration__DeclaredAssignment_2_1 ) )
            // InternalAcmeParser.g:9862:2: ( rule__AcmeRoleDeclaration__DeclaredAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleDeclarationAccess().getDeclaredAssignment_2_1()); 
            }
            // InternalAcmeParser.g:9863:2: ( rule__AcmeRoleDeclaration__DeclaredAssignment_2_1 )
            // InternalAcmeParser.g:9863:3: rule__AcmeRoleDeclaration__DeclaredAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeRoleDeclaration__DeclaredAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleDeclarationAccess().getDeclaredAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_2__1__Impl"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_2__2"
    // InternalAcmeParser.g:9871:1: rule__AcmeRoleDeclaration__Group_2__2 : rule__AcmeRoleDeclaration__Group_2__2__Impl ;
    public final void rule__AcmeRoleDeclaration__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9875:1: ( rule__AcmeRoleDeclaration__Group_2__2__Impl )
            // InternalAcmeParser.g:9876:2: rule__AcmeRoleDeclaration__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeRoleDeclaration__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_2__2"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_2__2__Impl"
    // InternalAcmeParser.g:9882:1: rule__AcmeRoleDeclaration__Group_2__2__Impl : ( ( rule__AcmeRoleDeclaration__Group_2_2__0 )* ) ;
    public final void rule__AcmeRoleDeclaration__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9886:1: ( ( ( rule__AcmeRoleDeclaration__Group_2_2__0 )* ) )
            // InternalAcmeParser.g:9887:1: ( ( rule__AcmeRoleDeclaration__Group_2_2__0 )* )
            {
            // InternalAcmeParser.g:9887:1: ( ( rule__AcmeRoleDeclaration__Group_2_2__0 )* )
            // InternalAcmeParser.g:9888:2: ( rule__AcmeRoleDeclaration__Group_2_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleDeclarationAccess().getGroup_2_2()); 
            }
            // InternalAcmeParser.g:9889:2: ( rule__AcmeRoleDeclaration__Group_2_2__0 )*
            loop136:
            do {
                int alt136=2;
                int LA136_0 = input.LA(1);

                if ( (LA136_0==Comma) ) {
                    alt136=1;
                }


                switch (alt136) {
            	case 1 :
            	    // InternalAcmeParser.g:9889:3: rule__AcmeRoleDeclaration__Group_2_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__AcmeRoleDeclaration__Group_2_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop136;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleDeclarationAccess().getGroup_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_2__2__Impl"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_2_2__0"
    // InternalAcmeParser.g:9898:1: rule__AcmeRoleDeclaration__Group_2_2__0 : rule__AcmeRoleDeclaration__Group_2_2__0__Impl rule__AcmeRoleDeclaration__Group_2_2__1 ;
    public final void rule__AcmeRoleDeclaration__Group_2_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9902:1: ( rule__AcmeRoleDeclaration__Group_2_2__0__Impl rule__AcmeRoleDeclaration__Group_2_2__1 )
            // InternalAcmeParser.g:9903:2: rule__AcmeRoleDeclaration__Group_2_2__0__Impl rule__AcmeRoleDeclaration__Group_2_2__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeRoleDeclaration__Group_2_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeRoleDeclaration__Group_2_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_2_2__0"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_2_2__0__Impl"
    // InternalAcmeParser.g:9910:1: rule__AcmeRoleDeclaration__Group_2_2__0__Impl : ( Comma ) ;
    public final void rule__AcmeRoleDeclaration__Group_2_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9914:1: ( ( Comma ) )
            // InternalAcmeParser.g:9915:1: ( Comma )
            {
            // InternalAcmeParser.g:9915:1: ( Comma )
            // InternalAcmeParser.g:9916:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleDeclarationAccess().getCommaKeyword_2_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleDeclarationAccess().getCommaKeyword_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_2_2__0__Impl"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_2_2__1"
    // InternalAcmeParser.g:9925:1: rule__AcmeRoleDeclaration__Group_2_2__1 : rule__AcmeRoleDeclaration__Group_2_2__1__Impl ;
    public final void rule__AcmeRoleDeclaration__Group_2_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9929:1: ( rule__AcmeRoleDeclaration__Group_2_2__1__Impl )
            // InternalAcmeParser.g:9930:2: rule__AcmeRoleDeclaration__Group_2_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeRoleDeclaration__Group_2_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_2_2__1"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_2_2__1__Impl"
    // InternalAcmeParser.g:9936:1: rule__AcmeRoleDeclaration__Group_2_2__1__Impl : ( ( rule__AcmeRoleDeclaration__DeclaredAssignment_2_2_1 ) ) ;
    public final void rule__AcmeRoleDeclaration__Group_2_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9940:1: ( ( ( rule__AcmeRoleDeclaration__DeclaredAssignment_2_2_1 ) ) )
            // InternalAcmeParser.g:9941:1: ( ( rule__AcmeRoleDeclaration__DeclaredAssignment_2_2_1 ) )
            {
            // InternalAcmeParser.g:9941:1: ( ( rule__AcmeRoleDeclaration__DeclaredAssignment_2_2_1 ) )
            // InternalAcmeParser.g:9942:2: ( rule__AcmeRoleDeclaration__DeclaredAssignment_2_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleDeclarationAccess().getDeclaredAssignment_2_2_1()); 
            }
            // InternalAcmeParser.g:9943:2: ( rule__AcmeRoleDeclaration__DeclaredAssignment_2_2_1 )
            // InternalAcmeParser.g:9943:3: rule__AcmeRoleDeclaration__DeclaredAssignment_2_2_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeRoleDeclaration__DeclaredAssignment_2_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleDeclarationAccess().getDeclaredAssignment_2_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_2_2__1__Impl"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_3_1__0"
    // InternalAcmeParser.g:9952:1: rule__AcmeRoleDeclaration__Group_3_1__0 : rule__AcmeRoleDeclaration__Group_3_1__0__Impl rule__AcmeRoleDeclaration__Group_3_1__1 ;
    public final void rule__AcmeRoleDeclaration__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9956:1: ( rule__AcmeRoleDeclaration__Group_3_1__0__Impl rule__AcmeRoleDeclaration__Group_3_1__1 )
            // InternalAcmeParser.g:9957:2: rule__AcmeRoleDeclaration__Group_3_1__0__Impl rule__AcmeRoleDeclaration__Group_3_1__1
            {
            pushFollow(FOLLOW_20);
            rule__AcmeRoleDeclaration__Group_3_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeRoleDeclaration__Group_3_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_3_1__0"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_3_1__0__Impl"
    // InternalAcmeParser.g:9964:1: rule__AcmeRoleDeclaration__Group_3_1__0__Impl : ( EqualsSign ) ;
    public final void rule__AcmeRoleDeclaration__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9968:1: ( ( EqualsSign ) )
            // InternalAcmeParser.g:9969:1: ( EqualsSign )
            {
            // InternalAcmeParser.g:9969:1: ( EqualsSign )
            // InternalAcmeParser.g:9970:2: EqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleDeclarationAccess().getEqualsSignKeyword_3_1_0()); 
            }
            match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleDeclarationAccess().getEqualsSignKeyword_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_3_1__0__Impl"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_3_1__1"
    // InternalAcmeParser.g:9979:1: rule__AcmeRoleDeclaration__Group_3_1__1 : rule__AcmeRoleDeclaration__Group_3_1__1__Impl ;
    public final void rule__AcmeRoleDeclaration__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9983:1: ( rule__AcmeRoleDeclaration__Group_3_1__1__Impl )
            // InternalAcmeParser.g:9984:2: rule__AcmeRoleDeclaration__Group_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeRoleDeclaration__Group_3_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_3_1__1"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_3_1__1__Impl"
    // InternalAcmeParser.g:9990:1: rule__AcmeRoleDeclaration__Group_3_1__1__Impl : ( ( rule__AcmeRoleDeclaration__Alternatives_3_1_1 ) ) ;
    public final void rule__AcmeRoleDeclaration__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:9994:1: ( ( ( rule__AcmeRoleDeclaration__Alternatives_3_1_1 ) ) )
            // InternalAcmeParser.g:9995:1: ( ( rule__AcmeRoleDeclaration__Alternatives_3_1_1 ) )
            {
            // InternalAcmeParser.g:9995:1: ( ( rule__AcmeRoleDeclaration__Alternatives_3_1_1 ) )
            // InternalAcmeParser.g:9996:2: ( rule__AcmeRoleDeclaration__Alternatives_3_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleDeclarationAccess().getAlternatives_3_1_1()); 
            }
            // InternalAcmeParser.g:9997:2: ( rule__AcmeRoleDeclaration__Alternatives_3_1_1 )
            // InternalAcmeParser.g:9997:3: rule__AcmeRoleDeclaration__Alternatives_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeRoleDeclaration__Alternatives_3_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleDeclarationAccess().getAlternatives_3_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_3_1__1__Impl"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_3_1_1_0__0"
    // InternalAcmeParser.g:10006:1: rule__AcmeRoleDeclaration__Group_3_1_1_0__0 : rule__AcmeRoleDeclaration__Group_3_1_1_0__0__Impl rule__AcmeRoleDeclaration__Group_3_1_1_0__1 ;
    public final void rule__AcmeRoleDeclaration__Group_3_1_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10010:1: ( rule__AcmeRoleDeclaration__Group_3_1_1_0__0__Impl rule__AcmeRoleDeclaration__Group_3_1_1_0__1 )
            // InternalAcmeParser.g:10011:2: rule__AcmeRoleDeclaration__Group_3_1_1_0__0__Impl rule__AcmeRoleDeclaration__Group_3_1_1_0__1
            {
            pushFollow(FOLLOW_7);
            rule__AcmeRoleDeclaration__Group_3_1_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeRoleDeclaration__Group_3_1_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_3_1_1_0__0"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_3_1_1_0__0__Impl"
    // InternalAcmeParser.g:10018:1: rule__AcmeRoleDeclaration__Group_3_1_1_0__0__Impl : ( ( rule__AcmeRoleDeclaration__BodyAssignment_3_1_1_0_0 ) ) ;
    public final void rule__AcmeRoleDeclaration__Group_3_1_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10022:1: ( ( ( rule__AcmeRoleDeclaration__BodyAssignment_3_1_1_0_0 ) ) )
            // InternalAcmeParser.g:10023:1: ( ( rule__AcmeRoleDeclaration__BodyAssignment_3_1_1_0_0 ) )
            {
            // InternalAcmeParser.g:10023:1: ( ( rule__AcmeRoleDeclaration__BodyAssignment_3_1_1_0_0 ) )
            // InternalAcmeParser.g:10024:2: ( rule__AcmeRoleDeclaration__BodyAssignment_3_1_1_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleDeclarationAccess().getBodyAssignment_3_1_1_0_0()); 
            }
            // InternalAcmeParser.g:10025:2: ( rule__AcmeRoleDeclaration__BodyAssignment_3_1_1_0_0 )
            // InternalAcmeParser.g:10025:3: rule__AcmeRoleDeclaration__BodyAssignment_3_1_1_0_0
            {
            pushFollow(FOLLOW_2);
            rule__AcmeRoleDeclaration__BodyAssignment_3_1_1_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleDeclarationAccess().getBodyAssignment_3_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_3_1_1_0__0__Impl"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_3_1_1_0__1"
    // InternalAcmeParser.g:10033:1: rule__AcmeRoleDeclaration__Group_3_1_1_0__1 : rule__AcmeRoleDeclaration__Group_3_1_1_0__1__Impl ;
    public final void rule__AcmeRoleDeclaration__Group_3_1_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10037:1: ( rule__AcmeRoleDeclaration__Group_3_1_1_0__1__Impl )
            // InternalAcmeParser.g:10038:2: rule__AcmeRoleDeclaration__Group_3_1_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeRoleDeclaration__Group_3_1_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_3_1_1_0__1"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_3_1_1_0__1__Impl"
    // InternalAcmeParser.g:10044:1: rule__AcmeRoleDeclaration__Group_3_1_1_0__1__Impl : ( ( Semicolon )? ) ;
    public final void rule__AcmeRoleDeclaration__Group_3_1_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10048:1: ( ( ( Semicolon )? ) )
            // InternalAcmeParser.g:10049:1: ( ( Semicolon )? )
            {
            // InternalAcmeParser.g:10049:1: ( ( Semicolon )? )
            // InternalAcmeParser.g:10050:2: ( Semicolon )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleDeclarationAccess().getSemicolonKeyword_3_1_1_0_1()); 
            }
            // InternalAcmeParser.g:10051:2: ( Semicolon )?
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==Semicolon) ) {
                alt137=1;
            }
            switch (alt137) {
                case 1 :
                    // InternalAcmeParser.g:10051:3: Semicolon
                    {
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleDeclarationAccess().getSemicolonKeyword_3_1_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_3_1_1_0__1__Impl"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_3_1_1_1__0"
    // InternalAcmeParser.g:10060:1: rule__AcmeRoleDeclaration__Group_3_1_1_1__0 : rule__AcmeRoleDeclaration__Group_3_1_1_1__0__Impl rule__AcmeRoleDeclaration__Group_3_1_1_1__1 ;
    public final void rule__AcmeRoleDeclaration__Group_3_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10064:1: ( rule__AcmeRoleDeclaration__Group_3_1_1_1__0__Impl rule__AcmeRoleDeclaration__Group_3_1_1_1__1 )
            // InternalAcmeParser.g:10065:2: rule__AcmeRoleDeclaration__Group_3_1_1_1__0__Impl rule__AcmeRoleDeclaration__Group_3_1_1_1__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeRoleDeclaration__Group_3_1_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeRoleDeclaration__Group_3_1_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_3_1_1_1__0"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_3_1_1_1__0__Impl"
    // InternalAcmeParser.g:10072:1: rule__AcmeRoleDeclaration__Group_3_1_1_1__0__Impl : ( New ) ;
    public final void rule__AcmeRoleDeclaration__Group_3_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10076:1: ( ( New ) )
            // InternalAcmeParser.g:10077:1: ( New )
            {
            // InternalAcmeParser.g:10077:1: ( New )
            // InternalAcmeParser.g:10078:2: New
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleDeclarationAccess().getNewKeyword_3_1_1_1_0()); 
            }
            match(input,New,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleDeclarationAccess().getNewKeyword_3_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_3_1_1_1__0__Impl"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_3_1_1_1__1"
    // InternalAcmeParser.g:10087:1: rule__AcmeRoleDeclaration__Group_3_1_1_1__1 : rule__AcmeRoleDeclaration__Group_3_1_1_1__1__Impl rule__AcmeRoleDeclaration__Group_3_1_1_1__2 ;
    public final void rule__AcmeRoleDeclaration__Group_3_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10091:1: ( rule__AcmeRoleDeclaration__Group_3_1_1_1__1__Impl rule__AcmeRoleDeclaration__Group_3_1_1_1__2 )
            // InternalAcmeParser.g:10092:2: rule__AcmeRoleDeclaration__Group_3_1_1_1__1__Impl rule__AcmeRoleDeclaration__Group_3_1_1_1__2
            {
            pushFollow(FOLLOW_21);
            rule__AcmeRoleDeclaration__Group_3_1_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeRoleDeclaration__Group_3_1_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_3_1_1_1__1"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_3_1_1_1__1__Impl"
    // InternalAcmeParser.g:10099:1: rule__AcmeRoleDeclaration__Group_3_1_1_1__1__Impl : ( ( rule__AcmeRoleDeclaration__InstantiatedAssignment_3_1_1_1_1 ) ) ;
    public final void rule__AcmeRoleDeclaration__Group_3_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10103:1: ( ( ( rule__AcmeRoleDeclaration__InstantiatedAssignment_3_1_1_1_1 ) ) )
            // InternalAcmeParser.g:10104:1: ( ( rule__AcmeRoleDeclaration__InstantiatedAssignment_3_1_1_1_1 ) )
            {
            // InternalAcmeParser.g:10104:1: ( ( rule__AcmeRoleDeclaration__InstantiatedAssignment_3_1_1_1_1 ) )
            // InternalAcmeParser.g:10105:2: ( rule__AcmeRoleDeclaration__InstantiatedAssignment_3_1_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleDeclarationAccess().getInstantiatedAssignment_3_1_1_1_1()); 
            }
            // InternalAcmeParser.g:10106:2: ( rule__AcmeRoleDeclaration__InstantiatedAssignment_3_1_1_1_1 )
            // InternalAcmeParser.g:10106:3: rule__AcmeRoleDeclaration__InstantiatedAssignment_3_1_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeRoleDeclaration__InstantiatedAssignment_3_1_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleDeclarationAccess().getInstantiatedAssignment_3_1_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_3_1_1_1__1__Impl"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_3_1_1_1__2"
    // InternalAcmeParser.g:10114:1: rule__AcmeRoleDeclaration__Group_3_1_1_1__2 : rule__AcmeRoleDeclaration__Group_3_1_1_1__2__Impl rule__AcmeRoleDeclaration__Group_3_1_1_1__3 ;
    public final void rule__AcmeRoleDeclaration__Group_3_1_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10118:1: ( rule__AcmeRoleDeclaration__Group_3_1_1_1__2__Impl rule__AcmeRoleDeclaration__Group_3_1_1_1__3 )
            // InternalAcmeParser.g:10119:2: rule__AcmeRoleDeclaration__Group_3_1_1_1__2__Impl rule__AcmeRoleDeclaration__Group_3_1_1_1__3
            {
            pushFollow(FOLLOW_21);
            rule__AcmeRoleDeclaration__Group_3_1_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeRoleDeclaration__Group_3_1_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_3_1_1_1__2"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_3_1_1_1__2__Impl"
    // InternalAcmeParser.g:10126:1: rule__AcmeRoleDeclaration__Group_3_1_1_1__2__Impl : ( ( rule__AcmeRoleDeclaration__Group_3_1_1_1_2__0 )* ) ;
    public final void rule__AcmeRoleDeclaration__Group_3_1_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10130:1: ( ( ( rule__AcmeRoleDeclaration__Group_3_1_1_1_2__0 )* ) )
            // InternalAcmeParser.g:10131:1: ( ( rule__AcmeRoleDeclaration__Group_3_1_1_1_2__0 )* )
            {
            // InternalAcmeParser.g:10131:1: ( ( rule__AcmeRoleDeclaration__Group_3_1_1_1_2__0 )* )
            // InternalAcmeParser.g:10132:2: ( rule__AcmeRoleDeclaration__Group_3_1_1_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleDeclarationAccess().getGroup_3_1_1_1_2()); 
            }
            // InternalAcmeParser.g:10133:2: ( rule__AcmeRoleDeclaration__Group_3_1_1_1_2__0 )*
            loop138:
            do {
                int alt138=2;
                int LA138_0 = input.LA(1);

                if ( (LA138_0==Comma) ) {
                    alt138=1;
                }


                switch (alt138) {
            	case 1 :
            	    // InternalAcmeParser.g:10133:3: rule__AcmeRoleDeclaration__Group_3_1_1_1_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__AcmeRoleDeclaration__Group_3_1_1_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop138;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleDeclarationAccess().getGroup_3_1_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_3_1_1_1__2__Impl"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_3_1_1_1__3"
    // InternalAcmeParser.g:10141:1: rule__AcmeRoleDeclaration__Group_3_1_1_1__3 : rule__AcmeRoleDeclaration__Group_3_1_1_1__3__Impl ;
    public final void rule__AcmeRoleDeclaration__Group_3_1_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10145:1: ( rule__AcmeRoleDeclaration__Group_3_1_1_1__3__Impl )
            // InternalAcmeParser.g:10146:2: rule__AcmeRoleDeclaration__Group_3_1_1_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeRoleDeclaration__Group_3_1_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_3_1_1_1__3"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_3_1_1_1__3__Impl"
    // InternalAcmeParser.g:10152:1: rule__AcmeRoleDeclaration__Group_3_1_1_1__3__Impl : ( ( rule__AcmeRoleDeclaration__Alternatives_3_1_1_1_3 ) ) ;
    public final void rule__AcmeRoleDeclaration__Group_3_1_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10156:1: ( ( ( rule__AcmeRoleDeclaration__Alternatives_3_1_1_1_3 ) ) )
            // InternalAcmeParser.g:10157:1: ( ( rule__AcmeRoleDeclaration__Alternatives_3_1_1_1_3 ) )
            {
            // InternalAcmeParser.g:10157:1: ( ( rule__AcmeRoleDeclaration__Alternatives_3_1_1_1_3 ) )
            // InternalAcmeParser.g:10158:2: ( rule__AcmeRoleDeclaration__Alternatives_3_1_1_1_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleDeclarationAccess().getAlternatives_3_1_1_1_3()); 
            }
            // InternalAcmeParser.g:10159:2: ( rule__AcmeRoleDeclaration__Alternatives_3_1_1_1_3 )
            // InternalAcmeParser.g:10159:3: rule__AcmeRoleDeclaration__Alternatives_3_1_1_1_3
            {
            pushFollow(FOLLOW_2);
            rule__AcmeRoleDeclaration__Alternatives_3_1_1_1_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleDeclarationAccess().getAlternatives_3_1_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_3_1_1_1__3__Impl"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_3_1_1_1_2__0"
    // InternalAcmeParser.g:10168:1: rule__AcmeRoleDeclaration__Group_3_1_1_1_2__0 : rule__AcmeRoleDeclaration__Group_3_1_1_1_2__0__Impl rule__AcmeRoleDeclaration__Group_3_1_1_1_2__1 ;
    public final void rule__AcmeRoleDeclaration__Group_3_1_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10172:1: ( rule__AcmeRoleDeclaration__Group_3_1_1_1_2__0__Impl rule__AcmeRoleDeclaration__Group_3_1_1_1_2__1 )
            // InternalAcmeParser.g:10173:2: rule__AcmeRoleDeclaration__Group_3_1_1_1_2__0__Impl rule__AcmeRoleDeclaration__Group_3_1_1_1_2__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeRoleDeclaration__Group_3_1_1_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeRoleDeclaration__Group_3_1_1_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_3_1_1_1_2__0"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_3_1_1_1_2__0__Impl"
    // InternalAcmeParser.g:10180:1: rule__AcmeRoleDeclaration__Group_3_1_1_1_2__0__Impl : ( Comma ) ;
    public final void rule__AcmeRoleDeclaration__Group_3_1_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10184:1: ( ( Comma ) )
            // InternalAcmeParser.g:10185:1: ( Comma )
            {
            // InternalAcmeParser.g:10185:1: ( Comma )
            // InternalAcmeParser.g:10186:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleDeclarationAccess().getCommaKeyword_3_1_1_1_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleDeclarationAccess().getCommaKeyword_3_1_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_3_1_1_1_2__0__Impl"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_3_1_1_1_2__1"
    // InternalAcmeParser.g:10195:1: rule__AcmeRoleDeclaration__Group_3_1_1_1_2__1 : rule__AcmeRoleDeclaration__Group_3_1_1_1_2__1__Impl ;
    public final void rule__AcmeRoleDeclaration__Group_3_1_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10199:1: ( rule__AcmeRoleDeclaration__Group_3_1_1_1_2__1__Impl )
            // InternalAcmeParser.g:10200:2: rule__AcmeRoleDeclaration__Group_3_1_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeRoleDeclaration__Group_3_1_1_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_3_1_1_1_2__1"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_3_1_1_1_2__1__Impl"
    // InternalAcmeParser.g:10206:1: rule__AcmeRoleDeclaration__Group_3_1_1_1_2__1__Impl : ( ( rule__AcmeRoleDeclaration__InstantiatedAssignment_3_1_1_1_2_1 ) ) ;
    public final void rule__AcmeRoleDeclaration__Group_3_1_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10210:1: ( ( ( rule__AcmeRoleDeclaration__InstantiatedAssignment_3_1_1_1_2_1 ) ) )
            // InternalAcmeParser.g:10211:1: ( ( rule__AcmeRoleDeclaration__InstantiatedAssignment_3_1_1_1_2_1 ) )
            {
            // InternalAcmeParser.g:10211:1: ( ( rule__AcmeRoleDeclaration__InstantiatedAssignment_3_1_1_1_2_1 ) )
            // InternalAcmeParser.g:10212:2: ( rule__AcmeRoleDeclaration__InstantiatedAssignment_3_1_1_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleDeclarationAccess().getInstantiatedAssignment_3_1_1_1_2_1()); 
            }
            // InternalAcmeParser.g:10213:2: ( rule__AcmeRoleDeclaration__InstantiatedAssignment_3_1_1_1_2_1 )
            // InternalAcmeParser.g:10213:3: rule__AcmeRoleDeclaration__InstantiatedAssignment_3_1_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeRoleDeclaration__InstantiatedAssignment_3_1_1_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleDeclarationAccess().getInstantiatedAssignment_3_1_1_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_3_1_1_1_2__1__Impl"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__0"
    // InternalAcmeParser.g:10222:1: rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__0 : rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__0__Impl rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__1 ;
    public final void rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10226:1: ( rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__0__Impl rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__1 )
            // InternalAcmeParser.g:10227:2: rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__0__Impl rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__1
            {
            pushFollow(FOLLOW_22);
            rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__0"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__0__Impl"
    // InternalAcmeParser.g:10234:1: rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__0__Impl : ( Extended ) ;
    public final void rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10238:1: ( ( Extended ) )
            // InternalAcmeParser.g:10239:1: ( Extended )
            {
            // InternalAcmeParser.g:10239:1: ( Extended )
            // InternalAcmeParser.g:10240:2: Extended
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleDeclarationAccess().getExtendedKeyword_3_1_1_1_3_1_0()); 
            }
            match(input,Extended,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleDeclarationAccess().getExtendedKeyword_3_1_1_1_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__0__Impl"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__1"
    // InternalAcmeParser.g:10249:1: rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__1 : rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__1__Impl rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__2 ;
    public final void rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10253:1: ( rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__1__Impl rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__2 )
            // InternalAcmeParser.g:10254:2: rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__1__Impl rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__2
            {
            pushFollow(FOLLOW_13);
            rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__1"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__1__Impl"
    // InternalAcmeParser.g:10261:1: rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__1__Impl : ( With ) ;
    public final void rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10265:1: ( ( With ) )
            // InternalAcmeParser.g:10266:1: ( With )
            {
            // InternalAcmeParser.g:10266:1: ( With )
            // InternalAcmeParser.g:10267:2: With
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleDeclarationAccess().getWithKeyword_3_1_1_1_3_1_1()); 
            }
            match(input,With,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleDeclarationAccess().getWithKeyword_3_1_1_1_3_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__1__Impl"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__2"
    // InternalAcmeParser.g:10276:1: rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__2 : rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__2__Impl rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__3 ;
    public final void rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10280:1: ( rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__2__Impl rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__3 )
            // InternalAcmeParser.g:10281:2: rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__2__Impl rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__3
            {
            pushFollow(FOLLOW_7);
            rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__2"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__2__Impl"
    // InternalAcmeParser.g:10288:1: rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__2__Impl : ( ( rule__AcmeRoleDeclaration__BodyAssignment_3_1_1_1_3_1_2 ) ) ;
    public final void rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10292:1: ( ( ( rule__AcmeRoleDeclaration__BodyAssignment_3_1_1_1_3_1_2 ) ) )
            // InternalAcmeParser.g:10293:1: ( ( rule__AcmeRoleDeclaration__BodyAssignment_3_1_1_1_3_1_2 ) )
            {
            // InternalAcmeParser.g:10293:1: ( ( rule__AcmeRoleDeclaration__BodyAssignment_3_1_1_1_3_1_2 ) )
            // InternalAcmeParser.g:10294:2: ( rule__AcmeRoleDeclaration__BodyAssignment_3_1_1_1_3_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleDeclarationAccess().getBodyAssignment_3_1_1_1_3_1_2()); 
            }
            // InternalAcmeParser.g:10295:2: ( rule__AcmeRoleDeclaration__BodyAssignment_3_1_1_1_3_1_2 )
            // InternalAcmeParser.g:10295:3: rule__AcmeRoleDeclaration__BodyAssignment_3_1_1_1_3_1_2
            {
            pushFollow(FOLLOW_2);
            rule__AcmeRoleDeclaration__BodyAssignment_3_1_1_1_3_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleDeclarationAccess().getBodyAssignment_3_1_1_1_3_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__2__Impl"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__3"
    // InternalAcmeParser.g:10303:1: rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__3 : rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__3__Impl ;
    public final void rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10307:1: ( rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__3__Impl )
            // InternalAcmeParser.g:10308:2: rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__3"


    // $ANTLR start "rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__3__Impl"
    // InternalAcmeParser.g:10314:1: rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__3__Impl : ( ( Semicolon )? ) ;
    public final void rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10318:1: ( ( ( Semicolon )? ) )
            // InternalAcmeParser.g:10319:1: ( ( Semicolon )? )
            {
            // InternalAcmeParser.g:10319:1: ( ( Semicolon )? )
            // InternalAcmeParser.g:10320:2: ( Semicolon )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleDeclarationAccess().getSemicolonKeyword_3_1_1_1_3_1_3()); 
            }
            // InternalAcmeParser.g:10321:2: ( Semicolon )?
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==Semicolon) ) {
                alt139=1;
            }
            switch (alt139) {
                case 1 :
                    // InternalAcmeParser.g:10321:3: Semicolon
                    {
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleDeclarationAccess().getSemicolonKeyword_3_1_1_1_3_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__Group_3_1_1_1_3_1__3__Impl"


    // $ANTLR start "rule__AcmeRoleBody__Group__0"
    // InternalAcmeParser.g:10330:1: rule__AcmeRoleBody__Group__0 : rule__AcmeRoleBody__Group__0__Impl rule__AcmeRoleBody__Group__1 ;
    public final void rule__AcmeRoleBody__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10334:1: ( rule__AcmeRoleBody__Group__0__Impl rule__AcmeRoleBody__Group__1 )
            // InternalAcmeParser.g:10335:2: rule__AcmeRoleBody__Group__0__Impl rule__AcmeRoleBody__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__AcmeRoleBody__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeRoleBody__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleBody__Group__0"


    // $ANTLR start "rule__AcmeRoleBody__Group__0__Impl"
    // InternalAcmeParser.g:10342:1: rule__AcmeRoleBody__Group__0__Impl : ( () ) ;
    public final void rule__AcmeRoleBody__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10346:1: ( ( () ) )
            // InternalAcmeParser.g:10347:1: ( () )
            {
            // InternalAcmeParser.g:10347:1: ( () )
            // InternalAcmeParser.g:10348:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleBodyAccess().getAcmeRoleBodyAction_0()); 
            }
            // InternalAcmeParser.g:10349:2: ()
            // InternalAcmeParser.g:10349:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleBodyAccess().getAcmeRoleBodyAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleBody__Group__0__Impl"


    // $ANTLR start "rule__AcmeRoleBody__Group__1"
    // InternalAcmeParser.g:10357:1: rule__AcmeRoleBody__Group__1 : rule__AcmeRoleBody__Group__1__Impl rule__AcmeRoleBody__Group__2 ;
    public final void rule__AcmeRoleBody__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10361:1: ( rule__AcmeRoleBody__Group__1__Impl rule__AcmeRoleBody__Group__2 )
            // InternalAcmeParser.g:10362:2: rule__AcmeRoleBody__Group__1__Impl rule__AcmeRoleBody__Group__2
            {
            pushFollow(FOLLOW_36);
            rule__AcmeRoleBody__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeRoleBody__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleBody__Group__1"


    // $ANTLR start "rule__AcmeRoleBody__Group__1__Impl"
    // InternalAcmeParser.g:10369:1: rule__AcmeRoleBody__Group__1__Impl : ( LeftCurlyBracket ) ;
    public final void rule__AcmeRoleBody__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10373:1: ( ( LeftCurlyBracket ) )
            // InternalAcmeParser.g:10374:1: ( LeftCurlyBracket )
            {
            // InternalAcmeParser.g:10374:1: ( LeftCurlyBracket )
            // InternalAcmeParser.g:10375:2: LeftCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleBodyAccess().getLeftCurlyBracketKeyword_1()); 
            }
            match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleBodyAccess().getLeftCurlyBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleBody__Group__1__Impl"


    // $ANTLR start "rule__AcmeRoleBody__Group__2"
    // InternalAcmeParser.g:10384:1: rule__AcmeRoleBody__Group__2 : rule__AcmeRoleBody__Group__2__Impl rule__AcmeRoleBody__Group__3 ;
    public final void rule__AcmeRoleBody__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10388:1: ( rule__AcmeRoleBody__Group__2__Impl rule__AcmeRoleBody__Group__3 )
            // InternalAcmeParser.g:10389:2: rule__AcmeRoleBody__Group__2__Impl rule__AcmeRoleBody__Group__3
            {
            pushFollow(FOLLOW_36);
            rule__AcmeRoleBody__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeRoleBody__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleBody__Group__2"


    // $ANTLR start "rule__AcmeRoleBody__Group__2__Impl"
    // InternalAcmeParser.g:10396:1: rule__AcmeRoleBody__Group__2__Impl : ( ( rule__AcmeRoleBody__Alternatives_2 )* ) ;
    public final void rule__AcmeRoleBody__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10400:1: ( ( ( rule__AcmeRoleBody__Alternatives_2 )* ) )
            // InternalAcmeParser.g:10401:1: ( ( rule__AcmeRoleBody__Alternatives_2 )* )
            {
            // InternalAcmeParser.g:10401:1: ( ( rule__AcmeRoleBody__Alternatives_2 )* )
            // InternalAcmeParser.g:10402:2: ( rule__AcmeRoleBody__Alternatives_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleBodyAccess().getAlternatives_2()); 
            }
            // InternalAcmeParser.g:10403:2: ( rule__AcmeRoleBody__Alternatives_2 )*
            loop140:
            do {
                int alt140=2;
                int LA140_0 = input.LA(1);

                if ( (LA140_0==Representation||(LA140_0>=Hueristic && LA140_0<=Invariant)||LA140_0==Property||LA140_0==Rule) ) {
                    alt140=1;
                }


                switch (alt140) {
            	case 1 :
            	    // InternalAcmeParser.g:10403:3: rule__AcmeRoleBody__Alternatives_2
            	    {
            	    pushFollow(FOLLOW_37);
            	    rule__AcmeRoleBody__Alternatives_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop140;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleBodyAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleBody__Group__2__Impl"


    // $ANTLR start "rule__AcmeRoleBody__Group__3"
    // InternalAcmeParser.g:10411:1: rule__AcmeRoleBody__Group__3 : rule__AcmeRoleBody__Group__3__Impl ;
    public final void rule__AcmeRoleBody__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10415:1: ( rule__AcmeRoleBody__Group__3__Impl )
            // InternalAcmeParser.g:10416:2: rule__AcmeRoleBody__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeRoleBody__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleBody__Group__3"


    // $ANTLR start "rule__AcmeRoleBody__Group__3__Impl"
    // InternalAcmeParser.g:10422:1: rule__AcmeRoleBody__Group__3__Impl : ( RightCurlyBracket ) ;
    public final void rule__AcmeRoleBody__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10426:1: ( ( RightCurlyBracket ) )
            // InternalAcmeParser.g:10427:1: ( RightCurlyBracket )
            {
            // InternalAcmeParser.g:10427:1: ( RightCurlyBracket )
            // InternalAcmeParser.g:10428:2: RightCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleBodyAccess().getRightCurlyBracketKeyword_3()); 
            }
            match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleBodyAccess().getRightCurlyBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleBody__Group__3__Impl"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Group__0"
    // InternalAcmeParser.g:10438:1: rule__AcmeComponentTypeDeclaration__Group__0 : rule__AcmeComponentTypeDeclaration__Group__0__Impl rule__AcmeComponentTypeDeclaration__Group__1 ;
    public final void rule__AcmeComponentTypeDeclaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10442:1: ( rule__AcmeComponentTypeDeclaration__Group__0__Impl rule__AcmeComponentTypeDeclaration__Group__1 )
            // InternalAcmeParser.g:10443:2: rule__AcmeComponentTypeDeclaration__Group__0__Impl rule__AcmeComponentTypeDeclaration__Group__1
            {
            pushFollow(FOLLOW_39);
            rule__AcmeComponentTypeDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeComponentTypeDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Group__0"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Group__0__Impl"
    // InternalAcmeParser.g:10450:1: rule__AcmeComponentTypeDeclaration__Group__0__Impl : ( ( rule__AcmeComponentTypeDeclaration__VisibilityAssignment_0 )? ) ;
    public final void rule__AcmeComponentTypeDeclaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10454:1: ( ( ( rule__AcmeComponentTypeDeclaration__VisibilityAssignment_0 )? ) )
            // InternalAcmeParser.g:10455:1: ( ( rule__AcmeComponentTypeDeclaration__VisibilityAssignment_0 )? )
            {
            // InternalAcmeParser.g:10455:1: ( ( rule__AcmeComponentTypeDeclaration__VisibilityAssignment_0 )? )
            // InternalAcmeParser.g:10456:2: ( rule__AcmeComponentTypeDeclaration__VisibilityAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentTypeDeclarationAccess().getVisibilityAssignment_0()); 
            }
            // InternalAcmeParser.g:10457:2: ( rule__AcmeComponentTypeDeclaration__VisibilityAssignment_0 )?
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( (LA141_0==Private||LA141_0==Public) ) {
                alt141=1;
            }
            switch (alt141) {
                case 1 :
                    // InternalAcmeParser.g:10457:3: rule__AcmeComponentTypeDeclaration__VisibilityAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeComponentTypeDeclaration__VisibilityAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentTypeDeclarationAccess().getVisibilityAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Group__0__Impl"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Group__1"
    // InternalAcmeParser.g:10465:1: rule__AcmeComponentTypeDeclaration__Group__1 : rule__AcmeComponentTypeDeclaration__Group__1__Impl rule__AcmeComponentTypeDeclaration__Group__2 ;
    public final void rule__AcmeComponentTypeDeclaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10469:1: ( rule__AcmeComponentTypeDeclaration__Group__1__Impl rule__AcmeComponentTypeDeclaration__Group__2 )
            // InternalAcmeParser.g:10470:2: rule__AcmeComponentTypeDeclaration__Group__1__Impl rule__AcmeComponentTypeDeclaration__Group__2
            {
            pushFollow(FOLLOW_39);
            rule__AcmeComponentTypeDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeComponentTypeDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Group__1"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Group__1__Impl"
    // InternalAcmeParser.g:10477:1: rule__AcmeComponentTypeDeclaration__Group__1__Impl : ( ( rule__AcmeComponentTypeDeclaration__ExtensibilityAssignment_1 )? ) ;
    public final void rule__AcmeComponentTypeDeclaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10481:1: ( ( ( rule__AcmeComponentTypeDeclaration__ExtensibilityAssignment_1 )? ) )
            // InternalAcmeParser.g:10482:1: ( ( rule__AcmeComponentTypeDeclaration__ExtensibilityAssignment_1 )? )
            {
            // InternalAcmeParser.g:10482:1: ( ( rule__AcmeComponentTypeDeclaration__ExtensibilityAssignment_1 )? )
            // InternalAcmeParser.g:10483:2: ( rule__AcmeComponentTypeDeclaration__ExtensibilityAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentTypeDeclarationAccess().getExtensibilityAssignment_1()); 
            }
            // InternalAcmeParser.g:10484:2: ( rule__AcmeComponentTypeDeclaration__ExtensibilityAssignment_1 )?
            int alt142=2;
            int LA142_0 = input.LA(1);

            if ( (LA142_0==Abstract||LA142_0==Final) ) {
                alt142=1;
            }
            switch (alt142) {
                case 1 :
                    // InternalAcmeParser.g:10484:3: rule__AcmeComponentTypeDeclaration__ExtensibilityAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeComponentTypeDeclaration__ExtensibilityAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentTypeDeclarationAccess().getExtensibilityAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Group__1__Impl"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Group__2"
    // InternalAcmeParser.g:10492:1: rule__AcmeComponentTypeDeclaration__Group__2 : rule__AcmeComponentTypeDeclaration__Group__2__Impl rule__AcmeComponentTypeDeclaration__Group__3 ;
    public final void rule__AcmeComponentTypeDeclaration__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10496:1: ( rule__AcmeComponentTypeDeclaration__Group__2__Impl rule__AcmeComponentTypeDeclaration__Group__3 )
            // InternalAcmeParser.g:10497:2: rule__AcmeComponentTypeDeclaration__Group__2__Impl rule__AcmeComponentTypeDeclaration__Group__3
            {
            pushFollow(FOLLOW_24);
            rule__AcmeComponentTypeDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeComponentTypeDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Group__2"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Group__2__Impl"
    // InternalAcmeParser.g:10504:1: rule__AcmeComponentTypeDeclaration__Group__2__Impl : ( ( Component ) ) ;
    public final void rule__AcmeComponentTypeDeclaration__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10508:1: ( ( ( Component ) ) )
            // InternalAcmeParser.g:10509:1: ( ( Component ) )
            {
            // InternalAcmeParser.g:10509:1: ( ( Component ) )
            // InternalAcmeParser.g:10510:2: ( Component )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentTypeDeclarationAccess().getComponentKeyword_2()); 
            }
            // InternalAcmeParser.g:10511:2: ( Component )
            // InternalAcmeParser.g:10511:3: Component
            {
            match(input,Component,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentTypeDeclarationAccess().getComponentKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Group__2__Impl"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Group__3"
    // InternalAcmeParser.g:10519:1: rule__AcmeComponentTypeDeclaration__Group__3 : rule__AcmeComponentTypeDeclaration__Group__3__Impl rule__AcmeComponentTypeDeclaration__Group__4 ;
    public final void rule__AcmeComponentTypeDeclaration__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10523:1: ( rule__AcmeComponentTypeDeclaration__Group__3__Impl rule__AcmeComponentTypeDeclaration__Group__4 )
            // InternalAcmeParser.g:10524:2: rule__AcmeComponentTypeDeclaration__Group__3__Impl rule__AcmeComponentTypeDeclaration__Group__4
            {
            pushFollow(FOLLOW_11);
            rule__AcmeComponentTypeDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeComponentTypeDeclaration__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Group__3"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Group__3__Impl"
    // InternalAcmeParser.g:10531:1: rule__AcmeComponentTypeDeclaration__Group__3__Impl : ( Type ) ;
    public final void rule__AcmeComponentTypeDeclaration__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10535:1: ( ( Type ) )
            // InternalAcmeParser.g:10536:1: ( Type )
            {
            // InternalAcmeParser.g:10536:1: ( Type )
            // InternalAcmeParser.g:10537:2: Type
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentTypeDeclarationAccess().getTypeKeyword_3()); 
            }
            match(input,Type,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentTypeDeclarationAccess().getTypeKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Group__3__Impl"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Group__4"
    // InternalAcmeParser.g:10546:1: rule__AcmeComponentTypeDeclaration__Group__4 : rule__AcmeComponentTypeDeclaration__Group__4__Impl rule__AcmeComponentTypeDeclaration__Group__5 ;
    public final void rule__AcmeComponentTypeDeclaration__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10550:1: ( rule__AcmeComponentTypeDeclaration__Group__4__Impl rule__AcmeComponentTypeDeclaration__Group__5 )
            // InternalAcmeParser.g:10551:2: rule__AcmeComponentTypeDeclaration__Group__4__Impl rule__AcmeComponentTypeDeclaration__Group__5
            {
            pushFollow(FOLLOW_12);
            rule__AcmeComponentTypeDeclaration__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeComponentTypeDeclaration__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Group__4"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Group__4__Impl"
    // InternalAcmeParser.g:10558:1: rule__AcmeComponentTypeDeclaration__Group__4__Impl : ( ( rule__AcmeComponentTypeDeclaration__NameAssignment_4 ) ) ;
    public final void rule__AcmeComponentTypeDeclaration__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10562:1: ( ( ( rule__AcmeComponentTypeDeclaration__NameAssignment_4 ) ) )
            // InternalAcmeParser.g:10563:1: ( ( rule__AcmeComponentTypeDeclaration__NameAssignment_4 ) )
            {
            // InternalAcmeParser.g:10563:1: ( ( rule__AcmeComponentTypeDeclaration__NameAssignment_4 ) )
            // InternalAcmeParser.g:10564:2: ( rule__AcmeComponentTypeDeclaration__NameAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentTypeDeclarationAccess().getNameAssignment_4()); 
            }
            // InternalAcmeParser.g:10565:2: ( rule__AcmeComponentTypeDeclaration__NameAssignment_4 )
            // InternalAcmeParser.g:10565:3: rule__AcmeComponentTypeDeclaration__NameAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__AcmeComponentTypeDeclaration__NameAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentTypeDeclarationAccess().getNameAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Group__4__Impl"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Group__5"
    // InternalAcmeParser.g:10573:1: rule__AcmeComponentTypeDeclaration__Group__5 : rule__AcmeComponentTypeDeclaration__Group__5__Impl ;
    public final void rule__AcmeComponentTypeDeclaration__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10577:1: ( rule__AcmeComponentTypeDeclaration__Group__5__Impl )
            // InternalAcmeParser.g:10578:2: rule__AcmeComponentTypeDeclaration__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeComponentTypeDeclaration__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Group__5"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Group__5__Impl"
    // InternalAcmeParser.g:10584:1: rule__AcmeComponentTypeDeclaration__Group__5__Impl : ( ( rule__AcmeComponentTypeDeclaration__Alternatives_5 ) ) ;
    public final void rule__AcmeComponentTypeDeclaration__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10588:1: ( ( ( rule__AcmeComponentTypeDeclaration__Alternatives_5 ) ) )
            // InternalAcmeParser.g:10589:1: ( ( rule__AcmeComponentTypeDeclaration__Alternatives_5 ) )
            {
            // InternalAcmeParser.g:10589:1: ( ( rule__AcmeComponentTypeDeclaration__Alternatives_5 ) )
            // InternalAcmeParser.g:10590:2: ( rule__AcmeComponentTypeDeclaration__Alternatives_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentTypeDeclarationAccess().getAlternatives_5()); 
            }
            // InternalAcmeParser.g:10591:2: ( rule__AcmeComponentTypeDeclaration__Alternatives_5 )
            // InternalAcmeParser.g:10591:3: rule__AcmeComponentTypeDeclaration__Alternatives_5
            {
            pushFollow(FOLLOW_2);
            rule__AcmeComponentTypeDeclaration__Alternatives_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentTypeDeclarationAccess().getAlternatives_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Group__5__Impl"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Group_5_1_0__0"
    // InternalAcmeParser.g:10600:1: rule__AcmeComponentTypeDeclaration__Group_5_1_0__0 : rule__AcmeComponentTypeDeclaration__Group_5_1_0__0__Impl rule__AcmeComponentTypeDeclaration__Group_5_1_0__1 ;
    public final void rule__AcmeComponentTypeDeclaration__Group_5_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10604:1: ( rule__AcmeComponentTypeDeclaration__Group_5_1_0__0__Impl rule__AcmeComponentTypeDeclaration__Group_5_1_0__1 )
            // InternalAcmeParser.g:10605:2: rule__AcmeComponentTypeDeclaration__Group_5_1_0__0__Impl rule__AcmeComponentTypeDeclaration__Group_5_1_0__1
            {
            pushFollow(FOLLOW_13);
            rule__AcmeComponentTypeDeclaration__Group_5_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeComponentTypeDeclaration__Group_5_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Group_5_1_0__0"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Group_5_1_0__0__Impl"
    // InternalAcmeParser.g:10612:1: rule__AcmeComponentTypeDeclaration__Group_5_1_0__0__Impl : ( EqualsSign ) ;
    public final void rule__AcmeComponentTypeDeclaration__Group_5_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10616:1: ( ( EqualsSign ) )
            // InternalAcmeParser.g:10617:1: ( EqualsSign )
            {
            // InternalAcmeParser.g:10617:1: ( EqualsSign )
            // InternalAcmeParser.g:10618:2: EqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentTypeDeclarationAccess().getEqualsSignKeyword_5_1_0_0()); 
            }
            match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentTypeDeclarationAccess().getEqualsSignKeyword_5_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Group_5_1_0__0__Impl"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Group_5_1_0__1"
    // InternalAcmeParser.g:10627:1: rule__AcmeComponentTypeDeclaration__Group_5_1_0__1 : rule__AcmeComponentTypeDeclaration__Group_5_1_0__1__Impl ;
    public final void rule__AcmeComponentTypeDeclaration__Group_5_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10631:1: ( rule__AcmeComponentTypeDeclaration__Group_5_1_0__1__Impl )
            // InternalAcmeParser.g:10632:2: rule__AcmeComponentTypeDeclaration__Group_5_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeComponentTypeDeclaration__Group_5_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Group_5_1_0__1"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Group_5_1_0__1__Impl"
    // InternalAcmeParser.g:10638:1: rule__AcmeComponentTypeDeclaration__Group_5_1_0__1__Impl : ( ( rule__AcmeComponentTypeDeclaration__BodyAssignment_5_1_0_1 ) ) ;
    public final void rule__AcmeComponentTypeDeclaration__Group_5_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10642:1: ( ( ( rule__AcmeComponentTypeDeclaration__BodyAssignment_5_1_0_1 ) ) )
            // InternalAcmeParser.g:10643:1: ( ( rule__AcmeComponentTypeDeclaration__BodyAssignment_5_1_0_1 ) )
            {
            // InternalAcmeParser.g:10643:1: ( ( rule__AcmeComponentTypeDeclaration__BodyAssignment_5_1_0_1 ) )
            // InternalAcmeParser.g:10644:2: ( rule__AcmeComponentTypeDeclaration__BodyAssignment_5_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentTypeDeclarationAccess().getBodyAssignment_5_1_0_1()); 
            }
            // InternalAcmeParser.g:10645:2: ( rule__AcmeComponentTypeDeclaration__BodyAssignment_5_1_0_1 )
            // InternalAcmeParser.g:10645:3: rule__AcmeComponentTypeDeclaration__BodyAssignment_5_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeComponentTypeDeclaration__BodyAssignment_5_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentTypeDeclarationAccess().getBodyAssignment_5_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Group_5_1_0__1__Impl"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Group_5_1_1__0"
    // InternalAcmeParser.g:10654:1: rule__AcmeComponentTypeDeclaration__Group_5_1_1__0 : rule__AcmeComponentTypeDeclaration__Group_5_1_1__0__Impl rule__AcmeComponentTypeDeclaration__Group_5_1_1__1 ;
    public final void rule__AcmeComponentTypeDeclaration__Group_5_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10658:1: ( rule__AcmeComponentTypeDeclaration__Group_5_1_1__0__Impl rule__AcmeComponentTypeDeclaration__Group_5_1_1__1 )
            // InternalAcmeParser.g:10659:2: rule__AcmeComponentTypeDeclaration__Group_5_1_1__0__Impl rule__AcmeComponentTypeDeclaration__Group_5_1_1__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeComponentTypeDeclaration__Group_5_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeComponentTypeDeclaration__Group_5_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Group_5_1_1__0"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Group_5_1_1__0__Impl"
    // InternalAcmeParser.g:10666:1: rule__AcmeComponentTypeDeclaration__Group_5_1_1__0__Impl : ( Extends ) ;
    public final void rule__AcmeComponentTypeDeclaration__Group_5_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10670:1: ( ( Extends ) )
            // InternalAcmeParser.g:10671:1: ( Extends )
            {
            // InternalAcmeParser.g:10671:1: ( Extends )
            // InternalAcmeParser.g:10672:2: Extends
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentTypeDeclarationAccess().getExtendsKeyword_5_1_1_0()); 
            }
            match(input,Extends,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentTypeDeclarationAccess().getExtendsKeyword_5_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Group_5_1_1__0__Impl"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Group_5_1_1__1"
    // InternalAcmeParser.g:10681:1: rule__AcmeComponentTypeDeclaration__Group_5_1_1__1 : rule__AcmeComponentTypeDeclaration__Group_5_1_1__1__Impl rule__AcmeComponentTypeDeclaration__Group_5_1_1__2 ;
    public final void rule__AcmeComponentTypeDeclaration__Group_5_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10685:1: ( rule__AcmeComponentTypeDeclaration__Group_5_1_1__1__Impl rule__AcmeComponentTypeDeclaration__Group_5_1_1__2 )
            // InternalAcmeParser.g:10686:2: rule__AcmeComponentTypeDeclaration__Group_5_1_1__1__Impl rule__AcmeComponentTypeDeclaration__Group_5_1_1__2
            {
            pushFollow(FOLLOW_25);
            rule__AcmeComponentTypeDeclaration__Group_5_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeComponentTypeDeclaration__Group_5_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Group_5_1_1__1"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Group_5_1_1__1__Impl"
    // InternalAcmeParser.g:10693:1: rule__AcmeComponentTypeDeclaration__Group_5_1_1__1__Impl : ( ( rule__AcmeComponentTypeDeclaration__RefsAssignment_5_1_1_1 ) ) ;
    public final void rule__AcmeComponentTypeDeclaration__Group_5_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10697:1: ( ( ( rule__AcmeComponentTypeDeclaration__RefsAssignment_5_1_1_1 ) ) )
            // InternalAcmeParser.g:10698:1: ( ( rule__AcmeComponentTypeDeclaration__RefsAssignment_5_1_1_1 ) )
            {
            // InternalAcmeParser.g:10698:1: ( ( rule__AcmeComponentTypeDeclaration__RefsAssignment_5_1_1_1 ) )
            // InternalAcmeParser.g:10699:2: ( rule__AcmeComponentTypeDeclaration__RefsAssignment_5_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentTypeDeclarationAccess().getRefsAssignment_5_1_1_1()); 
            }
            // InternalAcmeParser.g:10700:2: ( rule__AcmeComponentTypeDeclaration__RefsAssignment_5_1_1_1 )
            // InternalAcmeParser.g:10700:3: rule__AcmeComponentTypeDeclaration__RefsAssignment_5_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeComponentTypeDeclaration__RefsAssignment_5_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentTypeDeclarationAccess().getRefsAssignment_5_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Group_5_1_1__1__Impl"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Group_5_1_1__2"
    // InternalAcmeParser.g:10708:1: rule__AcmeComponentTypeDeclaration__Group_5_1_1__2 : rule__AcmeComponentTypeDeclaration__Group_5_1_1__2__Impl rule__AcmeComponentTypeDeclaration__Group_5_1_1__3 ;
    public final void rule__AcmeComponentTypeDeclaration__Group_5_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10712:1: ( rule__AcmeComponentTypeDeclaration__Group_5_1_1__2__Impl rule__AcmeComponentTypeDeclaration__Group_5_1_1__3 )
            // InternalAcmeParser.g:10713:2: rule__AcmeComponentTypeDeclaration__Group_5_1_1__2__Impl rule__AcmeComponentTypeDeclaration__Group_5_1_1__3
            {
            pushFollow(FOLLOW_25);
            rule__AcmeComponentTypeDeclaration__Group_5_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeComponentTypeDeclaration__Group_5_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Group_5_1_1__2"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Group_5_1_1__2__Impl"
    // InternalAcmeParser.g:10720:1: rule__AcmeComponentTypeDeclaration__Group_5_1_1__2__Impl : ( ( rule__AcmeComponentTypeDeclaration__Group_5_1_1_2__0 )* ) ;
    public final void rule__AcmeComponentTypeDeclaration__Group_5_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10724:1: ( ( ( rule__AcmeComponentTypeDeclaration__Group_5_1_1_2__0 )* ) )
            // InternalAcmeParser.g:10725:1: ( ( rule__AcmeComponentTypeDeclaration__Group_5_1_1_2__0 )* )
            {
            // InternalAcmeParser.g:10725:1: ( ( rule__AcmeComponentTypeDeclaration__Group_5_1_1_2__0 )* )
            // InternalAcmeParser.g:10726:2: ( rule__AcmeComponentTypeDeclaration__Group_5_1_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentTypeDeclarationAccess().getGroup_5_1_1_2()); 
            }
            // InternalAcmeParser.g:10727:2: ( rule__AcmeComponentTypeDeclaration__Group_5_1_1_2__0 )*
            loop143:
            do {
                int alt143=2;
                int LA143_0 = input.LA(1);

                if ( (LA143_0==Comma) ) {
                    alt143=1;
                }


                switch (alt143) {
            	case 1 :
            	    // InternalAcmeParser.g:10727:3: rule__AcmeComponentTypeDeclaration__Group_5_1_1_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__AcmeComponentTypeDeclaration__Group_5_1_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop143;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentTypeDeclarationAccess().getGroup_5_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Group_5_1_1__2__Impl"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Group_5_1_1__3"
    // InternalAcmeParser.g:10735:1: rule__AcmeComponentTypeDeclaration__Group_5_1_1__3 : rule__AcmeComponentTypeDeclaration__Group_5_1_1__3__Impl ;
    public final void rule__AcmeComponentTypeDeclaration__Group_5_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10739:1: ( rule__AcmeComponentTypeDeclaration__Group_5_1_1__3__Impl )
            // InternalAcmeParser.g:10740:2: rule__AcmeComponentTypeDeclaration__Group_5_1_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeComponentTypeDeclaration__Group_5_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Group_5_1_1__3"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Group_5_1_1__3__Impl"
    // InternalAcmeParser.g:10746:1: rule__AcmeComponentTypeDeclaration__Group_5_1_1__3__Impl : ( ( rule__AcmeComponentTypeDeclaration__Alternatives_5_1_1_3 ) ) ;
    public final void rule__AcmeComponentTypeDeclaration__Group_5_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10750:1: ( ( ( rule__AcmeComponentTypeDeclaration__Alternatives_5_1_1_3 ) ) )
            // InternalAcmeParser.g:10751:1: ( ( rule__AcmeComponentTypeDeclaration__Alternatives_5_1_1_3 ) )
            {
            // InternalAcmeParser.g:10751:1: ( ( rule__AcmeComponentTypeDeclaration__Alternatives_5_1_1_3 ) )
            // InternalAcmeParser.g:10752:2: ( rule__AcmeComponentTypeDeclaration__Alternatives_5_1_1_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentTypeDeclarationAccess().getAlternatives_5_1_1_3()); 
            }
            // InternalAcmeParser.g:10753:2: ( rule__AcmeComponentTypeDeclaration__Alternatives_5_1_1_3 )
            // InternalAcmeParser.g:10753:3: rule__AcmeComponentTypeDeclaration__Alternatives_5_1_1_3
            {
            pushFollow(FOLLOW_2);
            rule__AcmeComponentTypeDeclaration__Alternatives_5_1_1_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentTypeDeclarationAccess().getAlternatives_5_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Group_5_1_1__3__Impl"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Group_5_1_1_2__0"
    // InternalAcmeParser.g:10762:1: rule__AcmeComponentTypeDeclaration__Group_5_1_1_2__0 : rule__AcmeComponentTypeDeclaration__Group_5_1_1_2__0__Impl rule__AcmeComponentTypeDeclaration__Group_5_1_1_2__1 ;
    public final void rule__AcmeComponentTypeDeclaration__Group_5_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10766:1: ( rule__AcmeComponentTypeDeclaration__Group_5_1_1_2__0__Impl rule__AcmeComponentTypeDeclaration__Group_5_1_1_2__1 )
            // InternalAcmeParser.g:10767:2: rule__AcmeComponentTypeDeclaration__Group_5_1_1_2__0__Impl rule__AcmeComponentTypeDeclaration__Group_5_1_1_2__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeComponentTypeDeclaration__Group_5_1_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeComponentTypeDeclaration__Group_5_1_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Group_5_1_1_2__0"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Group_5_1_1_2__0__Impl"
    // InternalAcmeParser.g:10774:1: rule__AcmeComponentTypeDeclaration__Group_5_1_1_2__0__Impl : ( Comma ) ;
    public final void rule__AcmeComponentTypeDeclaration__Group_5_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10778:1: ( ( Comma ) )
            // InternalAcmeParser.g:10779:1: ( Comma )
            {
            // InternalAcmeParser.g:10779:1: ( Comma )
            // InternalAcmeParser.g:10780:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentTypeDeclarationAccess().getCommaKeyword_5_1_1_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentTypeDeclarationAccess().getCommaKeyword_5_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Group_5_1_1_2__0__Impl"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Group_5_1_1_2__1"
    // InternalAcmeParser.g:10789:1: rule__AcmeComponentTypeDeclaration__Group_5_1_1_2__1 : rule__AcmeComponentTypeDeclaration__Group_5_1_1_2__1__Impl ;
    public final void rule__AcmeComponentTypeDeclaration__Group_5_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10793:1: ( rule__AcmeComponentTypeDeclaration__Group_5_1_1_2__1__Impl )
            // InternalAcmeParser.g:10794:2: rule__AcmeComponentTypeDeclaration__Group_5_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeComponentTypeDeclaration__Group_5_1_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Group_5_1_1_2__1"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Group_5_1_1_2__1__Impl"
    // InternalAcmeParser.g:10800:1: rule__AcmeComponentTypeDeclaration__Group_5_1_1_2__1__Impl : ( ( rule__AcmeComponentTypeDeclaration__RefsAssignment_5_1_1_2_1 ) ) ;
    public final void rule__AcmeComponentTypeDeclaration__Group_5_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10804:1: ( ( ( rule__AcmeComponentTypeDeclaration__RefsAssignment_5_1_1_2_1 ) ) )
            // InternalAcmeParser.g:10805:1: ( ( rule__AcmeComponentTypeDeclaration__RefsAssignment_5_1_1_2_1 ) )
            {
            // InternalAcmeParser.g:10805:1: ( ( rule__AcmeComponentTypeDeclaration__RefsAssignment_5_1_1_2_1 ) )
            // InternalAcmeParser.g:10806:2: ( rule__AcmeComponentTypeDeclaration__RefsAssignment_5_1_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentTypeDeclarationAccess().getRefsAssignment_5_1_1_2_1()); 
            }
            // InternalAcmeParser.g:10807:2: ( rule__AcmeComponentTypeDeclaration__RefsAssignment_5_1_1_2_1 )
            // InternalAcmeParser.g:10807:3: rule__AcmeComponentTypeDeclaration__RefsAssignment_5_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeComponentTypeDeclaration__RefsAssignment_5_1_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentTypeDeclarationAccess().getRefsAssignment_5_1_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Group_5_1_1_2__1__Impl"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__0"
    // InternalAcmeParser.g:10816:1: rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__0 : rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__0__Impl rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__1 ;
    public final void rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10820:1: ( rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__0__Impl rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__1 )
            // InternalAcmeParser.g:10821:2: rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__0__Impl rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__1
            {
            pushFollow(FOLLOW_13);
            rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__0"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__0__Impl"
    // InternalAcmeParser.g:10828:1: rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__0__Impl : ( With ) ;
    public final void rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10832:1: ( ( With ) )
            // InternalAcmeParser.g:10833:1: ( With )
            {
            // InternalAcmeParser.g:10833:1: ( With )
            // InternalAcmeParser.g:10834:2: With
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentTypeDeclarationAccess().getWithKeyword_5_1_1_3_1_0()); 
            }
            match(input,With,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentTypeDeclarationAccess().getWithKeyword_5_1_1_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__0__Impl"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__1"
    // InternalAcmeParser.g:10843:1: rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__1 : rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__1__Impl rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__2 ;
    public final void rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10847:1: ( rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__1__Impl rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__2 )
            // InternalAcmeParser.g:10848:2: rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__1__Impl rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__2
            {
            pushFollow(FOLLOW_7);
            rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__1"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__1__Impl"
    // InternalAcmeParser.g:10855:1: rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__1__Impl : ( ( rule__AcmeComponentTypeDeclaration__BodyAssignment_5_1_1_3_1_1 ) ) ;
    public final void rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10859:1: ( ( ( rule__AcmeComponentTypeDeclaration__BodyAssignment_5_1_1_3_1_1 ) ) )
            // InternalAcmeParser.g:10860:1: ( ( rule__AcmeComponentTypeDeclaration__BodyAssignment_5_1_1_3_1_1 ) )
            {
            // InternalAcmeParser.g:10860:1: ( ( rule__AcmeComponentTypeDeclaration__BodyAssignment_5_1_1_3_1_1 ) )
            // InternalAcmeParser.g:10861:2: ( rule__AcmeComponentTypeDeclaration__BodyAssignment_5_1_1_3_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentTypeDeclarationAccess().getBodyAssignment_5_1_1_3_1_1()); 
            }
            // InternalAcmeParser.g:10862:2: ( rule__AcmeComponentTypeDeclaration__BodyAssignment_5_1_1_3_1_1 )
            // InternalAcmeParser.g:10862:3: rule__AcmeComponentTypeDeclaration__BodyAssignment_5_1_1_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeComponentTypeDeclaration__BodyAssignment_5_1_1_3_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentTypeDeclarationAccess().getBodyAssignment_5_1_1_3_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__1__Impl"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__2"
    // InternalAcmeParser.g:10870:1: rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__2 : rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__2__Impl ;
    public final void rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10874:1: ( rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__2__Impl )
            // InternalAcmeParser.g:10875:2: rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__2"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__2__Impl"
    // InternalAcmeParser.g:10881:1: rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__2__Impl : ( ( Semicolon )? ) ;
    public final void rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10885:1: ( ( ( Semicolon )? ) )
            // InternalAcmeParser.g:10886:1: ( ( Semicolon )? )
            {
            // InternalAcmeParser.g:10886:1: ( ( Semicolon )? )
            // InternalAcmeParser.g:10887:2: ( Semicolon )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentTypeDeclarationAccess().getSemicolonKeyword_5_1_1_3_1_2()); 
            }
            // InternalAcmeParser.g:10888:2: ( Semicolon )?
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( (LA144_0==Semicolon) ) {
                alt144=1;
            }
            switch (alt144) {
                case 1 :
                    // InternalAcmeParser.g:10888:3: Semicolon
                    {
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentTypeDeclarationAccess().getSemicolonKeyword_5_1_1_3_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__Group_5_1_1_3_1__2__Impl"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group__0"
    // InternalAcmeParser.g:10897:1: rule__AcmeComponentDeclaration__Group__0 : rule__AcmeComponentDeclaration__Group__0__Impl rule__AcmeComponentDeclaration__Group__1 ;
    public final void rule__AcmeComponentDeclaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10901:1: ( rule__AcmeComponentDeclaration__Group__0__Impl rule__AcmeComponentDeclaration__Group__1 )
            // InternalAcmeParser.g:10902:2: rule__AcmeComponentDeclaration__Group__0__Impl rule__AcmeComponentDeclaration__Group__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeComponentDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeComponentDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group__0"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group__0__Impl"
    // InternalAcmeParser.g:10909:1: rule__AcmeComponentDeclaration__Group__0__Impl : ( Component ) ;
    public final void rule__AcmeComponentDeclaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10913:1: ( ( Component ) )
            // InternalAcmeParser.g:10914:1: ( Component )
            {
            // InternalAcmeParser.g:10914:1: ( Component )
            // InternalAcmeParser.g:10915:2: Component
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentDeclarationAccess().getComponentKeyword_0()); 
            }
            match(input,Component,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentDeclarationAccess().getComponentKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group__0__Impl"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group__1"
    // InternalAcmeParser.g:10924:1: rule__AcmeComponentDeclaration__Group__1 : rule__AcmeComponentDeclaration__Group__1__Impl rule__AcmeComponentDeclaration__Group__2 ;
    public final void rule__AcmeComponentDeclaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10928:1: ( rule__AcmeComponentDeclaration__Group__1__Impl rule__AcmeComponentDeclaration__Group__2 )
            // InternalAcmeParser.g:10929:2: rule__AcmeComponentDeclaration__Group__1__Impl rule__AcmeComponentDeclaration__Group__2
            {
            pushFollow(FOLLOW_18);
            rule__AcmeComponentDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeComponentDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group__1"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group__1__Impl"
    // InternalAcmeParser.g:10936:1: rule__AcmeComponentDeclaration__Group__1__Impl : ( ( rule__AcmeComponentDeclaration__NameAssignment_1 ) ) ;
    public final void rule__AcmeComponentDeclaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10940:1: ( ( ( rule__AcmeComponentDeclaration__NameAssignment_1 ) ) )
            // InternalAcmeParser.g:10941:1: ( ( rule__AcmeComponentDeclaration__NameAssignment_1 ) )
            {
            // InternalAcmeParser.g:10941:1: ( ( rule__AcmeComponentDeclaration__NameAssignment_1 ) )
            // InternalAcmeParser.g:10942:2: ( rule__AcmeComponentDeclaration__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentDeclarationAccess().getNameAssignment_1()); 
            }
            // InternalAcmeParser.g:10943:2: ( rule__AcmeComponentDeclaration__NameAssignment_1 )
            // InternalAcmeParser.g:10943:3: rule__AcmeComponentDeclaration__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeComponentDeclaration__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentDeclarationAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group__1__Impl"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group__2"
    // InternalAcmeParser.g:10951:1: rule__AcmeComponentDeclaration__Group__2 : rule__AcmeComponentDeclaration__Group__2__Impl rule__AcmeComponentDeclaration__Group__3 ;
    public final void rule__AcmeComponentDeclaration__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10955:1: ( rule__AcmeComponentDeclaration__Group__2__Impl rule__AcmeComponentDeclaration__Group__3 )
            // InternalAcmeParser.g:10956:2: rule__AcmeComponentDeclaration__Group__2__Impl rule__AcmeComponentDeclaration__Group__3
            {
            pushFollow(FOLLOW_18);
            rule__AcmeComponentDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeComponentDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group__2"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group__2__Impl"
    // InternalAcmeParser.g:10963:1: rule__AcmeComponentDeclaration__Group__2__Impl : ( ( rule__AcmeComponentDeclaration__Group_2__0 )? ) ;
    public final void rule__AcmeComponentDeclaration__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10967:1: ( ( ( rule__AcmeComponentDeclaration__Group_2__0 )? ) )
            // InternalAcmeParser.g:10968:1: ( ( rule__AcmeComponentDeclaration__Group_2__0 )? )
            {
            // InternalAcmeParser.g:10968:1: ( ( rule__AcmeComponentDeclaration__Group_2__0 )? )
            // InternalAcmeParser.g:10969:2: ( rule__AcmeComponentDeclaration__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentDeclarationAccess().getGroup_2()); 
            }
            // InternalAcmeParser.g:10970:2: ( rule__AcmeComponentDeclaration__Group_2__0 )?
            int alt145=2;
            int LA145_0 = input.LA(1);

            if ( (LA145_0==Colon) ) {
                alt145=1;
            }
            switch (alt145) {
                case 1 :
                    // InternalAcmeParser.g:10970:3: rule__AcmeComponentDeclaration__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeComponentDeclaration__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentDeclarationAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group__2__Impl"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group__3"
    // InternalAcmeParser.g:10978:1: rule__AcmeComponentDeclaration__Group__3 : rule__AcmeComponentDeclaration__Group__3__Impl ;
    public final void rule__AcmeComponentDeclaration__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10982:1: ( rule__AcmeComponentDeclaration__Group__3__Impl )
            // InternalAcmeParser.g:10983:2: rule__AcmeComponentDeclaration__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeComponentDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group__3"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group__3__Impl"
    // InternalAcmeParser.g:10989:1: rule__AcmeComponentDeclaration__Group__3__Impl : ( ( rule__AcmeComponentDeclaration__Alternatives_3 ) ) ;
    public final void rule__AcmeComponentDeclaration__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:10993:1: ( ( ( rule__AcmeComponentDeclaration__Alternatives_3 ) ) )
            // InternalAcmeParser.g:10994:1: ( ( rule__AcmeComponentDeclaration__Alternatives_3 ) )
            {
            // InternalAcmeParser.g:10994:1: ( ( rule__AcmeComponentDeclaration__Alternatives_3 ) )
            // InternalAcmeParser.g:10995:2: ( rule__AcmeComponentDeclaration__Alternatives_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentDeclarationAccess().getAlternatives_3()); 
            }
            // InternalAcmeParser.g:10996:2: ( rule__AcmeComponentDeclaration__Alternatives_3 )
            // InternalAcmeParser.g:10996:3: rule__AcmeComponentDeclaration__Alternatives_3
            {
            pushFollow(FOLLOW_2);
            rule__AcmeComponentDeclaration__Alternatives_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentDeclarationAccess().getAlternatives_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group__3__Impl"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_2__0"
    // InternalAcmeParser.g:11005:1: rule__AcmeComponentDeclaration__Group_2__0 : rule__AcmeComponentDeclaration__Group_2__0__Impl rule__AcmeComponentDeclaration__Group_2__1 ;
    public final void rule__AcmeComponentDeclaration__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11009:1: ( rule__AcmeComponentDeclaration__Group_2__0__Impl rule__AcmeComponentDeclaration__Group_2__1 )
            // InternalAcmeParser.g:11010:2: rule__AcmeComponentDeclaration__Group_2__0__Impl rule__AcmeComponentDeclaration__Group_2__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeComponentDeclaration__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeComponentDeclaration__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_2__0"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_2__0__Impl"
    // InternalAcmeParser.g:11017:1: rule__AcmeComponentDeclaration__Group_2__0__Impl : ( Colon ) ;
    public final void rule__AcmeComponentDeclaration__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11021:1: ( ( Colon ) )
            // InternalAcmeParser.g:11022:1: ( Colon )
            {
            // InternalAcmeParser.g:11022:1: ( Colon )
            // InternalAcmeParser.g:11023:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentDeclarationAccess().getColonKeyword_2_0()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentDeclarationAccess().getColonKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_2__0__Impl"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_2__1"
    // InternalAcmeParser.g:11032:1: rule__AcmeComponentDeclaration__Group_2__1 : rule__AcmeComponentDeclaration__Group_2__1__Impl rule__AcmeComponentDeclaration__Group_2__2 ;
    public final void rule__AcmeComponentDeclaration__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11036:1: ( rule__AcmeComponentDeclaration__Group_2__1__Impl rule__AcmeComponentDeclaration__Group_2__2 )
            // InternalAcmeParser.g:11037:2: rule__AcmeComponentDeclaration__Group_2__1__Impl rule__AcmeComponentDeclaration__Group_2__2
            {
            pushFollow(FOLLOW_19);
            rule__AcmeComponentDeclaration__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeComponentDeclaration__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_2__1"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_2__1__Impl"
    // InternalAcmeParser.g:11044:1: rule__AcmeComponentDeclaration__Group_2__1__Impl : ( ( rule__AcmeComponentDeclaration__DeclaredAssignment_2_1 ) ) ;
    public final void rule__AcmeComponentDeclaration__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11048:1: ( ( ( rule__AcmeComponentDeclaration__DeclaredAssignment_2_1 ) ) )
            // InternalAcmeParser.g:11049:1: ( ( rule__AcmeComponentDeclaration__DeclaredAssignment_2_1 ) )
            {
            // InternalAcmeParser.g:11049:1: ( ( rule__AcmeComponentDeclaration__DeclaredAssignment_2_1 ) )
            // InternalAcmeParser.g:11050:2: ( rule__AcmeComponentDeclaration__DeclaredAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentDeclarationAccess().getDeclaredAssignment_2_1()); 
            }
            // InternalAcmeParser.g:11051:2: ( rule__AcmeComponentDeclaration__DeclaredAssignment_2_1 )
            // InternalAcmeParser.g:11051:3: rule__AcmeComponentDeclaration__DeclaredAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeComponentDeclaration__DeclaredAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentDeclarationAccess().getDeclaredAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_2__1__Impl"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_2__2"
    // InternalAcmeParser.g:11059:1: rule__AcmeComponentDeclaration__Group_2__2 : rule__AcmeComponentDeclaration__Group_2__2__Impl ;
    public final void rule__AcmeComponentDeclaration__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11063:1: ( rule__AcmeComponentDeclaration__Group_2__2__Impl )
            // InternalAcmeParser.g:11064:2: rule__AcmeComponentDeclaration__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeComponentDeclaration__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_2__2"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_2__2__Impl"
    // InternalAcmeParser.g:11070:1: rule__AcmeComponentDeclaration__Group_2__2__Impl : ( ( rule__AcmeComponentDeclaration__Group_2_2__0 )* ) ;
    public final void rule__AcmeComponentDeclaration__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11074:1: ( ( ( rule__AcmeComponentDeclaration__Group_2_2__0 )* ) )
            // InternalAcmeParser.g:11075:1: ( ( rule__AcmeComponentDeclaration__Group_2_2__0 )* )
            {
            // InternalAcmeParser.g:11075:1: ( ( rule__AcmeComponentDeclaration__Group_2_2__0 )* )
            // InternalAcmeParser.g:11076:2: ( rule__AcmeComponentDeclaration__Group_2_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentDeclarationAccess().getGroup_2_2()); 
            }
            // InternalAcmeParser.g:11077:2: ( rule__AcmeComponentDeclaration__Group_2_2__0 )*
            loop146:
            do {
                int alt146=2;
                int LA146_0 = input.LA(1);

                if ( (LA146_0==Comma) ) {
                    alt146=1;
                }


                switch (alt146) {
            	case 1 :
            	    // InternalAcmeParser.g:11077:3: rule__AcmeComponentDeclaration__Group_2_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__AcmeComponentDeclaration__Group_2_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop146;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentDeclarationAccess().getGroup_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_2__2__Impl"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_2_2__0"
    // InternalAcmeParser.g:11086:1: rule__AcmeComponentDeclaration__Group_2_2__0 : rule__AcmeComponentDeclaration__Group_2_2__0__Impl rule__AcmeComponentDeclaration__Group_2_2__1 ;
    public final void rule__AcmeComponentDeclaration__Group_2_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11090:1: ( rule__AcmeComponentDeclaration__Group_2_2__0__Impl rule__AcmeComponentDeclaration__Group_2_2__1 )
            // InternalAcmeParser.g:11091:2: rule__AcmeComponentDeclaration__Group_2_2__0__Impl rule__AcmeComponentDeclaration__Group_2_2__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeComponentDeclaration__Group_2_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeComponentDeclaration__Group_2_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_2_2__0"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_2_2__0__Impl"
    // InternalAcmeParser.g:11098:1: rule__AcmeComponentDeclaration__Group_2_2__0__Impl : ( Comma ) ;
    public final void rule__AcmeComponentDeclaration__Group_2_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11102:1: ( ( Comma ) )
            // InternalAcmeParser.g:11103:1: ( Comma )
            {
            // InternalAcmeParser.g:11103:1: ( Comma )
            // InternalAcmeParser.g:11104:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentDeclarationAccess().getCommaKeyword_2_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentDeclarationAccess().getCommaKeyword_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_2_2__0__Impl"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_2_2__1"
    // InternalAcmeParser.g:11113:1: rule__AcmeComponentDeclaration__Group_2_2__1 : rule__AcmeComponentDeclaration__Group_2_2__1__Impl ;
    public final void rule__AcmeComponentDeclaration__Group_2_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11117:1: ( rule__AcmeComponentDeclaration__Group_2_2__1__Impl )
            // InternalAcmeParser.g:11118:2: rule__AcmeComponentDeclaration__Group_2_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeComponentDeclaration__Group_2_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_2_2__1"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_2_2__1__Impl"
    // InternalAcmeParser.g:11124:1: rule__AcmeComponentDeclaration__Group_2_2__1__Impl : ( ( rule__AcmeComponentDeclaration__DeclaredAssignment_2_2_1 ) ) ;
    public final void rule__AcmeComponentDeclaration__Group_2_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11128:1: ( ( ( rule__AcmeComponentDeclaration__DeclaredAssignment_2_2_1 ) ) )
            // InternalAcmeParser.g:11129:1: ( ( rule__AcmeComponentDeclaration__DeclaredAssignment_2_2_1 ) )
            {
            // InternalAcmeParser.g:11129:1: ( ( rule__AcmeComponentDeclaration__DeclaredAssignment_2_2_1 ) )
            // InternalAcmeParser.g:11130:2: ( rule__AcmeComponentDeclaration__DeclaredAssignment_2_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentDeclarationAccess().getDeclaredAssignment_2_2_1()); 
            }
            // InternalAcmeParser.g:11131:2: ( rule__AcmeComponentDeclaration__DeclaredAssignment_2_2_1 )
            // InternalAcmeParser.g:11131:3: rule__AcmeComponentDeclaration__DeclaredAssignment_2_2_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeComponentDeclaration__DeclaredAssignment_2_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentDeclarationAccess().getDeclaredAssignment_2_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_2_2__1__Impl"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_3_1__0"
    // InternalAcmeParser.g:11140:1: rule__AcmeComponentDeclaration__Group_3_1__0 : rule__AcmeComponentDeclaration__Group_3_1__0__Impl rule__AcmeComponentDeclaration__Group_3_1__1 ;
    public final void rule__AcmeComponentDeclaration__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11144:1: ( rule__AcmeComponentDeclaration__Group_3_1__0__Impl rule__AcmeComponentDeclaration__Group_3_1__1 )
            // InternalAcmeParser.g:11145:2: rule__AcmeComponentDeclaration__Group_3_1__0__Impl rule__AcmeComponentDeclaration__Group_3_1__1
            {
            pushFollow(FOLLOW_20);
            rule__AcmeComponentDeclaration__Group_3_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeComponentDeclaration__Group_3_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_3_1__0"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_3_1__0__Impl"
    // InternalAcmeParser.g:11152:1: rule__AcmeComponentDeclaration__Group_3_1__0__Impl : ( EqualsSign ) ;
    public final void rule__AcmeComponentDeclaration__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11156:1: ( ( EqualsSign ) )
            // InternalAcmeParser.g:11157:1: ( EqualsSign )
            {
            // InternalAcmeParser.g:11157:1: ( EqualsSign )
            // InternalAcmeParser.g:11158:2: EqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentDeclarationAccess().getEqualsSignKeyword_3_1_0()); 
            }
            match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentDeclarationAccess().getEqualsSignKeyword_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_3_1__0__Impl"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_3_1__1"
    // InternalAcmeParser.g:11167:1: rule__AcmeComponentDeclaration__Group_3_1__1 : rule__AcmeComponentDeclaration__Group_3_1__1__Impl ;
    public final void rule__AcmeComponentDeclaration__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11171:1: ( rule__AcmeComponentDeclaration__Group_3_1__1__Impl )
            // InternalAcmeParser.g:11172:2: rule__AcmeComponentDeclaration__Group_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeComponentDeclaration__Group_3_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_3_1__1"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_3_1__1__Impl"
    // InternalAcmeParser.g:11178:1: rule__AcmeComponentDeclaration__Group_3_1__1__Impl : ( ( rule__AcmeComponentDeclaration__Alternatives_3_1_1 ) ) ;
    public final void rule__AcmeComponentDeclaration__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11182:1: ( ( ( rule__AcmeComponentDeclaration__Alternatives_3_1_1 ) ) )
            // InternalAcmeParser.g:11183:1: ( ( rule__AcmeComponentDeclaration__Alternatives_3_1_1 ) )
            {
            // InternalAcmeParser.g:11183:1: ( ( rule__AcmeComponentDeclaration__Alternatives_3_1_1 ) )
            // InternalAcmeParser.g:11184:2: ( rule__AcmeComponentDeclaration__Alternatives_3_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentDeclarationAccess().getAlternatives_3_1_1()); 
            }
            // InternalAcmeParser.g:11185:2: ( rule__AcmeComponentDeclaration__Alternatives_3_1_1 )
            // InternalAcmeParser.g:11185:3: rule__AcmeComponentDeclaration__Alternatives_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeComponentDeclaration__Alternatives_3_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentDeclarationAccess().getAlternatives_3_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_3_1__1__Impl"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_3_1_1_0__0"
    // InternalAcmeParser.g:11194:1: rule__AcmeComponentDeclaration__Group_3_1_1_0__0 : rule__AcmeComponentDeclaration__Group_3_1_1_0__0__Impl rule__AcmeComponentDeclaration__Group_3_1_1_0__1 ;
    public final void rule__AcmeComponentDeclaration__Group_3_1_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11198:1: ( rule__AcmeComponentDeclaration__Group_3_1_1_0__0__Impl rule__AcmeComponentDeclaration__Group_3_1_1_0__1 )
            // InternalAcmeParser.g:11199:2: rule__AcmeComponentDeclaration__Group_3_1_1_0__0__Impl rule__AcmeComponentDeclaration__Group_3_1_1_0__1
            {
            pushFollow(FOLLOW_7);
            rule__AcmeComponentDeclaration__Group_3_1_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeComponentDeclaration__Group_3_1_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_3_1_1_0__0"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_3_1_1_0__0__Impl"
    // InternalAcmeParser.g:11206:1: rule__AcmeComponentDeclaration__Group_3_1_1_0__0__Impl : ( ( rule__AcmeComponentDeclaration__BodyAssignment_3_1_1_0_0 ) ) ;
    public final void rule__AcmeComponentDeclaration__Group_3_1_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11210:1: ( ( ( rule__AcmeComponentDeclaration__BodyAssignment_3_1_1_0_0 ) ) )
            // InternalAcmeParser.g:11211:1: ( ( rule__AcmeComponentDeclaration__BodyAssignment_3_1_1_0_0 ) )
            {
            // InternalAcmeParser.g:11211:1: ( ( rule__AcmeComponentDeclaration__BodyAssignment_3_1_1_0_0 ) )
            // InternalAcmeParser.g:11212:2: ( rule__AcmeComponentDeclaration__BodyAssignment_3_1_1_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentDeclarationAccess().getBodyAssignment_3_1_1_0_0()); 
            }
            // InternalAcmeParser.g:11213:2: ( rule__AcmeComponentDeclaration__BodyAssignment_3_1_1_0_0 )
            // InternalAcmeParser.g:11213:3: rule__AcmeComponentDeclaration__BodyAssignment_3_1_1_0_0
            {
            pushFollow(FOLLOW_2);
            rule__AcmeComponentDeclaration__BodyAssignment_3_1_1_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentDeclarationAccess().getBodyAssignment_3_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_3_1_1_0__0__Impl"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_3_1_1_0__1"
    // InternalAcmeParser.g:11221:1: rule__AcmeComponentDeclaration__Group_3_1_1_0__1 : rule__AcmeComponentDeclaration__Group_3_1_1_0__1__Impl ;
    public final void rule__AcmeComponentDeclaration__Group_3_1_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11225:1: ( rule__AcmeComponentDeclaration__Group_3_1_1_0__1__Impl )
            // InternalAcmeParser.g:11226:2: rule__AcmeComponentDeclaration__Group_3_1_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeComponentDeclaration__Group_3_1_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_3_1_1_0__1"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_3_1_1_0__1__Impl"
    // InternalAcmeParser.g:11232:1: rule__AcmeComponentDeclaration__Group_3_1_1_0__1__Impl : ( ( Semicolon )? ) ;
    public final void rule__AcmeComponentDeclaration__Group_3_1_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11236:1: ( ( ( Semicolon )? ) )
            // InternalAcmeParser.g:11237:1: ( ( Semicolon )? )
            {
            // InternalAcmeParser.g:11237:1: ( ( Semicolon )? )
            // InternalAcmeParser.g:11238:2: ( Semicolon )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentDeclarationAccess().getSemicolonKeyword_3_1_1_0_1()); 
            }
            // InternalAcmeParser.g:11239:2: ( Semicolon )?
            int alt147=2;
            int LA147_0 = input.LA(1);

            if ( (LA147_0==Semicolon) ) {
                alt147=1;
            }
            switch (alt147) {
                case 1 :
                    // InternalAcmeParser.g:11239:3: Semicolon
                    {
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentDeclarationAccess().getSemicolonKeyword_3_1_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_3_1_1_0__1__Impl"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_3_1_1_1__0"
    // InternalAcmeParser.g:11248:1: rule__AcmeComponentDeclaration__Group_3_1_1_1__0 : rule__AcmeComponentDeclaration__Group_3_1_1_1__0__Impl rule__AcmeComponentDeclaration__Group_3_1_1_1__1 ;
    public final void rule__AcmeComponentDeclaration__Group_3_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11252:1: ( rule__AcmeComponentDeclaration__Group_3_1_1_1__0__Impl rule__AcmeComponentDeclaration__Group_3_1_1_1__1 )
            // InternalAcmeParser.g:11253:2: rule__AcmeComponentDeclaration__Group_3_1_1_1__0__Impl rule__AcmeComponentDeclaration__Group_3_1_1_1__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeComponentDeclaration__Group_3_1_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeComponentDeclaration__Group_3_1_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_3_1_1_1__0"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_3_1_1_1__0__Impl"
    // InternalAcmeParser.g:11260:1: rule__AcmeComponentDeclaration__Group_3_1_1_1__0__Impl : ( New ) ;
    public final void rule__AcmeComponentDeclaration__Group_3_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11264:1: ( ( New ) )
            // InternalAcmeParser.g:11265:1: ( New )
            {
            // InternalAcmeParser.g:11265:1: ( New )
            // InternalAcmeParser.g:11266:2: New
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentDeclarationAccess().getNewKeyword_3_1_1_1_0()); 
            }
            match(input,New,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentDeclarationAccess().getNewKeyword_3_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_3_1_1_1__0__Impl"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_3_1_1_1__1"
    // InternalAcmeParser.g:11275:1: rule__AcmeComponentDeclaration__Group_3_1_1_1__1 : rule__AcmeComponentDeclaration__Group_3_1_1_1__1__Impl rule__AcmeComponentDeclaration__Group_3_1_1_1__2 ;
    public final void rule__AcmeComponentDeclaration__Group_3_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11279:1: ( rule__AcmeComponentDeclaration__Group_3_1_1_1__1__Impl rule__AcmeComponentDeclaration__Group_3_1_1_1__2 )
            // InternalAcmeParser.g:11280:2: rule__AcmeComponentDeclaration__Group_3_1_1_1__1__Impl rule__AcmeComponentDeclaration__Group_3_1_1_1__2
            {
            pushFollow(FOLLOW_21);
            rule__AcmeComponentDeclaration__Group_3_1_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeComponentDeclaration__Group_3_1_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_3_1_1_1__1"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_3_1_1_1__1__Impl"
    // InternalAcmeParser.g:11287:1: rule__AcmeComponentDeclaration__Group_3_1_1_1__1__Impl : ( ( rule__AcmeComponentDeclaration__InstantiatedAssignment_3_1_1_1_1 ) ) ;
    public final void rule__AcmeComponentDeclaration__Group_3_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11291:1: ( ( ( rule__AcmeComponentDeclaration__InstantiatedAssignment_3_1_1_1_1 ) ) )
            // InternalAcmeParser.g:11292:1: ( ( rule__AcmeComponentDeclaration__InstantiatedAssignment_3_1_1_1_1 ) )
            {
            // InternalAcmeParser.g:11292:1: ( ( rule__AcmeComponentDeclaration__InstantiatedAssignment_3_1_1_1_1 ) )
            // InternalAcmeParser.g:11293:2: ( rule__AcmeComponentDeclaration__InstantiatedAssignment_3_1_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentDeclarationAccess().getInstantiatedAssignment_3_1_1_1_1()); 
            }
            // InternalAcmeParser.g:11294:2: ( rule__AcmeComponentDeclaration__InstantiatedAssignment_3_1_1_1_1 )
            // InternalAcmeParser.g:11294:3: rule__AcmeComponentDeclaration__InstantiatedAssignment_3_1_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeComponentDeclaration__InstantiatedAssignment_3_1_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentDeclarationAccess().getInstantiatedAssignment_3_1_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_3_1_1_1__1__Impl"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_3_1_1_1__2"
    // InternalAcmeParser.g:11302:1: rule__AcmeComponentDeclaration__Group_3_1_1_1__2 : rule__AcmeComponentDeclaration__Group_3_1_1_1__2__Impl rule__AcmeComponentDeclaration__Group_3_1_1_1__3 ;
    public final void rule__AcmeComponentDeclaration__Group_3_1_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11306:1: ( rule__AcmeComponentDeclaration__Group_3_1_1_1__2__Impl rule__AcmeComponentDeclaration__Group_3_1_1_1__3 )
            // InternalAcmeParser.g:11307:2: rule__AcmeComponentDeclaration__Group_3_1_1_1__2__Impl rule__AcmeComponentDeclaration__Group_3_1_1_1__3
            {
            pushFollow(FOLLOW_21);
            rule__AcmeComponentDeclaration__Group_3_1_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeComponentDeclaration__Group_3_1_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_3_1_1_1__2"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_3_1_1_1__2__Impl"
    // InternalAcmeParser.g:11314:1: rule__AcmeComponentDeclaration__Group_3_1_1_1__2__Impl : ( ( rule__AcmeComponentDeclaration__Group_3_1_1_1_2__0 )* ) ;
    public final void rule__AcmeComponentDeclaration__Group_3_1_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11318:1: ( ( ( rule__AcmeComponentDeclaration__Group_3_1_1_1_2__0 )* ) )
            // InternalAcmeParser.g:11319:1: ( ( rule__AcmeComponentDeclaration__Group_3_1_1_1_2__0 )* )
            {
            // InternalAcmeParser.g:11319:1: ( ( rule__AcmeComponentDeclaration__Group_3_1_1_1_2__0 )* )
            // InternalAcmeParser.g:11320:2: ( rule__AcmeComponentDeclaration__Group_3_1_1_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentDeclarationAccess().getGroup_3_1_1_1_2()); 
            }
            // InternalAcmeParser.g:11321:2: ( rule__AcmeComponentDeclaration__Group_3_1_1_1_2__0 )*
            loop148:
            do {
                int alt148=2;
                int LA148_0 = input.LA(1);

                if ( (LA148_0==Comma) ) {
                    alt148=1;
                }


                switch (alt148) {
            	case 1 :
            	    // InternalAcmeParser.g:11321:3: rule__AcmeComponentDeclaration__Group_3_1_1_1_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__AcmeComponentDeclaration__Group_3_1_1_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop148;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentDeclarationAccess().getGroup_3_1_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_3_1_1_1__2__Impl"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_3_1_1_1__3"
    // InternalAcmeParser.g:11329:1: rule__AcmeComponentDeclaration__Group_3_1_1_1__3 : rule__AcmeComponentDeclaration__Group_3_1_1_1__3__Impl ;
    public final void rule__AcmeComponentDeclaration__Group_3_1_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11333:1: ( rule__AcmeComponentDeclaration__Group_3_1_1_1__3__Impl )
            // InternalAcmeParser.g:11334:2: rule__AcmeComponentDeclaration__Group_3_1_1_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeComponentDeclaration__Group_3_1_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_3_1_1_1__3"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_3_1_1_1__3__Impl"
    // InternalAcmeParser.g:11340:1: rule__AcmeComponentDeclaration__Group_3_1_1_1__3__Impl : ( ( rule__AcmeComponentDeclaration__Alternatives_3_1_1_1_3 ) ) ;
    public final void rule__AcmeComponentDeclaration__Group_3_1_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11344:1: ( ( ( rule__AcmeComponentDeclaration__Alternatives_3_1_1_1_3 ) ) )
            // InternalAcmeParser.g:11345:1: ( ( rule__AcmeComponentDeclaration__Alternatives_3_1_1_1_3 ) )
            {
            // InternalAcmeParser.g:11345:1: ( ( rule__AcmeComponentDeclaration__Alternatives_3_1_1_1_3 ) )
            // InternalAcmeParser.g:11346:2: ( rule__AcmeComponentDeclaration__Alternatives_3_1_1_1_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentDeclarationAccess().getAlternatives_3_1_1_1_3()); 
            }
            // InternalAcmeParser.g:11347:2: ( rule__AcmeComponentDeclaration__Alternatives_3_1_1_1_3 )
            // InternalAcmeParser.g:11347:3: rule__AcmeComponentDeclaration__Alternatives_3_1_1_1_3
            {
            pushFollow(FOLLOW_2);
            rule__AcmeComponentDeclaration__Alternatives_3_1_1_1_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentDeclarationAccess().getAlternatives_3_1_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_3_1_1_1__3__Impl"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_3_1_1_1_2__0"
    // InternalAcmeParser.g:11356:1: rule__AcmeComponentDeclaration__Group_3_1_1_1_2__0 : rule__AcmeComponentDeclaration__Group_3_1_1_1_2__0__Impl rule__AcmeComponentDeclaration__Group_3_1_1_1_2__1 ;
    public final void rule__AcmeComponentDeclaration__Group_3_1_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11360:1: ( rule__AcmeComponentDeclaration__Group_3_1_1_1_2__0__Impl rule__AcmeComponentDeclaration__Group_3_1_1_1_2__1 )
            // InternalAcmeParser.g:11361:2: rule__AcmeComponentDeclaration__Group_3_1_1_1_2__0__Impl rule__AcmeComponentDeclaration__Group_3_1_1_1_2__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeComponentDeclaration__Group_3_1_1_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeComponentDeclaration__Group_3_1_1_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_3_1_1_1_2__0"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_3_1_1_1_2__0__Impl"
    // InternalAcmeParser.g:11368:1: rule__AcmeComponentDeclaration__Group_3_1_1_1_2__0__Impl : ( Comma ) ;
    public final void rule__AcmeComponentDeclaration__Group_3_1_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11372:1: ( ( Comma ) )
            // InternalAcmeParser.g:11373:1: ( Comma )
            {
            // InternalAcmeParser.g:11373:1: ( Comma )
            // InternalAcmeParser.g:11374:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentDeclarationAccess().getCommaKeyword_3_1_1_1_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentDeclarationAccess().getCommaKeyword_3_1_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_3_1_1_1_2__0__Impl"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_3_1_1_1_2__1"
    // InternalAcmeParser.g:11383:1: rule__AcmeComponentDeclaration__Group_3_1_1_1_2__1 : rule__AcmeComponentDeclaration__Group_3_1_1_1_2__1__Impl ;
    public final void rule__AcmeComponentDeclaration__Group_3_1_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11387:1: ( rule__AcmeComponentDeclaration__Group_3_1_1_1_2__1__Impl )
            // InternalAcmeParser.g:11388:2: rule__AcmeComponentDeclaration__Group_3_1_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeComponentDeclaration__Group_3_1_1_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_3_1_1_1_2__1"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_3_1_1_1_2__1__Impl"
    // InternalAcmeParser.g:11394:1: rule__AcmeComponentDeclaration__Group_3_1_1_1_2__1__Impl : ( ( rule__AcmeComponentDeclaration__InstantiatedAssignment_3_1_1_1_2_1 ) ) ;
    public final void rule__AcmeComponentDeclaration__Group_3_1_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11398:1: ( ( ( rule__AcmeComponentDeclaration__InstantiatedAssignment_3_1_1_1_2_1 ) ) )
            // InternalAcmeParser.g:11399:1: ( ( rule__AcmeComponentDeclaration__InstantiatedAssignment_3_1_1_1_2_1 ) )
            {
            // InternalAcmeParser.g:11399:1: ( ( rule__AcmeComponentDeclaration__InstantiatedAssignment_3_1_1_1_2_1 ) )
            // InternalAcmeParser.g:11400:2: ( rule__AcmeComponentDeclaration__InstantiatedAssignment_3_1_1_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentDeclarationAccess().getInstantiatedAssignment_3_1_1_1_2_1()); 
            }
            // InternalAcmeParser.g:11401:2: ( rule__AcmeComponentDeclaration__InstantiatedAssignment_3_1_1_1_2_1 )
            // InternalAcmeParser.g:11401:3: rule__AcmeComponentDeclaration__InstantiatedAssignment_3_1_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeComponentDeclaration__InstantiatedAssignment_3_1_1_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentDeclarationAccess().getInstantiatedAssignment_3_1_1_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_3_1_1_1_2__1__Impl"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__0"
    // InternalAcmeParser.g:11410:1: rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__0 : rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__0__Impl rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__1 ;
    public final void rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11414:1: ( rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__0__Impl rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__1 )
            // InternalAcmeParser.g:11415:2: rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__0__Impl rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__1
            {
            pushFollow(FOLLOW_22);
            rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__0"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__0__Impl"
    // InternalAcmeParser.g:11422:1: rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__0__Impl : ( Extended ) ;
    public final void rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11426:1: ( ( Extended ) )
            // InternalAcmeParser.g:11427:1: ( Extended )
            {
            // InternalAcmeParser.g:11427:1: ( Extended )
            // InternalAcmeParser.g:11428:2: Extended
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentDeclarationAccess().getExtendedKeyword_3_1_1_1_3_1_0()); 
            }
            match(input,Extended,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentDeclarationAccess().getExtendedKeyword_3_1_1_1_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__0__Impl"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__1"
    // InternalAcmeParser.g:11437:1: rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__1 : rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__1__Impl rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__2 ;
    public final void rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11441:1: ( rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__1__Impl rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__2 )
            // InternalAcmeParser.g:11442:2: rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__1__Impl rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__2
            {
            pushFollow(FOLLOW_13);
            rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__1"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__1__Impl"
    // InternalAcmeParser.g:11449:1: rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__1__Impl : ( With ) ;
    public final void rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11453:1: ( ( With ) )
            // InternalAcmeParser.g:11454:1: ( With )
            {
            // InternalAcmeParser.g:11454:1: ( With )
            // InternalAcmeParser.g:11455:2: With
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentDeclarationAccess().getWithKeyword_3_1_1_1_3_1_1()); 
            }
            match(input,With,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentDeclarationAccess().getWithKeyword_3_1_1_1_3_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__1__Impl"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__2"
    // InternalAcmeParser.g:11464:1: rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__2 : rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__2__Impl rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__3 ;
    public final void rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11468:1: ( rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__2__Impl rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__3 )
            // InternalAcmeParser.g:11469:2: rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__2__Impl rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__3
            {
            pushFollow(FOLLOW_7);
            rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__2"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__2__Impl"
    // InternalAcmeParser.g:11476:1: rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__2__Impl : ( ( rule__AcmeComponentDeclaration__BodyAssignment_3_1_1_1_3_1_2 ) ) ;
    public final void rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11480:1: ( ( ( rule__AcmeComponentDeclaration__BodyAssignment_3_1_1_1_3_1_2 ) ) )
            // InternalAcmeParser.g:11481:1: ( ( rule__AcmeComponentDeclaration__BodyAssignment_3_1_1_1_3_1_2 ) )
            {
            // InternalAcmeParser.g:11481:1: ( ( rule__AcmeComponentDeclaration__BodyAssignment_3_1_1_1_3_1_2 ) )
            // InternalAcmeParser.g:11482:2: ( rule__AcmeComponentDeclaration__BodyAssignment_3_1_1_1_3_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentDeclarationAccess().getBodyAssignment_3_1_1_1_3_1_2()); 
            }
            // InternalAcmeParser.g:11483:2: ( rule__AcmeComponentDeclaration__BodyAssignment_3_1_1_1_3_1_2 )
            // InternalAcmeParser.g:11483:3: rule__AcmeComponentDeclaration__BodyAssignment_3_1_1_1_3_1_2
            {
            pushFollow(FOLLOW_2);
            rule__AcmeComponentDeclaration__BodyAssignment_3_1_1_1_3_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentDeclarationAccess().getBodyAssignment_3_1_1_1_3_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__2__Impl"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__3"
    // InternalAcmeParser.g:11491:1: rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__3 : rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__3__Impl ;
    public final void rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11495:1: ( rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__3__Impl )
            // InternalAcmeParser.g:11496:2: rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__3"


    // $ANTLR start "rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__3__Impl"
    // InternalAcmeParser.g:11502:1: rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__3__Impl : ( ( Semicolon )? ) ;
    public final void rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11506:1: ( ( ( Semicolon )? ) )
            // InternalAcmeParser.g:11507:1: ( ( Semicolon )? )
            {
            // InternalAcmeParser.g:11507:1: ( ( Semicolon )? )
            // InternalAcmeParser.g:11508:2: ( Semicolon )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentDeclarationAccess().getSemicolonKeyword_3_1_1_1_3_1_3()); 
            }
            // InternalAcmeParser.g:11509:2: ( Semicolon )?
            int alt149=2;
            int LA149_0 = input.LA(1);

            if ( (LA149_0==Semicolon) ) {
                alt149=1;
            }
            switch (alt149) {
                case 1 :
                    // InternalAcmeParser.g:11509:3: Semicolon
                    {
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentDeclarationAccess().getSemicolonKeyword_3_1_1_1_3_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__Group_3_1_1_1_3_1__3__Impl"


    // $ANTLR start "rule__AcmeComponentBody__Group__0"
    // InternalAcmeParser.g:11518:1: rule__AcmeComponentBody__Group__0 : rule__AcmeComponentBody__Group__0__Impl rule__AcmeComponentBody__Group__1 ;
    public final void rule__AcmeComponentBody__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11522:1: ( rule__AcmeComponentBody__Group__0__Impl rule__AcmeComponentBody__Group__1 )
            // InternalAcmeParser.g:11523:2: rule__AcmeComponentBody__Group__0__Impl rule__AcmeComponentBody__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__AcmeComponentBody__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeComponentBody__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentBody__Group__0"


    // $ANTLR start "rule__AcmeComponentBody__Group__0__Impl"
    // InternalAcmeParser.g:11530:1: rule__AcmeComponentBody__Group__0__Impl : ( () ) ;
    public final void rule__AcmeComponentBody__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11534:1: ( ( () ) )
            // InternalAcmeParser.g:11535:1: ( () )
            {
            // InternalAcmeParser.g:11535:1: ( () )
            // InternalAcmeParser.g:11536:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentBodyAccess().getAcmeComponentBodyAction_0()); 
            }
            // InternalAcmeParser.g:11537:2: ()
            // InternalAcmeParser.g:11537:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentBodyAccess().getAcmeComponentBodyAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentBody__Group__0__Impl"


    // $ANTLR start "rule__AcmeComponentBody__Group__1"
    // InternalAcmeParser.g:11545:1: rule__AcmeComponentBody__Group__1 : rule__AcmeComponentBody__Group__1__Impl rule__AcmeComponentBody__Group__2 ;
    public final void rule__AcmeComponentBody__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11549:1: ( rule__AcmeComponentBody__Group__1__Impl rule__AcmeComponentBody__Group__2 )
            // InternalAcmeParser.g:11550:2: rule__AcmeComponentBody__Group__1__Impl rule__AcmeComponentBody__Group__2
            {
            pushFollow(FOLLOW_40);
            rule__AcmeComponentBody__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeComponentBody__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentBody__Group__1"


    // $ANTLR start "rule__AcmeComponentBody__Group__1__Impl"
    // InternalAcmeParser.g:11557:1: rule__AcmeComponentBody__Group__1__Impl : ( LeftCurlyBracket ) ;
    public final void rule__AcmeComponentBody__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11561:1: ( ( LeftCurlyBracket ) )
            // InternalAcmeParser.g:11562:1: ( LeftCurlyBracket )
            {
            // InternalAcmeParser.g:11562:1: ( LeftCurlyBracket )
            // InternalAcmeParser.g:11563:2: LeftCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentBodyAccess().getLeftCurlyBracketKeyword_1()); 
            }
            match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentBodyAccess().getLeftCurlyBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentBody__Group__1__Impl"


    // $ANTLR start "rule__AcmeComponentBody__Group__2"
    // InternalAcmeParser.g:11572:1: rule__AcmeComponentBody__Group__2 : rule__AcmeComponentBody__Group__2__Impl rule__AcmeComponentBody__Group__3 ;
    public final void rule__AcmeComponentBody__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11576:1: ( rule__AcmeComponentBody__Group__2__Impl rule__AcmeComponentBody__Group__3 )
            // InternalAcmeParser.g:11577:2: rule__AcmeComponentBody__Group__2__Impl rule__AcmeComponentBody__Group__3
            {
            pushFollow(FOLLOW_40);
            rule__AcmeComponentBody__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeComponentBody__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentBody__Group__2"


    // $ANTLR start "rule__AcmeComponentBody__Group__2__Impl"
    // InternalAcmeParser.g:11584:1: rule__AcmeComponentBody__Group__2__Impl : ( ( rule__AcmeComponentBody__Alternatives_2 )* ) ;
    public final void rule__AcmeComponentBody__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11588:1: ( ( ( rule__AcmeComponentBody__Alternatives_2 )* ) )
            // InternalAcmeParser.g:11589:1: ( ( rule__AcmeComponentBody__Alternatives_2 )* )
            {
            // InternalAcmeParser.g:11589:1: ( ( rule__AcmeComponentBody__Alternatives_2 )* )
            // InternalAcmeParser.g:11590:2: ( rule__AcmeComponentBody__Alternatives_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentBodyAccess().getAlternatives_2()); 
            }
            // InternalAcmeParser.g:11591:2: ( rule__AcmeComponentBody__Alternatives_2 )*
            loop150:
            do {
                int alt150=2;
                int LA150_0 = input.LA(1);

                if ( (LA150_0==Representation||(LA150_0>=Hueristic && LA150_0<=Invariant)||LA150_0==Property||LA150_0==Port||LA150_0==Rule) ) {
                    alt150=1;
                }


                switch (alt150) {
            	case 1 :
            	    // InternalAcmeParser.g:11591:3: rule__AcmeComponentBody__Alternatives_2
            	    {
            	    pushFollow(FOLLOW_41);
            	    rule__AcmeComponentBody__Alternatives_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop150;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentBodyAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentBody__Group__2__Impl"


    // $ANTLR start "rule__AcmeComponentBody__Group__3"
    // InternalAcmeParser.g:11599:1: rule__AcmeComponentBody__Group__3 : rule__AcmeComponentBody__Group__3__Impl ;
    public final void rule__AcmeComponentBody__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11603:1: ( rule__AcmeComponentBody__Group__3__Impl )
            // InternalAcmeParser.g:11604:2: rule__AcmeComponentBody__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeComponentBody__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentBody__Group__3"


    // $ANTLR start "rule__AcmeComponentBody__Group__3__Impl"
    // InternalAcmeParser.g:11610:1: rule__AcmeComponentBody__Group__3__Impl : ( RightCurlyBracket ) ;
    public final void rule__AcmeComponentBody__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11614:1: ( ( RightCurlyBracket ) )
            // InternalAcmeParser.g:11615:1: ( RightCurlyBracket )
            {
            // InternalAcmeParser.g:11615:1: ( RightCurlyBracket )
            // InternalAcmeParser.g:11616:2: RightCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentBodyAccess().getRightCurlyBracketKeyword_3()); 
            }
            match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentBodyAccess().getRightCurlyBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentBody__Group__3__Impl"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Group__0"
    // InternalAcmeParser.g:11626:1: rule__AcmeConnectorTypeDeclaration__Group__0 : rule__AcmeConnectorTypeDeclaration__Group__0__Impl rule__AcmeConnectorTypeDeclaration__Group__1 ;
    public final void rule__AcmeConnectorTypeDeclaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11630:1: ( rule__AcmeConnectorTypeDeclaration__Group__0__Impl rule__AcmeConnectorTypeDeclaration__Group__1 )
            // InternalAcmeParser.g:11631:2: rule__AcmeConnectorTypeDeclaration__Group__0__Impl rule__AcmeConnectorTypeDeclaration__Group__1
            {
            pushFollow(FOLLOW_42);
            rule__AcmeConnectorTypeDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorTypeDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Group__0"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Group__0__Impl"
    // InternalAcmeParser.g:11638:1: rule__AcmeConnectorTypeDeclaration__Group__0__Impl : ( ( rule__AcmeConnectorTypeDeclaration__VisibilityAssignment_0 )? ) ;
    public final void rule__AcmeConnectorTypeDeclaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11642:1: ( ( ( rule__AcmeConnectorTypeDeclaration__VisibilityAssignment_0 )? ) )
            // InternalAcmeParser.g:11643:1: ( ( rule__AcmeConnectorTypeDeclaration__VisibilityAssignment_0 )? )
            {
            // InternalAcmeParser.g:11643:1: ( ( rule__AcmeConnectorTypeDeclaration__VisibilityAssignment_0 )? )
            // InternalAcmeParser.g:11644:2: ( rule__AcmeConnectorTypeDeclaration__VisibilityAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getVisibilityAssignment_0()); 
            }
            // InternalAcmeParser.g:11645:2: ( rule__AcmeConnectorTypeDeclaration__VisibilityAssignment_0 )?
            int alt151=2;
            int LA151_0 = input.LA(1);

            if ( (LA151_0==Private||LA151_0==Public) ) {
                alt151=1;
            }
            switch (alt151) {
                case 1 :
                    // InternalAcmeParser.g:11645:3: rule__AcmeConnectorTypeDeclaration__VisibilityAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeConnectorTypeDeclaration__VisibilityAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getVisibilityAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Group__0__Impl"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Group__1"
    // InternalAcmeParser.g:11653:1: rule__AcmeConnectorTypeDeclaration__Group__1 : rule__AcmeConnectorTypeDeclaration__Group__1__Impl rule__AcmeConnectorTypeDeclaration__Group__2 ;
    public final void rule__AcmeConnectorTypeDeclaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11657:1: ( rule__AcmeConnectorTypeDeclaration__Group__1__Impl rule__AcmeConnectorTypeDeclaration__Group__2 )
            // InternalAcmeParser.g:11658:2: rule__AcmeConnectorTypeDeclaration__Group__1__Impl rule__AcmeConnectorTypeDeclaration__Group__2
            {
            pushFollow(FOLLOW_42);
            rule__AcmeConnectorTypeDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorTypeDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Group__1"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Group__1__Impl"
    // InternalAcmeParser.g:11665:1: rule__AcmeConnectorTypeDeclaration__Group__1__Impl : ( ( rule__AcmeConnectorTypeDeclaration__ExtensibilityAssignment_1 )? ) ;
    public final void rule__AcmeConnectorTypeDeclaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11669:1: ( ( ( rule__AcmeConnectorTypeDeclaration__ExtensibilityAssignment_1 )? ) )
            // InternalAcmeParser.g:11670:1: ( ( rule__AcmeConnectorTypeDeclaration__ExtensibilityAssignment_1 )? )
            {
            // InternalAcmeParser.g:11670:1: ( ( rule__AcmeConnectorTypeDeclaration__ExtensibilityAssignment_1 )? )
            // InternalAcmeParser.g:11671:2: ( rule__AcmeConnectorTypeDeclaration__ExtensibilityAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getExtensibilityAssignment_1()); 
            }
            // InternalAcmeParser.g:11672:2: ( rule__AcmeConnectorTypeDeclaration__ExtensibilityAssignment_1 )?
            int alt152=2;
            int LA152_0 = input.LA(1);

            if ( (LA152_0==Abstract||LA152_0==Final) ) {
                alt152=1;
            }
            switch (alt152) {
                case 1 :
                    // InternalAcmeParser.g:11672:3: rule__AcmeConnectorTypeDeclaration__ExtensibilityAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeConnectorTypeDeclaration__ExtensibilityAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getExtensibilityAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Group__1__Impl"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Group__2"
    // InternalAcmeParser.g:11680:1: rule__AcmeConnectorTypeDeclaration__Group__2 : rule__AcmeConnectorTypeDeclaration__Group__2__Impl rule__AcmeConnectorTypeDeclaration__Group__3 ;
    public final void rule__AcmeConnectorTypeDeclaration__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11684:1: ( rule__AcmeConnectorTypeDeclaration__Group__2__Impl rule__AcmeConnectorTypeDeclaration__Group__3 )
            // InternalAcmeParser.g:11685:2: rule__AcmeConnectorTypeDeclaration__Group__2__Impl rule__AcmeConnectorTypeDeclaration__Group__3
            {
            pushFollow(FOLLOW_24);
            rule__AcmeConnectorTypeDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorTypeDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Group__2"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Group__2__Impl"
    // InternalAcmeParser.g:11692:1: rule__AcmeConnectorTypeDeclaration__Group__2__Impl : ( ( Connector ) ) ;
    public final void rule__AcmeConnectorTypeDeclaration__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11696:1: ( ( ( Connector ) ) )
            // InternalAcmeParser.g:11697:1: ( ( Connector ) )
            {
            // InternalAcmeParser.g:11697:1: ( ( Connector ) )
            // InternalAcmeParser.g:11698:2: ( Connector )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getConnectorKeyword_2()); 
            }
            // InternalAcmeParser.g:11699:2: ( Connector )
            // InternalAcmeParser.g:11699:3: Connector
            {
            match(input,Connector,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getConnectorKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Group__2__Impl"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Group__3"
    // InternalAcmeParser.g:11707:1: rule__AcmeConnectorTypeDeclaration__Group__3 : rule__AcmeConnectorTypeDeclaration__Group__3__Impl rule__AcmeConnectorTypeDeclaration__Group__4 ;
    public final void rule__AcmeConnectorTypeDeclaration__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11711:1: ( rule__AcmeConnectorTypeDeclaration__Group__3__Impl rule__AcmeConnectorTypeDeclaration__Group__4 )
            // InternalAcmeParser.g:11712:2: rule__AcmeConnectorTypeDeclaration__Group__3__Impl rule__AcmeConnectorTypeDeclaration__Group__4
            {
            pushFollow(FOLLOW_11);
            rule__AcmeConnectorTypeDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorTypeDeclaration__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Group__3"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Group__3__Impl"
    // InternalAcmeParser.g:11719:1: rule__AcmeConnectorTypeDeclaration__Group__3__Impl : ( Type ) ;
    public final void rule__AcmeConnectorTypeDeclaration__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11723:1: ( ( Type ) )
            // InternalAcmeParser.g:11724:1: ( Type )
            {
            // InternalAcmeParser.g:11724:1: ( Type )
            // InternalAcmeParser.g:11725:2: Type
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getTypeKeyword_3()); 
            }
            match(input,Type,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getTypeKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Group__3__Impl"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Group__4"
    // InternalAcmeParser.g:11734:1: rule__AcmeConnectorTypeDeclaration__Group__4 : rule__AcmeConnectorTypeDeclaration__Group__4__Impl rule__AcmeConnectorTypeDeclaration__Group__5 ;
    public final void rule__AcmeConnectorTypeDeclaration__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11738:1: ( rule__AcmeConnectorTypeDeclaration__Group__4__Impl rule__AcmeConnectorTypeDeclaration__Group__5 )
            // InternalAcmeParser.g:11739:2: rule__AcmeConnectorTypeDeclaration__Group__4__Impl rule__AcmeConnectorTypeDeclaration__Group__5
            {
            pushFollow(FOLLOW_12);
            rule__AcmeConnectorTypeDeclaration__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorTypeDeclaration__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Group__4"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Group__4__Impl"
    // InternalAcmeParser.g:11746:1: rule__AcmeConnectorTypeDeclaration__Group__4__Impl : ( ( rule__AcmeConnectorTypeDeclaration__NameAssignment_4 ) ) ;
    public final void rule__AcmeConnectorTypeDeclaration__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11750:1: ( ( ( rule__AcmeConnectorTypeDeclaration__NameAssignment_4 ) ) )
            // InternalAcmeParser.g:11751:1: ( ( rule__AcmeConnectorTypeDeclaration__NameAssignment_4 ) )
            {
            // InternalAcmeParser.g:11751:1: ( ( rule__AcmeConnectorTypeDeclaration__NameAssignment_4 ) )
            // InternalAcmeParser.g:11752:2: ( rule__AcmeConnectorTypeDeclaration__NameAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getNameAssignment_4()); 
            }
            // InternalAcmeParser.g:11753:2: ( rule__AcmeConnectorTypeDeclaration__NameAssignment_4 )
            // InternalAcmeParser.g:11753:3: rule__AcmeConnectorTypeDeclaration__NameAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorTypeDeclaration__NameAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getNameAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Group__4__Impl"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Group__5"
    // InternalAcmeParser.g:11761:1: rule__AcmeConnectorTypeDeclaration__Group__5 : rule__AcmeConnectorTypeDeclaration__Group__5__Impl ;
    public final void rule__AcmeConnectorTypeDeclaration__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11765:1: ( rule__AcmeConnectorTypeDeclaration__Group__5__Impl )
            // InternalAcmeParser.g:11766:2: rule__AcmeConnectorTypeDeclaration__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorTypeDeclaration__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Group__5"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Group__5__Impl"
    // InternalAcmeParser.g:11772:1: rule__AcmeConnectorTypeDeclaration__Group__5__Impl : ( ( rule__AcmeConnectorTypeDeclaration__Alternatives_5 ) ) ;
    public final void rule__AcmeConnectorTypeDeclaration__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11776:1: ( ( ( rule__AcmeConnectorTypeDeclaration__Alternatives_5 ) ) )
            // InternalAcmeParser.g:11777:1: ( ( rule__AcmeConnectorTypeDeclaration__Alternatives_5 ) )
            {
            // InternalAcmeParser.g:11777:1: ( ( rule__AcmeConnectorTypeDeclaration__Alternatives_5 ) )
            // InternalAcmeParser.g:11778:2: ( rule__AcmeConnectorTypeDeclaration__Alternatives_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getAlternatives_5()); 
            }
            // InternalAcmeParser.g:11779:2: ( rule__AcmeConnectorTypeDeclaration__Alternatives_5 )
            // InternalAcmeParser.g:11779:3: rule__AcmeConnectorTypeDeclaration__Alternatives_5
            {
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorTypeDeclaration__Alternatives_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getAlternatives_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Group__5__Impl"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Group_5_1_0__0"
    // InternalAcmeParser.g:11788:1: rule__AcmeConnectorTypeDeclaration__Group_5_1_0__0 : rule__AcmeConnectorTypeDeclaration__Group_5_1_0__0__Impl rule__AcmeConnectorTypeDeclaration__Group_5_1_0__1 ;
    public final void rule__AcmeConnectorTypeDeclaration__Group_5_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11792:1: ( rule__AcmeConnectorTypeDeclaration__Group_5_1_0__0__Impl rule__AcmeConnectorTypeDeclaration__Group_5_1_0__1 )
            // InternalAcmeParser.g:11793:2: rule__AcmeConnectorTypeDeclaration__Group_5_1_0__0__Impl rule__AcmeConnectorTypeDeclaration__Group_5_1_0__1
            {
            pushFollow(FOLLOW_13);
            rule__AcmeConnectorTypeDeclaration__Group_5_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorTypeDeclaration__Group_5_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Group_5_1_0__0"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Group_5_1_0__0__Impl"
    // InternalAcmeParser.g:11800:1: rule__AcmeConnectorTypeDeclaration__Group_5_1_0__0__Impl : ( EqualsSign ) ;
    public final void rule__AcmeConnectorTypeDeclaration__Group_5_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11804:1: ( ( EqualsSign ) )
            // InternalAcmeParser.g:11805:1: ( EqualsSign )
            {
            // InternalAcmeParser.g:11805:1: ( EqualsSign )
            // InternalAcmeParser.g:11806:2: EqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getEqualsSignKeyword_5_1_0_0()); 
            }
            match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getEqualsSignKeyword_5_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Group_5_1_0__0__Impl"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Group_5_1_0__1"
    // InternalAcmeParser.g:11815:1: rule__AcmeConnectorTypeDeclaration__Group_5_1_0__1 : rule__AcmeConnectorTypeDeclaration__Group_5_1_0__1__Impl ;
    public final void rule__AcmeConnectorTypeDeclaration__Group_5_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11819:1: ( rule__AcmeConnectorTypeDeclaration__Group_5_1_0__1__Impl )
            // InternalAcmeParser.g:11820:2: rule__AcmeConnectorTypeDeclaration__Group_5_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorTypeDeclaration__Group_5_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Group_5_1_0__1"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Group_5_1_0__1__Impl"
    // InternalAcmeParser.g:11826:1: rule__AcmeConnectorTypeDeclaration__Group_5_1_0__1__Impl : ( ( rule__AcmeConnectorTypeDeclaration__BodyAssignment_5_1_0_1 ) ) ;
    public final void rule__AcmeConnectorTypeDeclaration__Group_5_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11830:1: ( ( ( rule__AcmeConnectorTypeDeclaration__BodyAssignment_5_1_0_1 ) ) )
            // InternalAcmeParser.g:11831:1: ( ( rule__AcmeConnectorTypeDeclaration__BodyAssignment_5_1_0_1 ) )
            {
            // InternalAcmeParser.g:11831:1: ( ( rule__AcmeConnectorTypeDeclaration__BodyAssignment_5_1_0_1 ) )
            // InternalAcmeParser.g:11832:2: ( rule__AcmeConnectorTypeDeclaration__BodyAssignment_5_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getBodyAssignment_5_1_0_1()); 
            }
            // InternalAcmeParser.g:11833:2: ( rule__AcmeConnectorTypeDeclaration__BodyAssignment_5_1_0_1 )
            // InternalAcmeParser.g:11833:3: rule__AcmeConnectorTypeDeclaration__BodyAssignment_5_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorTypeDeclaration__BodyAssignment_5_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getBodyAssignment_5_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Group_5_1_0__1__Impl"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Group_5_1_1__0"
    // InternalAcmeParser.g:11842:1: rule__AcmeConnectorTypeDeclaration__Group_5_1_1__0 : rule__AcmeConnectorTypeDeclaration__Group_5_1_1__0__Impl rule__AcmeConnectorTypeDeclaration__Group_5_1_1__1 ;
    public final void rule__AcmeConnectorTypeDeclaration__Group_5_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11846:1: ( rule__AcmeConnectorTypeDeclaration__Group_5_1_1__0__Impl rule__AcmeConnectorTypeDeclaration__Group_5_1_1__1 )
            // InternalAcmeParser.g:11847:2: rule__AcmeConnectorTypeDeclaration__Group_5_1_1__0__Impl rule__AcmeConnectorTypeDeclaration__Group_5_1_1__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeConnectorTypeDeclaration__Group_5_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorTypeDeclaration__Group_5_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Group_5_1_1__0"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Group_5_1_1__0__Impl"
    // InternalAcmeParser.g:11854:1: rule__AcmeConnectorTypeDeclaration__Group_5_1_1__0__Impl : ( Extends ) ;
    public final void rule__AcmeConnectorTypeDeclaration__Group_5_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11858:1: ( ( Extends ) )
            // InternalAcmeParser.g:11859:1: ( Extends )
            {
            // InternalAcmeParser.g:11859:1: ( Extends )
            // InternalAcmeParser.g:11860:2: Extends
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getExtendsKeyword_5_1_1_0()); 
            }
            match(input,Extends,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getExtendsKeyword_5_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Group_5_1_1__0__Impl"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Group_5_1_1__1"
    // InternalAcmeParser.g:11869:1: rule__AcmeConnectorTypeDeclaration__Group_5_1_1__1 : rule__AcmeConnectorTypeDeclaration__Group_5_1_1__1__Impl rule__AcmeConnectorTypeDeclaration__Group_5_1_1__2 ;
    public final void rule__AcmeConnectorTypeDeclaration__Group_5_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11873:1: ( rule__AcmeConnectorTypeDeclaration__Group_5_1_1__1__Impl rule__AcmeConnectorTypeDeclaration__Group_5_1_1__2 )
            // InternalAcmeParser.g:11874:2: rule__AcmeConnectorTypeDeclaration__Group_5_1_1__1__Impl rule__AcmeConnectorTypeDeclaration__Group_5_1_1__2
            {
            pushFollow(FOLLOW_25);
            rule__AcmeConnectorTypeDeclaration__Group_5_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorTypeDeclaration__Group_5_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Group_5_1_1__1"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Group_5_1_1__1__Impl"
    // InternalAcmeParser.g:11881:1: rule__AcmeConnectorTypeDeclaration__Group_5_1_1__1__Impl : ( ( rule__AcmeConnectorTypeDeclaration__RefsAssignment_5_1_1_1 ) ) ;
    public final void rule__AcmeConnectorTypeDeclaration__Group_5_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11885:1: ( ( ( rule__AcmeConnectorTypeDeclaration__RefsAssignment_5_1_1_1 ) ) )
            // InternalAcmeParser.g:11886:1: ( ( rule__AcmeConnectorTypeDeclaration__RefsAssignment_5_1_1_1 ) )
            {
            // InternalAcmeParser.g:11886:1: ( ( rule__AcmeConnectorTypeDeclaration__RefsAssignment_5_1_1_1 ) )
            // InternalAcmeParser.g:11887:2: ( rule__AcmeConnectorTypeDeclaration__RefsAssignment_5_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getRefsAssignment_5_1_1_1()); 
            }
            // InternalAcmeParser.g:11888:2: ( rule__AcmeConnectorTypeDeclaration__RefsAssignment_5_1_1_1 )
            // InternalAcmeParser.g:11888:3: rule__AcmeConnectorTypeDeclaration__RefsAssignment_5_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorTypeDeclaration__RefsAssignment_5_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getRefsAssignment_5_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Group_5_1_1__1__Impl"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Group_5_1_1__2"
    // InternalAcmeParser.g:11896:1: rule__AcmeConnectorTypeDeclaration__Group_5_1_1__2 : rule__AcmeConnectorTypeDeclaration__Group_5_1_1__2__Impl rule__AcmeConnectorTypeDeclaration__Group_5_1_1__3 ;
    public final void rule__AcmeConnectorTypeDeclaration__Group_5_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11900:1: ( rule__AcmeConnectorTypeDeclaration__Group_5_1_1__2__Impl rule__AcmeConnectorTypeDeclaration__Group_5_1_1__3 )
            // InternalAcmeParser.g:11901:2: rule__AcmeConnectorTypeDeclaration__Group_5_1_1__2__Impl rule__AcmeConnectorTypeDeclaration__Group_5_1_1__3
            {
            pushFollow(FOLLOW_25);
            rule__AcmeConnectorTypeDeclaration__Group_5_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorTypeDeclaration__Group_5_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Group_5_1_1__2"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Group_5_1_1__2__Impl"
    // InternalAcmeParser.g:11908:1: rule__AcmeConnectorTypeDeclaration__Group_5_1_1__2__Impl : ( ( rule__AcmeConnectorTypeDeclaration__Group_5_1_1_2__0 )* ) ;
    public final void rule__AcmeConnectorTypeDeclaration__Group_5_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11912:1: ( ( ( rule__AcmeConnectorTypeDeclaration__Group_5_1_1_2__0 )* ) )
            // InternalAcmeParser.g:11913:1: ( ( rule__AcmeConnectorTypeDeclaration__Group_5_1_1_2__0 )* )
            {
            // InternalAcmeParser.g:11913:1: ( ( rule__AcmeConnectorTypeDeclaration__Group_5_1_1_2__0 )* )
            // InternalAcmeParser.g:11914:2: ( rule__AcmeConnectorTypeDeclaration__Group_5_1_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getGroup_5_1_1_2()); 
            }
            // InternalAcmeParser.g:11915:2: ( rule__AcmeConnectorTypeDeclaration__Group_5_1_1_2__0 )*
            loop153:
            do {
                int alt153=2;
                int LA153_0 = input.LA(1);

                if ( (LA153_0==Comma) ) {
                    alt153=1;
                }


                switch (alt153) {
            	case 1 :
            	    // InternalAcmeParser.g:11915:3: rule__AcmeConnectorTypeDeclaration__Group_5_1_1_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__AcmeConnectorTypeDeclaration__Group_5_1_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop153;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getGroup_5_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Group_5_1_1__2__Impl"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Group_5_1_1__3"
    // InternalAcmeParser.g:11923:1: rule__AcmeConnectorTypeDeclaration__Group_5_1_1__3 : rule__AcmeConnectorTypeDeclaration__Group_5_1_1__3__Impl ;
    public final void rule__AcmeConnectorTypeDeclaration__Group_5_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11927:1: ( rule__AcmeConnectorTypeDeclaration__Group_5_1_1__3__Impl )
            // InternalAcmeParser.g:11928:2: rule__AcmeConnectorTypeDeclaration__Group_5_1_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorTypeDeclaration__Group_5_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Group_5_1_1__3"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Group_5_1_1__3__Impl"
    // InternalAcmeParser.g:11934:1: rule__AcmeConnectorTypeDeclaration__Group_5_1_1__3__Impl : ( ( rule__AcmeConnectorTypeDeclaration__Alternatives_5_1_1_3 ) ) ;
    public final void rule__AcmeConnectorTypeDeclaration__Group_5_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11938:1: ( ( ( rule__AcmeConnectorTypeDeclaration__Alternatives_5_1_1_3 ) ) )
            // InternalAcmeParser.g:11939:1: ( ( rule__AcmeConnectorTypeDeclaration__Alternatives_5_1_1_3 ) )
            {
            // InternalAcmeParser.g:11939:1: ( ( rule__AcmeConnectorTypeDeclaration__Alternatives_5_1_1_3 ) )
            // InternalAcmeParser.g:11940:2: ( rule__AcmeConnectorTypeDeclaration__Alternatives_5_1_1_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getAlternatives_5_1_1_3()); 
            }
            // InternalAcmeParser.g:11941:2: ( rule__AcmeConnectorTypeDeclaration__Alternatives_5_1_1_3 )
            // InternalAcmeParser.g:11941:3: rule__AcmeConnectorTypeDeclaration__Alternatives_5_1_1_3
            {
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorTypeDeclaration__Alternatives_5_1_1_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getAlternatives_5_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Group_5_1_1__3__Impl"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Group_5_1_1_2__0"
    // InternalAcmeParser.g:11950:1: rule__AcmeConnectorTypeDeclaration__Group_5_1_1_2__0 : rule__AcmeConnectorTypeDeclaration__Group_5_1_1_2__0__Impl rule__AcmeConnectorTypeDeclaration__Group_5_1_1_2__1 ;
    public final void rule__AcmeConnectorTypeDeclaration__Group_5_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11954:1: ( rule__AcmeConnectorTypeDeclaration__Group_5_1_1_2__0__Impl rule__AcmeConnectorTypeDeclaration__Group_5_1_1_2__1 )
            // InternalAcmeParser.g:11955:2: rule__AcmeConnectorTypeDeclaration__Group_5_1_1_2__0__Impl rule__AcmeConnectorTypeDeclaration__Group_5_1_1_2__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeConnectorTypeDeclaration__Group_5_1_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorTypeDeclaration__Group_5_1_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Group_5_1_1_2__0"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Group_5_1_1_2__0__Impl"
    // InternalAcmeParser.g:11962:1: rule__AcmeConnectorTypeDeclaration__Group_5_1_1_2__0__Impl : ( Comma ) ;
    public final void rule__AcmeConnectorTypeDeclaration__Group_5_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11966:1: ( ( Comma ) )
            // InternalAcmeParser.g:11967:1: ( Comma )
            {
            // InternalAcmeParser.g:11967:1: ( Comma )
            // InternalAcmeParser.g:11968:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getCommaKeyword_5_1_1_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getCommaKeyword_5_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Group_5_1_1_2__0__Impl"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Group_5_1_1_2__1"
    // InternalAcmeParser.g:11977:1: rule__AcmeConnectorTypeDeclaration__Group_5_1_1_2__1 : rule__AcmeConnectorTypeDeclaration__Group_5_1_1_2__1__Impl ;
    public final void rule__AcmeConnectorTypeDeclaration__Group_5_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11981:1: ( rule__AcmeConnectorTypeDeclaration__Group_5_1_1_2__1__Impl )
            // InternalAcmeParser.g:11982:2: rule__AcmeConnectorTypeDeclaration__Group_5_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorTypeDeclaration__Group_5_1_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Group_5_1_1_2__1"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Group_5_1_1_2__1__Impl"
    // InternalAcmeParser.g:11988:1: rule__AcmeConnectorTypeDeclaration__Group_5_1_1_2__1__Impl : ( ( rule__AcmeConnectorTypeDeclaration__RefsAssignment_5_1_1_2_1 ) ) ;
    public final void rule__AcmeConnectorTypeDeclaration__Group_5_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:11992:1: ( ( ( rule__AcmeConnectorTypeDeclaration__RefsAssignment_5_1_1_2_1 ) ) )
            // InternalAcmeParser.g:11993:1: ( ( rule__AcmeConnectorTypeDeclaration__RefsAssignment_5_1_1_2_1 ) )
            {
            // InternalAcmeParser.g:11993:1: ( ( rule__AcmeConnectorTypeDeclaration__RefsAssignment_5_1_1_2_1 ) )
            // InternalAcmeParser.g:11994:2: ( rule__AcmeConnectorTypeDeclaration__RefsAssignment_5_1_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getRefsAssignment_5_1_1_2_1()); 
            }
            // InternalAcmeParser.g:11995:2: ( rule__AcmeConnectorTypeDeclaration__RefsAssignment_5_1_1_2_1 )
            // InternalAcmeParser.g:11995:3: rule__AcmeConnectorTypeDeclaration__RefsAssignment_5_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorTypeDeclaration__RefsAssignment_5_1_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getRefsAssignment_5_1_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Group_5_1_1_2__1__Impl"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__0"
    // InternalAcmeParser.g:12004:1: rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__0 : rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__0__Impl rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__1 ;
    public final void rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12008:1: ( rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__0__Impl rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__1 )
            // InternalAcmeParser.g:12009:2: rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__0__Impl rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__1
            {
            pushFollow(FOLLOW_13);
            rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__0"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__0__Impl"
    // InternalAcmeParser.g:12016:1: rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__0__Impl : ( With ) ;
    public final void rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12020:1: ( ( With ) )
            // InternalAcmeParser.g:12021:1: ( With )
            {
            // InternalAcmeParser.g:12021:1: ( With )
            // InternalAcmeParser.g:12022:2: With
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getWithKeyword_5_1_1_3_1_0()); 
            }
            match(input,With,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getWithKeyword_5_1_1_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__0__Impl"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__1"
    // InternalAcmeParser.g:12031:1: rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__1 : rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__1__Impl rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__2 ;
    public final void rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12035:1: ( rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__1__Impl rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__2 )
            // InternalAcmeParser.g:12036:2: rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__1__Impl rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__2
            {
            pushFollow(FOLLOW_7);
            rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__1"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__1__Impl"
    // InternalAcmeParser.g:12043:1: rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__1__Impl : ( ( rule__AcmeConnectorTypeDeclaration__BodyAssignment_5_1_1_3_1_1 ) ) ;
    public final void rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12047:1: ( ( ( rule__AcmeConnectorTypeDeclaration__BodyAssignment_5_1_1_3_1_1 ) ) )
            // InternalAcmeParser.g:12048:1: ( ( rule__AcmeConnectorTypeDeclaration__BodyAssignment_5_1_1_3_1_1 ) )
            {
            // InternalAcmeParser.g:12048:1: ( ( rule__AcmeConnectorTypeDeclaration__BodyAssignment_5_1_1_3_1_1 ) )
            // InternalAcmeParser.g:12049:2: ( rule__AcmeConnectorTypeDeclaration__BodyAssignment_5_1_1_3_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getBodyAssignment_5_1_1_3_1_1()); 
            }
            // InternalAcmeParser.g:12050:2: ( rule__AcmeConnectorTypeDeclaration__BodyAssignment_5_1_1_3_1_1 )
            // InternalAcmeParser.g:12050:3: rule__AcmeConnectorTypeDeclaration__BodyAssignment_5_1_1_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorTypeDeclaration__BodyAssignment_5_1_1_3_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getBodyAssignment_5_1_1_3_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__1__Impl"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__2"
    // InternalAcmeParser.g:12058:1: rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__2 : rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__2__Impl ;
    public final void rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12062:1: ( rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__2__Impl )
            // InternalAcmeParser.g:12063:2: rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__2"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__2__Impl"
    // InternalAcmeParser.g:12069:1: rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__2__Impl : ( ( Semicolon )? ) ;
    public final void rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12073:1: ( ( ( Semicolon )? ) )
            // InternalAcmeParser.g:12074:1: ( ( Semicolon )? )
            {
            // InternalAcmeParser.g:12074:1: ( ( Semicolon )? )
            // InternalAcmeParser.g:12075:2: ( Semicolon )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getSemicolonKeyword_5_1_1_3_1_2()); 
            }
            // InternalAcmeParser.g:12076:2: ( Semicolon )?
            int alt154=2;
            int LA154_0 = input.LA(1);

            if ( (LA154_0==Semicolon) ) {
                alt154=1;
            }
            switch (alt154) {
                case 1 :
                    // InternalAcmeParser.g:12076:3: Semicolon
                    {
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getSemicolonKeyword_5_1_1_3_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__Group_5_1_1_3_1__2__Impl"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group__0"
    // InternalAcmeParser.g:12085:1: rule__AcmeConnectorDeclaration__Group__0 : rule__AcmeConnectorDeclaration__Group__0__Impl rule__AcmeConnectorDeclaration__Group__1 ;
    public final void rule__AcmeConnectorDeclaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12089:1: ( rule__AcmeConnectorDeclaration__Group__0__Impl rule__AcmeConnectorDeclaration__Group__1 )
            // InternalAcmeParser.g:12090:2: rule__AcmeConnectorDeclaration__Group__0__Impl rule__AcmeConnectorDeclaration__Group__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeConnectorDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group__0"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group__0__Impl"
    // InternalAcmeParser.g:12097:1: rule__AcmeConnectorDeclaration__Group__0__Impl : ( Connector ) ;
    public final void rule__AcmeConnectorDeclaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12101:1: ( ( Connector ) )
            // InternalAcmeParser.g:12102:1: ( Connector )
            {
            // InternalAcmeParser.g:12102:1: ( Connector )
            // InternalAcmeParser.g:12103:2: Connector
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorDeclarationAccess().getConnectorKeyword_0()); 
            }
            match(input,Connector,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorDeclarationAccess().getConnectorKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group__0__Impl"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group__1"
    // InternalAcmeParser.g:12112:1: rule__AcmeConnectorDeclaration__Group__1 : rule__AcmeConnectorDeclaration__Group__1__Impl rule__AcmeConnectorDeclaration__Group__2 ;
    public final void rule__AcmeConnectorDeclaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12116:1: ( rule__AcmeConnectorDeclaration__Group__1__Impl rule__AcmeConnectorDeclaration__Group__2 )
            // InternalAcmeParser.g:12117:2: rule__AcmeConnectorDeclaration__Group__1__Impl rule__AcmeConnectorDeclaration__Group__2
            {
            pushFollow(FOLLOW_18);
            rule__AcmeConnectorDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group__1"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group__1__Impl"
    // InternalAcmeParser.g:12124:1: rule__AcmeConnectorDeclaration__Group__1__Impl : ( ( rule__AcmeConnectorDeclaration__NameAssignment_1 ) ) ;
    public final void rule__AcmeConnectorDeclaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12128:1: ( ( ( rule__AcmeConnectorDeclaration__NameAssignment_1 ) ) )
            // InternalAcmeParser.g:12129:1: ( ( rule__AcmeConnectorDeclaration__NameAssignment_1 ) )
            {
            // InternalAcmeParser.g:12129:1: ( ( rule__AcmeConnectorDeclaration__NameAssignment_1 ) )
            // InternalAcmeParser.g:12130:2: ( rule__AcmeConnectorDeclaration__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorDeclarationAccess().getNameAssignment_1()); 
            }
            // InternalAcmeParser.g:12131:2: ( rule__AcmeConnectorDeclaration__NameAssignment_1 )
            // InternalAcmeParser.g:12131:3: rule__AcmeConnectorDeclaration__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorDeclaration__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorDeclarationAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group__1__Impl"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group__2"
    // InternalAcmeParser.g:12139:1: rule__AcmeConnectorDeclaration__Group__2 : rule__AcmeConnectorDeclaration__Group__2__Impl rule__AcmeConnectorDeclaration__Group__3 ;
    public final void rule__AcmeConnectorDeclaration__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12143:1: ( rule__AcmeConnectorDeclaration__Group__2__Impl rule__AcmeConnectorDeclaration__Group__3 )
            // InternalAcmeParser.g:12144:2: rule__AcmeConnectorDeclaration__Group__2__Impl rule__AcmeConnectorDeclaration__Group__3
            {
            pushFollow(FOLLOW_18);
            rule__AcmeConnectorDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group__2"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group__2__Impl"
    // InternalAcmeParser.g:12151:1: rule__AcmeConnectorDeclaration__Group__2__Impl : ( ( rule__AcmeConnectorDeclaration__Group_2__0 )? ) ;
    public final void rule__AcmeConnectorDeclaration__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12155:1: ( ( ( rule__AcmeConnectorDeclaration__Group_2__0 )? ) )
            // InternalAcmeParser.g:12156:1: ( ( rule__AcmeConnectorDeclaration__Group_2__0 )? )
            {
            // InternalAcmeParser.g:12156:1: ( ( rule__AcmeConnectorDeclaration__Group_2__0 )? )
            // InternalAcmeParser.g:12157:2: ( rule__AcmeConnectorDeclaration__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorDeclarationAccess().getGroup_2()); 
            }
            // InternalAcmeParser.g:12158:2: ( rule__AcmeConnectorDeclaration__Group_2__0 )?
            int alt155=2;
            int LA155_0 = input.LA(1);

            if ( (LA155_0==Colon) ) {
                alt155=1;
            }
            switch (alt155) {
                case 1 :
                    // InternalAcmeParser.g:12158:3: rule__AcmeConnectorDeclaration__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeConnectorDeclaration__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorDeclarationAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group__2__Impl"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group__3"
    // InternalAcmeParser.g:12166:1: rule__AcmeConnectorDeclaration__Group__3 : rule__AcmeConnectorDeclaration__Group__3__Impl ;
    public final void rule__AcmeConnectorDeclaration__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12170:1: ( rule__AcmeConnectorDeclaration__Group__3__Impl )
            // InternalAcmeParser.g:12171:2: rule__AcmeConnectorDeclaration__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group__3"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group__3__Impl"
    // InternalAcmeParser.g:12177:1: rule__AcmeConnectorDeclaration__Group__3__Impl : ( ( rule__AcmeConnectorDeclaration__Alternatives_3 ) ) ;
    public final void rule__AcmeConnectorDeclaration__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12181:1: ( ( ( rule__AcmeConnectorDeclaration__Alternatives_3 ) ) )
            // InternalAcmeParser.g:12182:1: ( ( rule__AcmeConnectorDeclaration__Alternatives_3 ) )
            {
            // InternalAcmeParser.g:12182:1: ( ( rule__AcmeConnectorDeclaration__Alternatives_3 ) )
            // InternalAcmeParser.g:12183:2: ( rule__AcmeConnectorDeclaration__Alternatives_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorDeclarationAccess().getAlternatives_3()); 
            }
            // InternalAcmeParser.g:12184:2: ( rule__AcmeConnectorDeclaration__Alternatives_3 )
            // InternalAcmeParser.g:12184:3: rule__AcmeConnectorDeclaration__Alternatives_3
            {
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorDeclaration__Alternatives_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorDeclarationAccess().getAlternatives_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group__3__Impl"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_2__0"
    // InternalAcmeParser.g:12193:1: rule__AcmeConnectorDeclaration__Group_2__0 : rule__AcmeConnectorDeclaration__Group_2__0__Impl rule__AcmeConnectorDeclaration__Group_2__1 ;
    public final void rule__AcmeConnectorDeclaration__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12197:1: ( rule__AcmeConnectorDeclaration__Group_2__0__Impl rule__AcmeConnectorDeclaration__Group_2__1 )
            // InternalAcmeParser.g:12198:2: rule__AcmeConnectorDeclaration__Group_2__0__Impl rule__AcmeConnectorDeclaration__Group_2__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeConnectorDeclaration__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorDeclaration__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_2__0"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_2__0__Impl"
    // InternalAcmeParser.g:12205:1: rule__AcmeConnectorDeclaration__Group_2__0__Impl : ( Colon ) ;
    public final void rule__AcmeConnectorDeclaration__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12209:1: ( ( Colon ) )
            // InternalAcmeParser.g:12210:1: ( Colon )
            {
            // InternalAcmeParser.g:12210:1: ( Colon )
            // InternalAcmeParser.g:12211:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorDeclarationAccess().getColonKeyword_2_0()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorDeclarationAccess().getColonKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_2__0__Impl"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_2__1"
    // InternalAcmeParser.g:12220:1: rule__AcmeConnectorDeclaration__Group_2__1 : rule__AcmeConnectorDeclaration__Group_2__1__Impl rule__AcmeConnectorDeclaration__Group_2__2 ;
    public final void rule__AcmeConnectorDeclaration__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12224:1: ( rule__AcmeConnectorDeclaration__Group_2__1__Impl rule__AcmeConnectorDeclaration__Group_2__2 )
            // InternalAcmeParser.g:12225:2: rule__AcmeConnectorDeclaration__Group_2__1__Impl rule__AcmeConnectorDeclaration__Group_2__2
            {
            pushFollow(FOLLOW_19);
            rule__AcmeConnectorDeclaration__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorDeclaration__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_2__1"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_2__1__Impl"
    // InternalAcmeParser.g:12232:1: rule__AcmeConnectorDeclaration__Group_2__1__Impl : ( ( rule__AcmeConnectorDeclaration__DeclaredAssignment_2_1 ) ) ;
    public final void rule__AcmeConnectorDeclaration__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12236:1: ( ( ( rule__AcmeConnectorDeclaration__DeclaredAssignment_2_1 ) ) )
            // InternalAcmeParser.g:12237:1: ( ( rule__AcmeConnectorDeclaration__DeclaredAssignment_2_1 ) )
            {
            // InternalAcmeParser.g:12237:1: ( ( rule__AcmeConnectorDeclaration__DeclaredAssignment_2_1 ) )
            // InternalAcmeParser.g:12238:2: ( rule__AcmeConnectorDeclaration__DeclaredAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorDeclarationAccess().getDeclaredAssignment_2_1()); 
            }
            // InternalAcmeParser.g:12239:2: ( rule__AcmeConnectorDeclaration__DeclaredAssignment_2_1 )
            // InternalAcmeParser.g:12239:3: rule__AcmeConnectorDeclaration__DeclaredAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorDeclaration__DeclaredAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorDeclarationAccess().getDeclaredAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_2__1__Impl"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_2__2"
    // InternalAcmeParser.g:12247:1: rule__AcmeConnectorDeclaration__Group_2__2 : rule__AcmeConnectorDeclaration__Group_2__2__Impl ;
    public final void rule__AcmeConnectorDeclaration__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12251:1: ( rule__AcmeConnectorDeclaration__Group_2__2__Impl )
            // InternalAcmeParser.g:12252:2: rule__AcmeConnectorDeclaration__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorDeclaration__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_2__2"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_2__2__Impl"
    // InternalAcmeParser.g:12258:1: rule__AcmeConnectorDeclaration__Group_2__2__Impl : ( ( rule__AcmeConnectorDeclaration__Group_2_2__0 )* ) ;
    public final void rule__AcmeConnectorDeclaration__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12262:1: ( ( ( rule__AcmeConnectorDeclaration__Group_2_2__0 )* ) )
            // InternalAcmeParser.g:12263:1: ( ( rule__AcmeConnectorDeclaration__Group_2_2__0 )* )
            {
            // InternalAcmeParser.g:12263:1: ( ( rule__AcmeConnectorDeclaration__Group_2_2__0 )* )
            // InternalAcmeParser.g:12264:2: ( rule__AcmeConnectorDeclaration__Group_2_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorDeclarationAccess().getGroup_2_2()); 
            }
            // InternalAcmeParser.g:12265:2: ( rule__AcmeConnectorDeclaration__Group_2_2__0 )*
            loop156:
            do {
                int alt156=2;
                int LA156_0 = input.LA(1);

                if ( (LA156_0==Comma) ) {
                    alt156=1;
                }


                switch (alt156) {
            	case 1 :
            	    // InternalAcmeParser.g:12265:3: rule__AcmeConnectorDeclaration__Group_2_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__AcmeConnectorDeclaration__Group_2_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop156;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorDeclarationAccess().getGroup_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_2__2__Impl"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_2_2__0"
    // InternalAcmeParser.g:12274:1: rule__AcmeConnectorDeclaration__Group_2_2__0 : rule__AcmeConnectorDeclaration__Group_2_2__0__Impl rule__AcmeConnectorDeclaration__Group_2_2__1 ;
    public final void rule__AcmeConnectorDeclaration__Group_2_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12278:1: ( rule__AcmeConnectorDeclaration__Group_2_2__0__Impl rule__AcmeConnectorDeclaration__Group_2_2__1 )
            // InternalAcmeParser.g:12279:2: rule__AcmeConnectorDeclaration__Group_2_2__0__Impl rule__AcmeConnectorDeclaration__Group_2_2__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeConnectorDeclaration__Group_2_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorDeclaration__Group_2_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_2_2__0"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_2_2__0__Impl"
    // InternalAcmeParser.g:12286:1: rule__AcmeConnectorDeclaration__Group_2_2__0__Impl : ( Comma ) ;
    public final void rule__AcmeConnectorDeclaration__Group_2_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12290:1: ( ( Comma ) )
            // InternalAcmeParser.g:12291:1: ( Comma )
            {
            // InternalAcmeParser.g:12291:1: ( Comma )
            // InternalAcmeParser.g:12292:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorDeclarationAccess().getCommaKeyword_2_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorDeclarationAccess().getCommaKeyword_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_2_2__0__Impl"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_2_2__1"
    // InternalAcmeParser.g:12301:1: rule__AcmeConnectorDeclaration__Group_2_2__1 : rule__AcmeConnectorDeclaration__Group_2_2__1__Impl ;
    public final void rule__AcmeConnectorDeclaration__Group_2_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12305:1: ( rule__AcmeConnectorDeclaration__Group_2_2__1__Impl )
            // InternalAcmeParser.g:12306:2: rule__AcmeConnectorDeclaration__Group_2_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorDeclaration__Group_2_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_2_2__1"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_2_2__1__Impl"
    // InternalAcmeParser.g:12312:1: rule__AcmeConnectorDeclaration__Group_2_2__1__Impl : ( ( rule__AcmeConnectorDeclaration__DeclaredAssignment_2_2_1 ) ) ;
    public final void rule__AcmeConnectorDeclaration__Group_2_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12316:1: ( ( ( rule__AcmeConnectorDeclaration__DeclaredAssignment_2_2_1 ) ) )
            // InternalAcmeParser.g:12317:1: ( ( rule__AcmeConnectorDeclaration__DeclaredAssignment_2_2_1 ) )
            {
            // InternalAcmeParser.g:12317:1: ( ( rule__AcmeConnectorDeclaration__DeclaredAssignment_2_2_1 ) )
            // InternalAcmeParser.g:12318:2: ( rule__AcmeConnectorDeclaration__DeclaredAssignment_2_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorDeclarationAccess().getDeclaredAssignment_2_2_1()); 
            }
            // InternalAcmeParser.g:12319:2: ( rule__AcmeConnectorDeclaration__DeclaredAssignment_2_2_1 )
            // InternalAcmeParser.g:12319:3: rule__AcmeConnectorDeclaration__DeclaredAssignment_2_2_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorDeclaration__DeclaredAssignment_2_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorDeclarationAccess().getDeclaredAssignment_2_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_2_2__1__Impl"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_3_1__0"
    // InternalAcmeParser.g:12328:1: rule__AcmeConnectorDeclaration__Group_3_1__0 : rule__AcmeConnectorDeclaration__Group_3_1__0__Impl rule__AcmeConnectorDeclaration__Group_3_1__1 ;
    public final void rule__AcmeConnectorDeclaration__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12332:1: ( rule__AcmeConnectorDeclaration__Group_3_1__0__Impl rule__AcmeConnectorDeclaration__Group_3_1__1 )
            // InternalAcmeParser.g:12333:2: rule__AcmeConnectorDeclaration__Group_3_1__0__Impl rule__AcmeConnectorDeclaration__Group_3_1__1
            {
            pushFollow(FOLLOW_20);
            rule__AcmeConnectorDeclaration__Group_3_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorDeclaration__Group_3_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_3_1__0"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_3_1__0__Impl"
    // InternalAcmeParser.g:12340:1: rule__AcmeConnectorDeclaration__Group_3_1__0__Impl : ( EqualsSign ) ;
    public final void rule__AcmeConnectorDeclaration__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12344:1: ( ( EqualsSign ) )
            // InternalAcmeParser.g:12345:1: ( EqualsSign )
            {
            // InternalAcmeParser.g:12345:1: ( EqualsSign )
            // InternalAcmeParser.g:12346:2: EqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorDeclarationAccess().getEqualsSignKeyword_3_1_0()); 
            }
            match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorDeclarationAccess().getEqualsSignKeyword_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_3_1__0__Impl"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_3_1__1"
    // InternalAcmeParser.g:12355:1: rule__AcmeConnectorDeclaration__Group_3_1__1 : rule__AcmeConnectorDeclaration__Group_3_1__1__Impl ;
    public final void rule__AcmeConnectorDeclaration__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12359:1: ( rule__AcmeConnectorDeclaration__Group_3_1__1__Impl )
            // InternalAcmeParser.g:12360:2: rule__AcmeConnectorDeclaration__Group_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorDeclaration__Group_3_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_3_1__1"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_3_1__1__Impl"
    // InternalAcmeParser.g:12366:1: rule__AcmeConnectorDeclaration__Group_3_1__1__Impl : ( ( rule__AcmeConnectorDeclaration__Alternatives_3_1_1 ) ) ;
    public final void rule__AcmeConnectorDeclaration__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12370:1: ( ( ( rule__AcmeConnectorDeclaration__Alternatives_3_1_1 ) ) )
            // InternalAcmeParser.g:12371:1: ( ( rule__AcmeConnectorDeclaration__Alternatives_3_1_1 ) )
            {
            // InternalAcmeParser.g:12371:1: ( ( rule__AcmeConnectorDeclaration__Alternatives_3_1_1 ) )
            // InternalAcmeParser.g:12372:2: ( rule__AcmeConnectorDeclaration__Alternatives_3_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorDeclarationAccess().getAlternatives_3_1_1()); 
            }
            // InternalAcmeParser.g:12373:2: ( rule__AcmeConnectorDeclaration__Alternatives_3_1_1 )
            // InternalAcmeParser.g:12373:3: rule__AcmeConnectorDeclaration__Alternatives_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorDeclaration__Alternatives_3_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorDeclarationAccess().getAlternatives_3_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_3_1__1__Impl"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_3_1_1_0__0"
    // InternalAcmeParser.g:12382:1: rule__AcmeConnectorDeclaration__Group_3_1_1_0__0 : rule__AcmeConnectorDeclaration__Group_3_1_1_0__0__Impl rule__AcmeConnectorDeclaration__Group_3_1_1_0__1 ;
    public final void rule__AcmeConnectorDeclaration__Group_3_1_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12386:1: ( rule__AcmeConnectorDeclaration__Group_3_1_1_0__0__Impl rule__AcmeConnectorDeclaration__Group_3_1_1_0__1 )
            // InternalAcmeParser.g:12387:2: rule__AcmeConnectorDeclaration__Group_3_1_1_0__0__Impl rule__AcmeConnectorDeclaration__Group_3_1_1_0__1
            {
            pushFollow(FOLLOW_7);
            rule__AcmeConnectorDeclaration__Group_3_1_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorDeclaration__Group_3_1_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_3_1_1_0__0"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_3_1_1_0__0__Impl"
    // InternalAcmeParser.g:12394:1: rule__AcmeConnectorDeclaration__Group_3_1_1_0__0__Impl : ( ( rule__AcmeConnectorDeclaration__BodyAssignment_3_1_1_0_0 ) ) ;
    public final void rule__AcmeConnectorDeclaration__Group_3_1_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12398:1: ( ( ( rule__AcmeConnectorDeclaration__BodyAssignment_3_1_1_0_0 ) ) )
            // InternalAcmeParser.g:12399:1: ( ( rule__AcmeConnectorDeclaration__BodyAssignment_3_1_1_0_0 ) )
            {
            // InternalAcmeParser.g:12399:1: ( ( rule__AcmeConnectorDeclaration__BodyAssignment_3_1_1_0_0 ) )
            // InternalAcmeParser.g:12400:2: ( rule__AcmeConnectorDeclaration__BodyAssignment_3_1_1_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorDeclarationAccess().getBodyAssignment_3_1_1_0_0()); 
            }
            // InternalAcmeParser.g:12401:2: ( rule__AcmeConnectorDeclaration__BodyAssignment_3_1_1_0_0 )
            // InternalAcmeParser.g:12401:3: rule__AcmeConnectorDeclaration__BodyAssignment_3_1_1_0_0
            {
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorDeclaration__BodyAssignment_3_1_1_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorDeclarationAccess().getBodyAssignment_3_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_3_1_1_0__0__Impl"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_3_1_1_0__1"
    // InternalAcmeParser.g:12409:1: rule__AcmeConnectorDeclaration__Group_3_1_1_0__1 : rule__AcmeConnectorDeclaration__Group_3_1_1_0__1__Impl ;
    public final void rule__AcmeConnectorDeclaration__Group_3_1_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12413:1: ( rule__AcmeConnectorDeclaration__Group_3_1_1_0__1__Impl )
            // InternalAcmeParser.g:12414:2: rule__AcmeConnectorDeclaration__Group_3_1_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorDeclaration__Group_3_1_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_3_1_1_0__1"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_3_1_1_0__1__Impl"
    // InternalAcmeParser.g:12420:1: rule__AcmeConnectorDeclaration__Group_3_1_1_0__1__Impl : ( ( Semicolon )? ) ;
    public final void rule__AcmeConnectorDeclaration__Group_3_1_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12424:1: ( ( ( Semicolon )? ) )
            // InternalAcmeParser.g:12425:1: ( ( Semicolon )? )
            {
            // InternalAcmeParser.g:12425:1: ( ( Semicolon )? )
            // InternalAcmeParser.g:12426:2: ( Semicolon )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorDeclarationAccess().getSemicolonKeyword_3_1_1_0_1()); 
            }
            // InternalAcmeParser.g:12427:2: ( Semicolon )?
            int alt157=2;
            int LA157_0 = input.LA(1);

            if ( (LA157_0==Semicolon) ) {
                alt157=1;
            }
            switch (alt157) {
                case 1 :
                    // InternalAcmeParser.g:12427:3: Semicolon
                    {
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorDeclarationAccess().getSemicolonKeyword_3_1_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_3_1_1_0__1__Impl"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_3_1_1_1__0"
    // InternalAcmeParser.g:12436:1: rule__AcmeConnectorDeclaration__Group_3_1_1_1__0 : rule__AcmeConnectorDeclaration__Group_3_1_1_1__0__Impl rule__AcmeConnectorDeclaration__Group_3_1_1_1__1 ;
    public final void rule__AcmeConnectorDeclaration__Group_3_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12440:1: ( rule__AcmeConnectorDeclaration__Group_3_1_1_1__0__Impl rule__AcmeConnectorDeclaration__Group_3_1_1_1__1 )
            // InternalAcmeParser.g:12441:2: rule__AcmeConnectorDeclaration__Group_3_1_1_1__0__Impl rule__AcmeConnectorDeclaration__Group_3_1_1_1__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeConnectorDeclaration__Group_3_1_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorDeclaration__Group_3_1_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_3_1_1_1__0"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_3_1_1_1__0__Impl"
    // InternalAcmeParser.g:12448:1: rule__AcmeConnectorDeclaration__Group_3_1_1_1__0__Impl : ( New ) ;
    public final void rule__AcmeConnectorDeclaration__Group_3_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12452:1: ( ( New ) )
            // InternalAcmeParser.g:12453:1: ( New )
            {
            // InternalAcmeParser.g:12453:1: ( New )
            // InternalAcmeParser.g:12454:2: New
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorDeclarationAccess().getNewKeyword_3_1_1_1_0()); 
            }
            match(input,New,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorDeclarationAccess().getNewKeyword_3_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_3_1_1_1__0__Impl"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_3_1_1_1__1"
    // InternalAcmeParser.g:12463:1: rule__AcmeConnectorDeclaration__Group_3_1_1_1__1 : rule__AcmeConnectorDeclaration__Group_3_1_1_1__1__Impl rule__AcmeConnectorDeclaration__Group_3_1_1_1__2 ;
    public final void rule__AcmeConnectorDeclaration__Group_3_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12467:1: ( rule__AcmeConnectorDeclaration__Group_3_1_1_1__1__Impl rule__AcmeConnectorDeclaration__Group_3_1_1_1__2 )
            // InternalAcmeParser.g:12468:2: rule__AcmeConnectorDeclaration__Group_3_1_1_1__1__Impl rule__AcmeConnectorDeclaration__Group_3_1_1_1__2
            {
            pushFollow(FOLLOW_21);
            rule__AcmeConnectorDeclaration__Group_3_1_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorDeclaration__Group_3_1_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_3_1_1_1__1"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_3_1_1_1__1__Impl"
    // InternalAcmeParser.g:12475:1: rule__AcmeConnectorDeclaration__Group_3_1_1_1__1__Impl : ( ( rule__AcmeConnectorDeclaration__InstantiatedAssignment_3_1_1_1_1 ) ) ;
    public final void rule__AcmeConnectorDeclaration__Group_3_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12479:1: ( ( ( rule__AcmeConnectorDeclaration__InstantiatedAssignment_3_1_1_1_1 ) ) )
            // InternalAcmeParser.g:12480:1: ( ( rule__AcmeConnectorDeclaration__InstantiatedAssignment_3_1_1_1_1 ) )
            {
            // InternalAcmeParser.g:12480:1: ( ( rule__AcmeConnectorDeclaration__InstantiatedAssignment_3_1_1_1_1 ) )
            // InternalAcmeParser.g:12481:2: ( rule__AcmeConnectorDeclaration__InstantiatedAssignment_3_1_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorDeclarationAccess().getInstantiatedAssignment_3_1_1_1_1()); 
            }
            // InternalAcmeParser.g:12482:2: ( rule__AcmeConnectorDeclaration__InstantiatedAssignment_3_1_1_1_1 )
            // InternalAcmeParser.g:12482:3: rule__AcmeConnectorDeclaration__InstantiatedAssignment_3_1_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorDeclaration__InstantiatedAssignment_3_1_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorDeclarationAccess().getInstantiatedAssignment_3_1_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_3_1_1_1__1__Impl"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_3_1_1_1__2"
    // InternalAcmeParser.g:12490:1: rule__AcmeConnectorDeclaration__Group_3_1_1_1__2 : rule__AcmeConnectorDeclaration__Group_3_1_1_1__2__Impl rule__AcmeConnectorDeclaration__Group_3_1_1_1__3 ;
    public final void rule__AcmeConnectorDeclaration__Group_3_1_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12494:1: ( rule__AcmeConnectorDeclaration__Group_3_1_1_1__2__Impl rule__AcmeConnectorDeclaration__Group_3_1_1_1__3 )
            // InternalAcmeParser.g:12495:2: rule__AcmeConnectorDeclaration__Group_3_1_1_1__2__Impl rule__AcmeConnectorDeclaration__Group_3_1_1_1__3
            {
            pushFollow(FOLLOW_21);
            rule__AcmeConnectorDeclaration__Group_3_1_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorDeclaration__Group_3_1_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_3_1_1_1__2"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_3_1_1_1__2__Impl"
    // InternalAcmeParser.g:12502:1: rule__AcmeConnectorDeclaration__Group_3_1_1_1__2__Impl : ( ( rule__AcmeConnectorDeclaration__Group_3_1_1_1_2__0 )* ) ;
    public final void rule__AcmeConnectorDeclaration__Group_3_1_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12506:1: ( ( ( rule__AcmeConnectorDeclaration__Group_3_1_1_1_2__0 )* ) )
            // InternalAcmeParser.g:12507:1: ( ( rule__AcmeConnectorDeclaration__Group_3_1_1_1_2__0 )* )
            {
            // InternalAcmeParser.g:12507:1: ( ( rule__AcmeConnectorDeclaration__Group_3_1_1_1_2__0 )* )
            // InternalAcmeParser.g:12508:2: ( rule__AcmeConnectorDeclaration__Group_3_1_1_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorDeclarationAccess().getGroup_3_1_1_1_2()); 
            }
            // InternalAcmeParser.g:12509:2: ( rule__AcmeConnectorDeclaration__Group_3_1_1_1_2__0 )*
            loop158:
            do {
                int alt158=2;
                int LA158_0 = input.LA(1);

                if ( (LA158_0==Comma) ) {
                    alt158=1;
                }


                switch (alt158) {
            	case 1 :
            	    // InternalAcmeParser.g:12509:3: rule__AcmeConnectorDeclaration__Group_3_1_1_1_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__AcmeConnectorDeclaration__Group_3_1_1_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop158;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorDeclarationAccess().getGroup_3_1_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_3_1_1_1__2__Impl"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_3_1_1_1__3"
    // InternalAcmeParser.g:12517:1: rule__AcmeConnectorDeclaration__Group_3_1_1_1__3 : rule__AcmeConnectorDeclaration__Group_3_1_1_1__3__Impl ;
    public final void rule__AcmeConnectorDeclaration__Group_3_1_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12521:1: ( rule__AcmeConnectorDeclaration__Group_3_1_1_1__3__Impl )
            // InternalAcmeParser.g:12522:2: rule__AcmeConnectorDeclaration__Group_3_1_1_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorDeclaration__Group_3_1_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_3_1_1_1__3"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_3_1_1_1__3__Impl"
    // InternalAcmeParser.g:12528:1: rule__AcmeConnectorDeclaration__Group_3_1_1_1__3__Impl : ( ( rule__AcmeConnectorDeclaration__Alternatives_3_1_1_1_3 ) ) ;
    public final void rule__AcmeConnectorDeclaration__Group_3_1_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12532:1: ( ( ( rule__AcmeConnectorDeclaration__Alternatives_3_1_1_1_3 ) ) )
            // InternalAcmeParser.g:12533:1: ( ( rule__AcmeConnectorDeclaration__Alternatives_3_1_1_1_3 ) )
            {
            // InternalAcmeParser.g:12533:1: ( ( rule__AcmeConnectorDeclaration__Alternatives_3_1_1_1_3 ) )
            // InternalAcmeParser.g:12534:2: ( rule__AcmeConnectorDeclaration__Alternatives_3_1_1_1_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorDeclarationAccess().getAlternatives_3_1_1_1_3()); 
            }
            // InternalAcmeParser.g:12535:2: ( rule__AcmeConnectorDeclaration__Alternatives_3_1_1_1_3 )
            // InternalAcmeParser.g:12535:3: rule__AcmeConnectorDeclaration__Alternatives_3_1_1_1_3
            {
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorDeclaration__Alternatives_3_1_1_1_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorDeclarationAccess().getAlternatives_3_1_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_3_1_1_1__3__Impl"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_3_1_1_1_2__0"
    // InternalAcmeParser.g:12544:1: rule__AcmeConnectorDeclaration__Group_3_1_1_1_2__0 : rule__AcmeConnectorDeclaration__Group_3_1_1_1_2__0__Impl rule__AcmeConnectorDeclaration__Group_3_1_1_1_2__1 ;
    public final void rule__AcmeConnectorDeclaration__Group_3_1_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12548:1: ( rule__AcmeConnectorDeclaration__Group_3_1_1_1_2__0__Impl rule__AcmeConnectorDeclaration__Group_3_1_1_1_2__1 )
            // InternalAcmeParser.g:12549:2: rule__AcmeConnectorDeclaration__Group_3_1_1_1_2__0__Impl rule__AcmeConnectorDeclaration__Group_3_1_1_1_2__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeConnectorDeclaration__Group_3_1_1_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorDeclaration__Group_3_1_1_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_3_1_1_1_2__0"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_3_1_1_1_2__0__Impl"
    // InternalAcmeParser.g:12556:1: rule__AcmeConnectorDeclaration__Group_3_1_1_1_2__0__Impl : ( Comma ) ;
    public final void rule__AcmeConnectorDeclaration__Group_3_1_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12560:1: ( ( Comma ) )
            // InternalAcmeParser.g:12561:1: ( Comma )
            {
            // InternalAcmeParser.g:12561:1: ( Comma )
            // InternalAcmeParser.g:12562:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorDeclarationAccess().getCommaKeyword_3_1_1_1_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorDeclarationAccess().getCommaKeyword_3_1_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_3_1_1_1_2__0__Impl"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_3_1_1_1_2__1"
    // InternalAcmeParser.g:12571:1: rule__AcmeConnectorDeclaration__Group_3_1_1_1_2__1 : rule__AcmeConnectorDeclaration__Group_3_1_1_1_2__1__Impl ;
    public final void rule__AcmeConnectorDeclaration__Group_3_1_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12575:1: ( rule__AcmeConnectorDeclaration__Group_3_1_1_1_2__1__Impl )
            // InternalAcmeParser.g:12576:2: rule__AcmeConnectorDeclaration__Group_3_1_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorDeclaration__Group_3_1_1_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_3_1_1_1_2__1"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_3_1_1_1_2__1__Impl"
    // InternalAcmeParser.g:12582:1: rule__AcmeConnectorDeclaration__Group_3_1_1_1_2__1__Impl : ( ( rule__AcmeConnectorDeclaration__InstantiatedAssignment_3_1_1_1_2_1 ) ) ;
    public final void rule__AcmeConnectorDeclaration__Group_3_1_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12586:1: ( ( ( rule__AcmeConnectorDeclaration__InstantiatedAssignment_3_1_1_1_2_1 ) ) )
            // InternalAcmeParser.g:12587:1: ( ( rule__AcmeConnectorDeclaration__InstantiatedAssignment_3_1_1_1_2_1 ) )
            {
            // InternalAcmeParser.g:12587:1: ( ( rule__AcmeConnectorDeclaration__InstantiatedAssignment_3_1_1_1_2_1 ) )
            // InternalAcmeParser.g:12588:2: ( rule__AcmeConnectorDeclaration__InstantiatedAssignment_3_1_1_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorDeclarationAccess().getInstantiatedAssignment_3_1_1_1_2_1()); 
            }
            // InternalAcmeParser.g:12589:2: ( rule__AcmeConnectorDeclaration__InstantiatedAssignment_3_1_1_1_2_1 )
            // InternalAcmeParser.g:12589:3: rule__AcmeConnectorDeclaration__InstantiatedAssignment_3_1_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorDeclaration__InstantiatedAssignment_3_1_1_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorDeclarationAccess().getInstantiatedAssignment_3_1_1_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_3_1_1_1_2__1__Impl"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__0"
    // InternalAcmeParser.g:12598:1: rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__0 : rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__0__Impl rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__1 ;
    public final void rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12602:1: ( rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__0__Impl rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__1 )
            // InternalAcmeParser.g:12603:2: rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__0__Impl rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__1
            {
            pushFollow(FOLLOW_22);
            rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__0"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__0__Impl"
    // InternalAcmeParser.g:12610:1: rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__0__Impl : ( Extended ) ;
    public final void rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12614:1: ( ( Extended ) )
            // InternalAcmeParser.g:12615:1: ( Extended )
            {
            // InternalAcmeParser.g:12615:1: ( Extended )
            // InternalAcmeParser.g:12616:2: Extended
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorDeclarationAccess().getExtendedKeyword_3_1_1_1_3_1_0()); 
            }
            match(input,Extended,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorDeclarationAccess().getExtendedKeyword_3_1_1_1_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__0__Impl"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__1"
    // InternalAcmeParser.g:12625:1: rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__1 : rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__1__Impl rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__2 ;
    public final void rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12629:1: ( rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__1__Impl rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__2 )
            // InternalAcmeParser.g:12630:2: rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__1__Impl rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__2
            {
            pushFollow(FOLLOW_13);
            rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__1"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__1__Impl"
    // InternalAcmeParser.g:12637:1: rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__1__Impl : ( With ) ;
    public final void rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12641:1: ( ( With ) )
            // InternalAcmeParser.g:12642:1: ( With )
            {
            // InternalAcmeParser.g:12642:1: ( With )
            // InternalAcmeParser.g:12643:2: With
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorDeclarationAccess().getWithKeyword_3_1_1_1_3_1_1()); 
            }
            match(input,With,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorDeclarationAccess().getWithKeyword_3_1_1_1_3_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__1__Impl"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__2"
    // InternalAcmeParser.g:12652:1: rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__2 : rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__2__Impl rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__3 ;
    public final void rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12656:1: ( rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__2__Impl rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__3 )
            // InternalAcmeParser.g:12657:2: rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__2__Impl rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__3
            {
            pushFollow(FOLLOW_7);
            rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__2"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__2__Impl"
    // InternalAcmeParser.g:12664:1: rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__2__Impl : ( ( rule__AcmeConnectorDeclaration__BodyAssignment_3_1_1_1_3_1_2 ) ) ;
    public final void rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12668:1: ( ( ( rule__AcmeConnectorDeclaration__BodyAssignment_3_1_1_1_3_1_2 ) ) )
            // InternalAcmeParser.g:12669:1: ( ( rule__AcmeConnectorDeclaration__BodyAssignment_3_1_1_1_3_1_2 ) )
            {
            // InternalAcmeParser.g:12669:1: ( ( rule__AcmeConnectorDeclaration__BodyAssignment_3_1_1_1_3_1_2 ) )
            // InternalAcmeParser.g:12670:2: ( rule__AcmeConnectorDeclaration__BodyAssignment_3_1_1_1_3_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorDeclarationAccess().getBodyAssignment_3_1_1_1_3_1_2()); 
            }
            // InternalAcmeParser.g:12671:2: ( rule__AcmeConnectorDeclaration__BodyAssignment_3_1_1_1_3_1_2 )
            // InternalAcmeParser.g:12671:3: rule__AcmeConnectorDeclaration__BodyAssignment_3_1_1_1_3_1_2
            {
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorDeclaration__BodyAssignment_3_1_1_1_3_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorDeclarationAccess().getBodyAssignment_3_1_1_1_3_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__2__Impl"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__3"
    // InternalAcmeParser.g:12679:1: rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__3 : rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__3__Impl ;
    public final void rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12683:1: ( rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__3__Impl )
            // InternalAcmeParser.g:12684:2: rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__3"


    // $ANTLR start "rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__3__Impl"
    // InternalAcmeParser.g:12690:1: rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__3__Impl : ( ( Semicolon )? ) ;
    public final void rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12694:1: ( ( ( Semicolon )? ) )
            // InternalAcmeParser.g:12695:1: ( ( Semicolon )? )
            {
            // InternalAcmeParser.g:12695:1: ( ( Semicolon )? )
            // InternalAcmeParser.g:12696:2: ( Semicolon )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorDeclarationAccess().getSemicolonKeyword_3_1_1_1_3_1_3()); 
            }
            // InternalAcmeParser.g:12697:2: ( Semicolon )?
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( (LA159_0==Semicolon) ) {
                alt159=1;
            }
            switch (alt159) {
                case 1 :
                    // InternalAcmeParser.g:12697:3: Semicolon
                    {
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorDeclarationAccess().getSemicolonKeyword_3_1_1_1_3_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__Group_3_1_1_1_3_1__3__Impl"


    // $ANTLR start "rule__AcmeConnectorBody__Group__0"
    // InternalAcmeParser.g:12706:1: rule__AcmeConnectorBody__Group__0 : rule__AcmeConnectorBody__Group__0__Impl rule__AcmeConnectorBody__Group__1 ;
    public final void rule__AcmeConnectorBody__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12710:1: ( rule__AcmeConnectorBody__Group__0__Impl rule__AcmeConnectorBody__Group__1 )
            // InternalAcmeParser.g:12711:2: rule__AcmeConnectorBody__Group__0__Impl rule__AcmeConnectorBody__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__AcmeConnectorBody__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorBody__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorBody__Group__0"


    // $ANTLR start "rule__AcmeConnectorBody__Group__0__Impl"
    // InternalAcmeParser.g:12718:1: rule__AcmeConnectorBody__Group__0__Impl : ( () ) ;
    public final void rule__AcmeConnectorBody__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12722:1: ( ( () ) )
            // InternalAcmeParser.g:12723:1: ( () )
            {
            // InternalAcmeParser.g:12723:1: ( () )
            // InternalAcmeParser.g:12724:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorBodyAccess().getAcmeConnectorBodyAction_0()); 
            }
            // InternalAcmeParser.g:12725:2: ()
            // InternalAcmeParser.g:12725:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorBodyAccess().getAcmeConnectorBodyAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorBody__Group__0__Impl"


    // $ANTLR start "rule__AcmeConnectorBody__Group__1"
    // InternalAcmeParser.g:12733:1: rule__AcmeConnectorBody__Group__1 : rule__AcmeConnectorBody__Group__1__Impl rule__AcmeConnectorBody__Group__2 ;
    public final void rule__AcmeConnectorBody__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12737:1: ( rule__AcmeConnectorBody__Group__1__Impl rule__AcmeConnectorBody__Group__2 )
            // InternalAcmeParser.g:12738:2: rule__AcmeConnectorBody__Group__1__Impl rule__AcmeConnectorBody__Group__2
            {
            pushFollow(FOLLOW_43);
            rule__AcmeConnectorBody__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorBody__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorBody__Group__1"


    // $ANTLR start "rule__AcmeConnectorBody__Group__1__Impl"
    // InternalAcmeParser.g:12745:1: rule__AcmeConnectorBody__Group__1__Impl : ( LeftCurlyBracket ) ;
    public final void rule__AcmeConnectorBody__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12749:1: ( ( LeftCurlyBracket ) )
            // InternalAcmeParser.g:12750:1: ( LeftCurlyBracket )
            {
            // InternalAcmeParser.g:12750:1: ( LeftCurlyBracket )
            // InternalAcmeParser.g:12751:2: LeftCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorBodyAccess().getLeftCurlyBracketKeyword_1()); 
            }
            match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorBodyAccess().getLeftCurlyBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorBody__Group__1__Impl"


    // $ANTLR start "rule__AcmeConnectorBody__Group__2"
    // InternalAcmeParser.g:12760:1: rule__AcmeConnectorBody__Group__2 : rule__AcmeConnectorBody__Group__2__Impl rule__AcmeConnectorBody__Group__3 ;
    public final void rule__AcmeConnectorBody__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12764:1: ( rule__AcmeConnectorBody__Group__2__Impl rule__AcmeConnectorBody__Group__3 )
            // InternalAcmeParser.g:12765:2: rule__AcmeConnectorBody__Group__2__Impl rule__AcmeConnectorBody__Group__3
            {
            pushFollow(FOLLOW_43);
            rule__AcmeConnectorBody__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorBody__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorBody__Group__2"


    // $ANTLR start "rule__AcmeConnectorBody__Group__2__Impl"
    // InternalAcmeParser.g:12772:1: rule__AcmeConnectorBody__Group__2__Impl : ( ( rule__AcmeConnectorBody__Alternatives_2 )* ) ;
    public final void rule__AcmeConnectorBody__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12776:1: ( ( ( rule__AcmeConnectorBody__Alternatives_2 )* ) )
            // InternalAcmeParser.g:12777:1: ( ( rule__AcmeConnectorBody__Alternatives_2 )* )
            {
            // InternalAcmeParser.g:12777:1: ( ( rule__AcmeConnectorBody__Alternatives_2 )* )
            // InternalAcmeParser.g:12778:2: ( rule__AcmeConnectorBody__Alternatives_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorBodyAccess().getAlternatives_2()); 
            }
            // InternalAcmeParser.g:12779:2: ( rule__AcmeConnectorBody__Alternatives_2 )*
            loop160:
            do {
                int alt160=2;
                int LA160_0 = input.LA(1);

                if ( (LA160_0==Representation||(LA160_0>=Hueristic && LA160_0<=Invariant)||LA160_0==Property||(LA160_0>=Role && LA160_0<=Rule)) ) {
                    alt160=1;
                }


                switch (alt160) {
            	case 1 :
            	    // InternalAcmeParser.g:12779:3: rule__AcmeConnectorBody__Alternatives_2
            	    {
            	    pushFollow(FOLLOW_44);
            	    rule__AcmeConnectorBody__Alternatives_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop160;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorBodyAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorBody__Group__2__Impl"


    // $ANTLR start "rule__AcmeConnectorBody__Group__3"
    // InternalAcmeParser.g:12787:1: rule__AcmeConnectorBody__Group__3 : rule__AcmeConnectorBody__Group__3__Impl ;
    public final void rule__AcmeConnectorBody__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12791:1: ( rule__AcmeConnectorBody__Group__3__Impl )
            // InternalAcmeParser.g:12792:2: rule__AcmeConnectorBody__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeConnectorBody__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorBody__Group__3"


    // $ANTLR start "rule__AcmeConnectorBody__Group__3__Impl"
    // InternalAcmeParser.g:12798:1: rule__AcmeConnectorBody__Group__3__Impl : ( RightCurlyBracket ) ;
    public final void rule__AcmeConnectorBody__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12802:1: ( ( RightCurlyBracket ) )
            // InternalAcmeParser.g:12803:1: ( RightCurlyBracket )
            {
            // InternalAcmeParser.g:12803:1: ( RightCurlyBracket )
            // InternalAcmeParser.g:12804:2: RightCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorBodyAccess().getRightCurlyBracketKeyword_3()); 
            }
            match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorBodyAccess().getRightCurlyBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorBody__Group__3__Impl"


    // $ANTLR start "rule__AcmeRepresentationDeclaration__Group__0"
    // InternalAcmeParser.g:12814:1: rule__AcmeRepresentationDeclaration__Group__0 : rule__AcmeRepresentationDeclaration__Group__0__Impl rule__AcmeRepresentationDeclaration__Group__1 ;
    public final void rule__AcmeRepresentationDeclaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12818:1: ( rule__AcmeRepresentationDeclaration__Group__0__Impl rule__AcmeRepresentationDeclaration__Group__1 )
            // InternalAcmeParser.g:12819:2: rule__AcmeRepresentationDeclaration__Group__0__Impl rule__AcmeRepresentationDeclaration__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__AcmeRepresentationDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeRepresentationDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRepresentationDeclaration__Group__0"


    // $ANTLR start "rule__AcmeRepresentationDeclaration__Group__0__Impl"
    // InternalAcmeParser.g:12826:1: rule__AcmeRepresentationDeclaration__Group__0__Impl : ( Representation ) ;
    public final void rule__AcmeRepresentationDeclaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12830:1: ( ( Representation ) )
            // InternalAcmeParser.g:12831:1: ( Representation )
            {
            // InternalAcmeParser.g:12831:1: ( Representation )
            // InternalAcmeParser.g:12832:2: Representation
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRepresentationDeclarationAccess().getRepresentationKeyword_0()); 
            }
            match(input,Representation,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRepresentationDeclarationAccess().getRepresentationKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRepresentationDeclaration__Group__0__Impl"


    // $ANTLR start "rule__AcmeRepresentationDeclaration__Group__1"
    // InternalAcmeParser.g:12841:1: rule__AcmeRepresentationDeclaration__Group__1 : rule__AcmeRepresentationDeclaration__Group__1__Impl ;
    public final void rule__AcmeRepresentationDeclaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12845:1: ( rule__AcmeRepresentationDeclaration__Group__1__Impl )
            // InternalAcmeParser.g:12846:2: rule__AcmeRepresentationDeclaration__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeRepresentationDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRepresentationDeclaration__Group__1"


    // $ANTLR start "rule__AcmeRepresentationDeclaration__Group__1__Impl"
    // InternalAcmeParser.g:12852:1: rule__AcmeRepresentationDeclaration__Group__1__Impl : ( ( Semicolon )? ) ;
    public final void rule__AcmeRepresentationDeclaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12856:1: ( ( ( Semicolon )? ) )
            // InternalAcmeParser.g:12857:1: ( ( Semicolon )? )
            {
            // InternalAcmeParser.g:12857:1: ( ( Semicolon )? )
            // InternalAcmeParser.g:12858:2: ( Semicolon )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRepresentationDeclarationAccess().getSemicolonKeyword_1()); 
            }
            // InternalAcmeParser.g:12859:2: ( Semicolon )?
            int alt161=2;
            int LA161_0 = input.LA(1);

            if ( (LA161_0==Semicolon) ) {
                alt161=1;
            }
            switch (alt161) {
                case 1 :
                    // InternalAcmeParser.g:12859:3: Semicolon
                    {
                    match(input,Semicolon,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRepresentationDeclarationAccess().getSemicolonKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRepresentationDeclaration__Group__1__Impl"


    // $ANTLR start "rule__AcmeBindingDeclaration__Group__0"
    // InternalAcmeParser.g:12868:1: rule__AcmeBindingDeclaration__Group__0 : rule__AcmeBindingDeclaration__Group__0__Impl rule__AcmeBindingDeclaration__Group__1 ;
    public final void rule__AcmeBindingDeclaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12872:1: ( rule__AcmeBindingDeclaration__Group__0__Impl rule__AcmeBindingDeclaration__Group__1 )
            // InternalAcmeParser.g:12873:2: rule__AcmeBindingDeclaration__Group__0__Impl rule__AcmeBindingDeclaration__Group__1
            {
            pushFollow(FOLLOW_45);
            rule__AcmeBindingDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeBindingDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeBindingDeclaration__Group__0"


    // $ANTLR start "rule__AcmeBindingDeclaration__Group__0__Impl"
    // InternalAcmeParser.g:12880:1: rule__AcmeBindingDeclaration__Group__0__Impl : ( ( rule__AcmeBindingDeclaration__OuterAssignment_0 ) ) ;
    public final void rule__AcmeBindingDeclaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12884:1: ( ( ( rule__AcmeBindingDeclaration__OuterAssignment_0 ) ) )
            // InternalAcmeParser.g:12885:1: ( ( rule__AcmeBindingDeclaration__OuterAssignment_0 ) )
            {
            // InternalAcmeParser.g:12885:1: ( ( rule__AcmeBindingDeclaration__OuterAssignment_0 ) )
            // InternalAcmeParser.g:12886:2: ( rule__AcmeBindingDeclaration__OuterAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeBindingDeclarationAccess().getOuterAssignment_0()); 
            }
            // InternalAcmeParser.g:12887:2: ( rule__AcmeBindingDeclaration__OuterAssignment_0 )
            // InternalAcmeParser.g:12887:3: rule__AcmeBindingDeclaration__OuterAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__AcmeBindingDeclaration__OuterAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeBindingDeclarationAccess().getOuterAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeBindingDeclaration__Group__0__Impl"


    // $ANTLR start "rule__AcmeBindingDeclaration__Group__1"
    // InternalAcmeParser.g:12895:1: rule__AcmeBindingDeclaration__Group__1 : rule__AcmeBindingDeclaration__Group__1__Impl rule__AcmeBindingDeclaration__Group__2 ;
    public final void rule__AcmeBindingDeclaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12899:1: ( rule__AcmeBindingDeclaration__Group__1__Impl rule__AcmeBindingDeclaration__Group__2 )
            // InternalAcmeParser.g:12900:2: rule__AcmeBindingDeclaration__Group__1__Impl rule__AcmeBindingDeclaration__Group__2
            {
            pushFollow(FOLLOW_11);
            rule__AcmeBindingDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeBindingDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeBindingDeclaration__Group__1"


    // $ANTLR start "rule__AcmeBindingDeclaration__Group__1__Impl"
    // InternalAcmeParser.g:12907:1: rule__AcmeBindingDeclaration__Group__1__Impl : ( To ) ;
    public final void rule__AcmeBindingDeclaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12911:1: ( ( To ) )
            // InternalAcmeParser.g:12912:1: ( To )
            {
            // InternalAcmeParser.g:12912:1: ( To )
            // InternalAcmeParser.g:12913:2: To
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeBindingDeclarationAccess().getToKeyword_1()); 
            }
            match(input,To,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeBindingDeclarationAccess().getToKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeBindingDeclaration__Group__1__Impl"


    // $ANTLR start "rule__AcmeBindingDeclaration__Group__2"
    // InternalAcmeParser.g:12922:1: rule__AcmeBindingDeclaration__Group__2 : rule__AcmeBindingDeclaration__Group__2__Impl rule__AcmeBindingDeclaration__Group__3 ;
    public final void rule__AcmeBindingDeclaration__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12926:1: ( rule__AcmeBindingDeclaration__Group__2__Impl rule__AcmeBindingDeclaration__Group__3 )
            // InternalAcmeParser.g:12927:2: rule__AcmeBindingDeclaration__Group__2__Impl rule__AcmeBindingDeclaration__Group__3
            {
            pushFollow(FOLLOW_46);
            rule__AcmeBindingDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeBindingDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeBindingDeclaration__Group__2"


    // $ANTLR start "rule__AcmeBindingDeclaration__Group__2__Impl"
    // InternalAcmeParser.g:12934:1: rule__AcmeBindingDeclaration__Group__2__Impl : ( ( rule__AcmeBindingDeclaration__InnerAssignment_2 ) ) ;
    public final void rule__AcmeBindingDeclaration__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12938:1: ( ( ( rule__AcmeBindingDeclaration__InnerAssignment_2 ) ) )
            // InternalAcmeParser.g:12939:1: ( ( rule__AcmeBindingDeclaration__InnerAssignment_2 ) )
            {
            // InternalAcmeParser.g:12939:1: ( ( rule__AcmeBindingDeclaration__InnerAssignment_2 ) )
            // InternalAcmeParser.g:12940:2: ( rule__AcmeBindingDeclaration__InnerAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeBindingDeclarationAccess().getInnerAssignment_2()); 
            }
            // InternalAcmeParser.g:12941:2: ( rule__AcmeBindingDeclaration__InnerAssignment_2 )
            // InternalAcmeParser.g:12941:3: rule__AcmeBindingDeclaration__InnerAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__AcmeBindingDeclaration__InnerAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeBindingDeclarationAccess().getInnerAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeBindingDeclaration__Group__2__Impl"


    // $ANTLR start "rule__AcmeBindingDeclaration__Group__3"
    // InternalAcmeParser.g:12949:1: rule__AcmeBindingDeclaration__Group__3 : rule__AcmeBindingDeclaration__Group__3__Impl rule__AcmeBindingDeclaration__Group__4 ;
    public final void rule__AcmeBindingDeclaration__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12953:1: ( rule__AcmeBindingDeclaration__Group__3__Impl rule__AcmeBindingDeclaration__Group__4 )
            // InternalAcmeParser.g:12954:2: rule__AcmeBindingDeclaration__Group__3__Impl rule__AcmeBindingDeclaration__Group__4
            {
            pushFollow(FOLLOW_46);
            rule__AcmeBindingDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeBindingDeclaration__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeBindingDeclaration__Group__3"


    // $ANTLR start "rule__AcmeBindingDeclaration__Group__3__Impl"
    // InternalAcmeParser.g:12961:1: rule__AcmeBindingDeclaration__Group__3__Impl : ( ( rule__AcmeBindingDeclaration__Group_3__0 )? ) ;
    public final void rule__AcmeBindingDeclaration__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12965:1: ( ( ( rule__AcmeBindingDeclaration__Group_3__0 )? ) )
            // InternalAcmeParser.g:12966:1: ( ( rule__AcmeBindingDeclaration__Group_3__0 )? )
            {
            // InternalAcmeParser.g:12966:1: ( ( rule__AcmeBindingDeclaration__Group_3__0 )? )
            // InternalAcmeParser.g:12967:2: ( rule__AcmeBindingDeclaration__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeBindingDeclarationAccess().getGroup_3()); 
            }
            // InternalAcmeParser.g:12968:2: ( rule__AcmeBindingDeclaration__Group_3__0 )?
            int alt162=2;
            int LA162_0 = input.LA(1);

            if ( (LA162_0==LeftCurlyBracket) ) {
                alt162=1;
            }
            switch (alt162) {
                case 1 :
                    // InternalAcmeParser.g:12968:3: rule__AcmeBindingDeclaration__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmeBindingDeclaration__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeBindingDeclarationAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeBindingDeclaration__Group__3__Impl"


    // $ANTLR start "rule__AcmeBindingDeclaration__Group__4"
    // InternalAcmeParser.g:12976:1: rule__AcmeBindingDeclaration__Group__4 : rule__AcmeBindingDeclaration__Group__4__Impl ;
    public final void rule__AcmeBindingDeclaration__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12980:1: ( rule__AcmeBindingDeclaration__Group__4__Impl )
            // InternalAcmeParser.g:12981:2: rule__AcmeBindingDeclaration__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeBindingDeclaration__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeBindingDeclaration__Group__4"


    // $ANTLR start "rule__AcmeBindingDeclaration__Group__4__Impl"
    // InternalAcmeParser.g:12987:1: rule__AcmeBindingDeclaration__Group__4__Impl : ( Semicolon ) ;
    public final void rule__AcmeBindingDeclaration__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:12991:1: ( ( Semicolon ) )
            // InternalAcmeParser.g:12992:1: ( Semicolon )
            {
            // InternalAcmeParser.g:12992:1: ( Semicolon )
            // InternalAcmeParser.g:12993:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeBindingDeclarationAccess().getSemicolonKeyword_4()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeBindingDeclarationAccess().getSemicolonKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeBindingDeclaration__Group__4__Impl"


    // $ANTLR start "rule__AcmeBindingDeclaration__Group_3__0"
    // InternalAcmeParser.g:13003:1: rule__AcmeBindingDeclaration__Group_3__0 : rule__AcmeBindingDeclaration__Group_3__0__Impl rule__AcmeBindingDeclaration__Group_3__1 ;
    public final void rule__AcmeBindingDeclaration__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13007:1: ( rule__AcmeBindingDeclaration__Group_3__0__Impl rule__AcmeBindingDeclaration__Group_3__1 )
            // InternalAcmeParser.g:13008:2: rule__AcmeBindingDeclaration__Group_3__0__Impl rule__AcmeBindingDeclaration__Group_3__1
            {
            pushFollow(FOLLOW_47);
            rule__AcmeBindingDeclaration__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeBindingDeclaration__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeBindingDeclaration__Group_3__0"


    // $ANTLR start "rule__AcmeBindingDeclaration__Group_3__0__Impl"
    // InternalAcmeParser.g:13015:1: rule__AcmeBindingDeclaration__Group_3__0__Impl : ( LeftCurlyBracket ) ;
    public final void rule__AcmeBindingDeclaration__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13019:1: ( ( LeftCurlyBracket ) )
            // InternalAcmeParser.g:13020:1: ( LeftCurlyBracket )
            {
            // InternalAcmeParser.g:13020:1: ( LeftCurlyBracket )
            // InternalAcmeParser.g:13021:2: LeftCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeBindingDeclarationAccess().getLeftCurlyBracketKeyword_3_0()); 
            }
            match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeBindingDeclarationAccess().getLeftCurlyBracketKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeBindingDeclaration__Group_3__0__Impl"


    // $ANTLR start "rule__AcmeBindingDeclaration__Group_3__1"
    // InternalAcmeParser.g:13030:1: rule__AcmeBindingDeclaration__Group_3__1 : rule__AcmeBindingDeclaration__Group_3__1__Impl rule__AcmeBindingDeclaration__Group_3__2 ;
    public final void rule__AcmeBindingDeclaration__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13034:1: ( rule__AcmeBindingDeclaration__Group_3__1__Impl rule__AcmeBindingDeclaration__Group_3__2 )
            // InternalAcmeParser.g:13035:2: rule__AcmeBindingDeclaration__Group_3__1__Impl rule__AcmeBindingDeclaration__Group_3__2
            {
            pushFollow(FOLLOW_47);
            rule__AcmeBindingDeclaration__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeBindingDeclaration__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeBindingDeclaration__Group_3__1"


    // $ANTLR start "rule__AcmeBindingDeclaration__Group_3__1__Impl"
    // InternalAcmeParser.g:13042:1: rule__AcmeBindingDeclaration__Group_3__1__Impl : ( ( rule__AcmeBindingDeclaration__PropertiesAssignment_3_1 )* ) ;
    public final void rule__AcmeBindingDeclaration__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13046:1: ( ( ( rule__AcmeBindingDeclaration__PropertiesAssignment_3_1 )* ) )
            // InternalAcmeParser.g:13047:1: ( ( rule__AcmeBindingDeclaration__PropertiesAssignment_3_1 )* )
            {
            // InternalAcmeParser.g:13047:1: ( ( rule__AcmeBindingDeclaration__PropertiesAssignment_3_1 )* )
            // InternalAcmeParser.g:13048:2: ( rule__AcmeBindingDeclaration__PropertiesAssignment_3_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeBindingDeclarationAccess().getPropertiesAssignment_3_1()); 
            }
            // InternalAcmeParser.g:13049:2: ( rule__AcmeBindingDeclaration__PropertiesAssignment_3_1 )*
            loop163:
            do {
                int alt163=2;
                int LA163_0 = input.LA(1);

                if ( (LA163_0==Property) ) {
                    alt163=1;
                }


                switch (alt163) {
            	case 1 :
            	    // InternalAcmeParser.g:13049:3: rule__AcmeBindingDeclaration__PropertiesAssignment_3_1
            	    {
            	    pushFollow(FOLLOW_48);
            	    rule__AcmeBindingDeclaration__PropertiesAssignment_3_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop163;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeBindingDeclarationAccess().getPropertiesAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeBindingDeclaration__Group_3__1__Impl"


    // $ANTLR start "rule__AcmeBindingDeclaration__Group_3__2"
    // InternalAcmeParser.g:13057:1: rule__AcmeBindingDeclaration__Group_3__2 : rule__AcmeBindingDeclaration__Group_3__2__Impl ;
    public final void rule__AcmeBindingDeclaration__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13061:1: ( rule__AcmeBindingDeclaration__Group_3__2__Impl )
            // InternalAcmeParser.g:13062:2: rule__AcmeBindingDeclaration__Group_3__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeBindingDeclaration__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeBindingDeclaration__Group_3__2"


    // $ANTLR start "rule__AcmeBindingDeclaration__Group_3__2__Impl"
    // InternalAcmeParser.g:13068:1: rule__AcmeBindingDeclaration__Group_3__2__Impl : ( RightCurlyBracket ) ;
    public final void rule__AcmeBindingDeclaration__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13072:1: ( ( RightCurlyBracket ) )
            // InternalAcmeParser.g:13073:1: ( RightCurlyBracket )
            {
            // InternalAcmeParser.g:13073:1: ( RightCurlyBracket )
            // InternalAcmeParser.g:13074:2: RightCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeBindingDeclarationAccess().getRightCurlyBracketKeyword_3_2()); 
            }
            match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeBindingDeclarationAccess().getRightCurlyBracketKeyword_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeBindingDeclaration__Group_3__2__Impl"


    // $ANTLR start "rule__AcmeAttachmentDeclaration__Group__0"
    // InternalAcmeParser.g:13084:1: rule__AcmeAttachmentDeclaration__Group__0 : rule__AcmeAttachmentDeclaration__Group__0__Impl rule__AcmeAttachmentDeclaration__Group__1 ;
    public final void rule__AcmeAttachmentDeclaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13088:1: ( rule__AcmeAttachmentDeclaration__Group__0__Impl rule__AcmeAttachmentDeclaration__Group__1 )
            // InternalAcmeParser.g:13089:2: rule__AcmeAttachmentDeclaration__Group__0__Impl rule__AcmeAttachmentDeclaration__Group__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmeAttachmentDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeAttachmentDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeAttachmentDeclaration__Group__0"


    // $ANTLR start "rule__AcmeAttachmentDeclaration__Group__0__Impl"
    // InternalAcmeParser.g:13096:1: rule__AcmeAttachmentDeclaration__Group__0__Impl : ( Attachment ) ;
    public final void rule__AcmeAttachmentDeclaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13100:1: ( ( Attachment ) )
            // InternalAcmeParser.g:13101:1: ( Attachment )
            {
            // InternalAcmeParser.g:13101:1: ( Attachment )
            // InternalAcmeParser.g:13102:2: Attachment
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeAttachmentDeclarationAccess().getAttachmentKeyword_0()); 
            }
            match(input,Attachment,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeAttachmentDeclarationAccess().getAttachmentKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeAttachmentDeclaration__Group__0__Impl"


    // $ANTLR start "rule__AcmeAttachmentDeclaration__Group__1"
    // InternalAcmeParser.g:13111:1: rule__AcmeAttachmentDeclaration__Group__1 : rule__AcmeAttachmentDeclaration__Group__1__Impl rule__AcmeAttachmentDeclaration__Group__2 ;
    public final void rule__AcmeAttachmentDeclaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13115:1: ( rule__AcmeAttachmentDeclaration__Group__1__Impl rule__AcmeAttachmentDeclaration__Group__2 )
            // InternalAcmeParser.g:13116:2: rule__AcmeAttachmentDeclaration__Group__1__Impl rule__AcmeAttachmentDeclaration__Group__2
            {
            pushFollow(FOLLOW_45);
            rule__AcmeAttachmentDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeAttachmentDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeAttachmentDeclaration__Group__1"


    // $ANTLR start "rule__AcmeAttachmentDeclaration__Group__1__Impl"
    // InternalAcmeParser.g:13123:1: rule__AcmeAttachmentDeclaration__Group__1__Impl : ( ( rule__AcmeAttachmentDeclaration__PortAssignment_1 ) ) ;
    public final void rule__AcmeAttachmentDeclaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13127:1: ( ( ( rule__AcmeAttachmentDeclaration__PortAssignment_1 ) ) )
            // InternalAcmeParser.g:13128:1: ( ( rule__AcmeAttachmentDeclaration__PortAssignment_1 ) )
            {
            // InternalAcmeParser.g:13128:1: ( ( rule__AcmeAttachmentDeclaration__PortAssignment_1 ) )
            // InternalAcmeParser.g:13129:2: ( rule__AcmeAttachmentDeclaration__PortAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeAttachmentDeclarationAccess().getPortAssignment_1()); 
            }
            // InternalAcmeParser.g:13130:2: ( rule__AcmeAttachmentDeclaration__PortAssignment_1 )
            // InternalAcmeParser.g:13130:3: rule__AcmeAttachmentDeclaration__PortAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmeAttachmentDeclaration__PortAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeAttachmentDeclarationAccess().getPortAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeAttachmentDeclaration__Group__1__Impl"


    // $ANTLR start "rule__AcmeAttachmentDeclaration__Group__2"
    // InternalAcmeParser.g:13138:1: rule__AcmeAttachmentDeclaration__Group__2 : rule__AcmeAttachmentDeclaration__Group__2__Impl rule__AcmeAttachmentDeclaration__Group__3 ;
    public final void rule__AcmeAttachmentDeclaration__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13142:1: ( rule__AcmeAttachmentDeclaration__Group__2__Impl rule__AcmeAttachmentDeclaration__Group__3 )
            // InternalAcmeParser.g:13143:2: rule__AcmeAttachmentDeclaration__Group__2__Impl rule__AcmeAttachmentDeclaration__Group__3
            {
            pushFollow(FOLLOW_11);
            rule__AcmeAttachmentDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeAttachmentDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeAttachmentDeclaration__Group__2"


    // $ANTLR start "rule__AcmeAttachmentDeclaration__Group__2__Impl"
    // InternalAcmeParser.g:13150:1: rule__AcmeAttachmentDeclaration__Group__2__Impl : ( To ) ;
    public final void rule__AcmeAttachmentDeclaration__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13154:1: ( ( To ) )
            // InternalAcmeParser.g:13155:1: ( To )
            {
            // InternalAcmeParser.g:13155:1: ( To )
            // InternalAcmeParser.g:13156:2: To
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeAttachmentDeclarationAccess().getToKeyword_2()); 
            }
            match(input,To,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeAttachmentDeclarationAccess().getToKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeAttachmentDeclaration__Group__2__Impl"


    // $ANTLR start "rule__AcmeAttachmentDeclaration__Group__3"
    // InternalAcmeParser.g:13165:1: rule__AcmeAttachmentDeclaration__Group__3 : rule__AcmeAttachmentDeclaration__Group__3__Impl rule__AcmeAttachmentDeclaration__Group__4 ;
    public final void rule__AcmeAttachmentDeclaration__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13169:1: ( rule__AcmeAttachmentDeclaration__Group__3__Impl rule__AcmeAttachmentDeclaration__Group__4 )
            // InternalAcmeParser.g:13170:2: rule__AcmeAttachmentDeclaration__Group__3__Impl rule__AcmeAttachmentDeclaration__Group__4
            {
            pushFollow(FOLLOW_7);
            rule__AcmeAttachmentDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmeAttachmentDeclaration__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeAttachmentDeclaration__Group__3"


    // $ANTLR start "rule__AcmeAttachmentDeclaration__Group__3__Impl"
    // InternalAcmeParser.g:13177:1: rule__AcmeAttachmentDeclaration__Group__3__Impl : ( ( rule__AcmeAttachmentDeclaration__RoleAssignment_3 ) ) ;
    public final void rule__AcmeAttachmentDeclaration__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13181:1: ( ( ( rule__AcmeAttachmentDeclaration__RoleAssignment_3 ) ) )
            // InternalAcmeParser.g:13182:1: ( ( rule__AcmeAttachmentDeclaration__RoleAssignment_3 ) )
            {
            // InternalAcmeParser.g:13182:1: ( ( rule__AcmeAttachmentDeclaration__RoleAssignment_3 ) )
            // InternalAcmeParser.g:13183:2: ( rule__AcmeAttachmentDeclaration__RoleAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeAttachmentDeclarationAccess().getRoleAssignment_3()); 
            }
            // InternalAcmeParser.g:13184:2: ( rule__AcmeAttachmentDeclaration__RoleAssignment_3 )
            // InternalAcmeParser.g:13184:3: rule__AcmeAttachmentDeclaration__RoleAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__AcmeAttachmentDeclaration__RoleAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeAttachmentDeclarationAccess().getRoleAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeAttachmentDeclaration__Group__3__Impl"


    // $ANTLR start "rule__AcmeAttachmentDeclaration__Group__4"
    // InternalAcmeParser.g:13192:1: rule__AcmeAttachmentDeclaration__Group__4 : rule__AcmeAttachmentDeclaration__Group__4__Impl ;
    public final void rule__AcmeAttachmentDeclaration__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13196:1: ( rule__AcmeAttachmentDeclaration__Group__4__Impl )
            // InternalAcmeParser.g:13197:2: rule__AcmeAttachmentDeclaration__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmeAttachmentDeclaration__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeAttachmentDeclaration__Group__4"


    // $ANTLR start "rule__AcmeAttachmentDeclaration__Group__4__Impl"
    // InternalAcmeParser.g:13203:1: rule__AcmeAttachmentDeclaration__Group__4__Impl : ( Semicolon ) ;
    public final void rule__AcmeAttachmentDeclaration__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13207:1: ( ( Semicolon ) )
            // InternalAcmeParser.g:13208:1: ( Semicolon )
            {
            // InternalAcmeParser.g:13208:1: ( Semicolon )
            // InternalAcmeParser.g:13209:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeAttachmentDeclarationAccess().getSemicolonKeyword_4()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeAttachmentDeclarationAccess().getSemicolonKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeAttachmentDeclaration__Group__4__Impl"


    // $ANTLR start "rule__AcmePropertyDeclaration__Group__0"
    // InternalAcmeParser.g:13219:1: rule__AcmePropertyDeclaration__Group__0 : rule__AcmePropertyDeclaration__Group__0__Impl rule__AcmePropertyDeclaration__Group__1 ;
    public final void rule__AcmePropertyDeclaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13223:1: ( rule__AcmePropertyDeclaration__Group__0__Impl rule__AcmePropertyDeclaration__Group__1 )
            // InternalAcmeParser.g:13224:2: rule__AcmePropertyDeclaration__Group__0__Impl rule__AcmePropertyDeclaration__Group__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmePropertyDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyDeclaration__Group__0"


    // $ANTLR start "rule__AcmePropertyDeclaration__Group__0__Impl"
    // InternalAcmeParser.g:13231:1: rule__AcmePropertyDeclaration__Group__0__Impl : ( Property ) ;
    public final void rule__AcmePropertyDeclaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13235:1: ( ( Property ) )
            // InternalAcmeParser.g:13236:1: ( Property )
            {
            // InternalAcmeParser.g:13236:1: ( Property )
            // InternalAcmeParser.g:13237:2: Property
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyDeclarationAccess().getPropertyKeyword_0()); 
            }
            match(input,Property,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyDeclarationAccess().getPropertyKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyDeclaration__Group__0__Impl"


    // $ANTLR start "rule__AcmePropertyDeclaration__Group__1"
    // InternalAcmeParser.g:13246:1: rule__AcmePropertyDeclaration__Group__1 : rule__AcmePropertyDeclaration__Group__1__Impl rule__AcmePropertyDeclaration__Group__2 ;
    public final void rule__AcmePropertyDeclaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13250:1: ( rule__AcmePropertyDeclaration__Group__1__Impl rule__AcmePropertyDeclaration__Group__2 )
            // InternalAcmeParser.g:13251:2: rule__AcmePropertyDeclaration__Group__1__Impl rule__AcmePropertyDeclaration__Group__2
            {
            pushFollow(FOLLOW_49);
            rule__AcmePropertyDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyDeclaration__Group__1"


    // $ANTLR start "rule__AcmePropertyDeclaration__Group__1__Impl"
    // InternalAcmeParser.g:13258:1: rule__AcmePropertyDeclaration__Group__1__Impl : ( ( rule__AcmePropertyDeclaration__NameAssignment_1 ) ) ;
    public final void rule__AcmePropertyDeclaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13262:1: ( ( ( rule__AcmePropertyDeclaration__NameAssignment_1 ) ) )
            // InternalAcmeParser.g:13263:1: ( ( rule__AcmePropertyDeclaration__NameAssignment_1 ) )
            {
            // InternalAcmeParser.g:13263:1: ( ( rule__AcmePropertyDeclaration__NameAssignment_1 ) )
            // InternalAcmeParser.g:13264:2: ( rule__AcmePropertyDeclaration__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyDeclarationAccess().getNameAssignment_1()); 
            }
            // InternalAcmeParser.g:13265:2: ( rule__AcmePropertyDeclaration__NameAssignment_1 )
            // InternalAcmeParser.g:13265:3: rule__AcmePropertyDeclaration__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyDeclaration__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyDeclarationAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyDeclaration__Group__1__Impl"


    // $ANTLR start "rule__AcmePropertyDeclaration__Group__2"
    // InternalAcmeParser.g:13273:1: rule__AcmePropertyDeclaration__Group__2 : rule__AcmePropertyDeclaration__Group__2__Impl rule__AcmePropertyDeclaration__Group__3 ;
    public final void rule__AcmePropertyDeclaration__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13277:1: ( rule__AcmePropertyDeclaration__Group__2__Impl rule__AcmePropertyDeclaration__Group__3 )
            // InternalAcmeParser.g:13278:2: rule__AcmePropertyDeclaration__Group__2__Impl rule__AcmePropertyDeclaration__Group__3
            {
            pushFollow(FOLLOW_49);
            rule__AcmePropertyDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyDeclaration__Group__2"


    // $ANTLR start "rule__AcmePropertyDeclaration__Group__2__Impl"
    // InternalAcmeParser.g:13285:1: rule__AcmePropertyDeclaration__Group__2__Impl : ( ( rule__AcmePropertyDeclaration__Group_2__0 )? ) ;
    public final void rule__AcmePropertyDeclaration__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13289:1: ( ( ( rule__AcmePropertyDeclaration__Group_2__0 )? ) )
            // InternalAcmeParser.g:13290:1: ( ( rule__AcmePropertyDeclaration__Group_2__0 )? )
            {
            // InternalAcmeParser.g:13290:1: ( ( rule__AcmePropertyDeclaration__Group_2__0 )? )
            // InternalAcmeParser.g:13291:2: ( rule__AcmePropertyDeclaration__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyDeclarationAccess().getGroup_2()); 
            }
            // InternalAcmeParser.g:13292:2: ( rule__AcmePropertyDeclaration__Group_2__0 )?
            int alt164=2;
            int LA164_0 = input.LA(1);

            if ( (LA164_0==Colon) ) {
                alt164=1;
            }
            switch (alt164) {
                case 1 :
                    // InternalAcmeParser.g:13292:3: rule__AcmePropertyDeclaration__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePropertyDeclaration__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyDeclarationAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyDeclaration__Group__2__Impl"


    // $ANTLR start "rule__AcmePropertyDeclaration__Group__3"
    // InternalAcmeParser.g:13300:1: rule__AcmePropertyDeclaration__Group__3 : rule__AcmePropertyDeclaration__Group__3__Impl rule__AcmePropertyDeclaration__Group__4 ;
    public final void rule__AcmePropertyDeclaration__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13304:1: ( rule__AcmePropertyDeclaration__Group__3__Impl rule__AcmePropertyDeclaration__Group__4 )
            // InternalAcmeParser.g:13305:2: rule__AcmePropertyDeclaration__Group__3__Impl rule__AcmePropertyDeclaration__Group__4
            {
            pushFollow(FOLLOW_49);
            rule__AcmePropertyDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyDeclaration__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyDeclaration__Group__3"


    // $ANTLR start "rule__AcmePropertyDeclaration__Group__3__Impl"
    // InternalAcmeParser.g:13312:1: rule__AcmePropertyDeclaration__Group__3__Impl : ( ( rule__AcmePropertyDeclaration__Alternatives_3 )? ) ;
    public final void rule__AcmePropertyDeclaration__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13316:1: ( ( ( rule__AcmePropertyDeclaration__Alternatives_3 )? ) )
            // InternalAcmeParser.g:13317:1: ( ( rule__AcmePropertyDeclaration__Alternatives_3 )? )
            {
            // InternalAcmeParser.g:13317:1: ( ( rule__AcmePropertyDeclaration__Alternatives_3 )? )
            // InternalAcmeParser.g:13318:2: ( rule__AcmePropertyDeclaration__Alternatives_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyDeclarationAccess().getAlternatives_3()); 
            }
            // InternalAcmeParser.g:13319:2: ( rule__AcmePropertyDeclaration__Alternatives_3 )?
            int alt165=2;
            int LA165_0 = input.LA(1);

            if ( (LA165_0==U||LA165_0==EqualsSign) ) {
                alt165=1;
            }
            switch (alt165) {
                case 1 :
                    // InternalAcmeParser.g:13319:3: rule__AcmePropertyDeclaration__Alternatives_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePropertyDeclaration__Alternatives_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyDeclarationAccess().getAlternatives_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyDeclaration__Group__3__Impl"


    // $ANTLR start "rule__AcmePropertyDeclaration__Group__4"
    // InternalAcmeParser.g:13327:1: rule__AcmePropertyDeclaration__Group__4 : rule__AcmePropertyDeclaration__Group__4__Impl rule__AcmePropertyDeclaration__Group__5 ;
    public final void rule__AcmePropertyDeclaration__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13331:1: ( rule__AcmePropertyDeclaration__Group__4__Impl rule__AcmePropertyDeclaration__Group__5 )
            // InternalAcmeParser.g:13332:2: rule__AcmePropertyDeclaration__Group__4__Impl rule__AcmePropertyDeclaration__Group__5
            {
            pushFollow(FOLLOW_49);
            rule__AcmePropertyDeclaration__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyDeclaration__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyDeclaration__Group__4"


    // $ANTLR start "rule__AcmePropertyDeclaration__Group__4__Impl"
    // InternalAcmeParser.g:13339:1: rule__AcmePropertyDeclaration__Group__4__Impl : ( ( rule__AcmePropertyDeclaration__MetaAssignment_4 )? ) ;
    public final void rule__AcmePropertyDeclaration__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13343:1: ( ( ( rule__AcmePropertyDeclaration__MetaAssignment_4 )? ) )
            // InternalAcmeParser.g:13344:1: ( ( rule__AcmePropertyDeclaration__MetaAssignment_4 )? )
            {
            // InternalAcmeParser.g:13344:1: ( ( rule__AcmePropertyDeclaration__MetaAssignment_4 )? )
            // InternalAcmeParser.g:13345:2: ( rule__AcmePropertyDeclaration__MetaAssignment_4 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyDeclarationAccess().getMetaAssignment_4()); 
            }
            // InternalAcmeParser.g:13346:2: ( rule__AcmePropertyDeclaration__MetaAssignment_4 )?
            int alt166=2;
            int LA166_0 = input.LA(1);

            if ( (LA166_0==LessThanSignLessThanSign) ) {
                alt166=1;
            }
            switch (alt166) {
                case 1 :
                    // InternalAcmeParser.g:13346:3: rule__AcmePropertyDeclaration__MetaAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePropertyDeclaration__MetaAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyDeclarationAccess().getMetaAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyDeclaration__Group__4__Impl"


    // $ANTLR start "rule__AcmePropertyDeclaration__Group__5"
    // InternalAcmeParser.g:13354:1: rule__AcmePropertyDeclaration__Group__5 : rule__AcmePropertyDeclaration__Group__5__Impl ;
    public final void rule__AcmePropertyDeclaration__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13358:1: ( rule__AcmePropertyDeclaration__Group__5__Impl )
            // InternalAcmeParser.g:13359:2: rule__AcmePropertyDeclaration__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyDeclaration__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyDeclaration__Group__5"


    // $ANTLR start "rule__AcmePropertyDeclaration__Group__5__Impl"
    // InternalAcmeParser.g:13365:1: rule__AcmePropertyDeclaration__Group__5__Impl : ( Semicolon ) ;
    public final void rule__AcmePropertyDeclaration__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13369:1: ( ( Semicolon ) )
            // InternalAcmeParser.g:13370:1: ( Semicolon )
            {
            // InternalAcmeParser.g:13370:1: ( Semicolon )
            // InternalAcmeParser.g:13371:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyDeclarationAccess().getSemicolonKeyword_5()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyDeclarationAccess().getSemicolonKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyDeclaration__Group__5__Impl"


    // $ANTLR start "rule__AcmePropertyDeclaration__Group_2__0"
    // InternalAcmeParser.g:13381:1: rule__AcmePropertyDeclaration__Group_2__0 : rule__AcmePropertyDeclaration__Group_2__0__Impl rule__AcmePropertyDeclaration__Group_2__1 ;
    public final void rule__AcmePropertyDeclaration__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13385:1: ( rule__AcmePropertyDeclaration__Group_2__0__Impl rule__AcmePropertyDeclaration__Group_2__1 )
            // InternalAcmeParser.g:13386:2: rule__AcmePropertyDeclaration__Group_2__0__Impl rule__AcmePropertyDeclaration__Group_2__1
            {
            pushFollow(FOLLOW_50);
            rule__AcmePropertyDeclaration__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyDeclaration__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyDeclaration__Group_2__0"


    // $ANTLR start "rule__AcmePropertyDeclaration__Group_2__0__Impl"
    // InternalAcmeParser.g:13393:1: rule__AcmePropertyDeclaration__Group_2__0__Impl : ( Colon ) ;
    public final void rule__AcmePropertyDeclaration__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13397:1: ( ( Colon ) )
            // InternalAcmeParser.g:13398:1: ( Colon )
            {
            // InternalAcmeParser.g:13398:1: ( Colon )
            // InternalAcmeParser.g:13399:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyDeclarationAccess().getColonKeyword_2_0()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyDeclarationAccess().getColonKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyDeclaration__Group_2__0__Impl"


    // $ANTLR start "rule__AcmePropertyDeclaration__Group_2__1"
    // InternalAcmeParser.g:13408:1: rule__AcmePropertyDeclaration__Group_2__1 : rule__AcmePropertyDeclaration__Group_2__1__Impl ;
    public final void rule__AcmePropertyDeclaration__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13412:1: ( rule__AcmePropertyDeclaration__Group_2__1__Impl )
            // InternalAcmeParser.g:13413:2: rule__AcmePropertyDeclaration__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyDeclaration__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyDeclaration__Group_2__1"


    // $ANTLR start "rule__AcmePropertyDeclaration__Group_2__1__Impl"
    // InternalAcmeParser.g:13419:1: rule__AcmePropertyDeclaration__Group_2__1__Impl : ( ( rule__AcmePropertyDeclaration__TypeAssignment_2_1 ) ) ;
    public final void rule__AcmePropertyDeclaration__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13423:1: ( ( ( rule__AcmePropertyDeclaration__TypeAssignment_2_1 ) ) )
            // InternalAcmeParser.g:13424:1: ( ( rule__AcmePropertyDeclaration__TypeAssignment_2_1 ) )
            {
            // InternalAcmeParser.g:13424:1: ( ( rule__AcmePropertyDeclaration__TypeAssignment_2_1 ) )
            // InternalAcmeParser.g:13425:2: ( rule__AcmePropertyDeclaration__TypeAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyDeclarationAccess().getTypeAssignment_2_1()); 
            }
            // InternalAcmeParser.g:13426:2: ( rule__AcmePropertyDeclaration__TypeAssignment_2_1 )
            // InternalAcmeParser.g:13426:3: rule__AcmePropertyDeclaration__TypeAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyDeclaration__TypeAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyDeclarationAccess().getTypeAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyDeclaration__Group_2__1__Impl"


    // $ANTLR start "rule__AcmePropertyDeclaration__Group_3_0__0"
    // InternalAcmeParser.g:13435:1: rule__AcmePropertyDeclaration__Group_3_0__0 : rule__AcmePropertyDeclaration__Group_3_0__0__Impl rule__AcmePropertyDeclaration__Group_3_0__1 ;
    public final void rule__AcmePropertyDeclaration__Group_3_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13439:1: ( rule__AcmePropertyDeclaration__Group_3_0__0__Impl rule__AcmePropertyDeclaration__Group_3_0__1 )
            // InternalAcmeParser.g:13440:2: rule__AcmePropertyDeclaration__Group_3_0__0__Impl rule__AcmePropertyDeclaration__Group_3_0__1
            {
            pushFollow(FOLLOW_51);
            rule__AcmePropertyDeclaration__Group_3_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyDeclaration__Group_3_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyDeclaration__Group_3_0__0"


    // $ANTLR start "rule__AcmePropertyDeclaration__Group_3_0__0__Impl"
    // InternalAcmeParser.g:13447:1: rule__AcmePropertyDeclaration__Group_3_0__0__Impl : ( EqualsSign ) ;
    public final void rule__AcmePropertyDeclaration__Group_3_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13451:1: ( ( EqualsSign ) )
            // InternalAcmeParser.g:13452:1: ( EqualsSign )
            {
            // InternalAcmeParser.g:13452:1: ( EqualsSign )
            // InternalAcmeParser.g:13453:2: EqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyDeclarationAccess().getEqualsSignKeyword_3_0_0()); 
            }
            match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyDeclarationAccess().getEqualsSignKeyword_3_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyDeclaration__Group_3_0__0__Impl"


    // $ANTLR start "rule__AcmePropertyDeclaration__Group_3_0__1"
    // InternalAcmeParser.g:13462:1: rule__AcmePropertyDeclaration__Group_3_0__1 : rule__AcmePropertyDeclaration__Group_3_0__1__Impl ;
    public final void rule__AcmePropertyDeclaration__Group_3_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13466:1: ( rule__AcmePropertyDeclaration__Group_3_0__1__Impl )
            // InternalAcmeParser.g:13467:2: rule__AcmePropertyDeclaration__Group_3_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyDeclaration__Group_3_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyDeclaration__Group_3_0__1"


    // $ANTLR start "rule__AcmePropertyDeclaration__Group_3_0__1__Impl"
    // InternalAcmeParser.g:13473:1: rule__AcmePropertyDeclaration__Group_3_0__1__Impl : ( ( rule__AcmePropertyDeclaration__ValAssignment_3_0_1 ) ) ;
    public final void rule__AcmePropertyDeclaration__Group_3_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13477:1: ( ( ( rule__AcmePropertyDeclaration__ValAssignment_3_0_1 ) ) )
            // InternalAcmeParser.g:13478:1: ( ( rule__AcmePropertyDeclaration__ValAssignment_3_0_1 ) )
            {
            // InternalAcmeParser.g:13478:1: ( ( rule__AcmePropertyDeclaration__ValAssignment_3_0_1 ) )
            // InternalAcmeParser.g:13479:2: ( rule__AcmePropertyDeclaration__ValAssignment_3_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyDeclarationAccess().getValAssignment_3_0_1()); 
            }
            // InternalAcmeParser.g:13480:2: ( rule__AcmePropertyDeclaration__ValAssignment_3_0_1 )
            // InternalAcmeParser.g:13480:3: rule__AcmePropertyDeclaration__ValAssignment_3_0_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyDeclaration__ValAssignment_3_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyDeclarationAccess().getValAssignment_3_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyDeclaration__Group_3_0__1__Impl"


    // $ANTLR start "rule__AcmePropertyDeclaration__Group_3_1__0"
    // InternalAcmeParser.g:13489:1: rule__AcmePropertyDeclaration__Group_3_1__0 : rule__AcmePropertyDeclaration__Group_3_1__0__Impl rule__AcmePropertyDeclaration__Group_3_1__1 ;
    public final void rule__AcmePropertyDeclaration__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13493:1: ( rule__AcmePropertyDeclaration__Group_3_1__0__Impl rule__AcmePropertyDeclaration__Group_3_1__1 )
            // InternalAcmeParser.g:13494:2: rule__AcmePropertyDeclaration__Group_3_1__0__Impl rule__AcmePropertyDeclaration__Group_3_1__1
            {
            pushFollow(FOLLOW_51);
            rule__AcmePropertyDeclaration__Group_3_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyDeclaration__Group_3_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyDeclaration__Group_3_1__0"


    // $ANTLR start "rule__AcmePropertyDeclaration__Group_3_1__0__Impl"
    // InternalAcmeParser.g:13501:1: rule__AcmePropertyDeclaration__Group_3_1__0__Impl : ( U ) ;
    public final void rule__AcmePropertyDeclaration__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13505:1: ( ( U ) )
            // InternalAcmeParser.g:13506:1: ( U )
            {
            // InternalAcmeParser.g:13506:1: ( U )
            // InternalAcmeParser.g:13507:2: U
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyDeclarationAccess().getUKeyword_3_1_0()); 
            }
            match(input,U,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyDeclarationAccess().getUKeyword_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyDeclaration__Group_3_1__0__Impl"


    // $ANTLR start "rule__AcmePropertyDeclaration__Group_3_1__1"
    // InternalAcmeParser.g:13516:1: rule__AcmePropertyDeclaration__Group_3_1__1 : rule__AcmePropertyDeclaration__Group_3_1__1__Impl ;
    public final void rule__AcmePropertyDeclaration__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13520:1: ( rule__AcmePropertyDeclaration__Group_3_1__1__Impl )
            // InternalAcmeParser.g:13521:2: rule__AcmePropertyDeclaration__Group_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyDeclaration__Group_3_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyDeclaration__Group_3_1__1"


    // $ANTLR start "rule__AcmePropertyDeclaration__Group_3_1__1__Impl"
    // InternalAcmeParser.g:13527:1: rule__AcmePropertyDeclaration__Group_3_1__1__Impl : ( ( rule__AcmePropertyDeclaration__ValAssignment_3_1_1 ) ) ;
    public final void rule__AcmePropertyDeclaration__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13531:1: ( ( ( rule__AcmePropertyDeclaration__ValAssignment_3_1_1 ) ) )
            // InternalAcmeParser.g:13532:1: ( ( rule__AcmePropertyDeclaration__ValAssignment_3_1_1 ) )
            {
            // InternalAcmeParser.g:13532:1: ( ( rule__AcmePropertyDeclaration__ValAssignment_3_1_1 ) )
            // InternalAcmeParser.g:13533:2: ( rule__AcmePropertyDeclaration__ValAssignment_3_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyDeclarationAccess().getValAssignment_3_1_1()); 
            }
            // InternalAcmeParser.g:13534:2: ( rule__AcmePropertyDeclaration__ValAssignment_3_1_1 )
            // InternalAcmeParser.g:13534:3: rule__AcmePropertyDeclaration__ValAssignment_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyDeclaration__ValAssignment_3_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyDeclarationAccess().getValAssignment_3_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyDeclaration__Group_3_1__1__Impl"


    // $ANTLR start "rule__BooleanLiteral__Group_1__0"
    // InternalAcmeParser.g:13543:1: rule__BooleanLiteral__Group_1__0 : rule__BooleanLiteral__Group_1__0__Impl rule__BooleanLiteral__Group_1__1 ;
    public final void rule__BooleanLiteral__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13547:1: ( rule__BooleanLiteral__Group_1__0__Impl rule__BooleanLiteral__Group_1__1 )
            // InternalAcmeParser.g:13548:2: rule__BooleanLiteral__Group_1__0__Impl rule__BooleanLiteral__Group_1__1
            {
            pushFollow(FOLLOW_52);
            rule__BooleanLiteral__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BooleanLiteral__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanLiteral__Group_1__0"


    // $ANTLR start "rule__BooleanLiteral__Group_1__0__Impl"
    // InternalAcmeParser.g:13555:1: rule__BooleanLiteral__Group_1__0__Impl : ( () ) ;
    public final void rule__BooleanLiteral__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13559:1: ( ( () ) )
            // InternalAcmeParser.g:13560:1: ( () )
            {
            // InternalAcmeParser.g:13560:1: ( () )
            // InternalAcmeParser.g:13561:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_1_0()); 
            }
            // InternalAcmeParser.g:13562:2: ()
            // InternalAcmeParser.g:13562:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanLiteral__Group_1__0__Impl"


    // $ANTLR start "rule__BooleanLiteral__Group_1__1"
    // InternalAcmeParser.g:13570:1: rule__BooleanLiteral__Group_1__1 : rule__BooleanLiteral__Group_1__1__Impl ;
    public final void rule__BooleanLiteral__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13574:1: ( rule__BooleanLiteral__Group_1__1__Impl )
            // InternalAcmeParser.g:13575:2: rule__BooleanLiteral__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BooleanLiteral__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanLiteral__Group_1__1"


    // $ANTLR start "rule__BooleanLiteral__Group_1__1__Impl"
    // InternalAcmeParser.g:13581:1: rule__BooleanLiteral__Group_1__1__Impl : ( False ) ;
    public final void rule__BooleanLiteral__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13585:1: ( ( False ) )
            // InternalAcmeParser.g:13586:1: ( False )
            {
            // InternalAcmeParser.g:13586:1: ( False )
            // InternalAcmeParser.g:13587:2: False
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanLiteralAccess().getFalseKeyword_1_1()); 
            }
            match(input,False,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanLiteralAccess().getFalseKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanLiteral__Group_1__1__Impl"


    // $ANTLR start "rule__AcmePropertySet__Group__0"
    // InternalAcmeParser.g:13597:1: rule__AcmePropertySet__Group__0 : rule__AcmePropertySet__Group__0__Impl rule__AcmePropertySet__Group__1 ;
    public final void rule__AcmePropertySet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13601:1: ( rule__AcmePropertySet__Group__0__Impl rule__AcmePropertySet__Group__1 )
            // InternalAcmeParser.g:13602:2: rule__AcmePropertySet__Group__0__Impl rule__AcmePropertySet__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__AcmePropertySet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertySet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertySet__Group__0"


    // $ANTLR start "rule__AcmePropertySet__Group__0__Impl"
    // InternalAcmeParser.g:13609:1: rule__AcmePropertySet__Group__0__Impl : ( () ) ;
    public final void rule__AcmePropertySet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13613:1: ( ( () ) )
            // InternalAcmeParser.g:13614:1: ( () )
            {
            // InternalAcmeParser.g:13614:1: ( () )
            // InternalAcmeParser.g:13615:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertySetAccess().getAcmePropertySetAction_0()); 
            }
            // InternalAcmeParser.g:13616:2: ()
            // InternalAcmeParser.g:13616:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertySetAccess().getAcmePropertySetAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertySet__Group__0__Impl"


    // $ANTLR start "rule__AcmePropertySet__Group__1"
    // InternalAcmeParser.g:13624:1: rule__AcmePropertySet__Group__1 : rule__AcmePropertySet__Group__1__Impl rule__AcmePropertySet__Group__2 ;
    public final void rule__AcmePropertySet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13628:1: ( rule__AcmePropertySet__Group__1__Impl rule__AcmePropertySet__Group__2 )
            // InternalAcmeParser.g:13629:2: rule__AcmePropertySet__Group__1__Impl rule__AcmePropertySet__Group__2
            {
            pushFollow(FOLLOW_53);
            rule__AcmePropertySet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertySet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertySet__Group__1"


    // $ANTLR start "rule__AcmePropertySet__Group__1__Impl"
    // InternalAcmeParser.g:13636:1: rule__AcmePropertySet__Group__1__Impl : ( LeftCurlyBracket ) ;
    public final void rule__AcmePropertySet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13640:1: ( ( LeftCurlyBracket ) )
            // InternalAcmeParser.g:13641:1: ( LeftCurlyBracket )
            {
            // InternalAcmeParser.g:13641:1: ( LeftCurlyBracket )
            // InternalAcmeParser.g:13642:2: LeftCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertySetAccess().getLeftCurlyBracketKeyword_1()); 
            }
            match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertySetAccess().getLeftCurlyBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertySet__Group__1__Impl"


    // $ANTLR start "rule__AcmePropertySet__Group__2"
    // InternalAcmeParser.g:13651:1: rule__AcmePropertySet__Group__2 : rule__AcmePropertySet__Group__2__Impl rule__AcmePropertySet__Group__3 ;
    public final void rule__AcmePropertySet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13655:1: ( rule__AcmePropertySet__Group__2__Impl rule__AcmePropertySet__Group__3 )
            // InternalAcmeParser.g:13656:2: rule__AcmePropertySet__Group__2__Impl rule__AcmePropertySet__Group__3
            {
            pushFollow(FOLLOW_53);
            rule__AcmePropertySet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertySet__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertySet__Group__2"


    // $ANTLR start "rule__AcmePropertySet__Group__2__Impl"
    // InternalAcmeParser.g:13663:1: rule__AcmePropertySet__Group__2__Impl : ( ( rule__AcmePropertySet__Group_2__0 )? ) ;
    public final void rule__AcmePropertySet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13667:1: ( ( ( rule__AcmePropertySet__Group_2__0 )? ) )
            // InternalAcmeParser.g:13668:1: ( ( rule__AcmePropertySet__Group_2__0 )? )
            {
            // InternalAcmeParser.g:13668:1: ( ( rule__AcmePropertySet__Group_2__0 )? )
            // InternalAcmeParser.g:13669:2: ( rule__AcmePropertySet__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertySetAccess().getGroup_2()); 
            }
            // InternalAcmeParser.g:13670:2: ( rule__AcmePropertySet__Group_2__0 )?
            int alt167=2;
            int LA167_0 = input.LA(1);

            if ( (LA167_0==False||LA167_0==True||LA167_0==LessThanSign||LA167_0==LeftSquareBracket||LA167_0==LeftCurlyBracket||(LA167_0>=RULE_FLOAT && LA167_0<=RULE_STRING)) ) {
                alt167=1;
            }
            switch (alt167) {
                case 1 :
                    // InternalAcmeParser.g:13670:3: rule__AcmePropertySet__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePropertySet__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertySetAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertySet__Group__2__Impl"


    // $ANTLR start "rule__AcmePropertySet__Group__3"
    // InternalAcmeParser.g:13678:1: rule__AcmePropertySet__Group__3 : rule__AcmePropertySet__Group__3__Impl ;
    public final void rule__AcmePropertySet__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13682:1: ( rule__AcmePropertySet__Group__3__Impl )
            // InternalAcmeParser.g:13683:2: rule__AcmePropertySet__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertySet__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertySet__Group__3"


    // $ANTLR start "rule__AcmePropertySet__Group__3__Impl"
    // InternalAcmeParser.g:13689:1: rule__AcmePropertySet__Group__3__Impl : ( RightCurlyBracket ) ;
    public final void rule__AcmePropertySet__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13693:1: ( ( RightCurlyBracket ) )
            // InternalAcmeParser.g:13694:1: ( RightCurlyBracket )
            {
            // InternalAcmeParser.g:13694:1: ( RightCurlyBracket )
            // InternalAcmeParser.g:13695:2: RightCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertySetAccess().getRightCurlyBracketKeyword_3()); 
            }
            match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertySetAccess().getRightCurlyBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertySet__Group__3__Impl"


    // $ANTLR start "rule__AcmePropertySet__Group_2__0"
    // InternalAcmeParser.g:13705:1: rule__AcmePropertySet__Group_2__0 : rule__AcmePropertySet__Group_2__0__Impl rule__AcmePropertySet__Group_2__1 ;
    public final void rule__AcmePropertySet__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13709:1: ( rule__AcmePropertySet__Group_2__0__Impl rule__AcmePropertySet__Group_2__1 )
            // InternalAcmeParser.g:13710:2: rule__AcmePropertySet__Group_2__0__Impl rule__AcmePropertySet__Group_2__1
            {
            pushFollow(FOLLOW_19);
            rule__AcmePropertySet__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertySet__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertySet__Group_2__0"


    // $ANTLR start "rule__AcmePropertySet__Group_2__0__Impl"
    // InternalAcmeParser.g:13717:1: rule__AcmePropertySet__Group_2__0__Impl : ( ( rule__AcmePropertySet__ValuesAssignment_2_0 ) ) ;
    public final void rule__AcmePropertySet__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13721:1: ( ( ( rule__AcmePropertySet__ValuesAssignment_2_0 ) ) )
            // InternalAcmeParser.g:13722:1: ( ( rule__AcmePropertySet__ValuesAssignment_2_0 ) )
            {
            // InternalAcmeParser.g:13722:1: ( ( rule__AcmePropertySet__ValuesAssignment_2_0 ) )
            // InternalAcmeParser.g:13723:2: ( rule__AcmePropertySet__ValuesAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertySetAccess().getValuesAssignment_2_0()); 
            }
            // InternalAcmeParser.g:13724:2: ( rule__AcmePropertySet__ValuesAssignment_2_0 )
            // InternalAcmeParser.g:13724:3: rule__AcmePropertySet__ValuesAssignment_2_0
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertySet__ValuesAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertySetAccess().getValuesAssignment_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertySet__Group_2__0__Impl"


    // $ANTLR start "rule__AcmePropertySet__Group_2__1"
    // InternalAcmeParser.g:13732:1: rule__AcmePropertySet__Group_2__1 : rule__AcmePropertySet__Group_2__1__Impl ;
    public final void rule__AcmePropertySet__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13736:1: ( rule__AcmePropertySet__Group_2__1__Impl )
            // InternalAcmeParser.g:13737:2: rule__AcmePropertySet__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertySet__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertySet__Group_2__1"


    // $ANTLR start "rule__AcmePropertySet__Group_2__1__Impl"
    // InternalAcmeParser.g:13743:1: rule__AcmePropertySet__Group_2__1__Impl : ( ( rule__AcmePropertySet__Group_2_1__0 )* ) ;
    public final void rule__AcmePropertySet__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13747:1: ( ( ( rule__AcmePropertySet__Group_2_1__0 )* ) )
            // InternalAcmeParser.g:13748:1: ( ( rule__AcmePropertySet__Group_2_1__0 )* )
            {
            // InternalAcmeParser.g:13748:1: ( ( rule__AcmePropertySet__Group_2_1__0 )* )
            // InternalAcmeParser.g:13749:2: ( rule__AcmePropertySet__Group_2_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertySetAccess().getGroup_2_1()); 
            }
            // InternalAcmeParser.g:13750:2: ( rule__AcmePropertySet__Group_2_1__0 )*
            loop168:
            do {
                int alt168=2;
                int LA168_0 = input.LA(1);

                if ( (LA168_0==Comma) ) {
                    alt168=1;
                }


                switch (alt168) {
            	case 1 :
            	    // InternalAcmeParser.g:13750:3: rule__AcmePropertySet__Group_2_1__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__AcmePropertySet__Group_2_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop168;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertySetAccess().getGroup_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertySet__Group_2__1__Impl"


    // $ANTLR start "rule__AcmePropertySet__Group_2_1__0"
    // InternalAcmeParser.g:13759:1: rule__AcmePropertySet__Group_2_1__0 : rule__AcmePropertySet__Group_2_1__0__Impl rule__AcmePropertySet__Group_2_1__1 ;
    public final void rule__AcmePropertySet__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13763:1: ( rule__AcmePropertySet__Group_2_1__0__Impl rule__AcmePropertySet__Group_2_1__1 )
            // InternalAcmeParser.g:13764:2: rule__AcmePropertySet__Group_2_1__0__Impl rule__AcmePropertySet__Group_2_1__1
            {
            pushFollow(FOLLOW_51);
            rule__AcmePropertySet__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertySet__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertySet__Group_2_1__0"


    // $ANTLR start "rule__AcmePropertySet__Group_2_1__0__Impl"
    // InternalAcmeParser.g:13771:1: rule__AcmePropertySet__Group_2_1__0__Impl : ( Comma ) ;
    public final void rule__AcmePropertySet__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13775:1: ( ( Comma ) )
            // InternalAcmeParser.g:13776:1: ( Comma )
            {
            // InternalAcmeParser.g:13776:1: ( Comma )
            // InternalAcmeParser.g:13777:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertySetAccess().getCommaKeyword_2_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertySetAccess().getCommaKeyword_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertySet__Group_2_1__0__Impl"


    // $ANTLR start "rule__AcmePropertySet__Group_2_1__1"
    // InternalAcmeParser.g:13786:1: rule__AcmePropertySet__Group_2_1__1 : rule__AcmePropertySet__Group_2_1__1__Impl ;
    public final void rule__AcmePropertySet__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13790:1: ( rule__AcmePropertySet__Group_2_1__1__Impl )
            // InternalAcmeParser.g:13791:2: rule__AcmePropertySet__Group_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertySet__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertySet__Group_2_1__1"


    // $ANTLR start "rule__AcmePropertySet__Group_2_1__1__Impl"
    // InternalAcmeParser.g:13797:1: rule__AcmePropertySet__Group_2_1__1__Impl : ( ( rule__AcmePropertySet__ValuesAssignment_2_1_1 ) ) ;
    public final void rule__AcmePropertySet__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13801:1: ( ( ( rule__AcmePropertySet__ValuesAssignment_2_1_1 ) ) )
            // InternalAcmeParser.g:13802:1: ( ( rule__AcmePropertySet__ValuesAssignment_2_1_1 ) )
            {
            // InternalAcmeParser.g:13802:1: ( ( rule__AcmePropertySet__ValuesAssignment_2_1_1 ) )
            // InternalAcmeParser.g:13803:2: ( rule__AcmePropertySet__ValuesAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertySetAccess().getValuesAssignment_2_1_1()); 
            }
            // InternalAcmeParser.g:13804:2: ( rule__AcmePropertySet__ValuesAssignment_2_1_1 )
            // InternalAcmeParser.g:13804:3: rule__AcmePropertySet__ValuesAssignment_2_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertySet__ValuesAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertySetAccess().getValuesAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertySet__Group_2_1__1__Impl"


    // $ANTLR start "rule__AcmePropertySequence__Group__0"
    // InternalAcmeParser.g:13813:1: rule__AcmePropertySequence__Group__0 : rule__AcmePropertySequence__Group__0__Impl rule__AcmePropertySequence__Group__1 ;
    public final void rule__AcmePropertySequence__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13817:1: ( rule__AcmePropertySequence__Group__0__Impl rule__AcmePropertySequence__Group__1 )
            // InternalAcmeParser.g:13818:2: rule__AcmePropertySequence__Group__0__Impl rule__AcmePropertySequence__Group__1
            {
            pushFollow(FOLLOW_54);
            rule__AcmePropertySequence__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertySequence__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertySequence__Group__0"


    // $ANTLR start "rule__AcmePropertySequence__Group__0__Impl"
    // InternalAcmeParser.g:13825:1: rule__AcmePropertySequence__Group__0__Impl : ( () ) ;
    public final void rule__AcmePropertySequence__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13829:1: ( ( () ) )
            // InternalAcmeParser.g:13830:1: ( () )
            {
            // InternalAcmeParser.g:13830:1: ( () )
            // InternalAcmeParser.g:13831:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertySequenceAccess().getAcmePropertySetAction_0()); 
            }
            // InternalAcmeParser.g:13832:2: ()
            // InternalAcmeParser.g:13832:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertySequenceAccess().getAcmePropertySetAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertySequence__Group__0__Impl"


    // $ANTLR start "rule__AcmePropertySequence__Group__1"
    // InternalAcmeParser.g:13840:1: rule__AcmePropertySequence__Group__1 : rule__AcmePropertySequence__Group__1__Impl rule__AcmePropertySequence__Group__2 ;
    public final void rule__AcmePropertySequence__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13844:1: ( rule__AcmePropertySequence__Group__1__Impl rule__AcmePropertySequence__Group__2 )
            // InternalAcmeParser.g:13845:2: rule__AcmePropertySequence__Group__1__Impl rule__AcmePropertySequence__Group__2
            {
            pushFollow(FOLLOW_55);
            rule__AcmePropertySequence__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertySequence__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertySequence__Group__1"


    // $ANTLR start "rule__AcmePropertySequence__Group__1__Impl"
    // InternalAcmeParser.g:13852:1: rule__AcmePropertySequence__Group__1__Impl : ( LessThanSign ) ;
    public final void rule__AcmePropertySequence__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13856:1: ( ( LessThanSign ) )
            // InternalAcmeParser.g:13857:1: ( LessThanSign )
            {
            // InternalAcmeParser.g:13857:1: ( LessThanSign )
            // InternalAcmeParser.g:13858:2: LessThanSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertySequenceAccess().getLessThanSignKeyword_1()); 
            }
            match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertySequenceAccess().getLessThanSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertySequence__Group__1__Impl"


    // $ANTLR start "rule__AcmePropertySequence__Group__2"
    // InternalAcmeParser.g:13867:1: rule__AcmePropertySequence__Group__2 : rule__AcmePropertySequence__Group__2__Impl rule__AcmePropertySequence__Group__3 ;
    public final void rule__AcmePropertySequence__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13871:1: ( rule__AcmePropertySequence__Group__2__Impl rule__AcmePropertySequence__Group__3 )
            // InternalAcmeParser.g:13872:2: rule__AcmePropertySequence__Group__2__Impl rule__AcmePropertySequence__Group__3
            {
            pushFollow(FOLLOW_55);
            rule__AcmePropertySequence__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertySequence__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertySequence__Group__2"


    // $ANTLR start "rule__AcmePropertySequence__Group__2__Impl"
    // InternalAcmeParser.g:13879:1: rule__AcmePropertySequence__Group__2__Impl : ( ( rule__AcmePropertySequence__Group_2__0 )? ) ;
    public final void rule__AcmePropertySequence__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13883:1: ( ( ( rule__AcmePropertySequence__Group_2__0 )? ) )
            // InternalAcmeParser.g:13884:1: ( ( rule__AcmePropertySequence__Group_2__0 )? )
            {
            // InternalAcmeParser.g:13884:1: ( ( rule__AcmePropertySequence__Group_2__0 )? )
            // InternalAcmeParser.g:13885:2: ( rule__AcmePropertySequence__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertySequenceAccess().getGroup_2()); 
            }
            // InternalAcmeParser.g:13886:2: ( rule__AcmePropertySequence__Group_2__0 )?
            int alt169=2;
            int LA169_0 = input.LA(1);

            if ( (LA169_0==False||LA169_0==True||LA169_0==LessThanSign||LA169_0==LeftSquareBracket||LA169_0==LeftCurlyBracket||(LA169_0>=RULE_FLOAT && LA169_0<=RULE_STRING)) ) {
                alt169=1;
            }
            switch (alt169) {
                case 1 :
                    // InternalAcmeParser.g:13886:3: rule__AcmePropertySequence__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePropertySequence__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertySequenceAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertySequence__Group__2__Impl"


    // $ANTLR start "rule__AcmePropertySequence__Group__3"
    // InternalAcmeParser.g:13894:1: rule__AcmePropertySequence__Group__3 : rule__AcmePropertySequence__Group__3__Impl ;
    public final void rule__AcmePropertySequence__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13898:1: ( rule__AcmePropertySequence__Group__3__Impl )
            // InternalAcmeParser.g:13899:2: rule__AcmePropertySequence__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertySequence__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertySequence__Group__3"


    // $ANTLR start "rule__AcmePropertySequence__Group__3__Impl"
    // InternalAcmeParser.g:13905:1: rule__AcmePropertySequence__Group__3__Impl : ( GreaterThanSign ) ;
    public final void rule__AcmePropertySequence__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13909:1: ( ( GreaterThanSign ) )
            // InternalAcmeParser.g:13910:1: ( GreaterThanSign )
            {
            // InternalAcmeParser.g:13910:1: ( GreaterThanSign )
            // InternalAcmeParser.g:13911:2: GreaterThanSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertySequenceAccess().getGreaterThanSignKeyword_3()); 
            }
            match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertySequenceAccess().getGreaterThanSignKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertySequence__Group__3__Impl"


    // $ANTLR start "rule__AcmePropertySequence__Group_2__0"
    // InternalAcmeParser.g:13921:1: rule__AcmePropertySequence__Group_2__0 : rule__AcmePropertySequence__Group_2__0__Impl rule__AcmePropertySequence__Group_2__1 ;
    public final void rule__AcmePropertySequence__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13925:1: ( rule__AcmePropertySequence__Group_2__0__Impl rule__AcmePropertySequence__Group_2__1 )
            // InternalAcmeParser.g:13926:2: rule__AcmePropertySequence__Group_2__0__Impl rule__AcmePropertySequence__Group_2__1
            {
            pushFollow(FOLLOW_19);
            rule__AcmePropertySequence__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertySequence__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertySequence__Group_2__0"


    // $ANTLR start "rule__AcmePropertySequence__Group_2__0__Impl"
    // InternalAcmeParser.g:13933:1: rule__AcmePropertySequence__Group_2__0__Impl : ( ( rule__AcmePropertySequence__ValuesAssignment_2_0 ) ) ;
    public final void rule__AcmePropertySequence__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13937:1: ( ( ( rule__AcmePropertySequence__ValuesAssignment_2_0 ) ) )
            // InternalAcmeParser.g:13938:1: ( ( rule__AcmePropertySequence__ValuesAssignment_2_0 ) )
            {
            // InternalAcmeParser.g:13938:1: ( ( rule__AcmePropertySequence__ValuesAssignment_2_0 ) )
            // InternalAcmeParser.g:13939:2: ( rule__AcmePropertySequence__ValuesAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertySequenceAccess().getValuesAssignment_2_0()); 
            }
            // InternalAcmeParser.g:13940:2: ( rule__AcmePropertySequence__ValuesAssignment_2_0 )
            // InternalAcmeParser.g:13940:3: rule__AcmePropertySequence__ValuesAssignment_2_0
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertySequence__ValuesAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertySequenceAccess().getValuesAssignment_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertySequence__Group_2__0__Impl"


    // $ANTLR start "rule__AcmePropertySequence__Group_2__1"
    // InternalAcmeParser.g:13948:1: rule__AcmePropertySequence__Group_2__1 : rule__AcmePropertySequence__Group_2__1__Impl ;
    public final void rule__AcmePropertySequence__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13952:1: ( rule__AcmePropertySequence__Group_2__1__Impl )
            // InternalAcmeParser.g:13953:2: rule__AcmePropertySequence__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertySequence__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertySequence__Group_2__1"


    // $ANTLR start "rule__AcmePropertySequence__Group_2__1__Impl"
    // InternalAcmeParser.g:13959:1: rule__AcmePropertySequence__Group_2__1__Impl : ( ( rule__AcmePropertySequence__Group_2_1__0 )* ) ;
    public final void rule__AcmePropertySequence__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13963:1: ( ( ( rule__AcmePropertySequence__Group_2_1__0 )* ) )
            // InternalAcmeParser.g:13964:1: ( ( rule__AcmePropertySequence__Group_2_1__0 )* )
            {
            // InternalAcmeParser.g:13964:1: ( ( rule__AcmePropertySequence__Group_2_1__0 )* )
            // InternalAcmeParser.g:13965:2: ( rule__AcmePropertySequence__Group_2_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertySequenceAccess().getGroup_2_1()); 
            }
            // InternalAcmeParser.g:13966:2: ( rule__AcmePropertySequence__Group_2_1__0 )*
            loop170:
            do {
                int alt170=2;
                int LA170_0 = input.LA(1);

                if ( (LA170_0==Comma) ) {
                    alt170=1;
                }


                switch (alt170) {
            	case 1 :
            	    // InternalAcmeParser.g:13966:3: rule__AcmePropertySequence__Group_2_1__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__AcmePropertySequence__Group_2_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop170;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertySequenceAccess().getGroup_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertySequence__Group_2__1__Impl"


    // $ANTLR start "rule__AcmePropertySequence__Group_2_1__0"
    // InternalAcmeParser.g:13975:1: rule__AcmePropertySequence__Group_2_1__0 : rule__AcmePropertySequence__Group_2_1__0__Impl rule__AcmePropertySequence__Group_2_1__1 ;
    public final void rule__AcmePropertySequence__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13979:1: ( rule__AcmePropertySequence__Group_2_1__0__Impl rule__AcmePropertySequence__Group_2_1__1 )
            // InternalAcmeParser.g:13980:2: rule__AcmePropertySequence__Group_2_1__0__Impl rule__AcmePropertySequence__Group_2_1__1
            {
            pushFollow(FOLLOW_51);
            rule__AcmePropertySequence__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertySequence__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertySequence__Group_2_1__0"


    // $ANTLR start "rule__AcmePropertySequence__Group_2_1__0__Impl"
    // InternalAcmeParser.g:13987:1: rule__AcmePropertySequence__Group_2_1__0__Impl : ( Comma ) ;
    public final void rule__AcmePropertySequence__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:13991:1: ( ( Comma ) )
            // InternalAcmeParser.g:13992:1: ( Comma )
            {
            // InternalAcmeParser.g:13992:1: ( Comma )
            // InternalAcmeParser.g:13993:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertySequenceAccess().getCommaKeyword_2_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertySequenceAccess().getCommaKeyword_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertySequence__Group_2_1__0__Impl"


    // $ANTLR start "rule__AcmePropertySequence__Group_2_1__1"
    // InternalAcmeParser.g:14002:1: rule__AcmePropertySequence__Group_2_1__1 : rule__AcmePropertySequence__Group_2_1__1__Impl ;
    public final void rule__AcmePropertySequence__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14006:1: ( rule__AcmePropertySequence__Group_2_1__1__Impl )
            // InternalAcmeParser.g:14007:2: rule__AcmePropertySequence__Group_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertySequence__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertySequence__Group_2_1__1"


    // $ANTLR start "rule__AcmePropertySequence__Group_2_1__1__Impl"
    // InternalAcmeParser.g:14013:1: rule__AcmePropertySequence__Group_2_1__1__Impl : ( ( rule__AcmePropertySequence__ValuesAssignment_2_1_1 ) ) ;
    public final void rule__AcmePropertySequence__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14017:1: ( ( ( rule__AcmePropertySequence__ValuesAssignment_2_1_1 ) ) )
            // InternalAcmeParser.g:14018:1: ( ( rule__AcmePropertySequence__ValuesAssignment_2_1_1 ) )
            {
            // InternalAcmeParser.g:14018:1: ( ( rule__AcmePropertySequence__ValuesAssignment_2_1_1 ) )
            // InternalAcmeParser.g:14019:2: ( rule__AcmePropertySequence__ValuesAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertySequenceAccess().getValuesAssignment_2_1_1()); 
            }
            // InternalAcmeParser.g:14020:2: ( rule__AcmePropertySequence__ValuesAssignment_2_1_1 )
            // InternalAcmeParser.g:14020:3: rule__AcmePropertySequence__ValuesAssignment_2_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertySequence__ValuesAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertySequenceAccess().getValuesAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertySequence__Group_2_1__1__Impl"


    // $ANTLR start "rule__AcmePropertyRecordEntry__Group__0"
    // InternalAcmeParser.g:14029:1: rule__AcmePropertyRecordEntry__Group__0 : rule__AcmePropertyRecordEntry__Group__0__Impl rule__AcmePropertyRecordEntry__Group__1 ;
    public final void rule__AcmePropertyRecordEntry__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14033:1: ( rule__AcmePropertyRecordEntry__Group__0__Impl rule__AcmePropertyRecordEntry__Group__1 )
            // InternalAcmeParser.g:14034:2: rule__AcmePropertyRecordEntry__Group__0__Impl rule__AcmePropertyRecordEntry__Group__1
            {
            pushFollow(FOLLOW_56);
            rule__AcmePropertyRecordEntry__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyRecordEntry__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecordEntry__Group__0"


    // $ANTLR start "rule__AcmePropertyRecordEntry__Group__0__Impl"
    // InternalAcmeParser.g:14041:1: rule__AcmePropertyRecordEntry__Group__0__Impl : ( ( rule__AcmePropertyRecordEntry__NameAssignment_0 ) ) ;
    public final void rule__AcmePropertyRecordEntry__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14045:1: ( ( ( rule__AcmePropertyRecordEntry__NameAssignment_0 ) ) )
            // InternalAcmeParser.g:14046:1: ( ( rule__AcmePropertyRecordEntry__NameAssignment_0 ) )
            {
            // InternalAcmeParser.g:14046:1: ( ( rule__AcmePropertyRecordEntry__NameAssignment_0 ) )
            // InternalAcmeParser.g:14047:2: ( rule__AcmePropertyRecordEntry__NameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyRecordEntryAccess().getNameAssignment_0()); 
            }
            // InternalAcmeParser.g:14048:2: ( rule__AcmePropertyRecordEntry__NameAssignment_0 )
            // InternalAcmeParser.g:14048:3: rule__AcmePropertyRecordEntry__NameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyRecordEntry__NameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyRecordEntryAccess().getNameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecordEntry__Group__0__Impl"


    // $ANTLR start "rule__AcmePropertyRecordEntry__Group__1"
    // InternalAcmeParser.g:14056:1: rule__AcmePropertyRecordEntry__Group__1 : rule__AcmePropertyRecordEntry__Group__1__Impl rule__AcmePropertyRecordEntry__Group__2 ;
    public final void rule__AcmePropertyRecordEntry__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14060:1: ( rule__AcmePropertyRecordEntry__Group__1__Impl rule__AcmePropertyRecordEntry__Group__2 )
            // InternalAcmeParser.g:14061:2: rule__AcmePropertyRecordEntry__Group__1__Impl rule__AcmePropertyRecordEntry__Group__2
            {
            pushFollow(FOLLOW_56);
            rule__AcmePropertyRecordEntry__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyRecordEntry__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecordEntry__Group__1"


    // $ANTLR start "rule__AcmePropertyRecordEntry__Group__1__Impl"
    // InternalAcmeParser.g:14068:1: rule__AcmePropertyRecordEntry__Group__1__Impl : ( ( rule__AcmePropertyRecordEntry__Group_1__0 )? ) ;
    public final void rule__AcmePropertyRecordEntry__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14072:1: ( ( ( rule__AcmePropertyRecordEntry__Group_1__0 )? ) )
            // InternalAcmeParser.g:14073:1: ( ( rule__AcmePropertyRecordEntry__Group_1__0 )? )
            {
            // InternalAcmeParser.g:14073:1: ( ( rule__AcmePropertyRecordEntry__Group_1__0 )? )
            // InternalAcmeParser.g:14074:2: ( rule__AcmePropertyRecordEntry__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyRecordEntryAccess().getGroup_1()); 
            }
            // InternalAcmeParser.g:14075:2: ( rule__AcmePropertyRecordEntry__Group_1__0 )?
            int alt171=2;
            int LA171_0 = input.LA(1);

            if ( (LA171_0==Colon) ) {
                alt171=1;
            }
            switch (alt171) {
                case 1 :
                    // InternalAcmeParser.g:14075:3: rule__AcmePropertyRecordEntry__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePropertyRecordEntry__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyRecordEntryAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecordEntry__Group__1__Impl"


    // $ANTLR start "rule__AcmePropertyRecordEntry__Group__2"
    // InternalAcmeParser.g:14083:1: rule__AcmePropertyRecordEntry__Group__2 : rule__AcmePropertyRecordEntry__Group__2__Impl rule__AcmePropertyRecordEntry__Group__3 ;
    public final void rule__AcmePropertyRecordEntry__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14087:1: ( rule__AcmePropertyRecordEntry__Group__2__Impl rule__AcmePropertyRecordEntry__Group__3 )
            // InternalAcmeParser.g:14088:2: rule__AcmePropertyRecordEntry__Group__2__Impl rule__AcmePropertyRecordEntry__Group__3
            {
            pushFollow(FOLLOW_51);
            rule__AcmePropertyRecordEntry__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyRecordEntry__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecordEntry__Group__2"


    // $ANTLR start "rule__AcmePropertyRecordEntry__Group__2__Impl"
    // InternalAcmeParser.g:14095:1: rule__AcmePropertyRecordEntry__Group__2__Impl : ( EqualsSign ) ;
    public final void rule__AcmePropertyRecordEntry__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14099:1: ( ( EqualsSign ) )
            // InternalAcmeParser.g:14100:1: ( EqualsSign )
            {
            // InternalAcmeParser.g:14100:1: ( EqualsSign )
            // InternalAcmeParser.g:14101:2: EqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyRecordEntryAccess().getEqualsSignKeyword_2()); 
            }
            match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyRecordEntryAccess().getEqualsSignKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecordEntry__Group__2__Impl"


    // $ANTLR start "rule__AcmePropertyRecordEntry__Group__3"
    // InternalAcmeParser.g:14110:1: rule__AcmePropertyRecordEntry__Group__3 : rule__AcmePropertyRecordEntry__Group__3__Impl ;
    public final void rule__AcmePropertyRecordEntry__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14114:1: ( rule__AcmePropertyRecordEntry__Group__3__Impl )
            // InternalAcmeParser.g:14115:2: rule__AcmePropertyRecordEntry__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyRecordEntry__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecordEntry__Group__3"


    // $ANTLR start "rule__AcmePropertyRecordEntry__Group__3__Impl"
    // InternalAcmeParser.g:14121:1: rule__AcmePropertyRecordEntry__Group__3__Impl : ( ( rule__AcmePropertyRecordEntry__ValueAssignment_3 ) ) ;
    public final void rule__AcmePropertyRecordEntry__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14125:1: ( ( ( rule__AcmePropertyRecordEntry__ValueAssignment_3 ) ) )
            // InternalAcmeParser.g:14126:1: ( ( rule__AcmePropertyRecordEntry__ValueAssignment_3 ) )
            {
            // InternalAcmeParser.g:14126:1: ( ( rule__AcmePropertyRecordEntry__ValueAssignment_3 ) )
            // InternalAcmeParser.g:14127:2: ( rule__AcmePropertyRecordEntry__ValueAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyRecordEntryAccess().getValueAssignment_3()); 
            }
            // InternalAcmeParser.g:14128:2: ( rule__AcmePropertyRecordEntry__ValueAssignment_3 )
            // InternalAcmeParser.g:14128:3: rule__AcmePropertyRecordEntry__ValueAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyRecordEntry__ValueAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyRecordEntryAccess().getValueAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecordEntry__Group__3__Impl"


    // $ANTLR start "rule__AcmePropertyRecordEntry__Group_1__0"
    // InternalAcmeParser.g:14137:1: rule__AcmePropertyRecordEntry__Group_1__0 : rule__AcmePropertyRecordEntry__Group_1__0__Impl rule__AcmePropertyRecordEntry__Group_1__1 ;
    public final void rule__AcmePropertyRecordEntry__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14141:1: ( rule__AcmePropertyRecordEntry__Group_1__0__Impl rule__AcmePropertyRecordEntry__Group_1__1 )
            // InternalAcmeParser.g:14142:2: rule__AcmePropertyRecordEntry__Group_1__0__Impl rule__AcmePropertyRecordEntry__Group_1__1
            {
            pushFollow(FOLLOW_57);
            rule__AcmePropertyRecordEntry__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyRecordEntry__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecordEntry__Group_1__0"


    // $ANTLR start "rule__AcmePropertyRecordEntry__Group_1__0__Impl"
    // InternalAcmeParser.g:14149:1: rule__AcmePropertyRecordEntry__Group_1__0__Impl : ( Colon ) ;
    public final void rule__AcmePropertyRecordEntry__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14153:1: ( ( Colon ) )
            // InternalAcmeParser.g:14154:1: ( Colon )
            {
            // InternalAcmeParser.g:14154:1: ( Colon )
            // InternalAcmeParser.g:14155:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyRecordEntryAccess().getColonKeyword_1_0()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyRecordEntryAccess().getColonKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecordEntry__Group_1__0__Impl"


    // $ANTLR start "rule__AcmePropertyRecordEntry__Group_1__1"
    // InternalAcmeParser.g:14164:1: rule__AcmePropertyRecordEntry__Group_1__1 : rule__AcmePropertyRecordEntry__Group_1__1__Impl ;
    public final void rule__AcmePropertyRecordEntry__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14168:1: ( rule__AcmePropertyRecordEntry__Group_1__1__Impl )
            // InternalAcmeParser.g:14169:2: rule__AcmePropertyRecordEntry__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyRecordEntry__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecordEntry__Group_1__1"


    // $ANTLR start "rule__AcmePropertyRecordEntry__Group_1__1__Impl"
    // InternalAcmeParser.g:14175:1: rule__AcmePropertyRecordEntry__Group_1__1__Impl : ( ( rule__AcmePropertyRecordEntry__RefAssignment_1_1 ) ) ;
    public final void rule__AcmePropertyRecordEntry__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14179:1: ( ( ( rule__AcmePropertyRecordEntry__RefAssignment_1_1 ) ) )
            // InternalAcmeParser.g:14180:1: ( ( rule__AcmePropertyRecordEntry__RefAssignment_1_1 ) )
            {
            // InternalAcmeParser.g:14180:1: ( ( rule__AcmePropertyRecordEntry__RefAssignment_1_1 ) )
            // InternalAcmeParser.g:14181:2: ( rule__AcmePropertyRecordEntry__RefAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyRecordEntryAccess().getRefAssignment_1_1()); 
            }
            // InternalAcmeParser.g:14182:2: ( rule__AcmePropertyRecordEntry__RefAssignment_1_1 )
            // InternalAcmeParser.g:14182:3: rule__AcmePropertyRecordEntry__RefAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyRecordEntry__RefAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyRecordEntryAccess().getRefAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecordEntry__Group_1__1__Impl"


    // $ANTLR start "rule__AcmePropertyRecord__Group__0"
    // InternalAcmeParser.g:14191:1: rule__AcmePropertyRecord__Group__0 : rule__AcmePropertyRecord__Group__0__Impl rule__AcmePropertyRecord__Group__1 ;
    public final void rule__AcmePropertyRecord__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14195:1: ( rule__AcmePropertyRecord__Group__0__Impl rule__AcmePropertyRecord__Group__1 )
            // InternalAcmeParser.g:14196:2: rule__AcmePropertyRecord__Group__0__Impl rule__AcmePropertyRecord__Group__1
            {
            pushFollow(FOLLOW_58);
            rule__AcmePropertyRecord__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyRecord__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecord__Group__0"


    // $ANTLR start "rule__AcmePropertyRecord__Group__0__Impl"
    // InternalAcmeParser.g:14203:1: rule__AcmePropertyRecord__Group__0__Impl : ( () ) ;
    public final void rule__AcmePropertyRecord__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14207:1: ( ( () ) )
            // InternalAcmeParser.g:14208:1: ( () )
            {
            // InternalAcmeParser.g:14208:1: ( () )
            // InternalAcmeParser.g:14209:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyRecordAccess().getAcmePropertyRecordAction_0()); 
            }
            // InternalAcmeParser.g:14210:2: ()
            // InternalAcmeParser.g:14210:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyRecordAccess().getAcmePropertyRecordAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecord__Group__0__Impl"


    // $ANTLR start "rule__AcmePropertyRecord__Group__1"
    // InternalAcmeParser.g:14218:1: rule__AcmePropertyRecord__Group__1 : rule__AcmePropertyRecord__Group__1__Impl rule__AcmePropertyRecord__Group__2 ;
    public final void rule__AcmePropertyRecord__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14222:1: ( rule__AcmePropertyRecord__Group__1__Impl rule__AcmePropertyRecord__Group__2 )
            // InternalAcmeParser.g:14223:2: rule__AcmePropertyRecord__Group__1__Impl rule__AcmePropertyRecord__Group__2
            {
            pushFollow(FOLLOW_59);
            rule__AcmePropertyRecord__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyRecord__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecord__Group__1"


    // $ANTLR start "rule__AcmePropertyRecord__Group__1__Impl"
    // InternalAcmeParser.g:14230:1: rule__AcmePropertyRecord__Group__1__Impl : ( LeftSquareBracket ) ;
    public final void rule__AcmePropertyRecord__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14234:1: ( ( LeftSquareBracket ) )
            // InternalAcmeParser.g:14235:1: ( LeftSquareBracket )
            {
            // InternalAcmeParser.g:14235:1: ( LeftSquareBracket )
            // InternalAcmeParser.g:14236:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyRecordAccess().getLeftSquareBracketKeyword_1()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyRecordAccess().getLeftSquareBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecord__Group__1__Impl"


    // $ANTLR start "rule__AcmePropertyRecord__Group__2"
    // InternalAcmeParser.g:14245:1: rule__AcmePropertyRecord__Group__2 : rule__AcmePropertyRecord__Group__2__Impl rule__AcmePropertyRecord__Group__3 ;
    public final void rule__AcmePropertyRecord__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14249:1: ( rule__AcmePropertyRecord__Group__2__Impl rule__AcmePropertyRecord__Group__3 )
            // InternalAcmeParser.g:14250:2: rule__AcmePropertyRecord__Group__2__Impl rule__AcmePropertyRecord__Group__3
            {
            pushFollow(FOLLOW_59);
            rule__AcmePropertyRecord__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyRecord__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecord__Group__2"


    // $ANTLR start "rule__AcmePropertyRecord__Group__2__Impl"
    // InternalAcmeParser.g:14257:1: rule__AcmePropertyRecord__Group__2__Impl : ( ( rule__AcmePropertyRecord__Group_2__0 )? ) ;
    public final void rule__AcmePropertyRecord__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14261:1: ( ( ( rule__AcmePropertyRecord__Group_2__0 )? ) )
            // InternalAcmeParser.g:14262:1: ( ( rule__AcmePropertyRecord__Group_2__0 )? )
            {
            // InternalAcmeParser.g:14262:1: ( ( rule__AcmePropertyRecord__Group_2__0 )? )
            // InternalAcmeParser.g:14263:2: ( rule__AcmePropertyRecord__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyRecordAccess().getGroup_2()); 
            }
            // InternalAcmeParser.g:14264:2: ( rule__AcmePropertyRecord__Group_2__0 )?
            int alt172=2;
            int LA172_0 = input.LA(1);

            if ( (LA172_0==RULE_ID) ) {
                alt172=1;
            }
            switch (alt172) {
                case 1 :
                    // InternalAcmeParser.g:14264:3: rule__AcmePropertyRecord__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePropertyRecord__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyRecordAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecord__Group__2__Impl"


    // $ANTLR start "rule__AcmePropertyRecord__Group__3"
    // InternalAcmeParser.g:14272:1: rule__AcmePropertyRecord__Group__3 : rule__AcmePropertyRecord__Group__3__Impl ;
    public final void rule__AcmePropertyRecord__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14276:1: ( rule__AcmePropertyRecord__Group__3__Impl )
            // InternalAcmeParser.g:14277:2: rule__AcmePropertyRecord__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyRecord__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecord__Group__3"


    // $ANTLR start "rule__AcmePropertyRecord__Group__3__Impl"
    // InternalAcmeParser.g:14283:1: rule__AcmePropertyRecord__Group__3__Impl : ( RightSquareBracket ) ;
    public final void rule__AcmePropertyRecord__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14287:1: ( ( RightSquareBracket ) )
            // InternalAcmeParser.g:14288:1: ( RightSquareBracket )
            {
            // InternalAcmeParser.g:14288:1: ( RightSquareBracket )
            // InternalAcmeParser.g:14289:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyRecordAccess().getRightSquareBracketKeyword_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyRecordAccess().getRightSquareBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecord__Group__3__Impl"


    // $ANTLR start "rule__AcmePropertyRecord__Group_2__0"
    // InternalAcmeParser.g:14299:1: rule__AcmePropertyRecord__Group_2__0 : rule__AcmePropertyRecord__Group_2__0__Impl rule__AcmePropertyRecord__Group_2__1 ;
    public final void rule__AcmePropertyRecord__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14303:1: ( rule__AcmePropertyRecord__Group_2__0__Impl rule__AcmePropertyRecord__Group_2__1 )
            // InternalAcmeParser.g:14304:2: rule__AcmePropertyRecord__Group_2__0__Impl rule__AcmePropertyRecord__Group_2__1
            {
            pushFollow(FOLLOW_7);
            rule__AcmePropertyRecord__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyRecord__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecord__Group_2__0"


    // $ANTLR start "rule__AcmePropertyRecord__Group_2__0__Impl"
    // InternalAcmeParser.g:14311:1: rule__AcmePropertyRecord__Group_2__0__Impl : ( ( rule__AcmePropertyRecord__FieldsAssignment_2_0 ) ) ;
    public final void rule__AcmePropertyRecord__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14315:1: ( ( ( rule__AcmePropertyRecord__FieldsAssignment_2_0 ) ) )
            // InternalAcmeParser.g:14316:1: ( ( rule__AcmePropertyRecord__FieldsAssignment_2_0 ) )
            {
            // InternalAcmeParser.g:14316:1: ( ( rule__AcmePropertyRecord__FieldsAssignment_2_0 ) )
            // InternalAcmeParser.g:14317:2: ( rule__AcmePropertyRecord__FieldsAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyRecordAccess().getFieldsAssignment_2_0()); 
            }
            // InternalAcmeParser.g:14318:2: ( rule__AcmePropertyRecord__FieldsAssignment_2_0 )
            // InternalAcmeParser.g:14318:3: rule__AcmePropertyRecord__FieldsAssignment_2_0
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyRecord__FieldsAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyRecordAccess().getFieldsAssignment_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecord__Group_2__0__Impl"


    // $ANTLR start "rule__AcmePropertyRecord__Group_2__1"
    // InternalAcmeParser.g:14326:1: rule__AcmePropertyRecord__Group_2__1 : rule__AcmePropertyRecord__Group_2__1__Impl rule__AcmePropertyRecord__Group_2__2 ;
    public final void rule__AcmePropertyRecord__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14330:1: ( rule__AcmePropertyRecord__Group_2__1__Impl rule__AcmePropertyRecord__Group_2__2 )
            // InternalAcmeParser.g:14331:2: rule__AcmePropertyRecord__Group_2__1__Impl rule__AcmePropertyRecord__Group_2__2
            {
            pushFollow(FOLLOW_7);
            rule__AcmePropertyRecord__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyRecord__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecord__Group_2__1"


    // $ANTLR start "rule__AcmePropertyRecord__Group_2__1__Impl"
    // InternalAcmeParser.g:14338:1: rule__AcmePropertyRecord__Group_2__1__Impl : ( ( rule__AcmePropertyRecord__Group_2_1__0 )* ) ;
    public final void rule__AcmePropertyRecord__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14342:1: ( ( ( rule__AcmePropertyRecord__Group_2_1__0 )* ) )
            // InternalAcmeParser.g:14343:1: ( ( rule__AcmePropertyRecord__Group_2_1__0 )* )
            {
            // InternalAcmeParser.g:14343:1: ( ( rule__AcmePropertyRecord__Group_2_1__0 )* )
            // InternalAcmeParser.g:14344:2: ( rule__AcmePropertyRecord__Group_2_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyRecordAccess().getGroup_2_1()); 
            }
            // InternalAcmeParser.g:14345:2: ( rule__AcmePropertyRecord__Group_2_1__0 )*
            loop173:
            do {
                int alt173=2;
                int LA173_0 = input.LA(1);

                if ( (LA173_0==Semicolon) ) {
                    int LA173_1 = input.LA(2);

                    if ( (LA173_1==RULE_ID) ) {
                        alt173=1;
                    }


                }


                switch (alt173) {
            	case 1 :
            	    // InternalAcmeParser.g:14345:3: rule__AcmePropertyRecord__Group_2_1__0
            	    {
            	    pushFollow(FOLLOW_60);
            	    rule__AcmePropertyRecord__Group_2_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop173;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyRecordAccess().getGroup_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecord__Group_2__1__Impl"


    // $ANTLR start "rule__AcmePropertyRecord__Group_2__2"
    // InternalAcmeParser.g:14353:1: rule__AcmePropertyRecord__Group_2__2 : rule__AcmePropertyRecord__Group_2__2__Impl ;
    public final void rule__AcmePropertyRecord__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14357:1: ( rule__AcmePropertyRecord__Group_2__2__Impl )
            // InternalAcmeParser.g:14358:2: rule__AcmePropertyRecord__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyRecord__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecord__Group_2__2"


    // $ANTLR start "rule__AcmePropertyRecord__Group_2__2__Impl"
    // InternalAcmeParser.g:14364:1: rule__AcmePropertyRecord__Group_2__2__Impl : ( Semicolon ) ;
    public final void rule__AcmePropertyRecord__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14368:1: ( ( Semicolon ) )
            // InternalAcmeParser.g:14369:1: ( Semicolon )
            {
            // InternalAcmeParser.g:14369:1: ( Semicolon )
            // InternalAcmeParser.g:14370:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyRecordAccess().getSemicolonKeyword_2_2()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyRecordAccess().getSemicolonKeyword_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecord__Group_2__2__Impl"


    // $ANTLR start "rule__AcmePropertyRecord__Group_2_1__0"
    // InternalAcmeParser.g:14380:1: rule__AcmePropertyRecord__Group_2_1__0 : rule__AcmePropertyRecord__Group_2_1__0__Impl rule__AcmePropertyRecord__Group_2_1__1 ;
    public final void rule__AcmePropertyRecord__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14384:1: ( rule__AcmePropertyRecord__Group_2_1__0__Impl rule__AcmePropertyRecord__Group_2_1__1 )
            // InternalAcmeParser.g:14385:2: rule__AcmePropertyRecord__Group_2_1__0__Impl rule__AcmePropertyRecord__Group_2_1__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmePropertyRecord__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyRecord__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecord__Group_2_1__0"


    // $ANTLR start "rule__AcmePropertyRecord__Group_2_1__0__Impl"
    // InternalAcmeParser.g:14392:1: rule__AcmePropertyRecord__Group_2_1__0__Impl : ( Semicolon ) ;
    public final void rule__AcmePropertyRecord__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14396:1: ( ( Semicolon ) )
            // InternalAcmeParser.g:14397:1: ( Semicolon )
            {
            // InternalAcmeParser.g:14397:1: ( Semicolon )
            // InternalAcmeParser.g:14398:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyRecordAccess().getSemicolonKeyword_2_1_0()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyRecordAccess().getSemicolonKeyword_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecord__Group_2_1__0__Impl"


    // $ANTLR start "rule__AcmePropertyRecord__Group_2_1__1"
    // InternalAcmeParser.g:14407:1: rule__AcmePropertyRecord__Group_2_1__1 : rule__AcmePropertyRecord__Group_2_1__1__Impl ;
    public final void rule__AcmePropertyRecord__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14411:1: ( rule__AcmePropertyRecord__Group_2_1__1__Impl )
            // InternalAcmeParser.g:14412:2: rule__AcmePropertyRecord__Group_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyRecord__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecord__Group_2_1__1"


    // $ANTLR start "rule__AcmePropertyRecord__Group_2_1__1__Impl"
    // InternalAcmeParser.g:14418:1: rule__AcmePropertyRecord__Group_2_1__1__Impl : ( ( rule__AcmePropertyRecord__FieldsAssignment_2_1_1 ) ) ;
    public final void rule__AcmePropertyRecord__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14422:1: ( ( ( rule__AcmePropertyRecord__FieldsAssignment_2_1_1 ) ) )
            // InternalAcmeParser.g:14423:1: ( ( rule__AcmePropertyRecord__FieldsAssignment_2_1_1 ) )
            {
            // InternalAcmeParser.g:14423:1: ( ( rule__AcmePropertyRecord__FieldsAssignment_2_1_1 ) )
            // InternalAcmeParser.g:14424:2: ( rule__AcmePropertyRecord__FieldsAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyRecordAccess().getFieldsAssignment_2_1_1()); 
            }
            // InternalAcmeParser.g:14425:2: ( rule__AcmePropertyRecord__FieldsAssignment_2_1_1 )
            // InternalAcmeParser.g:14425:3: rule__AcmePropertyRecord__FieldsAssignment_2_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyRecord__FieldsAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyRecordAccess().getFieldsAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecord__Group_2_1__1__Impl"


    // $ANTLR start "rule__AcmePropertyTypeRecord__Group__0"
    // InternalAcmeParser.g:14434:1: rule__AcmePropertyTypeRecord__Group__0 : rule__AcmePropertyTypeRecord__Group__0__Impl rule__AcmePropertyTypeRecord__Group__1 ;
    public final void rule__AcmePropertyTypeRecord__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14438:1: ( rule__AcmePropertyTypeRecord__Group__0__Impl rule__AcmePropertyTypeRecord__Group__1 )
            // InternalAcmeParser.g:14439:2: rule__AcmePropertyTypeRecord__Group__0__Impl rule__AcmePropertyTypeRecord__Group__1
            {
            pushFollow(FOLLOW_61);
            rule__AcmePropertyTypeRecord__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeRecord__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeRecord__Group__0"


    // $ANTLR start "rule__AcmePropertyTypeRecord__Group__0__Impl"
    // InternalAcmeParser.g:14446:1: rule__AcmePropertyTypeRecord__Group__0__Impl : ( () ) ;
    public final void rule__AcmePropertyTypeRecord__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14450:1: ( ( () ) )
            // InternalAcmeParser.g:14451:1: ( () )
            {
            // InternalAcmeParser.g:14451:1: ( () )
            // InternalAcmeParser.g:14452:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeRecordAccess().getAcmePropertyTypeRecordAction_0()); 
            }
            // InternalAcmeParser.g:14453:2: ()
            // InternalAcmeParser.g:14453:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeRecordAccess().getAcmePropertyTypeRecordAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeRecord__Group__0__Impl"


    // $ANTLR start "rule__AcmePropertyTypeRecord__Group__1"
    // InternalAcmeParser.g:14461:1: rule__AcmePropertyTypeRecord__Group__1 : rule__AcmePropertyTypeRecord__Group__1__Impl rule__AcmePropertyTypeRecord__Group__2 ;
    public final void rule__AcmePropertyTypeRecord__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14465:1: ( rule__AcmePropertyTypeRecord__Group__1__Impl rule__AcmePropertyTypeRecord__Group__2 )
            // InternalAcmeParser.g:14466:2: rule__AcmePropertyTypeRecord__Group__1__Impl rule__AcmePropertyTypeRecord__Group__2
            {
            pushFollow(FOLLOW_58);
            rule__AcmePropertyTypeRecord__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeRecord__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeRecord__Group__1"


    // $ANTLR start "rule__AcmePropertyTypeRecord__Group__1__Impl"
    // InternalAcmeParser.g:14473:1: rule__AcmePropertyTypeRecord__Group__1__Impl : ( Record ) ;
    public final void rule__AcmePropertyTypeRecord__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14477:1: ( ( Record ) )
            // InternalAcmeParser.g:14478:1: ( Record )
            {
            // InternalAcmeParser.g:14478:1: ( Record )
            // InternalAcmeParser.g:14479:2: Record
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeRecordAccess().getRecordKeyword_1()); 
            }
            match(input,Record,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeRecordAccess().getRecordKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeRecord__Group__1__Impl"


    // $ANTLR start "rule__AcmePropertyTypeRecord__Group__2"
    // InternalAcmeParser.g:14488:1: rule__AcmePropertyTypeRecord__Group__2 : rule__AcmePropertyTypeRecord__Group__2__Impl rule__AcmePropertyTypeRecord__Group__3 ;
    public final void rule__AcmePropertyTypeRecord__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14492:1: ( rule__AcmePropertyTypeRecord__Group__2__Impl rule__AcmePropertyTypeRecord__Group__3 )
            // InternalAcmeParser.g:14493:2: rule__AcmePropertyTypeRecord__Group__2__Impl rule__AcmePropertyTypeRecord__Group__3
            {
            pushFollow(FOLLOW_59);
            rule__AcmePropertyTypeRecord__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeRecord__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeRecord__Group__2"


    // $ANTLR start "rule__AcmePropertyTypeRecord__Group__2__Impl"
    // InternalAcmeParser.g:14500:1: rule__AcmePropertyTypeRecord__Group__2__Impl : ( LeftSquareBracket ) ;
    public final void rule__AcmePropertyTypeRecord__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14504:1: ( ( LeftSquareBracket ) )
            // InternalAcmeParser.g:14505:1: ( LeftSquareBracket )
            {
            // InternalAcmeParser.g:14505:1: ( LeftSquareBracket )
            // InternalAcmeParser.g:14506:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeRecordAccess().getLeftSquareBracketKeyword_2()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeRecordAccess().getLeftSquareBracketKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeRecord__Group__2__Impl"


    // $ANTLR start "rule__AcmePropertyTypeRecord__Group__3"
    // InternalAcmeParser.g:14515:1: rule__AcmePropertyTypeRecord__Group__3 : rule__AcmePropertyTypeRecord__Group__3__Impl rule__AcmePropertyTypeRecord__Group__4 ;
    public final void rule__AcmePropertyTypeRecord__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14519:1: ( rule__AcmePropertyTypeRecord__Group__3__Impl rule__AcmePropertyTypeRecord__Group__4 )
            // InternalAcmeParser.g:14520:2: rule__AcmePropertyTypeRecord__Group__3__Impl rule__AcmePropertyTypeRecord__Group__4
            {
            pushFollow(FOLLOW_59);
            rule__AcmePropertyTypeRecord__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeRecord__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeRecord__Group__3"


    // $ANTLR start "rule__AcmePropertyTypeRecord__Group__3__Impl"
    // InternalAcmeParser.g:14527:1: rule__AcmePropertyTypeRecord__Group__3__Impl : ( ( rule__AcmePropertyTypeRecord__FieldsAssignment_3 )* ) ;
    public final void rule__AcmePropertyTypeRecord__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14531:1: ( ( ( rule__AcmePropertyTypeRecord__FieldsAssignment_3 )* ) )
            // InternalAcmeParser.g:14532:1: ( ( rule__AcmePropertyTypeRecord__FieldsAssignment_3 )* )
            {
            // InternalAcmeParser.g:14532:1: ( ( rule__AcmePropertyTypeRecord__FieldsAssignment_3 )* )
            // InternalAcmeParser.g:14533:2: ( rule__AcmePropertyTypeRecord__FieldsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeRecordAccess().getFieldsAssignment_3()); 
            }
            // InternalAcmeParser.g:14534:2: ( rule__AcmePropertyTypeRecord__FieldsAssignment_3 )*
            loop174:
            do {
                int alt174=2;
                int LA174_0 = input.LA(1);

                if ( (LA174_0==RULE_ID) ) {
                    alt174=1;
                }


                switch (alt174) {
            	case 1 :
            	    // InternalAcmeParser.g:14534:3: rule__AcmePropertyTypeRecord__FieldsAssignment_3
            	    {
            	    pushFollow(FOLLOW_62);
            	    rule__AcmePropertyTypeRecord__FieldsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop174;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeRecordAccess().getFieldsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeRecord__Group__3__Impl"


    // $ANTLR start "rule__AcmePropertyTypeRecord__Group__4"
    // InternalAcmeParser.g:14542:1: rule__AcmePropertyTypeRecord__Group__4 : rule__AcmePropertyTypeRecord__Group__4__Impl ;
    public final void rule__AcmePropertyTypeRecord__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14546:1: ( rule__AcmePropertyTypeRecord__Group__4__Impl )
            // InternalAcmeParser.g:14547:2: rule__AcmePropertyTypeRecord__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeRecord__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeRecord__Group__4"


    // $ANTLR start "rule__AcmePropertyTypeRecord__Group__4__Impl"
    // InternalAcmeParser.g:14553:1: rule__AcmePropertyTypeRecord__Group__4__Impl : ( RightSquareBracket ) ;
    public final void rule__AcmePropertyTypeRecord__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14557:1: ( ( RightSquareBracket ) )
            // InternalAcmeParser.g:14558:1: ( RightSquareBracket )
            {
            // InternalAcmeParser.g:14558:1: ( RightSquareBracket )
            // InternalAcmeParser.g:14559:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeRecordAccess().getRightSquareBracketKeyword_4()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeRecordAccess().getRightSquareBracketKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeRecord__Group__4__Impl"


    // $ANTLR start "rule__AcmePropertyTypeSet__Group__0"
    // InternalAcmeParser.g:14569:1: rule__AcmePropertyTypeSet__Group__0 : rule__AcmePropertyTypeSet__Group__0__Impl rule__AcmePropertyTypeSet__Group__1 ;
    public final void rule__AcmePropertyTypeSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14573:1: ( rule__AcmePropertyTypeSet__Group__0__Impl rule__AcmePropertyTypeSet__Group__1 )
            // InternalAcmeParser.g:14574:2: rule__AcmePropertyTypeSet__Group__0__Impl rule__AcmePropertyTypeSet__Group__1
            {
            pushFollow(FOLLOW_63);
            rule__AcmePropertyTypeSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeSet__Group__0"


    // $ANTLR start "rule__AcmePropertyTypeSet__Group__0__Impl"
    // InternalAcmeParser.g:14581:1: rule__AcmePropertyTypeSet__Group__0__Impl : ( () ) ;
    public final void rule__AcmePropertyTypeSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14585:1: ( ( () ) )
            // InternalAcmeParser.g:14586:1: ( () )
            {
            // InternalAcmeParser.g:14586:1: ( () )
            // InternalAcmeParser.g:14587:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeSetAccess().getAcmePropertyTypeSetAction_0()); 
            }
            // InternalAcmeParser.g:14588:2: ()
            // InternalAcmeParser.g:14588:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeSetAccess().getAcmePropertyTypeSetAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeSet__Group__0__Impl"


    // $ANTLR start "rule__AcmePropertyTypeSet__Group__1"
    // InternalAcmeParser.g:14596:1: rule__AcmePropertyTypeSet__Group__1 : rule__AcmePropertyTypeSet__Group__1__Impl rule__AcmePropertyTypeSet__Group__2 ;
    public final void rule__AcmePropertyTypeSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14600:1: ( rule__AcmePropertyTypeSet__Group__1__Impl rule__AcmePropertyTypeSet__Group__2 )
            // InternalAcmeParser.g:14601:2: rule__AcmePropertyTypeSet__Group__1__Impl rule__AcmePropertyTypeSet__Group__2
            {
            pushFollow(FOLLOW_13);
            rule__AcmePropertyTypeSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeSet__Group__1"


    // $ANTLR start "rule__AcmePropertyTypeSet__Group__1__Impl"
    // InternalAcmeParser.g:14608:1: rule__AcmePropertyTypeSet__Group__1__Impl : ( Set ) ;
    public final void rule__AcmePropertyTypeSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14612:1: ( ( Set ) )
            // InternalAcmeParser.g:14613:1: ( Set )
            {
            // InternalAcmeParser.g:14613:1: ( Set )
            // InternalAcmeParser.g:14614:2: Set
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeSetAccess().getSetKeyword_1()); 
            }
            match(input,Set,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeSetAccess().getSetKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeSet__Group__1__Impl"


    // $ANTLR start "rule__AcmePropertyTypeSet__Group__2"
    // InternalAcmeParser.g:14623:1: rule__AcmePropertyTypeSet__Group__2 : rule__AcmePropertyTypeSet__Group__2__Impl rule__AcmePropertyTypeSet__Group__3 ;
    public final void rule__AcmePropertyTypeSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14627:1: ( rule__AcmePropertyTypeSet__Group__2__Impl rule__AcmePropertyTypeSet__Group__3 )
            // InternalAcmeParser.g:14628:2: rule__AcmePropertyTypeSet__Group__2__Impl rule__AcmePropertyTypeSet__Group__3
            {
            pushFollow(FOLLOW_64);
            rule__AcmePropertyTypeSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeSet__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeSet__Group__2"


    // $ANTLR start "rule__AcmePropertyTypeSet__Group__2__Impl"
    // InternalAcmeParser.g:14635:1: rule__AcmePropertyTypeSet__Group__2__Impl : ( LeftCurlyBracket ) ;
    public final void rule__AcmePropertyTypeSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14639:1: ( ( LeftCurlyBracket ) )
            // InternalAcmeParser.g:14640:1: ( LeftCurlyBracket )
            {
            // InternalAcmeParser.g:14640:1: ( LeftCurlyBracket )
            // InternalAcmeParser.g:14641:2: LeftCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeSetAccess().getLeftCurlyBracketKeyword_2()); 
            }
            match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeSetAccess().getLeftCurlyBracketKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeSet__Group__2__Impl"


    // $ANTLR start "rule__AcmePropertyTypeSet__Group__3"
    // InternalAcmeParser.g:14650:1: rule__AcmePropertyTypeSet__Group__3 : rule__AcmePropertyTypeSet__Group__3__Impl rule__AcmePropertyTypeSet__Group__4 ;
    public final void rule__AcmePropertyTypeSet__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14654:1: ( rule__AcmePropertyTypeSet__Group__3__Impl rule__AcmePropertyTypeSet__Group__4 )
            // InternalAcmeParser.g:14655:2: rule__AcmePropertyTypeSet__Group__3__Impl rule__AcmePropertyTypeSet__Group__4
            {
            pushFollow(FOLLOW_64);
            rule__AcmePropertyTypeSet__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeSet__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeSet__Group__3"


    // $ANTLR start "rule__AcmePropertyTypeSet__Group__3__Impl"
    // InternalAcmeParser.g:14662:1: rule__AcmePropertyTypeSet__Group__3__Impl : ( ( rule__AcmePropertyTypeSet__TypeAssignment_3 )? ) ;
    public final void rule__AcmePropertyTypeSet__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14666:1: ( ( ( rule__AcmePropertyTypeSet__TypeAssignment_3 )? ) )
            // InternalAcmeParser.g:14667:1: ( ( rule__AcmePropertyTypeSet__TypeAssignment_3 )? )
            {
            // InternalAcmeParser.g:14667:1: ( ( rule__AcmePropertyTypeSet__TypeAssignment_3 )? )
            // InternalAcmeParser.g:14668:2: ( rule__AcmePropertyTypeSet__TypeAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeSetAccess().getTypeAssignment_3()); 
            }
            // InternalAcmeParser.g:14669:2: ( rule__AcmePropertyTypeSet__TypeAssignment_3 )?
            int alt175=2;
            int LA175_0 = input.LA(1);

            if ( ((LA175_0>=Sequence && LA175_0<=Boolean)||LA175_0==Double||LA175_0==Record||LA175_0==String||LA175_0==Float||LA175_0==Enum||(LA175_0>=Any && LA175_0<=Int)||(LA175_0>=Seq && LA175_0<=Set)||LA175_0==RULE_ID) ) {
                alt175=1;
            }
            switch (alt175) {
                case 1 :
                    // InternalAcmeParser.g:14669:3: rule__AcmePropertyTypeSet__TypeAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePropertyTypeSet__TypeAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeSetAccess().getTypeAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeSet__Group__3__Impl"


    // $ANTLR start "rule__AcmePropertyTypeSet__Group__4"
    // InternalAcmeParser.g:14677:1: rule__AcmePropertyTypeSet__Group__4 : rule__AcmePropertyTypeSet__Group__4__Impl ;
    public final void rule__AcmePropertyTypeSet__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14681:1: ( rule__AcmePropertyTypeSet__Group__4__Impl )
            // InternalAcmeParser.g:14682:2: rule__AcmePropertyTypeSet__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeSet__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeSet__Group__4"


    // $ANTLR start "rule__AcmePropertyTypeSet__Group__4__Impl"
    // InternalAcmeParser.g:14688:1: rule__AcmePropertyTypeSet__Group__4__Impl : ( RightCurlyBracket ) ;
    public final void rule__AcmePropertyTypeSet__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14692:1: ( ( RightCurlyBracket ) )
            // InternalAcmeParser.g:14693:1: ( RightCurlyBracket )
            {
            // InternalAcmeParser.g:14693:1: ( RightCurlyBracket )
            // InternalAcmeParser.g:14694:2: RightCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeSetAccess().getRightCurlyBracketKeyword_4()); 
            }
            match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeSetAccess().getRightCurlyBracketKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeSet__Group__4__Impl"


    // $ANTLR start "rule__AcmePropertyTypeSequence__Group__0"
    // InternalAcmeParser.g:14704:1: rule__AcmePropertyTypeSequence__Group__0 : rule__AcmePropertyTypeSequence__Group__0__Impl rule__AcmePropertyTypeSequence__Group__1 ;
    public final void rule__AcmePropertyTypeSequence__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14708:1: ( rule__AcmePropertyTypeSequence__Group__0__Impl rule__AcmePropertyTypeSequence__Group__1 )
            // InternalAcmeParser.g:14709:2: rule__AcmePropertyTypeSequence__Group__0__Impl rule__AcmePropertyTypeSequence__Group__1
            {
            pushFollow(FOLLOW_65);
            rule__AcmePropertyTypeSequence__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeSequence__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeSequence__Group__0"


    // $ANTLR start "rule__AcmePropertyTypeSequence__Group__0__Impl"
    // InternalAcmeParser.g:14716:1: rule__AcmePropertyTypeSequence__Group__0__Impl : ( () ) ;
    public final void rule__AcmePropertyTypeSequence__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14720:1: ( ( () ) )
            // InternalAcmeParser.g:14721:1: ( () )
            {
            // InternalAcmeParser.g:14721:1: ( () )
            // InternalAcmeParser.g:14722:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeSequenceAccess().getAcmePropertyTypeSequenceAction_0()); 
            }
            // InternalAcmeParser.g:14723:2: ()
            // InternalAcmeParser.g:14723:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeSequenceAccess().getAcmePropertyTypeSequenceAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeSequence__Group__0__Impl"


    // $ANTLR start "rule__AcmePropertyTypeSequence__Group__1"
    // InternalAcmeParser.g:14731:1: rule__AcmePropertyTypeSequence__Group__1 : rule__AcmePropertyTypeSequence__Group__1__Impl rule__AcmePropertyTypeSequence__Group__2 ;
    public final void rule__AcmePropertyTypeSequence__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14735:1: ( rule__AcmePropertyTypeSequence__Group__1__Impl rule__AcmePropertyTypeSequence__Group__2 )
            // InternalAcmeParser.g:14736:2: rule__AcmePropertyTypeSequence__Group__1__Impl rule__AcmePropertyTypeSequence__Group__2
            {
            pushFollow(FOLLOW_54);
            rule__AcmePropertyTypeSequence__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeSequence__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeSequence__Group__1"


    // $ANTLR start "rule__AcmePropertyTypeSequence__Group__1__Impl"
    // InternalAcmeParser.g:14743:1: rule__AcmePropertyTypeSequence__Group__1__Impl : ( ( rule__AcmePropertyTypeSequence__Alternatives_1 ) ) ;
    public final void rule__AcmePropertyTypeSequence__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14747:1: ( ( ( rule__AcmePropertyTypeSequence__Alternatives_1 ) ) )
            // InternalAcmeParser.g:14748:1: ( ( rule__AcmePropertyTypeSequence__Alternatives_1 ) )
            {
            // InternalAcmeParser.g:14748:1: ( ( rule__AcmePropertyTypeSequence__Alternatives_1 ) )
            // InternalAcmeParser.g:14749:2: ( rule__AcmePropertyTypeSequence__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeSequenceAccess().getAlternatives_1()); 
            }
            // InternalAcmeParser.g:14750:2: ( rule__AcmePropertyTypeSequence__Alternatives_1 )
            // InternalAcmeParser.g:14750:3: rule__AcmePropertyTypeSequence__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeSequence__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeSequenceAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeSequence__Group__1__Impl"


    // $ANTLR start "rule__AcmePropertyTypeSequence__Group__2"
    // InternalAcmeParser.g:14758:1: rule__AcmePropertyTypeSequence__Group__2 : rule__AcmePropertyTypeSequence__Group__2__Impl rule__AcmePropertyTypeSequence__Group__3 ;
    public final void rule__AcmePropertyTypeSequence__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14762:1: ( rule__AcmePropertyTypeSequence__Group__2__Impl rule__AcmePropertyTypeSequence__Group__3 )
            // InternalAcmeParser.g:14763:2: rule__AcmePropertyTypeSequence__Group__2__Impl rule__AcmePropertyTypeSequence__Group__3
            {
            pushFollow(FOLLOW_64);
            rule__AcmePropertyTypeSequence__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeSequence__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeSequence__Group__2"


    // $ANTLR start "rule__AcmePropertyTypeSequence__Group__2__Impl"
    // InternalAcmeParser.g:14770:1: rule__AcmePropertyTypeSequence__Group__2__Impl : ( LessThanSign ) ;
    public final void rule__AcmePropertyTypeSequence__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14774:1: ( ( LessThanSign ) )
            // InternalAcmeParser.g:14775:1: ( LessThanSign )
            {
            // InternalAcmeParser.g:14775:1: ( LessThanSign )
            // InternalAcmeParser.g:14776:2: LessThanSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeSequenceAccess().getLessThanSignKeyword_2()); 
            }
            match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeSequenceAccess().getLessThanSignKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeSequence__Group__2__Impl"


    // $ANTLR start "rule__AcmePropertyTypeSequence__Group__3"
    // InternalAcmeParser.g:14785:1: rule__AcmePropertyTypeSequence__Group__3 : rule__AcmePropertyTypeSequence__Group__3__Impl rule__AcmePropertyTypeSequence__Group__4 ;
    public final void rule__AcmePropertyTypeSequence__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14789:1: ( rule__AcmePropertyTypeSequence__Group__3__Impl rule__AcmePropertyTypeSequence__Group__4 )
            // InternalAcmeParser.g:14790:2: rule__AcmePropertyTypeSequence__Group__3__Impl rule__AcmePropertyTypeSequence__Group__4
            {
            pushFollow(FOLLOW_64);
            rule__AcmePropertyTypeSequence__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeSequence__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeSequence__Group__3"


    // $ANTLR start "rule__AcmePropertyTypeSequence__Group__3__Impl"
    // InternalAcmeParser.g:14797:1: rule__AcmePropertyTypeSequence__Group__3__Impl : ( ( rule__AcmePropertyTypeSequence__TypeAssignment_3 )? ) ;
    public final void rule__AcmePropertyTypeSequence__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14801:1: ( ( ( rule__AcmePropertyTypeSequence__TypeAssignment_3 )? ) )
            // InternalAcmeParser.g:14802:1: ( ( rule__AcmePropertyTypeSequence__TypeAssignment_3 )? )
            {
            // InternalAcmeParser.g:14802:1: ( ( rule__AcmePropertyTypeSequence__TypeAssignment_3 )? )
            // InternalAcmeParser.g:14803:2: ( rule__AcmePropertyTypeSequence__TypeAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeSequenceAccess().getTypeAssignment_3()); 
            }
            // InternalAcmeParser.g:14804:2: ( rule__AcmePropertyTypeSequence__TypeAssignment_3 )?
            int alt176=2;
            int LA176_0 = input.LA(1);

            if ( ((LA176_0>=Sequence && LA176_0<=Boolean)||LA176_0==Double||LA176_0==Record||LA176_0==String||LA176_0==Float||LA176_0==Enum||(LA176_0>=Any && LA176_0<=Int)||(LA176_0>=Seq && LA176_0<=Set)||LA176_0==RULE_ID) ) {
                alt176=1;
            }
            switch (alt176) {
                case 1 :
                    // InternalAcmeParser.g:14804:3: rule__AcmePropertyTypeSequence__TypeAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePropertyTypeSequence__TypeAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeSequenceAccess().getTypeAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeSequence__Group__3__Impl"


    // $ANTLR start "rule__AcmePropertyTypeSequence__Group__4"
    // InternalAcmeParser.g:14812:1: rule__AcmePropertyTypeSequence__Group__4 : rule__AcmePropertyTypeSequence__Group__4__Impl ;
    public final void rule__AcmePropertyTypeSequence__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14816:1: ( rule__AcmePropertyTypeSequence__Group__4__Impl )
            // InternalAcmeParser.g:14817:2: rule__AcmePropertyTypeSequence__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeSequence__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeSequence__Group__4"


    // $ANTLR start "rule__AcmePropertyTypeSequence__Group__4__Impl"
    // InternalAcmeParser.g:14823:1: rule__AcmePropertyTypeSequence__Group__4__Impl : ( RightCurlyBracket ) ;
    public final void rule__AcmePropertyTypeSequence__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14827:1: ( ( RightCurlyBracket ) )
            // InternalAcmeParser.g:14828:1: ( RightCurlyBracket )
            {
            // InternalAcmeParser.g:14828:1: ( RightCurlyBracket )
            // InternalAcmeParser.g:14829:2: RightCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeSequenceAccess().getRightCurlyBracketKeyword_4()); 
            }
            match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeSequenceAccess().getRightCurlyBracketKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeSequence__Group__4__Impl"


    // $ANTLR start "rule__AcmePropertyTypeEnum__Group__0"
    // InternalAcmeParser.g:14839:1: rule__AcmePropertyTypeEnum__Group__0 : rule__AcmePropertyTypeEnum__Group__0__Impl rule__AcmePropertyTypeEnum__Group__1 ;
    public final void rule__AcmePropertyTypeEnum__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14843:1: ( rule__AcmePropertyTypeEnum__Group__0__Impl rule__AcmePropertyTypeEnum__Group__1 )
            // InternalAcmeParser.g:14844:2: rule__AcmePropertyTypeEnum__Group__0__Impl rule__AcmePropertyTypeEnum__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__AcmePropertyTypeEnum__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeEnum__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeEnum__Group__0"


    // $ANTLR start "rule__AcmePropertyTypeEnum__Group__0__Impl"
    // InternalAcmeParser.g:14851:1: rule__AcmePropertyTypeEnum__Group__0__Impl : ( Enum ) ;
    public final void rule__AcmePropertyTypeEnum__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14855:1: ( ( Enum ) )
            // InternalAcmeParser.g:14856:1: ( Enum )
            {
            // InternalAcmeParser.g:14856:1: ( Enum )
            // InternalAcmeParser.g:14857:2: Enum
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeEnumAccess().getEnumKeyword_0()); 
            }
            match(input,Enum,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeEnumAccess().getEnumKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeEnum__Group__0__Impl"


    // $ANTLR start "rule__AcmePropertyTypeEnum__Group__1"
    // InternalAcmeParser.g:14866:1: rule__AcmePropertyTypeEnum__Group__1 : rule__AcmePropertyTypeEnum__Group__1__Impl rule__AcmePropertyTypeEnum__Group__2 ;
    public final void rule__AcmePropertyTypeEnum__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14870:1: ( rule__AcmePropertyTypeEnum__Group__1__Impl rule__AcmePropertyTypeEnum__Group__2 )
            // InternalAcmeParser.g:14871:2: rule__AcmePropertyTypeEnum__Group__1__Impl rule__AcmePropertyTypeEnum__Group__2
            {
            pushFollow(FOLLOW_11);
            rule__AcmePropertyTypeEnum__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeEnum__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeEnum__Group__1"


    // $ANTLR start "rule__AcmePropertyTypeEnum__Group__1__Impl"
    // InternalAcmeParser.g:14878:1: rule__AcmePropertyTypeEnum__Group__1__Impl : ( LeftCurlyBracket ) ;
    public final void rule__AcmePropertyTypeEnum__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14882:1: ( ( LeftCurlyBracket ) )
            // InternalAcmeParser.g:14883:1: ( LeftCurlyBracket )
            {
            // InternalAcmeParser.g:14883:1: ( LeftCurlyBracket )
            // InternalAcmeParser.g:14884:2: LeftCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeEnumAccess().getLeftCurlyBracketKeyword_1()); 
            }
            match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeEnumAccess().getLeftCurlyBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeEnum__Group__1__Impl"


    // $ANTLR start "rule__AcmePropertyTypeEnum__Group__2"
    // InternalAcmeParser.g:14893:1: rule__AcmePropertyTypeEnum__Group__2 : rule__AcmePropertyTypeEnum__Group__2__Impl rule__AcmePropertyTypeEnum__Group__3 ;
    public final void rule__AcmePropertyTypeEnum__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14897:1: ( rule__AcmePropertyTypeEnum__Group__2__Impl rule__AcmePropertyTypeEnum__Group__3 )
            // InternalAcmeParser.g:14898:2: rule__AcmePropertyTypeEnum__Group__2__Impl rule__AcmePropertyTypeEnum__Group__3
            {
            pushFollow(FOLLOW_66);
            rule__AcmePropertyTypeEnum__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeEnum__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeEnum__Group__2"


    // $ANTLR start "rule__AcmePropertyTypeEnum__Group__2__Impl"
    // InternalAcmeParser.g:14905:1: rule__AcmePropertyTypeEnum__Group__2__Impl : ( RULE_ID ) ;
    public final void rule__AcmePropertyTypeEnum__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14909:1: ( ( RULE_ID ) )
            // InternalAcmeParser.g:14910:1: ( RULE_ID )
            {
            // InternalAcmeParser.g:14910:1: ( RULE_ID )
            // InternalAcmeParser.g:14911:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeEnumAccess().getIDTerminalRuleCall_2()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeEnumAccess().getIDTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeEnum__Group__2__Impl"


    // $ANTLR start "rule__AcmePropertyTypeEnum__Group__3"
    // InternalAcmeParser.g:14920:1: rule__AcmePropertyTypeEnum__Group__3 : rule__AcmePropertyTypeEnum__Group__3__Impl rule__AcmePropertyTypeEnum__Group__4 ;
    public final void rule__AcmePropertyTypeEnum__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14924:1: ( rule__AcmePropertyTypeEnum__Group__3__Impl rule__AcmePropertyTypeEnum__Group__4 )
            // InternalAcmeParser.g:14925:2: rule__AcmePropertyTypeEnum__Group__3__Impl rule__AcmePropertyTypeEnum__Group__4
            {
            pushFollow(FOLLOW_66);
            rule__AcmePropertyTypeEnum__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeEnum__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeEnum__Group__3"


    // $ANTLR start "rule__AcmePropertyTypeEnum__Group__3__Impl"
    // InternalAcmeParser.g:14932:1: rule__AcmePropertyTypeEnum__Group__3__Impl : ( ( rule__AcmePropertyTypeEnum__Group_3__0 )* ) ;
    public final void rule__AcmePropertyTypeEnum__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14936:1: ( ( ( rule__AcmePropertyTypeEnum__Group_3__0 )* ) )
            // InternalAcmeParser.g:14937:1: ( ( rule__AcmePropertyTypeEnum__Group_3__0 )* )
            {
            // InternalAcmeParser.g:14937:1: ( ( rule__AcmePropertyTypeEnum__Group_3__0 )* )
            // InternalAcmeParser.g:14938:2: ( rule__AcmePropertyTypeEnum__Group_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeEnumAccess().getGroup_3()); 
            }
            // InternalAcmeParser.g:14939:2: ( rule__AcmePropertyTypeEnum__Group_3__0 )*
            loop177:
            do {
                int alt177=2;
                int LA177_0 = input.LA(1);

                if ( (LA177_0==Comma) ) {
                    alt177=1;
                }


                switch (alt177) {
            	case 1 :
            	    // InternalAcmeParser.g:14939:3: rule__AcmePropertyTypeEnum__Group_3__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__AcmePropertyTypeEnum__Group_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop177;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeEnumAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeEnum__Group__3__Impl"


    // $ANTLR start "rule__AcmePropertyTypeEnum__Group__4"
    // InternalAcmeParser.g:14947:1: rule__AcmePropertyTypeEnum__Group__4 : rule__AcmePropertyTypeEnum__Group__4__Impl ;
    public final void rule__AcmePropertyTypeEnum__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14951:1: ( rule__AcmePropertyTypeEnum__Group__4__Impl )
            // InternalAcmeParser.g:14952:2: rule__AcmePropertyTypeEnum__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeEnum__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeEnum__Group__4"


    // $ANTLR start "rule__AcmePropertyTypeEnum__Group__4__Impl"
    // InternalAcmeParser.g:14958:1: rule__AcmePropertyTypeEnum__Group__4__Impl : ( RightCurlyBracket ) ;
    public final void rule__AcmePropertyTypeEnum__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14962:1: ( ( RightCurlyBracket ) )
            // InternalAcmeParser.g:14963:1: ( RightCurlyBracket )
            {
            // InternalAcmeParser.g:14963:1: ( RightCurlyBracket )
            // InternalAcmeParser.g:14964:2: RightCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeEnumAccess().getRightCurlyBracketKeyword_4()); 
            }
            match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeEnumAccess().getRightCurlyBracketKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeEnum__Group__4__Impl"


    // $ANTLR start "rule__AcmePropertyTypeEnum__Group_3__0"
    // InternalAcmeParser.g:14974:1: rule__AcmePropertyTypeEnum__Group_3__0 : rule__AcmePropertyTypeEnum__Group_3__0__Impl rule__AcmePropertyTypeEnum__Group_3__1 ;
    public final void rule__AcmePropertyTypeEnum__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14978:1: ( rule__AcmePropertyTypeEnum__Group_3__0__Impl rule__AcmePropertyTypeEnum__Group_3__1 )
            // InternalAcmeParser.g:14979:2: rule__AcmePropertyTypeEnum__Group_3__0__Impl rule__AcmePropertyTypeEnum__Group_3__1
            {
            pushFollow(FOLLOW_11);
            rule__AcmePropertyTypeEnum__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeEnum__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeEnum__Group_3__0"


    // $ANTLR start "rule__AcmePropertyTypeEnum__Group_3__0__Impl"
    // InternalAcmeParser.g:14986:1: rule__AcmePropertyTypeEnum__Group_3__0__Impl : ( Comma ) ;
    public final void rule__AcmePropertyTypeEnum__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:14990:1: ( ( Comma ) )
            // InternalAcmeParser.g:14991:1: ( Comma )
            {
            // InternalAcmeParser.g:14991:1: ( Comma )
            // InternalAcmeParser.g:14992:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeEnumAccess().getCommaKeyword_3_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeEnumAccess().getCommaKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeEnum__Group_3__0__Impl"


    // $ANTLR start "rule__AcmePropertyTypeEnum__Group_3__1"
    // InternalAcmeParser.g:15001:1: rule__AcmePropertyTypeEnum__Group_3__1 : rule__AcmePropertyTypeEnum__Group_3__1__Impl ;
    public final void rule__AcmePropertyTypeEnum__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15005:1: ( rule__AcmePropertyTypeEnum__Group_3__1__Impl )
            // InternalAcmeParser.g:15006:2: rule__AcmePropertyTypeEnum__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeEnum__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeEnum__Group_3__1"


    // $ANTLR start "rule__AcmePropertyTypeEnum__Group_3__1__Impl"
    // InternalAcmeParser.g:15012:1: rule__AcmePropertyTypeEnum__Group_3__1__Impl : ( RULE_ID ) ;
    public final void rule__AcmePropertyTypeEnum__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15016:1: ( ( RULE_ID ) )
            // InternalAcmeParser.g:15017:1: ( RULE_ID )
            {
            // InternalAcmeParser.g:15017:1: ( RULE_ID )
            // InternalAcmeParser.g:15018:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeEnumAccess().getIDTerminalRuleCall_3_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeEnumAccess().getIDTerminalRuleCall_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeEnum__Group_3__1__Impl"


    // $ANTLR start "rule__AcmePropertyRecordFieldDescription__Group__0"
    // InternalAcmeParser.g:15028:1: rule__AcmePropertyRecordFieldDescription__Group__0 : rule__AcmePropertyRecordFieldDescription__Group__0__Impl rule__AcmePropertyRecordFieldDescription__Group__1 ;
    public final void rule__AcmePropertyRecordFieldDescription__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15032:1: ( rule__AcmePropertyRecordFieldDescription__Group__0__Impl rule__AcmePropertyRecordFieldDescription__Group__1 )
            // InternalAcmeParser.g:15033:2: rule__AcmePropertyRecordFieldDescription__Group__0__Impl rule__AcmePropertyRecordFieldDescription__Group__1
            {
            pushFollow(FOLLOW_67);
            rule__AcmePropertyRecordFieldDescription__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyRecordFieldDescription__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecordFieldDescription__Group__0"


    // $ANTLR start "rule__AcmePropertyRecordFieldDescription__Group__0__Impl"
    // InternalAcmeParser.g:15040:1: rule__AcmePropertyRecordFieldDescription__Group__0__Impl : ( ( rule__AcmePropertyRecordFieldDescription__NameAssignment_0 ) ) ;
    public final void rule__AcmePropertyRecordFieldDescription__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15044:1: ( ( ( rule__AcmePropertyRecordFieldDescription__NameAssignment_0 ) ) )
            // InternalAcmeParser.g:15045:1: ( ( rule__AcmePropertyRecordFieldDescription__NameAssignment_0 ) )
            {
            // InternalAcmeParser.g:15045:1: ( ( rule__AcmePropertyRecordFieldDescription__NameAssignment_0 ) )
            // InternalAcmeParser.g:15046:2: ( rule__AcmePropertyRecordFieldDescription__NameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyRecordFieldDescriptionAccess().getNameAssignment_0()); 
            }
            // InternalAcmeParser.g:15047:2: ( rule__AcmePropertyRecordFieldDescription__NameAssignment_0 )
            // InternalAcmeParser.g:15047:3: rule__AcmePropertyRecordFieldDescription__NameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyRecordFieldDescription__NameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyRecordFieldDescriptionAccess().getNameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecordFieldDescription__Group__0__Impl"


    // $ANTLR start "rule__AcmePropertyRecordFieldDescription__Group__1"
    // InternalAcmeParser.g:15055:1: rule__AcmePropertyRecordFieldDescription__Group__1 : rule__AcmePropertyRecordFieldDescription__Group__1__Impl rule__AcmePropertyRecordFieldDescription__Group__2 ;
    public final void rule__AcmePropertyRecordFieldDescription__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15059:1: ( rule__AcmePropertyRecordFieldDescription__Group__1__Impl rule__AcmePropertyRecordFieldDescription__Group__2 )
            // InternalAcmeParser.g:15060:2: rule__AcmePropertyRecordFieldDescription__Group__1__Impl rule__AcmePropertyRecordFieldDescription__Group__2
            {
            pushFollow(FOLLOW_50);
            rule__AcmePropertyRecordFieldDescription__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyRecordFieldDescription__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecordFieldDescription__Group__1"


    // $ANTLR start "rule__AcmePropertyRecordFieldDescription__Group__1__Impl"
    // InternalAcmeParser.g:15067:1: rule__AcmePropertyRecordFieldDescription__Group__1__Impl : ( Colon ) ;
    public final void rule__AcmePropertyRecordFieldDescription__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15071:1: ( ( Colon ) )
            // InternalAcmeParser.g:15072:1: ( Colon )
            {
            // InternalAcmeParser.g:15072:1: ( Colon )
            // InternalAcmeParser.g:15073:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyRecordFieldDescriptionAccess().getColonKeyword_1()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyRecordFieldDescriptionAccess().getColonKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecordFieldDescription__Group__1__Impl"


    // $ANTLR start "rule__AcmePropertyRecordFieldDescription__Group__2"
    // InternalAcmeParser.g:15082:1: rule__AcmePropertyRecordFieldDescription__Group__2 : rule__AcmePropertyRecordFieldDescription__Group__2__Impl rule__AcmePropertyRecordFieldDescription__Group__3 ;
    public final void rule__AcmePropertyRecordFieldDescription__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15086:1: ( rule__AcmePropertyRecordFieldDescription__Group__2__Impl rule__AcmePropertyRecordFieldDescription__Group__3 )
            // InternalAcmeParser.g:15087:2: rule__AcmePropertyRecordFieldDescription__Group__2__Impl rule__AcmePropertyRecordFieldDescription__Group__3
            {
            pushFollow(FOLLOW_7);
            rule__AcmePropertyRecordFieldDescription__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyRecordFieldDescription__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecordFieldDescription__Group__2"


    // $ANTLR start "rule__AcmePropertyRecordFieldDescription__Group__2__Impl"
    // InternalAcmeParser.g:15094:1: rule__AcmePropertyRecordFieldDescription__Group__2__Impl : ( ( rule__AcmePropertyRecordFieldDescription__TypeAssignment_2 ) ) ;
    public final void rule__AcmePropertyRecordFieldDescription__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15098:1: ( ( ( rule__AcmePropertyRecordFieldDescription__TypeAssignment_2 ) ) )
            // InternalAcmeParser.g:15099:1: ( ( rule__AcmePropertyRecordFieldDescription__TypeAssignment_2 ) )
            {
            // InternalAcmeParser.g:15099:1: ( ( rule__AcmePropertyRecordFieldDescription__TypeAssignment_2 ) )
            // InternalAcmeParser.g:15100:2: ( rule__AcmePropertyRecordFieldDescription__TypeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyRecordFieldDescriptionAccess().getTypeAssignment_2()); 
            }
            // InternalAcmeParser.g:15101:2: ( rule__AcmePropertyRecordFieldDescription__TypeAssignment_2 )
            // InternalAcmeParser.g:15101:3: rule__AcmePropertyRecordFieldDescription__TypeAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyRecordFieldDescription__TypeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyRecordFieldDescriptionAccess().getTypeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecordFieldDescription__Group__2__Impl"


    // $ANTLR start "rule__AcmePropertyRecordFieldDescription__Group__3"
    // InternalAcmeParser.g:15109:1: rule__AcmePropertyRecordFieldDescription__Group__3 : rule__AcmePropertyRecordFieldDescription__Group__3__Impl ;
    public final void rule__AcmePropertyRecordFieldDescription__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15113:1: ( rule__AcmePropertyRecordFieldDescription__Group__3__Impl )
            // InternalAcmeParser.g:15114:2: rule__AcmePropertyRecordFieldDescription__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyRecordFieldDescription__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecordFieldDescription__Group__3"


    // $ANTLR start "rule__AcmePropertyRecordFieldDescription__Group__3__Impl"
    // InternalAcmeParser.g:15120:1: rule__AcmePropertyRecordFieldDescription__Group__3__Impl : ( Semicolon ) ;
    public final void rule__AcmePropertyRecordFieldDescription__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15124:1: ( ( Semicolon ) )
            // InternalAcmeParser.g:15125:1: ( Semicolon )
            {
            // InternalAcmeParser.g:15125:1: ( Semicolon )
            // InternalAcmeParser.g:15126:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyRecordFieldDescriptionAccess().getSemicolonKeyword_3()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyRecordFieldDescriptionAccess().getSemicolonKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecordFieldDescription__Group__3__Impl"


    // $ANTLR start "rule__AcmePropertyTypeDeclaration__Group__0"
    // InternalAcmeParser.g:15136:1: rule__AcmePropertyTypeDeclaration__Group__0 : rule__AcmePropertyTypeDeclaration__Group__0__Impl rule__AcmePropertyTypeDeclaration__Group__1 ;
    public final void rule__AcmePropertyTypeDeclaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15140:1: ( rule__AcmePropertyTypeDeclaration__Group__0__Impl rule__AcmePropertyTypeDeclaration__Group__1 )
            // InternalAcmeParser.g:15141:2: rule__AcmePropertyTypeDeclaration__Group__0__Impl rule__AcmePropertyTypeDeclaration__Group__1
            {
            pushFollow(FOLLOW_24);
            rule__AcmePropertyTypeDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeDeclaration__Group__0"


    // $ANTLR start "rule__AcmePropertyTypeDeclaration__Group__0__Impl"
    // InternalAcmeParser.g:15148:1: rule__AcmePropertyTypeDeclaration__Group__0__Impl : ( Property ) ;
    public final void rule__AcmePropertyTypeDeclaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15152:1: ( ( Property ) )
            // InternalAcmeParser.g:15153:1: ( Property )
            {
            // InternalAcmeParser.g:15153:1: ( Property )
            // InternalAcmeParser.g:15154:2: Property
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeDeclarationAccess().getPropertyKeyword_0()); 
            }
            match(input,Property,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeDeclarationAccess().getPropertyKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeDeclaration__Group__0__Impl"


    // $ANTLR start "rule__AcmePropertyTypeDeclaration__Group__1"
    // InternalAcmeParser.g:15163:1: rule__AcmePropertyTypeDeclaration__Group__1 : rule__AcmePropertyTypeDeclaration__Group__1__Impl rule__AcmePropertyTypeDeclaration__Group__2 ;
    public final void rule__AcmePropertyTypeDeclaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15167:1: ( rule__AcmePropertyTypeDeclaration__Group__1__Impl rule__AcmePropertyTypeDeclaration__Group__2 )
            // InternalAcmeParser.g:15168:2: rule__AcmePropertyTypeDeclaration__Group__1__Impl rule__AcmePropertyTypeDeclaration__Group__2
            {
            pushFollow(FOLLOW_11);
            rule__AcmePropertyTypeDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeDeclaration__Group__1"


    // $ANTLR start "rule__AcmePropertyTypeDeclaration__Group__1__Impl"
    // InternalAcmeParser.g:15175:1: rule__AcmePropertyTypeDeclaration__Group__1__Impl : ( Type ) ;
    public final void rule__AcmePropertyTypeDeclaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15179:1: ( ( Type ) )
            // InternalAcmeParser.g:15180:1: ( Type )
            {
            // InternalAcmeParser.g:15180:1: ( Type )
            // InternalAcmeParser.g:15181:2: Type
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeDeclarationAccess().getTypeKeyword_1()); 
            }
            match(input,Type,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeDeclarationAccess().getTypeKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeDeclaration__Group__1__Impl"


    // $ANTLR start "rule__AcmePropertyTypeDeclaration__Group__2"
    // InternalAcmeParser.g:15190:1: rule__AcmePropertyTypeDeclaration__Group__2 : rule__AcmePropertyTypeDeclaration__Group__2__Impl rule__AcmePropertyTypeDeclaration__Group__3 ;
    public final void rule__AcmePropertyTypeDeclaration__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15194:1: ( rule__AcmePropertyTypeDeclaration__Group__2__Impl rule__AcmePropertyTypeDeclaration__Group__3 )
            // InternalAcmeParser.g:15195:2: rule__AcmePropertyTypeDeclaration__Group__2__Impl rule__AcmePropertyTypeDeclaration__Group__3
            {
            pushFollow(FOLLOW_68);
            rule__AcmePropertyTypeDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeDeclaration__Group__2"


    // $ANTLR start "rule__AcmePropertyTypeDeclaration__Group__2__Impl"
    // InternalAcmeParser.g:15202:1: rule__AcmePropertyTypeDeclaration__Group__2__Impl : ( ( rule__AcmePropertyTypeDeclaration__NameAssignment_2 ) ) ;
    public final void rule__AcmePropertyTypeDeclaration__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15206:1: ( ( ( rule__AcmePropertyTypeDeclaration__NameAssignment_2 ) ) )
            // InternalAcmeParser.g:15207:1: ( ( rule__AcmePropertyTypeDeclaration__NameAssignment_2 ) )
            {
            // InternalAcmeParser.g:15207:1: ( ( rule__AcmePropertyTypeDeclaration__NameAssignment_2 ) )
            // InternalAcmeParser.g:15208:2: ( rule__AcmePropertyTypeDeclaration__NameAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeDeclarationAccess().getNameAssignment_2()); 
            }
            // InternalAcmeParser.g:15209:2: ( rule__AcmePropertyTypeDeclaration__NameAssignment_2 )
            // InternalAcmeParser.g:15209:3: rule__AcmePropertyTypeDeclaration__NameAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeDeclaration__NameAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeDeclarationAccess().getNameAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeDeclaration__Group__2__Impl"


    // $ANTLR start "rule__AcmePropertyTypeDeclaration__Group__3"
    // InternalAcmeParser.g:15217:1: rule__AcmePropertyTypeDeclaration__Group__3 : rule__AcmePropertyTypeDeclaration__Group__3__Impl ;
    public final void rule__AcmePropertyTypeDeclaration__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15221:1: ( rule__AcmePropertyTypeDeclaration__Group__3__Impl )
            // InternalAcmeParser.g:15222:2: rule__AcmePropertyTypeDeclaration__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeDeclaration__Group__3"


    // $ANTLR start "rule__AcmePropertyTypeDeclaration__Group__3__Impl"
    // InternalAcmeParser.g:15228:1: rule__AcmePropertyTypeDeclaration__Group__3__Impl : ( ( rule__AcmePropertyTypeDeclaration__Alternatives_3 ) ) ;
    public final void rule__AcmePropertyTypeDeclaration__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15232:1: ( ( ( rule__AcmePropertyTypeDeclaration__Alternatives_3 ) ) )
            // InternalAcmeParser.g:15233:1: ( ( rule__AcmePropertyTypeDeclaration__Alternatives_3 ) )
            {
            // InternalAcmeParser.g:15233:1: ( ( rule__AcmePropertyTypeDeclaration__Alternatives_3 ) )
            // InternalAcmeParser.g:15234:2: ( rule__AcmePropertyTypeDeclaration__Alternatives_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeDeclarationAccess().getAlternatives_3()); 
            }
            // InternalAcmeParser.g:15235:2: ( rule__AcmePropertyTypeDeclaration__Alternatives_3 )
            // InternalAcmeParser.g:15235:3: rule__AcmePropertyTypeDeclaration__Alternatives_3
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeDeclaration__Alternatives_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeDeclarationAccess().getAlternatives_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeDeclaration__Group__3__Impl"


    // $ANTLR start "rule__AcmePropertyTypeDeclaration__Group_3_1__0"
    // InternalAcmeParser.g:15244:1: rule__AcmePropertyTypeDeclaration__Group_3_1__0 : rule__AcmePropertyTypeDeclaration__Group_3_1__0__Impl rule__AcmePropertyTypeDeclaration__Group_3_1__1 ;
    public final void rule__AcmePropertyTypeDeclaration__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15248:1: ( rule__AcmePropertyTypeDeclaration__Group_3_1__0__Impl rule__AcmePropertyTypeDeclaration__Group_3_1__1 )
            // InternalAcmeParser.g:15249:2: rule__AcmePropertyTypeDeclaration__Group_3_1__0__Impl rule__AcmePropertyTypeDeclaration__Group_3_1__1
            {
            pushFollow(FOLLOW_50);
            rule__AcmePropertyTypeDeclaration__Group_3_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeDeclaration__Group_3_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeDeclaration__Group_3_1__0"


    // $ANTLR start "rule__AcmePropertyTypeDeclaration__Group_3_1__0__Impl"
    // InternalAcmeParser.g:15256:1: rule__AcmePropertyTypeDeclaration__Group_3_1__0__Impl : ( EqualsSign ) ;
    public final void rule__AcmePropertyTypeDeclaration__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15260:1: ( ( EqualsSign ) )
            // InternalAcmeParser.g:15261:1: ( EqualsSign )
            {
            // InternalAcmeParser.g:15261:1: ( EqualsSign )
            // InternalAcmeParser.g:15262:2: EqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeDeclarationAccess().getEqualsSignKeyword_3_1_0()); 
            }
            match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeDeclarationAccess().getEqualsSignKeyword_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeDeclaration__Group_3_1__0__Impl"


    // $ANTLR start "rule__AcmePropertyTypeDeclaration__Group_3_1__1"
    // InternalAcmeParser.g:15271:1: rule__AcmePropertyTypeDeclaration__Group_3_1__1 : rule__AcmePropertyTypeDeclaration__Group_3_1__1__Impl rule__AcmePropertyTypeDeclaration__Group_3_1__2 ;
    public final void rule__AcmePropertyTypeDeclaration__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15275:1: ( rule__AcmePropertyTypeDeclaration__Group_3_1__1__Impl rule__AcmePropertyTypeDeclaration__Group_3_1__2 )
            // InternalAcmeParser.g:15276:2: rule__AcmePropertyTypeDeclaration__Group_3_1__1__Impl rule__AcmePropertyTypeDeclaration__Group_3_1__2
            {
            pushFollow(FOLLOW_7);
            rule__AcmePropertyTypeDeclaration__Group_3_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeDeclaration__Group_3_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeDeclaration__Group_3_1__1"


    // $ANTLR start "rule__AcmePropertyTypeDeclaration__Group_3_1__1__Impl"
    // InternalAcmeParser.g:15283:1: rule__AcmePropertyTypeDeclaration__Group_3_1__1__Impl : ( ( rule__AcmePropertyTypeDeclaration__TypeAssignment_3_1_1 ) ) ;
    public final void rule__AcmePropertyTypeDeclaration__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15287:1: ( ( ( rule__AcmePropertyTypeDeclaration__TypeAssignment_3_1_1 ) ) )
            // InternalAcmeParser.g:15288:1: ( ( rule__AcmePropertyTypeDeclaration__TypeAssignment_3_1_1 ) )
            {
            // InternalAcmeParser.g:15288:1: ( ( rule__AcmePropertyTypeDeclaration__TypeAssignment_3_1_1 ) )
            // InternalAcmeParser.g:15289:2: ( rule__AcmePropertyTypeDeclaration__TypeAssignment_3_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeDeclarationAccess().getTypeAssignment_3_1_1()); 
            }
            // InternalAcmeParser.g:15290:2: ( rule__AcmePropertyTypeDeclaration__TypeAssignment_3_1_1 )
            // InternalAcmeParser.g:15290:3: rule__AcmePropertyTypeDeclaration__TypeAssignment_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeDeclaration__TypeAssignment_3_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeDeclarationAccess().getTypeAssignment_3_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeDeclaration__Group_3_1__1__Impl"


    // $ANTLR start "rule__AcmePropertyTypeDeclaration__Group_3_1__2"
    // InternalAcmeParser.g:15298:1: rule__AcmePropertyTypeDeclaration__Group_3_1__2 : rule__AcmePropertyTypeDeclaration__Group_3_1__2__Impl ;
    public final void rule__AcmePropertyTypeDeclaration__Group_3_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15302:1: ( rule__AcmePropertyTypeDeclaration__Group_3_1__2__Impl )
            // InternalAcmeParser.g:15303:2: rule__AcmePropertyTypeDeclaration__Group_3_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyTypeDeclaration__Group_3_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeDeclaration__Group_3_1__2"


    // $ANTLR start "rule__AcmePropertyTypeDeclaration__Group_3_1__2__Impl"
    // InternalAcmeParser.g:15309:1: rule__AcmePropertyTypeDeclaration__Group_3_1__2__Impl : ( Semicolon ) ;
    public final void rule__AcmePropertyTypeDeclaration__Group_3_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15313:1: ( ( Semicolon ) )
            // InternalAcmeParser.g:15314:1: ( Semicolon )
            {
            // InternalAcmeParser.g:15314:1: ( Semicolon )
            // InternalAcmeParser.g:15315:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeDeclarationAccess().getSemicolonKeyword_3_1_2()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeDeclarationAccess().getSemicolonKeyword_3_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeDeclaration__Group_3_1__2__Impl"


    // $ANTLR start "rule__AcmePropertyBlockEntry__Group__0"
    // InternalAcmeParser.g:15325:1: rule__AcmePropertyBlockEntry__Group__0 : rule__AcmePropertyBlockEntry__Group__0__Impl rule__AcmePropertyBlockEntry__Group__1 ;
    public final void rule__AcmePropertyBlockEntry__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15329:1: ( rule__AcmePropertyBlockEntry__Group__0__Impl rule__AcmePropertyBlockEntry__Group__1 )
            // InternalAcmeParser.g:15330:2: rule__AcmePropertyBlockEntry__Group__0__Impl rule__AcmePropertyBlockEntry__Group__1
            {
            pushFollow(FOLLOW_69);
            rule__AcmePropertyBlockEntry__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyBlockEntry__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyBlockEntry__Group__0"


    // $ANTLR start "rule__AcmePropertyBlockEntry__Group__0__Impl"
    // InternalAcmeParser.g:15337:1: rule__AcmePropertyBlockEntry__Group__0__Impl : ( ( rule__AcmePropertyBlockEntry__NameAssignment_0 ) ) ;
    public final void rule__AcmePropertyBlockEntry__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15341:1: ( ( ( rule__AcmePropertyBlockEntry__NameAssignment_0 ) ) )
            // InternalAcmeParser.g:15342:1: ( ( rule__AcmePropertyBlockEntry__NameAssignment_0 ) )
            {
            // InternalAcmeParser.g:15342:1: ( ( rule__AcmePropertyBlockEntry__NameAssignment_0 ) )
            // InternalAcmeParser.g:15343:2: ( rule__AcmePropertyBlockEntry__NameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyBlockEntryAccess().getNameAssignment_0()); 
            }
            // InternalAcmeParser.g:15344:2: ( rule__AcmePropertyBlockEntry__NameAssignment_0 )
            // InternalAcmeParser.g:15344:3: rule__AcmePropertyBlockEntry__NameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyBlockEntry__NameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyBlockEntryAccess().getNameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyBlockEntry__Group__0__Impl"


    // $ANTLR start "rule__AcmePropertyBlockEntry__Group__1"
    // InternalAcmeParser.g:15352:1: rule__AcmePropertyBlockEntry__Group__1 : rule__AcmePropertyBlockEntry__Group__1__Impl rule__AcmePropertyBlockEntry__Group__2 ;
    public final void rule__AcmePropertyBlockEntry__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15356:1: ( rule__AcmePropertyBlockEntry__Group__1__Impl rule__AcmePropertyBlockEntry__Group__2 )
            // InternalAcmeParser.g:15357:2: rule__AcmePropertyBlockEntry__Group__1__Impl rule__AcmePropertyBlockEntry__Group__2
            {
            pushFollow(FOLLOW_69);
            rule__AcmePropertyBlockEntry__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyBlockEntry__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyBlockEntry__Group__1"


    // $ANTLR start "rule__AcmePropertyBlockEntry__Group__1__Impl"
    // InternalAcmeParser.g:15364:1: rule__AcmePropertyBlockEntry__Group__1__Impl : ( ( rule__AcmePropertyBlockEntry__Group_1__0 )? ) ;
    public final void rule__AcmePropertyBlockEntry__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15368:1: ( ( ( rule__AcmePropertyBlockEntry__Group_1__0 )? ) )
            // InternalAcmeParser.g:15369:1: ( ( rule__AcmePropertyBlockEntry__Group_1__0 )? )
            {
            // InternalAcmeParser.g:15369:1: ( ( rule__AcmePropertyBlockEntry__Group_1__0 )? )
            // InternalAcmeParser.g:15370:2: ( rule__AcmePropertyBlockEntry__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyBlockEntryAccess().getGroup_1()); 
            }
            // InternalAcmeParser.g:15371:2: ( rule__AcmePropertyBlockEntry__Group_1__0 )?
            int alt178=2;
            int LA178_0 = input.LA(1);

            if ( (LA178_0==Colon) ) {
                alt178=1;
            }
            switch (alt178) {
                case 1 :
                    // InternalAcmeParser.g:15371:3: rule__AcmePropertyBlockEntry__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePropertyBlockEntry__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyBlockEntryAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyBlockEntry__Group__1__Impl"


    // $ANTLR start "rule__AcmePropertyBlockEntry__Group__2"
    // InternalAcmeParser.g:15379:1: rule__AcmePropertyBlockEntry__Group__2 : rule__AcmePropertyBlockEntry__Group__2__Impl rule__AcmePropertyBlockEntry__Group__3 ;
    public final void rule__AcmePropertyBlockEntry__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15383:1: ( rule__AcmePropertyBlockEntry__Group__2__Impl rule__AcmePropertyBlockEntry__Group__3 )
            // InternalAcmeParser.g:15384:2: rule__AcmePropertyBlockEntry__Group__2__Impl rule__AcmePropertyBlockEntry__Group__3
            {
            pushFollow(FOLLOW_69);
            rule__AcmePropertyBlockEntry__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyBlockEntry__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyBlockEntry__Group__2"


    // $ANTLR start "rule__AcmePropertyBlockEntry__Group__2__Impl"
    // InternalAcmeParser.g:15391:1: rule__AcmePropertyBlockEntry__Group__2__Impl : ( ( rule__AcmePropertyBlockEntry__Group_2__0 )? ) ;
    public final void rule__AcmePropertyBlockEntry__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15395:1: ( ( ( rule__AcmePropertyBlockEntry__Group_2__0 )? ) )
            // InternalAcmeParser.g:15396:1: ( ( rule__AcmePropertyBlockEntry__Group_2__0 )? )
            {
            // InternalAcmeParser.g:15396:1: ( ( rule__AcmePropertyBlockEntry__Group_2__0 )? )
            // InternalAcmeParser.g:15397:2: ( rule__AcmePropertyBlockEntry__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyBlockEntryAccess().getGroup_2()); 
            }
            // InternalAcmeParser.g:15398:2: ( rule__AcmePropertyBlockEntry__Group_2__0 )?
            int alt179=2;
            int LA179_0 = input.LA(1);

            if ( (LA179_0==U||LA179_0==EqualsSign) ) {
                alt179=1;
            }
            switch (alt179) {
                case 1 :
                    // InternalAcmeParser.g:15398:3: rule__AcmePropertyBlockEntry__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AcmePropertyBlockEntry__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyBlockEntryAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyBlockEntry__Group__2__Impl"


    // $ANTLR start "rule__AcmePropertyBlockEntry__Group__3"
    // InternalAcmeParser.g:15406:1: rule__AcmePropertyBlockEntry__Group__3 : rule__AcmePropertyBlockEntry__Group__3__Impl ;
    public final void rule__AcmePropertyBlockEntry__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15410:1: ( rule__AcmePropertyBlockEntry__Group__3__Impl )
            // InternalAcmeParser.g:15411:2: rule__AcmePropertyBlockEntry__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyBlockEntry__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyBlockEntry__Group__3"


    // $ANTLR start "rule__AcmePropertyBlockEntry__Group__3__Impl"
    // InternalAcmeParser.g:15417:1: rule__AcmePropertyBlockEntry__Group__3__Impl : ( Semicolon ) ;
    public final void rule__AcmePropertyBlockEntry__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15421:1: ( ( Semicolon ) )
            // InternalAcmeParser.g:15422:1: ( Semicolon )
            {
            // InternalAcmeParser.g:15422:1: ( Semicolon )
            // InternalAcmeParser.g:15423:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyBlockEntryAccess().getSemicolonKeyword_3()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyBlockEntryAccess().getSemicolonKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyBlockEntry__Group__3__Impl"


    // $ANTLR start "rule__AcmePropertyBlockEntry__Group_1__0"
    // InternalAcmeParser.g:15433:1: rule__AcmePropertyBlockEntry__Group_1__0 : rule__AcmePropertyBlockEntry__Group_1__0__Impl rule__AcmePropertyBlockEntry__Group_1__1 ;
    public final void rule__AcmePropertyBlockEntry__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15437:1: ( rule__AcmePropertyBlockEntry__Group_1__0__Impl rule__AcmePropertyBlockEntry__Group_1__1 )
            // InternalAcmeParser.g:15438:2: rule__AcmePropertyBlockEntry__Group_1__0__Impl rule__AcmePropertyBlockEntry__Group_1__1
            {
            pushFollow(FOLLOW_50);
            rule__AcmePropertyBlockEntry__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyBlockEntry__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyBlockEntry__Group_1__0"


    // $ANTLR start "rule__AcmePropertyBlockEntry__Group_1__0__Impl"
    // InternalAcmeParser.g:15445:1: rule__AcmePropertyBlockEntry__Group_1__0__Impl : ( Colon ) ;
    public final void rule__AcmePropertyBlockEntry__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15449:1: ( ( Colon ) )
            // InternalAcmeParser.g:15450:1: ( Colon )
            {
            // InternalAcmeParser.g:15450:1: ( Colon )
            // InternalAcmeParser.g:15451:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyBlockEntryAccess().getColonKeyword_1_0()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyBlockEntryAccess().getColonKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyBlockEntry__Group_1__0__Impl"


    // $ANTLR start "rule__AcmePropertyBlockEntry__Group_1__1"
    // InternalAcmeParser.g:15460:1: rule__AcmePropertyBlockEntry__Group_1__1 : rule__AcmePropertyBlockEntry__Group_1__1__Impl ;
    public final void rule__AcmePropertyBlockEntry__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15464:1: ( rule__AcmePropertyBlockEntry__Group_1__1__Impl )
            // InternalAcmeParser.g:15465:2: rule__AcmePropertyBlockEntry__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyBlockEntry__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyBlockEntry__Group_1__1"


    // $ANTLR start "rule__AcmePropertyBlockEntry__Group_1__1__Impl"
    // InternalAcmeParser.g:15471:1: rule__AcmePropertyBlockEntry__Group_1__1__Impl : ( ( rule__AcmePropertyBlockEntry__TypeAssignment_1_1 ) ) ;
    public final void rule__AcmePropertyBlockEntry__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15475:1: ( ( ( rule__AcmePropertyBlockEntry__TypeAssignment_1_1 ) ) )
            // InternalAcmeParser.g:15476:1: ( ( rule__AcmePropertyBlockEntry__TypeAssignment_1_1 ) )
            {
            // InternalAcmeParser.g:15476:1: ( ( rule__AcmePropertyBlockEntry__TypeAssignment_1_1 ) )
            // InternalAcmeParser.g:15477:2: ( rule__AcmePropertyBlockEntry__TypeAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyBlockEntryAccess().getTypeAssignment_1_1()); 
            }
            // InternalAcmeParser.g:15478:2: ( rule__AcmePropertyBlockEntry__TypeAssignment_1_1 )
            // InternalAcmeParser.g:15478:3: rule__AcmePropertyBlockEntry__TypeAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyBlockEntry__TypeAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyBlockEntryAccess().getTypeAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyBlockEntry__Group_1__1__Impl"


    // $ANTLR start "rule__AcmePropertyBlockEntry__Group_2__0"
    // InternalAcmeParser.g:15487:1: rule__AcmePropertyBlockEntry__Group_2__0 : rule__AcmePropertyBlockEntry__Group_2__0__Impl rule__AcmePropertyBlockEntry__Group_2__1 ;
    public final void rule__AcmePropertyBlockEntry__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15491:1: ( rule__AcmePropertyBlockEntry__Group_2__0__Impl rule__AcmePropertyBlockEntry__Group_2__1 )
            // InternalAcmeParser.g:15492:2: rule__AcmePropertyBlockEntry__Group_2__0__Impl rule__AcmePropertyBlockEntry__Group_2__1
            {
            pushFollow(FOLLOW_51);
            rule__AcmePropertyBlockEntry__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyBlockEntry__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyBlockEntry__Group_2__0"


    // $ANTLR start "rule__AcmePropertyBlockEntry__Group_2__0__Impl"
    // InternalAcmeParser.g:15499:1: rule__AcmePropertyBlockEntry__Group_2__0__Impl : ( ( rule__AcmePropertyBlockEntry__AssAssignment_2_0 ) ) ;
    public final void rule__AcmePropertyBlockEntry__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15503:1: ( ( ( rule__AcmePropertyBlockEntry__AssAssignment_2_0 ) ) )
            // InternalAcmeParser.g:15504:1: ( ( rule__AcmePropertyBlockEntry__AssAssignment_2_0 ) )
            {
            // InternalAcmeParser.g:15504:1: ( ( rule__AcmePropertyBlockEntry__AssAssignment_2_0 ) )
            // InternalAcmeParser.g:15505:2: ( rule__AcmePropertyBlockEntry__AssAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyBlockEntryAccess().getAssAssignment_2_0()); 
            }
            // InternalAcmeParser.g:15506:2: ( rule__AcmePropertyBlockEntry__AssAssignment_2_0 )
            // InternalAcmeParser.g:15506:3: rule__AcmePropertyBlockEntry__AssAssignment_2_0
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyBlockEntry__AssAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyBlockEntryAccess().getAssAssignment_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyBlockEntry__Group_2__0__Impl"


    // $ANTLR start "rule__AcmePropertyBlockEntry__Group_2__1"
    // InternalAcmeParser.g:15514:1: rule__AcmePropertyBlockEntry__Group_2__1 : rule__AcmePropertyBlockEntry__Group_2__1__Impl ;
    public final void rule__AcmePropertyBlockEntry__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15518:1: ( rule__AcmePropertyBlockEntry__Group_2__1__Impl )
            // InternalAcmeParser.g:15519:2: rule__AcmePropertyBlockEntry__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyBlockEntry__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyBlockEntry__Group_2__1"


    // $ANTLR start "rule__AcmePropertyBlockEntry__Group_2__1__Impl"
    // InternalAcmeParser.g:15525:1: rule__AcmePropertyBlockEntry__Group_2__1__Impl : ( ( rule__AcmePropertyBlockEntry__ValAssignment_2_1 ) ) ;
    public final void rule__AcmePropertyBlockEntry__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15529:1: ( ( ( rule__AcmePropertyBlockEntry__ValAssignment_2_1 ) ) )
            // InternalAcmeParser.g:15530:1: ( ( rule__AcmePropertyBlockEntry__ValAssignment_2_1 ) )
            {
            // InternalAcmeParser.g:15530:1: ( ( rule__AcmePropertyBlockEntry__ValAssignment_2_1 ) )
            // InternalAcmeParser.g:15531:2: ( rule__AcmePropertyBlockEntry__ValAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyBlockEntryAccess().getValAssignment_2_1()); 
            }
            // InternalAcmeParser.g:15532:2: ( rule__AcmePropertyBlockEntry__ValAssignment_2_1 )
            // InternalAcmeParser.g:15532:3: rule__AcmePropertyBlockEntry__ValAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyBlockEntry__ValAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyBlockEntryAccess().getValAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyBlockEntry__Group_2__1__Impl"


    // $ANTLR start "rule__AcmePropertyBlock__Group__0"
    // InternalAcmeParser.g:15541:1: rule__AcmePropertyBlock__Group__0 : rule__AcmePropertyBlock__Group__0__Impl rule__AcmePropertyBlock__Group__1 ;
    public final void rule__AcmePropertyBlock__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15545:1: ( rule__AcmePropertyBlock__Group__0__Impl rule__AcmePropertyBlock__Group__1 )
            // InternalAcmeParser.g:15546:2: rule__AcmePropertyBlock__Group__0__Impl rule__AcmePropertyBlock__Group__1
            {
            pushFollow(FOLLOW_70);
            rule__AcmePropertyBlock__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyBlock__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyBlock__Group__0"


    // $ANTLR start "rule__AcmePropertyBlock__Group__0__Impl"
    // InternalAcmeParser.g:15553:1: rule__AcmePropertyBlock__Group__0__Impl : ( () ) ;
    public final void rule__AcmePropertyBlock__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15557:1: ( ( () ) )
            // InternalAcmeParser.g:15558:1: ( () )
            {
            // InternalAcmeParser.g:15558:1: ( () )
            // InternalAcmeParser.g:15559:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyBlockAccess().getAcmePropertyBlockAction_0()); 
            }
            // InternalAcmeParser.g:15560:2: ()
            // InternalAcmeParser.g:15560:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyBlockAccess().getAcmePropertyBlockAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyBlock__Group__0__Impl"


    // $ANTLR start "rule__AcmePropertyBlock__Group__1"
    // InternalAcmeParser.g:15568:1: rule__AcmePropertyBlock__Group__1 : rule__AcmePropertyBlock__Group__1__Impl rule__AcmePropertyBlock__Group__2 ;
    public final void rule__AcmePropertyBlock__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15572:1: ( rule__AcmePropertyBlock__Group__1__Impl rule__AcmePropertyBlock__Group__2 )
            // InternalAcmeParser.g:15573:2: rule__AcmePropertyBlock__Group__1__Impl rule__AcmePropertyBlock__Group__2
            {
            pushFollow(FOLLOW_71);
            rule__AcmePropertyBlock__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyBlock__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyBlock__Group__1"


    // $ANTLR start "rule__AcmePropertyBlock__Group__1__Impl"
    // InternalAcmeParser.g:15580:1: rule__AcmePropertyBlock__Group__1__Impl : ( LessThanSignLessThanSign ) ;
    public final void rule__AcmePropertyBlock__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15584:1: ( ( LessThanSignLessThanSign ) )
            // InternalAcmeParser.g:15585:1: ( LessThanSignLessThanSign )
            {
            // InternalAcmeParser.g:15585:1: ( LessThanSignLessThanSign )
            // InternalAcmeParser.g:15586:2: LessThanSignLessThanSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyBlockAccess().getLessThanSignLessThanSignKeyword_1()); 
            }
            match(input,LessThanSignLessThanSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyBlockAccess().getLessThanSignLessThanSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyBlock__Group__1__Impl"


    // $ANTLR start "rule__AcmePropertyBlock__Group__2"
    // InternalAcmeParser.g:15595:1: rule__AcmePropertyBlock__Group__2 : rule__AcmePropertyBlock__Group__2__Impl rule__AcmePropertyBlock__Group__3 ;
    public final void rule__AcmePropertyBlock__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15599:1: ( rule__AcmePropertyBlock__Group__2__Impl rule__AcmePropertyBlock__Group__3 )
            // InternalAcmeParser.g:15600:2: rule__AcmePropertyBlock__Group__2__Impl rule__AcmePropertyBlock__Group__3
            {
            pushFollow(FOLLOW_71);
            rule__AcmePropertyBlock__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AcmePropertyBlock__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyBlock__Group__2"


    // $ANTLR start "rule__AcmePropertyBlock__Group__2__Impl"
    // InternalAcmeParser.g:15607:1: rule__AcmePropertyBlock__Group__2__Impl : ( ( rule__AcmePropertyBlock__PropertiesAssignment_2 )* ) ;
    public final void rule__AcmePropertyBlock__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15611:1: ( ( ( rule__AcmePropertyBlock__PropertiesAssignment_2 )* ) )
            // InternalAcmeParser.g:15612:1: ( ( rule__AcmePropertyBlock__PropertiesAssignment_2 )* )
            {
            // InternalAcmeParser.g:15612:1: ( ( rule__AcmePropertyBlock__PropertiesAssignment_2 )* )
            // InternalAcmeParser.g:15613:2: ( rule__AcmePropertyBlock__PropertiesAssignment_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyBlockAccess().getPropertiesAssignment_2()); 
            }
            // InternalAcmeParser.g:15614:2: ( rule__AcmePropertyBlock__PropertiesAssignment_2 )*
            loop180:
            do {
                int alt180=2;
                int LA180_0 = input.LA(1);

                if ( (LA180_0==RULE_ID) ) {
                    alt180=1;
                }


                switch (alt180) {
            	case 1 :
            	    // InternalAcmeParser.g:15614:3: rule__AcmePropertyBlock__PropertiesAssignment_2
            	    {
            	    pushFollow(FOLLOW_62);
            	    rule__AcmePropertyBlock__PropertiesAssignment_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop180;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyBlockAccess().getPropertiesAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyBlock__Group__2__Impl"


    // $ANTLR start "rule__AcmePropertyBlock__Group__3"
    // InternalAcmeParser.g:15622:1: rule__AcmePropertyBlock__Group__3 : rule__AcmePropertyBlock__Group__3__Impl ;
    public final void rule__AcmePropertyBlock__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15626:1: ( rule__AcmePropertyBlock__Group__3__Impl )
            // InternalAcmeParser.g:15627:2: rule__AcmePropertyBlock__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyBlock__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyBlock__Group__3"


    // $ANTLR start "rule__AcmePropertyBlock__Group__3__Impl"
    // InternalAcmeParser.g:15633:1: rule__AcmePropertyBlock__Group__3__Impl : ( GreaterThanSignGreaterThanSign ) ;
    public final void rule__AcmePropertyBlock__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15637:1: ( ( GreaterThanSignGreaterThanSign ) )
            // InternalAcmeParser.g:15638:1: ( GreaterThanSignGreaterThanSign )
            {
            // InternalAcmeParser.g:15638:1: ( GreaterThanSignGreaterThanSign )
            // InternalAcmeParser.g:15639:2: GreaterThanSignGreaterThanSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyBlockAccess().getGreaterThanSignGreaterThanSignKeyword_3()); 
            }
            match(input,GreaterThanSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyBlockAccess().getGreaterThanSignGreaterThanSignKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyBlock__Group__3__Impl"


    // $ANTLR start "rule__DesignRule__Group__0"
    // InternalAcmeParser.g:15649:1: rule__DesignRule__Group__0 : rule__DesignRule__Group__0__Impl rule__DesignRule__Group__1 ;
    public final void rule__DesignRule__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15653:1: ( rule__DesignRule__Group__0__Impl rule__DesignRule__Group__1 )
            // InternalAcmeParser.g:15654:2: rule__DesignRule__Group__0__Impl rule__DesignRule__Group__1
            {
            pushFollow(FOLLOW_72);
            rule__DesignRule__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DesignRule__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignRule__Group__0"


    // $ANTLR start "rule__DesignRule__Group__0__Impl"
    // InternalAcmeParser.g:15661:1: rule__DesignRule__Group__0__Impl : ( ( rule__DesignRule__Group_0__0 )? ) ;
    public final void rule__DesignRule__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15665:1: ( ( ( rule__DesignRule__Group_0__0 )? ) )
            // InternalAcmeParser.g:15666:1: ( ( rule__DesignRule__Group_0__0 )? )
            {
            // InternalAcmeParser.g:15666:1: ( ( rule__DesignRule__Group_0__0 )? )
            // InternalAcmeParser.g:15667:2: ( rule__DesignRule__Group_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignRuleAccess().getGroup_0()); 
            }
            // InternalAcmeParser.g:15668:2: ( rule__DesignRule__Group_0__0 )?
            int alt181=2;
            int LA181_0 = input.LA(1);

            if ( (LA181_0==Rule) ) {
                alt181=1;
            }
            switch (alt181) {
                case 1 :
                    // InternalAcmeParser.g:15668:3: rule__DesignRule__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DesignRule__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignRuleAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignRule__Group__0__Impl"


    // $ANTLR start "rule__DesignRule__Group__1"
    // InternalAcmeParser.g:15676:1: rule__DesignRule__Group__1 : rule__DesignRule__Group__1__Impl rule__DesignRule__Group__2 ;
    public final void rule__DesignRule__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15680:1: ( rule__DesignRule__Group__1__Impl rule__DesignRule__Group__2 )
            // InternalAcmeParser.g:15681:2: rule__DesignRule__Group__1__Impl rule__DesignRule__Group__2
            {
            pushFollow(FOLLOW_73);
            rule__DesignRule__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DesignRule__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignRule__Group__1"


    // $ANTLR start "rule__DesignRule__Group__1__Impl"
    // InternalAcmeParser.g:15688:1: rule__DesignRule__Group__1__Impl : ( ( rule__DesignRule__KindAssignment_1 ) ) ;
    public final void rule__DesignRule__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15692:1: ( ( ( rule__DesignRule__KindAssignment_1 ) ) )
            // InternalAcmeParser.g:15693:1: ( ( rule__DesignRule__KindAssignment_1 ) )
            {
            // InternalAcmeParser.g:15693:1: ( ( rule__DesignRule__KindAssignment_1 ) )
            // InternalAcmeParser.g:15694:2: ( rule__DesignRule__KindAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignRuleAccess().getKindAssignment_1()); 
            }
            // InternalAcmeParser.g:15695:2: ( rule__DesignRule__KindAssignment_1 )
            // InternalAcmeParser.g:15695:3: rule__DesignRule__KindAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__DesignRule__KindAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignRuleAccess().getKindAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignRule__Group__1__Impl"


    // $ANTLR start "rule__DesignRule__Group__2"
    // InternalAcmeParser.g:15703:1: rule__DesignRule__Group__2 : rule__DesignRule__Group__2__Impl rule__DesignRule__Group__3 ;
    public final void rule__DesignRule__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15707:1: ( rule__DesignRule__Group__2__Impl rule__DesignRule__Group__3 )
            // InternalAcmeParser.g:15708:2: rule__DesignRule__Group__2__Impl rule__DesignRule__Group__3
            {
            pushFollow(FOLLOW_74);
            rule__DesignRule__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DesignRule__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignRule__Group__2"


    // $ANTLR start "rule__DesignRule__Group__2__Impl"
    // InternalAcmeParser.g:15715:1: rule__DesignRule__Group__2__Impl : ( ( rule__DesignRule__ExprAssignment_2 ) ) ;
    public final void rule__DesignRule__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15719:1: ( ( ( rule__DesignRule__ExprAssignment_2 ) ) )
            // InternalAcmeParser.g:15720:1: ( ( rule__DesignRule__ExprAssignment_2 ) )
            {
            // InternalAcmeParser.g:15720:1: ( ( rule__DesignRule__ExprAssignment_2 ) )
            // InternalAcmeParser.g:15721:2: ( rule__DesignRule__ExprAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignRuleAccess().getExprAssignment_2()); 
            }
            // InternalAcmeParser.g:15722:2: ( rule__DesignRule__ExprAssignment_2 )
            // InternalAcmeParser.g:15722:3: rule__DesignRule__ExprAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__DesignRule__ExprAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignRuleAccess().getExprAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignRule__Group__2__Impl"


    // $ANTLR start "rule__DesignRule__Group__3"
    // InternalAcmeParser.g:15730:1: rule__DesignRule__Group__3 : rule__DesignRule__Group__3__Impl rule__DesignRule__Group__4 ;
    public final void rule__DesignRule__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15734:1: ( rule__DesignRule__Group__3__Impl rule__DesignRule__Group__4 )
            // InternalAcmeParser.g:15735:2: rule__DesignRule__Group__3__Impl rule__DesignRule__Group__4
            {
            pushFollow(FOLLOW_74);
            rule__DesignRule__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DesignRule__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignRule__Group__3"


    // $ANTLR start "rule__DesignRule__Group__3__Impl"
    // InternalAcmeParser.g:15742:1: rule__DesignRule__Group__3__Impl : ( ( rule__DesignRule__MetaAssignment_3 )? ) ;
    public final void rule__DesignRule__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15746:1: ( ( ( rule__DesignRule__MetaAssignment_3 )? ) )
            // InternalAcmeParser.g:15747:1: ( ( rule__DesignRule__MetaAssignment_3 )? )
            {
            // InternalAcmeParser.g:15747:1: ( ( rule__DesignRule__MetaAssignment_3 )? )
            // InternalAcmeParser.g:15748:2: ( rule__DesignRule__MetaAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignRuleAccess().getMetaAssignment_3()); 
            }
            // InternalAcmeParser.g:15749:2: ( rule__DesignRule__MetaAssignment_3 )?
            int alt182=2;
            int LA182_0 = input.LA(1);

            if ( (LA182_0==LessThanSignLessThanSign) ) {
                alt182=1;
            }
            switch (alt182) {
                case 1 :
                    // InternalAcmeParser.g:15749:3: rule__DesignRule__MetaAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__DesignRule__MetaAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignRuleAccess().getMetaAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignRule__Group__3__Impl"


    // $ANTLR start "rule__DesignRule__Group__4"
    // InternalAcmeParser.g:15757:1: rule__DesignRule__Group__4 : rule__DesignRule__Group__4__Impl ;
    public final void rule__DesignRule__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15761:1: ( rule__DesignRule__Group__4__Impl )
            // InternalAcmeParser.g:15762:2: rule__DesignRule__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DesignRule__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignRule__Group__4"


    // $ANTLR start "rule__DesignRule__Group__4__Impl"
    // InternalAcmeParser.g:15768:1: rule__DesignRule__Group__4__Impl : ( Semicolon ) ;
    public final void rule__DesignRule__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15772:1: ( ( Semicolon ) )
            // InternalAcmeParser.g:15773:1: ( Semicolon )
            {
            // InternalAcmeParser.g:15773:1: ( Semicolon )
            // InternalAcmeParser.g:15774:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignRuleAccess().getSemicolonKeyword_4()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignRuleAccess().getSemicolonKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignRule__Group__4__Impl"


    // $ANTLR start "rule__DesignRule__Group_0__0"
    // InternalAcmeParser.g:15784:1: rule__DesignRule__Group_0__0 : rule__DesignRule__Group_0__0__Impl rule__DesignRule__Group_0__1 ;
    public final void rule__DesignRule__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15788:1: ( rule__DesignRule__Group_0__0__Impl rule__DesignRule__Group_0__1 )
            // InternalAcmeParser.g:15789:2: rule__DesignRule__Group_0__0__Impl rule__DesignRule__Group_0__1
            {
            pushFollow(FOLLOW_11);
            rule__DesignRule__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DesignRule__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignRule__Group_0__0"


    // $ANTLR start "rule__DesignRule__Group_0__0__Impl"
    // InternalAcmeParser.g:15796:1: rule__DesignRule__Group_0__0__Impl : ( Rule ) ;
    public final void rule__DesignRule__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15800:1: ( ( Rule ) )
            // InternalAcmeParser.g:15801:1: ( Rule )
            {
            // InternalAcmeParser.g:15801:1: ( Rule )
            // InternalAcmeParser.g:15802:2: Rule
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignRuleAccess().getRuleKeyword_0_0()); 
            }
            match(input,Rule,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignRuleAccess().getRuleKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignRule__Group_0__0__Impl"


    // $ANTLR start "rule__DesignRule__Group_0__1"
    // InternalAcmeParser.g:15811:1: rule__DesignRule__Group_0__1 : rule__DesignRule__Group_0__1__Impl rule__DesignRule__Group_0__2 ;
    public final void rule__DesignRule__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15815:1: ( rule__DesignRule__Group_0__1__Impl rule__DesignRule__Group_0__2 )
            // InternalAcmeParser.g:15816:2: rule__DesignRule__Group_0__1__Impl rule__DesignRule__Group_0__2
            {
            pushFollow(FOLLOW_75);
            rule__DesignRule__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DesignRule__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignRule__Group_0__1"


    // $ANTLR start "rule__DesignRule__Group_0__1__Impl"
    // InternalAcmeParser.g:15823:1: rule__DesignRule__Group_0__1__Impl : ( ( rule__DesignRule__NameAssignment_0_1 ) ) ;
    public final void rule__DesignRule__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15827:1: ( ( ( rule__DesignRule__NameAssignment_0_1 ) ) )
            // InternalAcmeParser.g:15828:1: ( ( rule__DesignRule__NameAssignment_0_1 ) )
            {
            // InternalAcmeParser.g:15828:1: ( ( rule__DesignRule__NameAssignment_0_1 ) )
            // InternalAcmeParser.g:15829:2: ( rule__DesignRule__NameAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignRuleAccess().getNameAssignment_0_1()); 
            }
            // InternalAcmeParser.g:15830:2: ( rule__DesignRule__NameAssignment_0_1 )
            // InternalAcmeParser.g:15830:3: rule__DesignRule__NameAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__DesignRule__NameAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignRuleAccess().getNameAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignRule__Group_0__1__Impl"


    // $ANTLR start "rule__DesignRule__Group_0__2"
    // InternalAcmeParser.g:15838:1: rule__DesignRule__Group_0__2 : rule__DesignRule__Group_0__2__Impl ;
    public final void rule__DesignRule__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15842:1: ( rule__DesignRule__Group_0__2__Impl )
            // InternalAcmeParser.g:15843:2: rule__DesignRule__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DesignRule__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignRule__Group_0__2"


    // $ANTLR start "rule__DesignRule__Group_0__2__Impl"
    // InternalAcmeParser.g:15849:1: rule__DesignRule__Group_0__2__Impl : ( EqualsSign ) ;
    public final void rule__DesignRule__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15853:1: ( ( EqualsSign ) )
            // InternalAcmeParser.g:15854:1: ( EqualsSign )
            {
            // InternalAcmeParser.g:15854:1: ( EqualsSign )
            // InternalAcmeParser.g:15855:2: EqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignRuleAccess().getEqualsSignKeyword_0_2()); 
            }
            match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignRuleAccess().getEqualsSignKeyword_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignRule__Group_0__2__Impl"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_0__0"
    // InternalAcmeParser.g:15865:1: rule__DesignAnalysisDeclaration__Group_0__0 : rule__DesignAnalysisDeclaration__Group_0__0__Impl rule__DesignAnalysisDeclaration__Group_0__1 ;
    public final void rule__DesignAnalysisDeclaration__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15869:1: ( rule__DesignAnalysisDeclaration__Group_0__0__Impl rule__DesignAnalysisDeclaration__Group_0__1 )
            // InternalAcmeParser.g:15870:2: rule__DesignAnalysisDeclaration__Group_0__0__Impl rule__DesignAnalysisDeclaration__Group_0__1
            {
            pushFollow(FOLLOW_76);
            rule__DesignAnalysisDeclaration__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_0__0"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_0__0__Impl"
    // InternalAcmeParser.g:15877:1: rule__DesignAnalysisDeclaration__Group_0__0__Impl : ( ( Design )? ) ;
    public final void rule__DesignAnalysisDeclaration__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15881:1: ( ( ( Design )? ) )
            // InternalAcmeParser.g:15882:1: ( ( Design )? )
            {
            // InternalAcmeParser.g:15882:1: ( ( Design )? )
            // InternalAcmeParser.g:15883:2: ( Design )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getDesignKeyword_0_0()); 
            }
            // InternalAcmeParser.g:15884:2: ( Design )?
            int alt183=2;
            int LA183_0 = input.LA(1);

            if ( (LA183_0==Design) ) {
                alt183=1;
            }
            switch (alt183) {
                case 1 :
                    // InternalAcmeParser.g:15884:3: Design
                    {
                    match(input,Design,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getDesignKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_0__0__Impl"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_0__1"
    // InternalAcmeParser.g:15892:1: rule__DesignAnalysisDeclaration__Group_0__1 : rule__DesignAnalysisDeclaration__Group_0__1__Impl rule__DesignAnalysisDeclaration__Group_0__2 ;
    public final void rule__DesignAnalysisDeclaration__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15896:1: ( rule__DesignAnalysisDeclaration__Group_0__1__Impl rule__DesignAnalysisDeclaration__Group_0__2 )
            // InternalAcmeParser.g:15897:2: rule__DesignAnalysisDeclaration__Group_0__1__Impl rule__DesignAnalysisDeclaration__Group_0__2
            {
            pushFollow(FOLLOW_11);
            rule__DesignAnalysisDeclaration__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_0__1"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_0__1__Impl"
    // InternalAcmeParser.g:15904:1: rule__DesignAnalysisDeclaration__Group_0__1__Impl : ( Analysis ) ;
    public final void rule__DesignAnalysisDeclaration__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15908:1: ( ( Analysis ) )
            // InternalAcmeParser.g:15909:1: ( Analysis )
            {
            // InternalAcmeParser.g:15909:1: ( Analysis )
            // InternalAcmeParser.g:15910:2: Analysis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getAnalysisKeyword_0_1()); 
            }
            match(input,Analysis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getAnalysisKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_0__1__Impl"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_0__2"
    // InternalAcmeParser.g:15919:1: rule__DesignAnalysisDeclaration__Group_0__2 : rule__DesignAnalysisDeclaration__Group_0__2__Impl rule__DesignAnalysisDeclaration__Group_0__3 ;
    public final void rule__DesignAnalysisDeclaration__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15923:1: ( rule__DesignAnalysisDeclaration__Group_0__2__Impl rule__DesignAnalysisDeclaration__Group_0__3 )
            // InternalAcmeParser.g:15924:2: rule__DesignAnalysisDeclaration__Group_0__2__Impl rule__DesignAnalysisDeclaration__Group_0__3
            {
            pushFollow(FOLLOW_77);
            rule__DesignAnalysisDeclaration__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__Group_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_0__2"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_0__2__Impl"
    // InternalAcmeParser.g:15931:1: rule__DesignAnalysisDeclaration__Group_0__2__Impl : ( ( rule__DesignAnalysisDeclaration__NameAssignment_0_2 ) ) ;
    public final void rule__DesignAnalysisDeclaration__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15935:1: ( ( ( rule__DesignAnalysisDeclaration__NameAssignment_0_2 ) ) )
            // InternalAcmeParser.g:15936:1: ( ( rule__DesignAnalysisDeclaration__NameAssignment_0_2 ) )
            {
            // InternalAcmeParser.g:15936:1: ( ( rule__DesignAnalysisDeclaration__NameAssignment_0_2 ) )
            // InternalAcmeParser.g:15937:2: ( rule__DesignAnalysisDeclaration__NameAssignment_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getNameAssignment_0_2()); 
            }
            // InternalAcmeParser.g:15938:2: ( rule__DesignAnalysisDeclaration__NameAssignment_0_2 )
            // InternalAcmeParser.g:15938:3: rule__DesignAnalysisDeclaration__NameAssignment_0_2
            {
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__NameAssignment_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getNameAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_0__2__Impl"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_0__3"
    // InternalAcmeParser.g:15946:1: rule__DesignAnalysisDeclaration__Group_0__3 : rule__DesignAnalysisDeclaration__Group_0__3__Impl rule__DesignAnalysisDeclaration__Group_0__4 ;
    public final void rule__DesignAnalysisDeclaration__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15950:1: ( rule__DesignAnalysisDeclaration__Group_0__3__Impl rule__DesignAnalysisDeclaration__Group_0__4 )
            // InternalAcmeParser.g:15951:2: rule__DesignAnalysisDeclaration__Group_0__3__Impl rule__DesignAnalysisDeclaration__Group_0__4
            {
            pushFollow(FOLLOW_78);
            rule__DesignAnalysisDeclaration__Group_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__Group_0__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_0__3"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_0__3__Impl"
    // InternalAcmeParser.g:15958:1: rule__DesignAnalysisDeclaration__Group_0__3__Impl : ( LeftParenthesis ) ;
    public final void rule__DesignAnalysisDeclaration__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15962:1: ( ( LeftParenthesis ) )
            // InternalAcmeParser.g:15963:1: ( LeftParenthesis )
            {
            // InternalAcmeParser.g:15963:1: ( LeftParenthesis )
            // InternalAcmeParser.g:15964:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getLeftParenthesisKeyword_0_3()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getLeftParenthesisKeyword_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_0__3__Impl"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_0__4"
    // InternalAcmeParser.g:15973:1: rule__DesignAnalysisDeclaration__Group_0__4 : rule__DesignAnalysisDeclaration__Group_0__4__Impl rule__DesignAnalysisDeclaration__Group_0__5 ;
    public final void rule__DesignAnalysisDeclaration__Group_0__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15977:1: ( rule__DesignAnalysisDeclaration__Group_0__4__Impl rule__DesignAnalysisDeclaration__Group_0__5 )
            // InternalAcmeParser.g:15978:2: rule__DesignAnalysisDeclaration__Group_0__4__Impl rule__DesignAnalysisDeclaration__Group_0__5
            {
            pushFollow(FOLLOW_78);
            rule__DesignAnalysisDeclaration__Group_0__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__Group_0__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_0__4"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_0__4__Impl"
    // InternalAcmeParser.g:15985:1: rule__DesignAnalysisDeclaration__Group_0__4__Impl : ( ( rule__DesignAnalysisDeclaration__Group_0_4__0 )? ) ;
    public final void rule__DesignAnalysisDeclaration__Group_0__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:15989:1: ( ( ( rule__DesignAnalysisDeclaration__Group_0_4__0 )? ) )
            // InternalAcmeParser.g:15990:1: ( ( rule__DesignAnalysisDeclaration__Group_0_4__0 )? )
            {
            // InternalAcmeParser.g:15990:1: ( ( rule__DesignAnalysisDeclaration__Group_0_4__0 )? )
            // InternalAcmeParser.g:15991:2: ( rule__DesignAnalysisDeclaration__Group_0_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getGroup_0_4()); 
            }
            // InternalAcmeParser.g:15992:2: ( rule__DesignAnalysisDeclaration__Group_0_4__0 )?
            int alt184=2;
            int LA184_0 = input.LA(1);

            if ( (LA184_0==RULE_ID) ) {
                alt184=1;
            }
            switch (alt184) {
                case 1 :
                    // InternalAcmeParser.g:15992:3: rule__DesignAnalysisDeclaration__Group_0_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DesignAnalysisDeclaration__Group_0_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getGroup_0_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_0__4__Impl"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_0__5"
    // InternalAcmeParser.g:16000:1: rule__DesignAnalysisDeclaration__Group_0__5 : rule__DesignAnalysisDeclaration__Group_0__5__Impl rule__DesignAnalysisDeclaration__Group_0__6 ;
    public final void rule__DesignAnalysisDeclaration__Group_0__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16004:1: ( rule__DesignAnalysisDeclaration__Group_0__5__Impl rule__DesignAnalysisDeclaration__Group_0__6 )
            // InternalAcmeParser.g:16005:2: rule__DesignAnalysisDeclaration__Group_0__5__Impl rule__DesignAnalysisDeclaration__Group_0__6
            {
            pushFollow(FOLLOW_67);
            rule__DesignAnalysisDeclaration__Group_0__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__Group_0__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_0__5"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_0__5__Impl"
    // InternalAcmeParser.g:16012:1: rule__DesignAnalysisDeclaration__Group_0__5__Impl : ( RightParenthesis ) ;
    public final void rule__DesignAnalysisDeclaration__Group_0__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16016:1: ( ( RightParenthesis ) )
            // InternalAcmeParser.g:16017:1: ( RightParenthesis )
            {
            // InternalAcmeParser.g:16017:1: ( RightParenthesis )
            // InternalAcmeParser.g:16018:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getRightParenthesisKeyword_0_5()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getRightParenthesisKeyword_0_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_0__5__Impl"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_0__6"
    // InternalAcmeParser.g:16027:1: rule__DesignAnalysisDeclaration__Group_0__6 : rule__DesignAnalysisDeclaration__Group_0__6__Impl rule__DesignAnalysisDeclaration__Group_0__7 ;
    public final void rule__DesignAnalysisDeclaration__Group_0__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16031:1: ( rule__DesignAnalysisDeclaration__Group_0__6__Impl rule__DesignAnalysisDeclaration__Group_0__7 )
            // InternalAcmeParser.g:16032:2: rule__DesignAnalysisDeclaration__Group_0__6__Impl rule__DesignAnalysisDeclaration__Group_0__7
            {
            pushFollow(FOLLOW_50);
            rule__DesignAnalysisDeclaration__Group_0__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__Group_0__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_0__6"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_0__6__Impl"
    // InternalAcmeParser.g:16039:1: rule__DesignAnalysisDeclaration__Group_0__6__Impl : ( Colon ) ;
    public final void rule__DesignAnalysisDeclaration__Group_0__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16043:1: ( ( Colon ) )
            // InternalAcmeParser.g:16044:1: ( Colon )
            {
            // InternalAcmeParser.g:16044:1: ( Colon )
            // InternalAcmeParser.g:16045:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getColonKeyword_0_6()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getColonKeyword_0_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_0__6__Impl"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_0__7"
    // InternalAcmeParser.g:16054:1: rule__DesignAnalysisDeclaration__Group_0__7 : rule__DesignAnalysisDeclaration__Group_0__7__Impl rule__DesignAnalysisDeclaration__Group_0__8 ;
    public final void rule__DesignAnalysisDeclaration__Group_0__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16058:1: ( rule__DesignAnalysisDeclaration__Group_0__7__Impl rule__DesignAnalysisDeclaration__Group_0__8 )
            // InternalAcmeParser.g:16059:2: rule__DesignAnalysisDeclaration__Group_0__7__Impl rule__DesignAnalysisDeclaration__Group_0__8
            {
            pushFollow(FOLLOW_75);
            rule__DesignAnalysisDeclaration__Group_0__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__Group_0__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_0__7"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_0__7__Impl"
    // InternalAcmeParser.g:16066:1: rule__DesignAnalysisDeclaration__Group_0__7__Impl : ( ( rule__DesignAnalysisDeclaration__TypeAssignment_0_7 ) ) ;
    public final void rule__DesignAnalysisDeclaration__Group_0__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16070:1: ( ( ( rule__DesignAnalysisDeclaration__TypeAssignment_0_7 ) ) )
            // InternalAcmeParser.g:16071:1: ( ( rule__DesignAnalysisDeclaration__TypeAssignment_0_7 ) )
            {
            // InternalAcmeParser.g:16071:1: ( ( rule__DesignAnalysisDeclaration__TypeAssignment_0_7 ) )
            // InternalAcmeParser.g:16072:2: ( rule__DesignAnalysisDeclaration__TypeAssignment_0_7 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getTypeAssignment_0_7()); 
            }
            // InternalAcmeParser.g:16073:2: ( rule__DesignAnalysisDeclaration__TypeAssignment_0_7 )
            // InternalAcmeParser.g:16073:3: rule__DesignAnalysisDeclaration__TypeAssignment_0_7
            {
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__TypeAssignment_0_7();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getTypeAssignment_0_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_0__7__Impl"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_0__8"
    // InternalAcmeParser.g:16081:1: rule__DesignAnalysisDeclaration__Group_0__8 : rule__DesignAnalysisDeclaration__Group_0__8__Impl rule__DesignAnalysisDeclaration__Group_0__9 ;
    public final void rule__DesignAnalysisDeclaration__Group_0__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16085:1: ( rule__DesignAnalysisDeclaration__Group_0__8__Impl rule__DesignAnalysisDeclaration__Group_0__9 )
            // InternalAcmeParser.g:16086:2: rule__DesignAnalysisDeclaration__Group_0__8__Impl rule__DesignAnalysisDeclaration__Group_0__9
            {
            pushFollow(FOLLOW_73);
            rule__DesignAnalysisDeclaration__Group_0__8__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__Group_0__9();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_0__8"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_0__8__Impl"
    // InternalAcmeParser.g:16093:1: rule__DesignAnalysisDeclaration__Group_0__8__Impl : ( EqualsSign ) ;
    public final void rule__DesignAnalysisDeclaration__Group_0__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16097:1: ( ( EqualsSign ) )
            // InternalAcmeParser.g:16098:1: ( EqualsSign )
            {
            // InternalAcmeParser.g:16098:1: ( EqualsSign )
            // InternalAcmeParser.g:16099:2: EqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getEqualsSignKeyword_0_8()); 
            }
            match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getEqualsSignKeyword_0_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_0__8__Impl"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_0__9"
    // InternalAcmeParser.g:16108:1: rule__DesignAnalysisDeclaration__Group_0__9 : rule__DesignAnalysisDeclaration__Group_0__9__Impl rule__DesignAnalysisDeclaration__Group_0__10 ;
    public final void rule__DesignAnalysisDeclaration__Group_0__9() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16112:1: ( rule__DesignAnalysisDeclaration__Group_0__9__Impl rule__DesignAnalysisDeclaration__Group_0__10 )
            // InternalAcmeParser.g:16113:2: rule__DesignAnalysisDeclaration__Group_0__9__Impl rule__DesignAnalysisDeclaration__Group_0__10
            {
            pushFollow(FOLLOW_74);
            rule__DesignAnalysisDeclaration__Group_0__9__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__Group_0__10();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_0__9"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_0__9__Impl"
    // InternalAcmeParser.g:16120:1: rule__DesignAnalysisDeclaration__Group_0__9__Impl : ( ( rule__DesignAnalysisDeclaration__ExprAssignment_0_9 ) ) ;
    public final void rule__DesignAnalysisDeclaration__Group_0__9__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16124:1: ( ( ( rule__DesignAnalysisDeclaration__ExprAssignment_0_9 ) ) )
            // InternalAcmeParser.g:16125:1: ( ( rule__DesignAnalysisDeclaration__ExprAssignment_0_9 ) )
            {
            // InternalAcmeParser.g:16125:1: ( ( rule__DesignAnalysisDeclaration__ExprAssignment_0_9 ) )
            // InternalAcmeParser.g:16126:2: ( rule__DesignAnalysisDeclaration__ExprAssignment_0_9 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getExprAssignment_0_9()); 
            }
            // InternalAcmeParser.g:16127:2: ( rule__DesignAnalysisDeclaration__ExprAssignment_0_9 )
            // InternalAcmeParser.g:16127:3: rule__DesignAnalysisDeclaration__ExprAssignment_0_9
            {
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__ExprAssignment_0_9();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getExprAssignment_0_9()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_0__9__Impl"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_0__10"
    // InternalAcmeParser.g:16135:1: rule__DesignAnalysisDeclaration__Group_0__10 : rule__DesignAnalysisDeclaration__Group_0__10__Impl rule__DesignAnalysisDeclaration__Group_0__11 ;
    public final void rule__DesignAnalysisDeclaration__Group_0__10() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16139:1: ( rule__DesignAnalysisDeclaration__Group_0__10__Impl rule__DesignAnalysisDeclaration__Group_0__11 )
            // InternalAcmeParser.g:16140:2: rule__DesignAnalysisDeclaration__Group_0__10__Impl rule__DesignAnalysisDeclaration__Group_0__11
            {
            pushFollow(FOLLOW_74);
            rule__DesignAnalysisDeclaration__Group_0__10__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__Group_0__11();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_0__10"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_0__10__Impl"
    // InternalAcmeParser.g:16147:1: rule__DesignAnalysisDeclaration__Group_0__10__Impl : ( ( rule__DesignAnalysisDeclaration__PropertiesAssignment_0_10 )? ) ;
    public final void rule__DesignAnalysisDeclaration__Group_0__10__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16151:1: ( ( ( rule__DesignAnalysisDeclaration__PropertiesAssignment_0_10 )? ) )
            // InternalAcmeParser.g:16152:1: ( ( rule__DesignAnalysisDeclaration__PropertiesAssignment_0_10 )? )
            {
            // InternalAcmeParser.g:16152:1: ( ( rule__DesignAnalysisDeclaration__PropertiesAssignment_0_10 )? )
            // InternalAcmeParser.g:16153:2: ( rule__DesignAnalysisDeclaration__PropertiesAssignment_0_10 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getPropertiesAssignment_0_10()); 
            }
            // InternalAcmeParser.g:16154:2: ( rule__DesignAnalysisDeclaration__PropertiesAssignment_0_10 )?
            int alt185=2;
            int LA185_0 = input.LA(1);

            if ( (LA185_0==LessThanSignLessThanSign) ) {
                alt185=1;
            }
            switch (alt185) {
                case 1 :
                    // InternalAcmeParser.g:16154:3: rule__DesignAnalysisDeclaration__PropertiesAssignment_0_10
                    {
                    pushFollow(FOLLOW_2);
                    rule__DesignAnalysisDeclaration__PropertiesAssignment_0_10();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getPropertiesAssignment_0_10()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_0__10__Impl"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_0__11"
    // InternalAcmeParser.g:16162:1: rule__DesignAnalysisDeclaration__Group_0__11 : rule__DesignAnalysisDeclaration__Group_0__11__Impl ;
    public final void rule__DesignAnalysisDeclaration__Group_0__11() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16166:1: ( rule__DesignAnalysisDeclaration__Group_0__11__Impl )
            // InternalAcmeParser.g:16167:2: rule__DesignAnalysisDeclaration__Group_0__11__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__Group_0__11__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_0__11"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_0__11__Impl"
    // InternalAcmeParser.g:16173:1: rule__DesignAnalysisDeclaration__Group_0__11__Impl : ( Semicolon ) ;
    public final void rule__DesignAnalysisDeclaration__Group_0__11__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16177:1: ( ( Semicolon ) )
            // InternalAcmeParser.g:16178:1: ( Semicolon )
            {
            // InternalAcmeParser.g:16178:1: ( Semicolon )
            // InternalAcmeParser.g:16179:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getSemicolonKeyword_0_11()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getSemicolonKeyword_0_11()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_0__11__Impl"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_0_4__0"
    // InternalAcmeParser.g:16189:1: rule__DesignAnalysisDeclaration__Group_0_4__0 : rule__DesignAnalysisDeclaration__Group_0_4__0__Impl rule__DesignAnalysisDeclaration__Group_0_4__1 ;
    public final void rule__DesignAnalysisDeclaration__Group_0_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16193:1: ( rule__DesignAnalysisDeclaration__Group_0_4__0__Impl rule__DesignAnalysisDeclaration__Group_0_4__1 )
            // InternalAcmeParser.g:16194:2: rule__DesignAnalysisDeclaration__Group_0_4__0__Impl rule__DesignAnalysisDeclaration__Group_0_4__1
            {
            pushFollow(FOLLOW_19);
            rule__DesignAnalysisDeclaration__Group_0_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__Group_0_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_0_4__0"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_0_4__0__Impl"
    // InternalAcmeParser.g:16201:1: rule__DesignAnalysisDeclaration__Group_0_4__0__Impl : ( ( rule__DesignAnalysisDeclaration__ParamsAssignment_0_4_0 ) ) ;
    public final void rule__DesignAnalysisDeclaration__Group_0_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16205:1: ( ( ( rule__DesignAnalysisDeclaration__ParamsAssignment_0_4_0 ) ) )
            // InternalAcmeParser.g:16206:1: ( ( rule__DesignAnalysisDeclaration__ParamsAssignment_0_4_0 ) )
            {
            // InternalAcmeParser.g:16206:1: ( ( rule__DesignAnalysisDeclaration__ParamsAssignment_0_4_0 ) )
            // InternalAcmeParser.g:16207:2: ( rule__DesignAnalysisDeclaration__ParamsAssignment_0_4_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getParamsAssignment_0_4_0()); 
            }
            // InternalAcmeParser.g:16208:2: ( rule__DesignAnalysisDeclaration__ParamsAssignment_0_4_0 )
            // InternalAcmeParser.g:16208:3: rule__DesignAnalysisDeclaration__ParamsAssignment_0_4_0
            {
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__ParamsAssignment_0_4_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getParamsAssignment_0_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_0_4__0__Impl"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_0_4__1"
    // InternalAcmeParser.g:16216:1: rule__DesignAnalysisDeclaration__Group_0_4__1 : rule__DesignAnalysisDeclaration__Group_0_4__1__Impl ;
    public final void rule__DesignAnalysisDeclaration__Group_0_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16220:1: ( rule__DesignAnalysisDeclaration__Group_0_4__1__Impl )
            // InternalAcmeParser.g:16221:2: rule__DesignAnalysisDeclaration__Group_0_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__Group_0_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_0_4__1"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_0_4__1__Impl"
    // InternalAcmeParser.g:16227:1: rule__DesignAnalysisDeclaration__Group_0_4__1__Impl : ( ( rule__DesignAnalysisDeclaration__Group_0_4_1__0 )* ) ;
    public final void rule__DesignAnalysisDeclaration__Group_0_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16231:1: ( ( ( rule__DesignAnalysisDeclaration__Group_0_4_1__0 )* ) )
            // InternalAcmeParser.g:16232:1: ( ( rule__DesignAnalysisDeclaration__Group_0_4_1__0 )* )
            {
            // InternalAcmeParser.g:16232:1: ( ( rule__DesignAnalysisDeclaration__Group_0_4_1__0 )* )
            // InternalAcmeParser.g:16233:2: ( rule__DesignAnalysisDeclaration__Group_0_4_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getGroup_0_4_1()); 
            }
            // InternalAcmeParser.g:16234:2: ( rule__DesignAnalysisDeclaration__Group_0_4_1__0 )*
            loop186:
            do {
                int alt186=2;
                int LA186_0 = input.LA(1);

                if ( (LA186_0==Comma) ) {
                    alt186=1;
                }


                switch (alt186) {
            	case 1 :
            	    // InternalAcmeParser.g:16234:3: rule__DesignAnalysisDeclaration__Group_0_4_1__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__DesignAnalysisDeclaration__Group_0_4_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop186;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getGroup_0_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_0_4__1__Impl"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_0_4_1__0"
    // InternalAcmeParser.g:16243:1: rule__DesignAnalysisDeclaration__Group_0_4_1__0 : rule__DesignAnalysisDeclaration__Group_0_4_1__0__Impl rule__DesignAnalysisDeclaration__Group_0_4_1__1 ;
    public final void rule__DesignAnalysisDeclaration__Group_0_4_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16247:1: ( rule__DesignAnalysisDeclaration__Group_0_4_1__0__Impl rule__DesignAnalysisDeclaration__Group_0_4_1__1 )
            // InternalAcmeParser.g:16248:2: rule__DesignAnalysisDeclaration__Group_0_4_1__0__Impl rule__DesignAnalysisDeclaration__Group_0_4_1__1
            {
            pushFollow(FOLLOW_11);
            rule__DesignAnalysisDeclaration__Group_0_4_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__Group_0_4_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_0_4_1__0"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_0_4_1__0__Impl"
    // InternalAcmeParser.g:16255:1: rule__DesignAnalysisDeclaration__Group_0_4_1__0__Impl : ( Comma ) ;
    public final void rule__DesignAnalysisDeclaration__Group_0_4_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16259:1: ( ( Comma ) )
            // InternalAcmeParser.g:16260:1: ( Comma )
            {
            // InternalAcmeParser.g:16260:1: ( Comma )
            // InternalAcmeParser.g:16261:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getCommaKeyword_0_4_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getCommaKeyword_0_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_0_4_1__0__Impl"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_0_4_1__1"
    // InternalAcmeParser.g:16270:1: rule__DesignAnalysisDeclaration__Group_0_4_1__1 : rule__DesignAnalysisDeclaration__Group_0_4_1__1__Impl ;
    public final void rule__DesignAnalysisDeclaration__Group_0_4_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16274:1: ( rule__DesignAnalysisDeclaration__Group_0_4_1__1__Impl )
            // InternalAcmeParser.g:16275:2: rule__DesignAnalysisDeclaration__Group_0_4_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__Group_0_4_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_0_4_1__1"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_0_4_1__1__Impl"
    // InternalAcmeParser.g:16281:1: rule__DesignAnalysisDeclaration__Group_0_4_1__1__Impl : ( ( rule__DesignAnalysisDeclaration__ParamsAssignment_0_4_1_1 ) ) ;
    public final void rule__DesignAnalysisDeclaration__Group_0_4_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16285:1: ( ( ( rule__DesignAnalysisDeclaration__ParamsAssignment_0_4_1_1 ) ) )
            // InternalAcmeParser.g:16286:1: ( ( rule__DesignAnalysisDeclaration__ParamsAssignment_0_4_1_1 ) )
            {
            // InternalAcmeParser.g:16286:1: ( ( rule__DesignAnalysisDeclaration__ParamsAssignment_0_4_1_1 ) )
            // InternalAcmeParser.g:16287:2: ( rule__DesignAnalysisDeclaration__ParamsAssignment_0_4_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getParamsAssignment_0_4_1_1()); 
            }
            // InternalAcmeParser.g:16288:2: ( rule__DesignAnalysisDeclaration__ParamsAssignment_0_4_1_1 )
            // InternalAcmeParser.g:16288:3: rule__DesignAnalysisDeclaration__ParamsAssignment_0_4_1_1
            {
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__ParamsAssignment_0_4_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getParamsAssignment_0_4_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_0_4_1__1__Impl"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_1__0"
    // InternalAcmeParser.g:16297:1: rule__DesignAnalysisDeclaration__Group_1__0 : rule__DesignAnalysisDeclaration__Group_1__0__Impl rule__DesignAnalysisDeclaration__Group_1__1 ;
    public final void rule__DesignAnalysisDeclaration__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16301:1: ( rule__DesignAnalysisDeclaration__Group_1__0__Impl rule__DesignAnalysisDeclaration__Group_1__1 )
            // InternalAcmeParser.g:16302:2: rule__DesignAnalysisDeclaration__Group_1__0__Impl rule__DesignAnalysisDeclaration__Group_1__1
            {
            pushFollow(FOLLOW_76);
            rule__DesignAnalysisDeclaration__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_1__0"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_1__0__Impl"
    // InternalAcmeParser.g:16309:1: rule__DesignAnalysisDeclaration__Group_1__0__Impl : ( External ) ;
    public final void rule__DesignAnalysisDeclaration__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16313:1: ( ( External ) )
            // InternalAcmeParser.g:16314:1: ( External )
            {
            // InternalAcmeParser.g:16314:1: ( External )
            // InternalAcmeParser.g:16315:2: External
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getExternalKeyword_1_0()); 
            }
            match(input,External,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getExternalKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_1__0__Impl"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_1__1"
    // InternalAcmeParser.g:16324:1: rule__DesignAnalysisDeclaration__Group_1__1 : rule__DesignAnalysisDeclaration__Group_1__1__Impl rule__DesignAnalysisDeclaration__Group_1__2 ;
    public final void rule__DesignAnalysisDeclaration__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16328:1: ( rule__DesignAnalysisDeclaration__Group_1__1__Impl rule__DesignAnalysisDeclaration__Group_1__2 )
            // InternalAcmeParser.g:16329:2: rule__DesignAnalysisDeclaration__Group_1__1__Impl rule__DesignAnalysisDeclaration__Group_1__2
            {
            pushFollow(FOLLOW_76);
            rule__DesignAnalysisDeclaration__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_1__1"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_1__1__Impl"
    // InternalAcmeParser.g:16336:1: rule__DesignAnalysisDeclaration__Group_1__1__Impl : ( ( Design )? ) ;
    public final void rule__DesignAnalysisDeclaration__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16340:1: ( ( ( Design )? ) )
            // InternalAcmeParser.g:16341:1: ( ( Design )? )
            {
            // InternalAcmeParser.g:16341:1: ( ( Design )? )
            // InternalAcmeParser.g:16342:2: ( Design )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getDesignKeyword_1_1()); 
            }
            // InternalAcmeParser.g:16343:2: ( Design )?
            int alt187=2;
            int LA187_0 = input.LA(1);

            if ( (LA187_0==Design) ) {
                alt187=1;
            }
            switch (alt187) {
                case 1 :
                    // InternalAcmeParser.g:16343:3: Design
                    {
                    match(input,Design,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getDesignKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_1__1__Impl"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_1__2"
    // InternalAcmeParser.g:16351:1: rule__DesignAnalysisDeclaration__Group_1__2 : rule__DesignAnalysisDeclaration__Group_1__2__Impl rule__DesignAnalysisDeclaration__Group_1__3 ;
    public final void rule__DesignAnalysisDeclaration__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16355:1: ( rule__DesignAnalysisDeclaration__Group_1__2__Impl rule__DesignAnalysisDeclaration__Group_1__3 )
            // InternalAcmeParser.g:16356:2: rule__DesignAnalysisDeclaration__Group_1__2__Impl rule__DesignAnalysisDeclaration__Group_1__3
            {
            pushFollow(FOLLOW_11);
            rule__DesignAnalysisDeclaration__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_1__2"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_1__2__Impl"
    // InternalAcmeParser.g:16363:1: rule__DesignAnalysisDeclaration__Group_1__2__Impl : ( Analysis ) ;
    public final void rule__DesignAnalysisDeclaration__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16367:1: ( ( Analysis ) )
            // InternalAcmeParser.g:16368:1: ( Analysis )
            {
            // InternalAcmeParser.g:16368:1: ( Analysis )
            // InternalAcmeParser.g:16369:2: Analysis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getAnalysisKeyword_1_2()); 
            }
            match(input,Analysis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getAnalysisKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_1__2__Impl"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_1__3"
    // InternalAcmeParser.g:16378:1: rule__DesignAnalysisDeclaration__Group_1__3 : rule__DesignAnalysisDeclaration__Group_1__3__Impl rule__DesignAnalysisDeclaration__Group_1__4 ;
    public final void rule__DesignAnalysisDeclaration__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16382:1: ( rule__DesignAnalysisDeclaration__Group_1__3__Impl rule__DesignAnalysisDeclaration__Group_1__4 )
            // InternalAcmeParser.g:16383:2: rule__DesignAnalysisDeclaration__Group_1__3__Impl rule__DesignAnalysisDeclaration__Group_1__4
            {
            pushFollow(FOLLOW_77);
            rule__DesignAnalysisDeclaration__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__Group_1__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_1__3"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_1__3__Impl"
    // InternalAcmeParser.g:16390:1: rule__DesignAnalysisDeclaration__Group_1__3__Impl : ( ( rule__DesignAnalysisDeclaration__NameAssignment_1_3 ) ) ;
    public final void rule__DesignAnalysisDeclaration__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16394:1: ( ( ( rule__DesignAnalysisDeclaration__NameAssignment_1_3 ) ) )
            // InternalAcmeParser.g:16395:1: ( ( rule__DesignAnalysisDeclaration__NameAssignment_1_3 ) )
            {
            // InternalAcmeParser.g:16395:1: ( ( rule__DesignAnalysisDeclaration__NameAssignment_1_3 ) )
            // InternalAcmeParser.g:16396:2: ( rule__DesignAnalysisDeclaration__NameAssignment_1_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getNameAssignment_1_3()); 
            }
            // InternalAcmeParser.g:16397:2: ( rule__DesignAnalysisDeclaration__NameAssignment_1_3 )
            // InternalAcmeParser.g:16397:3: rule__DesignAnalysisDeclaration__NameAssignment_1_3
            {
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__NameAssignment_1_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getNameAssignment_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_1__3__Impl"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_1__4"
    // InternalAcmeParser.g:16405:1: rule__DesignAnalysisDeclaration__Group_1__4 : rule__DesignAnalysisDeclaration__Group_1__4__Impl rule__DesignAnalysisDeclaration__Group_1__5 ;
    public final void rule__DesignAnalysisDeclaration__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16409:1: ( rule__DesignAnalysisDeclaration__Group_1__4__Impl rule__DesignAnalysisDeclaration__Group_1__5 )
            // InternalAcmeParser.g:16410:2: rule__DesignAnalysisDeclaration__Group_1__4__Impl rule__DesignAnalysisDeclaration__Group_1__5
            {
            pushFollow(FOLLOW_78);
            rule__DesignAnalysisDeclaration__Group_1__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__Group_1__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_1__4"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_1__4__Impl"
    // InternalAcmeParser.g:16417:1: rule__DesignAnalysisDeclaration__Group_1__4__Impl : ( LeftParenthesis ) ;
    public final void rule__DesignAnalysisDeclaration__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16421:1: ( ( LeftParenthesis ) )
            // InternalAcmeParser.g:16422:1: ( LeftParenthesis )
            {
            // InternalAcmeParser.g:16422:1: ( LeftParenthesis )
            // InternalAcmeParser.g:16423:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getLeftParenthesisKeyword_1_4()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getLeftParenthesisKeyword_1_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_1__4__Impl"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_1__5"
    // InternalAcmeParser.g:16432:1: rule__DesignAnalysisDeclaration__Group_1__5 : rule__DesignAnalysisDeclaration__Group_1__5__Impl rule__DesignAnalysisDeclaration__Group_1__6 ;
    public final void rule__DesignAnalysisDeclaration__Group_1__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16436:1: ( rule__DesignAnalysisDeclaration__Group_1__5__Impl rule__DesignAnalysisDeclaration__Group_1__6 )
            // InternalAcmeParser.g:16437:2: rule__DesignAnalysisDeclaration__Group_1__5__Impl rule__DesignAnalysisDeclaration__Group_1__6
            {
            pushFollow(FOLLOW_78);
            rule__DesignAnalysisDeclaration__Group_1__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__Group_1__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_1__5"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_1__5__Impl"
    // InternalAcmeParser.g:16444:1: rule__DesignAnalysisDeclaration__Group_1__5__Impl : ( ( rule__DesignAnalysisDeclaration__Group_1_5__0 )? ) ;
    public final void rule__DesignAnalysisDeclaration__Group_1__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16448:1: ( ( ( rule__DesignAnalysisDeclaration__Group_1_5__0 )? ) )
            // InternalAcmeParser.g:16449:1: ( ( rule__DesignAnalysisDeclaration__Group_1_5__0 )? )
            {
            // InternalAcmeParser.g:16449:1: ( ( rule__DesignAnalysisDeclaration__Group_1_5__0 )? )
            // InternalAcmeParser.g:16450:2: ( rule__DesignAnalysisDeclaration__Group_1_5__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getGroup_1_5()); 
            }
            // InternalAcmeParser.g:16451:2: ( rule__DesignAnalysisDeclaration__Group_1_5__0 )?
            int alt188=2;
            int LA188_0 = input.LA(1);

            if ( (LA188_0==RULE_ID) ) {
                alt188=1;
            }
            switch (alt188) {
                case 1 :
                    // InternalAcmeParser.g:16451:3: rule__DesignAnalysisDeclaration__Group_1_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DesignAnalysisDeclaration__Group_1_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getGroup_1_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_1__5__Impl"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_1__6"
    // InternalAcmeParser.g:16459:1: rule__DesignAnalysisDeclaration__Group_1__6 : rule__DesignAnalysisDeclaration__Group_1__6__Impl rule__DesignAnalysisDeclaration__Group_1__7 ;
    public final void rule__DesignAnalysisDeclaration__Group_1__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16463:1: ( rule__DesignAnalysisDeclaration__Group_1__6__Impl rule__DesignAnalysisDeclaration__Group_1__7 )
            // InternalAcmeParser.g:16464:2: rule__DesignAnalysisDeclaration__Group_1__6__Impl rule__DesignAnalysisDeclaration__Group_1__7
            {
            pushFollow(FOLLOW_67);
            rule__DesignAnalysisDeclaration__Group_1__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__Group_1__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_1__6"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_1__6__Impl"
    // InternalAcmeParser.g:16471:1: rule__DesignAnalysisDeclaration__Group_1__6__Impl : ( RightParenthesis ) ;
    public final void rule__DesignAnalysisDeclaration__Group_1__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16475:1: ( ( RightParenthesis ) )
            // InternalAcmeParser.g:16476:1: ( RightParenthesis )
            {
            // InternalAcmeParser.g:16476:1: ( RightParenthesis )
            // InternalAcmeParser.g:16477:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getRightParenthesisKeyword_1_6()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getRightParenthesisKeyword_1_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_1__6__Impl"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_1__7"
    // InternalAcmeParser.g:16486:1: rule__DesignAnalysisDeclaration__Group_1__7 : rule__DesignAnalysisDeclaration__Group_1__7__Impl rule__DesignAnalysisDeclaration__Group_1__8 ;
    public final void rule__DesignAnalysisDeclaration__Group_1__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16490:1: ( rule__DesignAnalysisDeclaration__Group_1__7__Impl rule__DesignAnalysisDeclaration__Group_1__8 )
            // InternalAcmeParser.g:16491:2: rule__DesignAnalysisDeclaration__Group_1__7__Impl rule__DesignAnalysisDeclaration__Group_1__8
            {
            pushFollow(FOLLOW_50);
            rule__DesignAnalysisDeclaration__Group_1__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__Group_1__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_1__7"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_1__7__Impl"
    // InternalAcmeParser.g:16498:1: rule__DesignAnalysisDeclaration__Group_1__7__Impl : ( Colon ) ;
    public final void rule__DesignAnalysisDeclaration__Group_1__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16502:1: ( ( Colon ) )
            // InternalAcmeParser.g:16503:1: ( Colon )
            {
            // InternalAcmeParser.g:16503:1: ( Colon )
            // InternalAcmeParser.g:16504:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getColonKeyword_1_7()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getColonKeyword_1_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_1__7__Impl"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_1__8"
    // InternalAcmeParser.g:16513:1: rule__DesignAnalysisDeclaration__Group_1__8 : rule__DesignAnalysisDeclaration__Group_1__8__Impl rule__DesignAnalysisDeclaration__Group_1__9 ;
    public final void rule__DesignAnalysisDeclaration__Group_1__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16517:1: ( rule__DesignAnalysisDeclaration__Group_1__8__Impl rule__DesignAnalysisDeclaration__Group_1__9 )
            // InternalAcmeParser.g:16518:2: rule__DesignAnalysisDeclaration__Group_1__8__Impl rule__DesignAnalysisDeclaration__Group_1__9
            {
            pushFollow(FOLLOW_75);
            rule__DesignAnalysisDeclaration__Group_1__8__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__Group_1__9();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_1__8"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_1__8__Impl"
    // InternalAcmeParser.g:16525:1: rule__DesignAnalysisDeclaration__Group_1__8__Impl : ( ( rule__DesignAnalysisDeclaration__TypeAssignment_1_8 ) ) ;
    public final void rule__DesignAnalysisDeclaration__Group_1__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16529:1: ( ( ( rule__DesignAnalysisDeclaration__TypeAssignment_1_8 ) ) )
            // InternalAcmeParser.g:16530:1: ( ( rule__DesignAnalysisDeclaration__TypeAssignment_1_8 ) )
            {
            // InternalAcmeParser.g:16530:1: ( ( rule__DesignAnalysisDeclaration__TypeAssignment_1_8 ) )
            // InternalAcmeParser.g:16531:2: ( rule__DesignAnalysisDeclaration__TypeAssignment_1_8 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getTypeAssignment_1_8()); 
            }
            // InternalAcmeParser.g:16532:2: ( rule__DesignAnalysisDeclaration__TypeAssignment_1_8 )
            // InternalAcmeParser.g:16532:3: rule__DesignAnalysisDeclaration__TypeAssignment_1_8
            {
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__TypeAssignment_1_8();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getTypeAssignment_1_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_1__8__Impl"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_1__9"
    // InternalAcmeParser.g:16540:1: rule__DesignAnalysisDeclaration__Group_1__9 : rule__DesignAnalysisDeclaration__Group_1__9__Impl rule__DesignAnalysisDeclaration__Group_1__10 ;
    public final void rule__DesignAnalysisDeclaration__Group_1__9() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16544:1: ( rule__DesignAnalysisDeclaration__Group_1__9__Impl rule__DesignAnalysisDeclaration__Group_1__10 )
            // InternalAcmeParser.g:16545:2: rule__DesignAnalysisDeclaration__Group_1__9__Impl rule__DesignAnalysisDeclaration__Group_1__10
            {
            pushFollow(FOLLOW_11);
            rule__DesignAnalysisDeclaration__Group_1__9__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__Group_1__10();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_1__9"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_1__9__Impl"
    // InternalAcmeParser.g:16552:1: rule__DesignAnalysisDeclaration__Group_1__9__Impl : ( EqualsSign ) ;
    public final void rule__DesignAnalysisDeclaration__Group_1__9__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16556:1: ( ( EqualsSign ) )
            // InternalAcmeParser.g:16557:1: ( EqualsSign )
            {
            // InternalAcmeParser.g:16557:1: ( EqualsSign )
            // InternalAcmeParser.g:16558:2: EqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getEqualsSignKeyword_1_9()); 
            }
            match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getEqualsSignKeyword_1_9()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_1__9__Impl"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_1__10"
    // InternalAcmeParser.g:16567:1: rule__DesignAnalysisDeclaration__Group_1__10 : rule__DesignAnalysisDeclaration__Group_1__10__Impl ;
    public final void rule__DesignAnalysisDeclaration__Group_1__10() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16571:1: ( rule__DesignAnalysisDeclaration__Group_1__10__Impl )
            // InternalAcmeParser.g:16572:2: rule__DesignAnalysisDeclaration__Group_1__10__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__Group_1__10__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_1__10"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_1__10__Impl"
    // InternalAcmeParser.g:16578:1: rule__DesignAnalysisDeclaration__Group_1__10__Impl : ( ( rule__DesignAnalysisDeclaration__ClassAssignment_1_10 ) ) ;
    public final void rule__DesignAnalysisDeclaration__Group_1__10__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16582:1: ( ( ( rule__DesignAnalysisDeclaration__ClassAssignment_1_10 ) ) )
            // InternalAcmeParser.g:16583:1: ( ( rule__DesignAnalysisDeclaration__ClassAssignment_1_10 ) )
            {
            // InternalAcmeParser.g:16583:1: ( ( rule__DesignAnalysisDeclaration__ClassAssignment_1_10 ) )
            // InternalAcmeParser.g:16584:2: ( rule__DesignAnalysisDeclaration__ClassAssignment_1_10 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getClassAssignment_1_10()); 
            }
            // InternalAcmeParser.g:16585:2: ( rule__DesignAnalysisDeclaration__ClassAssignment_1_10 )
            // InternalAcmeParser.g:16585:3: rule__DesignAnalysisDeclaration__ClassAssignment_1_10
            {
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__ClassAssignment_1_10();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getClassAssignment_1_10()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_1__10__Impl"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_1_5__0"
    // InternalAcmeParser.g:16594:1: rule__DesignAnalysisDeclaration__Group_1_5__0 : rule__DesignAnalysisDeclaration__Group_1_5__0__Impl rule__DesignAnalysisDeclaration__Group_1_5__1 ;
    public final void rule__DesignAnalysisDeclaration__Group_1_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16598:1: ( rule__DesignAnalysisDeclaration__Group_1_5__0__Impl rule__DesignAnalysisDeclaration__Group_1_5__1 )
            // InternalAcmeParser.g:16599:2: rule__DesignAnalysisDeclaration__Group_1_5__0__Impl rule__DesignAnalysisDeclaration__Group_1_5__1
            {
            pushFollow(FOLLOW_19);
            rule__DesignAnalysisDeclaration__Group_1_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__Group_1_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_1_5__0"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_1_5__0__Impl"
    // InternalAcmeParser.g:16606:1: rule__DesignAnalysisDeclaration__Group_1_5__0__Impl : ( ( rule__DesignAnalysisDeclaration__ParamsAssignment_1_5_0 ) ) ;
    public final void rule__DesignAnalysisDeclaration__Group_1_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16610:1: ( ( ( rule__DesignAnalysisDeclaration__ParamsAssignment_1_5_0 ) ) )
            // InternalAcmeParser.g:16611:1: ( ( rule__DesignAnalysisDeclaration__ParamsAssignment_1_5_0 ) )
            {
            // InternalAcmeParser.g:16611:1: ( ( rule__DesignAnalysisDeclaration__ParamsAssignment_1_5_0 ) )
            // InternalAcmeParser.g:16612:2: ( rule__DesignAnalysisDeclaration__ParamsAssignment_1_5_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getParamsAssignment_1_5_0()); 
            }
            // InternalAcmeParser.g:16613:2: ( rule__DesignAnalysisDeclaration__ParamsAssignment_1_5_0 )
            // InternalAcmeParser.g:16613:3: rule__DesignAnalysisDeclaration__ParamsAssignment_1_5_0
            {
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__ParamsAssignment_1_5_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getParamsAssignment_1_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_1_5__0__Impl"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_1_5__1"
    // InternalAcmeParser.g:16621:1: rule__DesignAnalysisDeclaration__Group_1_5__1 : rule__DesignAnalysisDeclaration__Group_1_5__1__Impl ;
    public final void rule__DesignAnalysisDeclaration__Group_1_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16625:1: ( rule__DesignAnalysisDeclaration__Group_1_5__1__Impl )
            // InternalAcmeParser.g:16626:2: rule__DesignAnalysisDeclaration__Group_1_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__Group_1_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_1_5__1"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_1_5__1__Impl"
    // InternalAcmeParser.g:16632:1: rule__DesignAnalysisDeclaration__Group_1_5__1__Impl : ( ( rule__DesignAnalysisDeclaration__Group_1_5_1__0 )* ) ;
    public final void rule__DesignAnalysisDeclaration__Group_1_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16636:1: ( ( ( rule__DesignAnalysisDeclaration__Group_1_5_1__0 )* ) )
            // InternalAcmeParser.g:16637:1: ( ( rule__DesignAnalysisDeclaration__Group_1_5_1__0 )* )
            {
            // InternalAcmeParser.g:16637:1: ( ( rule__DesignAnalysisDeclaration__Group_1_5_1__0 )* )
            // InternalAcmeParser.g:16638:2: ( rule__DesignAnalysisDeclaration__Group_1_5_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getGroup_1_5_1()); 
            }
            // InternalAcmeParser.g:16639:2: ( rule__DesignAnalysisDeclaration__Group_1_5_1__0 )*
            loop189:
            do {
                int alt189=2;
                int LA189_0 = input.LA(1);

                if ( (LA189_0==Comma) ) {
                    alt189=1;
                }


                switch (alt189) {
            	case 1 :
            	    // InternalAcmeParser.g:16639:3: rule__DesignAnalysisDeclaration__Group_1_5_1__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__DesignAnalysisDeclaration__Group_1_5_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop189;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getGroup_1_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_1_5__1__Impl"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_1_5_1__0"
    // InternalAcmeParser.g:16648:1: rule__DesignAnalysisDeclaration__Group_1_5_1__0 : rule__DesignAnalysisDeclaration__Group_1_5_1__0__Impl rule__DesignAnalysisDeclaration__Group_1_5_1__1 ;
    public final void rule__DesignAnalysisDeclaration__Group_1_5_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16652:1: ( rule__DesignAnalysisDeclaration__Group_1_5_1__0__Impl rule__DesignAnalysisDeclaration__Group_1_5_1__1 )
            // InternalAcmeParser.g:16653:2: rule__DesignAnalysisDeclaration__Group_1_5_1__0__Impl rule__DesignAnalysisDeclaration__Group_1_5_1__1
            {
            pushFollow(FOLLOW_11);
            rule__DesignAnalysisDeclaration__Group_1_5_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__Group_1_5_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_1_5_1__0"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_1_5_1__0__Impl"
    // InternalAcmeParser.g:16660:1: rule__DesignAnalysisDeclaration__Group_1_5_1__0__Impl : ( Comma ) ;
    public final void rule__DesignAnalysisDeclaration__Group_1_5_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16664:1: ( ( Comma ) )
            // InternalAcmeParser.g:16665:1: ( Comma )
            {
            // InternalAcmeParser.g:16665:1: ( Comma )
            // InternalAcmeParser.g:16666:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getCommaKeyword_1_5_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getCommaKeyword_1_5_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_1_5_1__0__Impl"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_1_5_1__1"
    // InternalAcmeParser.g:16675:1: rule__DesignAnalysisDeclaration__Group_1_5_1__1 : rule__DesignAnalysisDeclaration__Group_1_5_1__1__Impl ;
    public final void rule__DesignAnalysisDeclaration__Group_1_5_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16679:1: ( rule__DesignAnalysisDeclaration__Group_1_5_1__1__Impl )
            // InternalAcmeParser.g:16680:2: rule__DesignAnalysisDeclaration__Group_1_5_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__Group_1_5_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_1_5_1__1"


    // $ANTLR start "rule__DesignAnalysisDeclaration__Group_1_5_1__1__Impl"
    // InternalAcmeParser.g:16686:1: rule__DesignAnalysisDeclaration__Group_1_5_1__1__Impl : ( ( rule__DesignAnalysisDeclaration__ParamsAssignment_1_5_1_1 ) ) ;
    public final void rule__DesignAnalysisDeclaration__Group_1_5_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16690:1: ( ( ( rule__DesignAnalysisDeclaration__ParamsAssignment_1_5_1_1 ) ) )
            // InternalAcmeParser.g:16691:1: ( ( rule__DesignAnalysisDeclaration__ParamsAssignment_1_5_1_1 ) )
            {
            // InternalAcmeParser.g:16691:1: ( ( rule__DesignAnalysisDeclaration__ParamsAssignment_1_5_1_1 ) )
            // InternalAcmeParser.g:16692:2: ( rule__DesignAnalysisDeclaration__ParamsAssignment_1_5_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getParamsAssignment_1_5_1_1()); 
            }
            // InternalAcmeParser.g:16693:2: ( rule__DesignAnalysisDeclaration__ParamsAssignment_1_5_1_1 )
            // InternalAcmeParser.g:16693:3: rule__DesignAnalysisDeclaration__ParamsAssignment_1_5_1_1
            {
            pushFollow(FOLLOW_2);
            rule__DesignAnalysisDeclaration__ParamsAssignment_1_5_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getParamsAssignment_1_5_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__Group_1_5_1__1__Impl"


    // $ANTLR start "rule__FormalParam__Group__0"
    // InternalAcmeParser.g:16702:1: rule__FormalParam__Group__0 : rule__FormalParam__Group__0__Impl rule__FormalParam__Group__1 ;
    public final void rule__FormalParam__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16706:1: ( rule__FormalParam__Group__0__Impl rule__FormalParam__Group__1 )
            // InternalAcmeParser.g:16707:2: rule__FormalParam__Group__0__Impl rule__FormalParam__Group__1
            {
            pushFollow(FOLLOW_67);
            rule__FormalParam__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FormalParam__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FormalParam__Group__0"


    // $ANTLR start "rule__FormalParam__Group__0__Impl"
    // InternalAcmeParser.g:16714:1: rule__FormalParam__Group__0__Impl : ( ( rule__FormalParam__NameAssignment_0 ) ) ;
    public final void rule__FormalParam__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16718:1: ( ( ( rule__FormalParam__NameAssignment_0 ) ) )
            // InternalAcmeParser.g:16719:1: ( ( rule__FormalParam__NameAssignment_0 ) )
            {
            // InternalAcmeParser.g:16719:1: ( ( rule__FormalParam__NameAssignment_0 ) )
            // InternalAcmeParser.g:16720:2: ( rule__FormalParam__NameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormalParamAccess().getNameAssignment_0()); 
            }
            // InternalAcmeParser.g:16721:2: ( rule__FormalParam__NameAssignment_0 )
            // InternalAcmeParser.g:16721:3: rule__FormalParam__NameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__FormalParam__NameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormalParamAccess().getNameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FormalParam__Group__0__Impl"


    // $ANTLR start "rule__FormalParam__Group__1"
    // InternalAcmeParser.g:16729:1: rule__FormalParam__Group__1 : rule__FormalParam__Group__1__Impl rule__FormalParam__Group__2 ;
    public final void rule__FormalParam__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16733:1: ( rule__FormalParam__Group__1__Impl rule__FormalParam__Group__2 )
            // InternalAcmeParser.g:16734:2: rule__FormalParam__Group__1__Impl rule__FormalParam__Group__2
            {
            pushFollow(FOLLOW_50);
            rule__FormalParam__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FormalParam__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FormalParam__Group__1"


    // $ANTLR start "rule__FormalParam__Group__1__Impl"
    // InternalAcmeParser.g:16741:1: rule__FormalParam__Group__1__Impl : ( Colon ) ;
    public final void rule__FormalParam__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16745:1: ( ( Colon ) )
            // InternalAcmeParser.g:16746:1: ( Colon )
            {
            // InternalAcmeParser.g:16746:1: ( Colon )
            // InternalAcmeParser.g:16747:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormalParamAccess().getColonKeyword_1()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormalParamAccess().getColonKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FormalParam__Group__1__Impl"


    // $ANTLR start "rule__FormalParam__Group__2"
    // InternalAcmeParser.g:16756:1: rule__FormalParam__Group__2 : rule__FormalParam__Group__2__Impl ;
    public final void rule__FormalParam__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16760:1: ( rule__FormalParam__Group__2__Impl )
            // InternalAcmeParser.g:16761:2: rule__FormalParam__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FormalParam__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FormalParam__Group__2"


    // $ANTLR start "rule__FormalParam__Group__2__Impl"
    // InternalAcmeParser.g:16767:1: rule__FormalParam__Group__2__Impl : ( ( rule__FormalParam__TypeAssignment_2 ) ) ;
    public final void rule__FormalParam__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16771:1: ( ( ( rule__FormalParam__TypeAssignment_2 ) ) )
            // InternalAcmeParser.g:16772:1: ( ( rule__FormalParam__TypeAssignment_2 ) )
            {
            // InternalAcmeParser.g:16772:1: ( ( rule__FormalParam__TypeAssignment_2 ) )
            // InternalAcmeParser.g:16773:2: ( rule__FormalParam__TypeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormalParamAccess().getTypeAssignment_2()); 
            }
            // InternalAcmeParser.g:16774:2: ( rule__FormalParam__TypeAssignment_2 )
            // InternalAcmeParser.g:16774:3: rule__FormalParam__TypeAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__FormalParam__TypeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormalParamAccess().getTypeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FormalParam__Group__2__Impl"


    // $ANTLR start "rule__AssignmentExpression__Group__0"
    // InternalAcmeParser.g:16783:1: rule__AssignmentExpression__Group__0 : rule__AssignmentExpression__Group__0__Impl rule__AssignmentExpression__Group__1 ;
    public final void rule__AssignmentExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16787:1: ( rule__AssignmentExpression__Group__0__Impl rule__AssignmentExpression__Group__1 )
            // InternalAcmeParser.g:16788:2: rule__AssignmentExpression__Group__0__Impl rule__AssignmentExpression__Group__1
            {
            pushFollow(FOLLOW_79);
            rule__AssignmentExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AssignmentExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group__0"


    // $ANTLR start "rule__AssignmentExpression__Group__0__Impl"
    // InternalAcmeParser.g:16795:1: rule__AssignmentExpression__Group__0__Impl : ( ( rule__AssignmentExpression__BooleanExprAssignment_0 ) ) ;
    public final void rule__AssignmentExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16799:1: ( ( ( rule__AssignmentExpression__BooleanExprAssignment_0 ) ) )
            // InternalAcmeParser.g:16800:1: ( ( rule__AssignmentExpression__BooleanExprAssignment_0 ) )
            {
            // InternalAcmeParser.g:16800:1: ( ( rule__AssignmentExpression__BooleanExprAssignment_0 ) )
            // InternalAcmeParser.g:16801:2: ( rule__AssignmentExpression__BooleanExprAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getBooleanExprAssignment_0()); 
            }
            // InternalAcmeParser.g:16802:2: ( rule__AssignmentExpression__BooleanExprAssignment_0 )
            // InternalAcmeParser.g:16802:3: rule__AssignmentExpression__BooleanExprAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__AssignmentExpression__BooleanExprAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getBooleanExprAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group__0__Impl"


    // $ANTLR start "rule__AssignmentExpression__Group__1"
    // InternalAcmeParser.g:16810:1: rule__AssignmentExpression__Group__1 : rule__AssignmentExpression__Group__1__Impl ;
    public final void rule__AssignmentExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16814:1: ( rule__AssignmentExpression__Group__1__Impl )
            // InternalAcmeParser.g:16815:2: rule__AssignmentExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AssignmentExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group__1"


    // $ANTLR start "rule__AssignmentExpression__Group__1__Impl"
    // InternalAcmeParser.g:16821:1: rule__AssignmentExpression__Group__1__Impl : ( ( rule__AssignmentExpression__Group_1__0 )? ) ;
    public final void rule__AssignmentExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16825:1: ( ( ( rule__AssignmentExpression__Group_1__0 )? ) )
            // InternalAcmeParser.g:16826:1: ( ( rule__AssignmentExpression__Group_1__0 )? )
            {
            // InternalAcmeParser.g:16826:1: ( ( rule__AssignmentExpression__Group_1__0 )? )
            // InternalAcmeParser.g:16827:2: ( rule__AssignmentExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getGroup_1()); 
            }
            // InternalAcmeParser.g:16828:2: ( rule__AssignmentExpression__Group_1__0 )?
            int alt190=2;
            switch ( input.LA(1) ) {
                case EqualsSign:
                    {
                    int LA190_1 = input.LA(2);

                    if ( (synpred268_InternalAcmeParser()) ) {
                        alt190=1;
                    }
                    }
                    break;
                case PlusSignEqualsSign:
                    {
                    int LA190_2 = input.LA(2);

                    if ( (synpred268_InternalAcmeParser()) ) {
                        alt190=1;
                    }
                    }
                    break;
                case HyphenMinusEqualsSign:
                    {
                    int LA190_3 = input.LA(2);

                    if ( (synpred268_InternalAcmeParser()) ) {
                        alt190=1;
                    }
                    }
                    break;
                case AsteriskEqualsSign:
                    {
                    int LA190_4 = input.LA(2);

                    if ( (synpred268_InternalAcmeParser()) ) {
                        alt190=1;
                    }
                    }
                    break;
                case SolidusEqualsSign:
                    {
                    int LA190_5 = input.LA(2);

                    if ( (synpred268_InternalAcmeParser()) ) {
                        alt190=1;
                    }
                    }
                    break;
                case PercentSignEqualsSign:
                    {
                    int LA190_6 = input.LA(2);

                    if ( (synpred268_InternalAcmeParser()) ) {
                        alt190=1;
                    }
                    }
                    break;
            }

            switch (alt190) {
                case 1 :
                    // InternalAcmeParser.g:16828:3: rule__AssignmentExpression__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AssignmentExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group__1__Impl"


    // $ANTLR start "rule__AssignmentExpression__Group_1__0"
    // InternalAcmeParser.g:16837:1: rule__AssignmentExpression__Group_1__0 : rule__AssignmentExpression__Group_1__0__Impl rule__AssignmentExpression__Group_1__1 ;
    public final void rule__AssignmentExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16841:1: ( rule__AssignmentExpression__Group_1__0__Impl rule__AssignmentExpression__Group_1__1 )
            // InternalAcmeParser.g:16842:2: rule__AssignmentExpression__Group_1__0__Impl rule__AssignmentExpression__Group_1__1
            {
            pushFollow(FOLLOW_73);
            rule__AssignmentExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AssignmentExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group_1__0"


    // $ANTLR start "rule__AssignmentExpression__Group_1__0__Impl"
    // InternalAcmeParser.g:16849:1: rule__AssignmentExpression__Group_1__0__Impl : ( ( rule__AssignmentExpression__AssignAssignment_1_0 ) ) ;
    public final void rule__AssignmentExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16853:1: ( ( ( rule__AssignmentExpression__AssignAssignment_1_0 ) ) )
            // InternalAcmeParser.g:16854:1: ( ( rule__AssignmentExpression__AssignAssignment_1_0 ) )
            {
            // InternalAcmeParser.g:16854:1: ( ( rule__AssignmentExpression__AssignAssignment_1_0 ) )
            // InternalAcmeParser.g:16855:2: ( rule__AssignmentExpression__AssignAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getAssignAssignment_1_0()); 
            }
            // InternalAcmeParser.g:16856:2: ( rule__AssignmentExpression__AssignAssignment_1_0 )
            // InternalAcmeParser.g:16856:3: rule__AssignmentExpression__AssignAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__AssignmentExpression__AssignAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getAssignAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group_1__0__Impl"


    // $ANTLR start "rule__AssignmentExpression__Group_1__1"
    // InternalAcmeParser.g:16864:1: rule__AssignmentExpression__Group_1__1 : rule__AssignmentExpression__Group_1__1__Impl ;
    public final void rule__AssignmentExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16868:1: ( rule__AssignmentExpression__Group_1__1__Impl )
            // InternalAcmeParser.g:16869:2: rule__AssignmentExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AssignmentExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group_1__1"


    // $ANTLR start "rule__AssignmentExpression__Group_1__1__Impl"
    // InternalAcmeParser.g:16875:1: rule__AssignmentExpression__Group_1__1__Impl : ( ( rule__AssignmentExpression__AssignmentExprAssignment_1_1 ) ) ;
    public final void rule__AssignmentExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16879:1: ( ( ( rule__AssignmentExpression__AssignmentExprAssignment_1_1 ) ) )
            // InternalAcmeParser.g:16880:1: ( ( rule__AssignmentExpression__AssignmentExprAssignment_1_1 ) )
            {
            // InternalAcmeParser.g:16880:1: ( ( rule__AssignmentExpression__AssignmentExprAssignment_1_1 ) )
            // InternalAcmeParser.g:16881:2: ( rule__AssignmentExpression__AssignmentExprAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getAssignmentExprAssignment_1_1()); 
            }
            // InternalAcmeParser.g:16882:2: ( rule__AssignmentExpression__AssignmentExprAssignment_1_1 )
            // InternalAcmeParser.g:16882:3: rule__AssignmentExpression__AssignmentExprAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AssignmentExpression__AssignmentExprAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getAssignmentExprAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__Group_1__1__Impl"


    // $ANTLR start "rule__ImpliesExpression__Group__0"
    // InternalAcmeParser.g:16891:1: rule__ImpliesExpression__Group__0 : rule__ImpliesExpression__Group__0__Impl rule__ImpliesExpression__Group__1 ;
    public final void rule__ImpliesExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16895:1: ( rule__ImpliesExpression__Group__0__Impl rule__ImpliesExpression__Group__1 )
            // InternalAcmeParser.g:16896:2: rule__ImpliesExpression__Group__0__Impl rule__ImpliesExpression__Group__1
            {
            pushFollow(FOLLOW_80);
            rule__ImpliesExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ImpliesExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImpliesExpression__Group__0"


    // $ANTLR start "rule__ImpliesExpression__Group__0__Impl"
    // InternalAcmeParser.g:16903:1: rule__ImpliesExpression__Group__0__Impl : ( ruleiffExpression ) ;
    public final void rule__ImpliesExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16907:1: ( ( ruleiffExpression ) )
            // InternalAcmeParser.g:16908:1: ( ruleiffExpression )
            {
            // InternalAcmeParser.g:16908:1: ( ruleiffExpression )
            // InternalAcmeParser.g:16909:2: ruleiffExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImpliesExpressionAccess().getIffExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleiffExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImpliesExpressionAccess().getIffExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImpliesExpression__Group__0__Impl"


    // $ANTLR start "rule__ImpliesExpression__Group__1"
    // InternalAcmeParser.g:16918:1: rule__ImpliesExpression__Group__1 : rule__ImpliesExpression__Group__1__Impl ;
    public final void rule__ImpliesExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16922:1: ( rule__ImpliesExpression__Group__1__Impl )
            // InternalAcmeParser.g:16923:2: rule__ImpliesExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImpliesExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImpliesExpression__Group__1"


    // $ANTLR start "rule__ImpliesExpression__Group__1__Impl"
    // InternalAcmeParser.g:16929:1: rule__ImpliesExpression__Group__1__Impl : ( ( rule__ImpliesExpression__Group_1__0 )? ) ;
    public final void rule__ImpliesExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16933:1: ( ( ( rule__ImpliesExpression__Group_1__0 )? ) )
            // InternalAcmeParser.g:16934:1: ( ( rule__ImpliesExpression__Group_1__0 )? )
            {
            // InternalAcmeParser.g:16934:1: ( ( rule__ImpliesExpression__Group_1__0 )? )
            // InternalAcmeParser.g:16935:2: ( rule__ImpliesExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImpliesExpressionAccess().getGroup_1()); 
            }
            // InternalAcmeParser.g:16936:2: ( rule__ImpliesExpression__Group_1__0 )?
            int alt191=2;
            int LA191_0 = input.LA(1);

            if ( (LA191_0==HyphenMinusGreaterThanSign) ) {
                int LA191_1 = input.LA(2);

                if ( (synpred269_InternalAcmeParser()) ) {
                    alt191=1;
                }
            }
            switch (alt191) {
                case 1 :
                    // InternalAcmeParser.g:16936:3: rule__ImpliesExpression__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ImpliesExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImpliesExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImpliesExpression__Group__1__Impl"


    // $ANTLR start "rule__ImpliesExpression__Group_1__0"
    // InternalAcmeParser.g:16945:1: rule__ImpliesExpression__Group_1__0 : rule__ImpliesExpression__Group_1__0__Impl rule__ImpliesExpression__Group_1__1 ;
    public final void rule__ImpliesExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16949:1: ( rule__ImpliesExpression__Group_1__0__Impl rule__ImpliesExpression__Group_1__1 )
            // InternalAcmeParser.g:16950:2: rule__ImpliesExpression__Group_1__0__Impl rule__ImpliesExpression__Group_1__1
            {
            pushFollow(FOLLOW_81);
            rule__ImpliesExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ImpliesExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImpliesExpression__Group_1__0"


    // $ANTLR start "rule__ImpliesExpression__Group_1__0__Impl"
    // InternalAcmeParser.g:16957:1: rule__ImpliesExpression__Group_1__0__Impl : ( HyphenMinusGreaterThanSign ) ;
    public final void rule__ImpliesExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16961:1: ( ( HyphenMinusGreaterThanSign ) )
            // InternalAcmeParser.g:16962:1: ( HyphenMinusGreaterThanSign )
            {
            // InternalAcmeParser.g:16962:1: ( HyphenMinusGreaterThanSign )
            // InternalAcmeParser.g:16963:2: HyphenMinusGreaterThanSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImpliesExpressionAccess().getHyphenMinusGreaterThanSignKeyword_1_0()); 
            }
            match(input,HyphenMinusGreaterThanSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImpliesExpressionAccess().getHyphenMinusGreaterThanSignKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImpliesExpression__Group_1__0__Impl"


    // $ANTLR start "rule__ImpliesExpression__Group_1__1"
    // InternalAcmeParser.g:16972:1: rule__ImpliesExpression__Group_1__1 : rule__ImpliesExpression__Group_1__1__Impl ;
    public final void rule__ImpliesExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16976:1: ( rule__ImpliesExpression__Group_1__1__Impl )
            // InternalAcmeParser.g:16977:2: rule__ImpliesExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImpliesExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImpliesExpression__Group_1__1"


    // $ANTLR start "rule__ImpliesExpression__Group_1__1__Impl"
    // InternalAcmeParser.g:16983:1: rule__ImpliesExpression__Group_1__1__Impl : ( ( rule__ImpliesExpression__ImpliesExprAssignment_1_1 ) ) ;
    public final void rule__ImpliesExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:16987:1: ( ( ( rule__ImpliesExpression__ImpliesExprAssignment_1_1 ) ) )
            // InternalAcmeParser.g:16988:1: ( ( rule__ImpliesExpression__ImpliesExprAssignment_1_1 ) )
            {
            // InternalAcmeParser.g:16988:1: ( ( rule__ImpliesExpression__ImpliesExprAssignment_1_1 ) )
            // InternalAcmeParser.g:16989:2: ( rule__ImpliesExpression__ImpliesExprAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImpliesExpressionAccess().getImpliesExprAssignment_1_1()); 
            }
            // InternalAcmeParser.g:16990:2: ( rule__ImpliesExpression__ImpliesExprAssignment_1_1 )
            // InternalAcmeParser.g:16990:3: rule__ImpliesExpression__ImpliesExprAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ImpliesExpression__ImpliesExprAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImpliesExpressionAccess().getImpliesExprAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImpliesExpression__Group_1__1__Impl"


    // $ANTLR start "rule__IffExpression__Group__0"
    // InternalAcmeParser.g:16999:1: rule__IffExpression__Group__0 : rule__IffExpression__Group__0__Impl rule__IffExpression__Group__1 ;
    public final void rule__IffExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17003:1: ( rule__IffExpression__Group__0__Impl rule__IffExpression__Group__1 )
            // InternalAcmeParser.g:17004:2: rule__IffExpression__Group__0__Impl rule__IffExpression__Group__1
            {
            pushFollow(FOLLOW_82);
            rule__IffExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IffExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IffExpression__Group__0"


    // $ANTLR start "rule__IffExpression__Group__0__Impl"
    // InternalAcmeParser.g:17011:1: rule__IffExpression__Group__0__Impl : ( rulelogicalOrExpression ) ;
    public final void rule__IffExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17015:1: ( ( rulelogicalOrExpression ) )
            // InternalAcmeParser.g:17016:1: ( rulelogicalOrExpression )
            {
            // InternalAcmeParser.g:17016:1: ( rulelogicalOrExpression )
            // InternalAcmeParser.g:17017:2: rulelogicalOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIffExpressionAccess().getLogicalOrExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            rulelogicalOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIffExpressionAccess().getLogicalOrExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IffExpression__Group__0__Impl"


    // $ANTLR start "rule__IffExpression__Group__1"
    // InternalAcmeParser.g:17026:1: rule__IffExpression__Group__1 : rule__IffExpression__Group__1__Impl ;
    public final void rule__IffExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17030:1: ( rule__IffExpression__Group__1__Impl )
            // InternalAcmeParser.g:17031:2: rule__IffExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IffExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IffExpression__Group__1"


    // $ANTLR start "rule__IffExpression__Group__1__Impl"
    // InternalAcmeParser.g:17037:1: rule__IffExpression__Group__1__Impl : ( ( rule__IffExpression__Group_1__0 )? ) ;
    public final void rule__IffExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17041:1: ( ( ( rule__IffExpression__Group_1__0 )? ) )
            // InternalAcmeParser.g:17042:1: ( ( rule__IffExpression__Group_1__0 )? )
            {
            // InternalAcmeParser.g:17042:1: ( ( rule__IffExpression__Group_1__0 )? )
            // InternalAcmeParser.g:17043:2: ( rule__IffExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIffExpressionAccess().getGroup_1()); 
            }
            // InternalAcmeParser.g:17044:2: ( rule__IffExpression__Group_1__0 )?
            int alt192=2;
            int LA192_0 = input.LA(1);

            if ( (LA192_0==LessThanSignHyphenMinusGreaterThanSign) ) {
                int LA192_1 = input.LA(2);

                if ( (synpred270_InternalAcmeParser()) ) {
                    alt192=1;
                }
            }
            switch (alt192) {
                case 1 :
                    // InternalAcmeParser.g:17044:3: rule__IffExpression__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IffExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIffExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IffExpression__Group__1__Impl"


    // $ANTLR start "rule__IffExpression__Group_1__0"
    // InternalAcmeParser.g:17053:1: rule__IffExpression__Group_1__0 : rule__IffExpression__Group_1__0__Impl rule__IffExpression__Group_1__1 ;
    public final void rule__IffExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17057:1: ( rule__IffExpression__Group_1__0__Impl rule__IffExpression__Group_1__1 )
            // InternalAcmeParser.g:17058:2: rule__IffExpression__Group_1__0__Impl rule__IffExpression__Group_1__1
            {
            pushFollow(FOLLOW_81);
            rule__IffExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IffExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IffExpression__Group_1__0"


    // $ANTLR start "rule__IffExpression__Group_1__0__Impl"
    // InternalAcmeParser.g:17065:1: rule__IffExpression__Group_1__0__Impl : ( LessThanSignHyphenMinusGreaterThanSign ) ;
    public final void rule__IffExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17069:1: ( ( LessThanSignHyphenMinusGreaterThanSign ) )
            // InternalAcmeParser.g:17070:1: ( LessThanSignHyphenMinusGreaterThanSign )
            {
            // InternalAcmeParser.g:17070:1: ( LessThanSignHyphenMinusGreaterThanSign )
            // InternalAcmeParser.g:17071:2: LessThanSignHyphenMinusGreaterThanSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIffExpressionAccess().getLessThanSignHyphenMinusGreaterThanSignKeyword_1_0()); 
            }
            match(input,LessThanSignHyphenMinusGreaterThanSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIffExpressionAccess().getLessThanSignHyphenMinusGreaterThanSignKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IffExpression__Group_1__0__Impl"


    // $ANTLR start "rule__IffExpression__Group_1__1"
    // InternalAcmeParser.g:17080:1: rule__IffExpression__Group_1__1 : rule__IffExpression__Group_1__1__Impl ;
    public final void rule__IffExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17084:1: ( rule__IffExpression__Group_1__1__Impl )
            // InternalAcmeParser.g:17085:2: rule__IffExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IffExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IffExpression__Group_1__1"


    // $ANTLR start "rule__IffExpression__Group_1__1__Impl"
    // InternalAcmeParser.g:17091:1: rule__IffExpression__Group_1__1__Impl : ( ( rule__IffExpression__IffExprAssignment_1_1 ) ) ;
    public final void rule__IffExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17095:1: ( ( ( rule__IffExpression__IffExprAssignment_1_1 ) ) )
            // InternalAcmeParser.g:17096:1: ( ( rule__IffExpression__IffExprAssignment_1_1 ) )
            {
            // InternalAcmeParser.g:17096:1: ( ( rule__IffExpression__IffExprAssignment_1_1 ) )
            // InternalAcmeParser.g:17097:2: ( rule__IffExpression__IffExprAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIffExpressionAccess().getIffExprAssignment_1_1()); 
            }
            // InternalAcmeParser.g:17098:2: ( rule__IffExpression__IffExprAssignment_1_1 )
            // InternalAcmeParser.g:17098:3: rule__IffExpression__IffExprAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__IffExpression__IffExprAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIffExpressionAccess().getIffExprAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IffExpression__Group_1__1__Impl"


    // $ANTLR start "rule__LogicalOrExpression__Group__0"
    // InternalAcmeParser.g:17107:1: rule__LogicalOrExpression__Group__0 : rule__LogicalOrExpression__Group__0__Impl rule__LogicalOrExpression__Group__1 ;
    public final void rule__LogicalOrExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17111:1: ( rule__LogicalOrExpression__Group__0__Impl rule__LogicalOrExpression__Group__1 )
            // InternalAcmeParser.g:17112:2: rule__LogicalOrExpression__Group__0__Impl rule__LogicalOrExpression__Group__1
            {
            pushFollow(FOLLOW_83);
            rule__LogicalOrExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LogicalOrExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Group__0"


    // $ANTLR start "rule__LogicalOrExpression__Group__0__Impl"
    // InternalAcmeParser.g:17119:1: rule__LogicalOrExpression__Group__0__Impl : ( rulelogicalAndExpression ) ;
    public final void rule__LogicalOrExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17123:1: ( ( rulelogicalAndExpression ) )
            // InternalAcmeParser.g:17124:1: ( rulelogicalAndExpression )
            {
            // InternalAcmeParser.g:17124:1: ( rulelogicalAndExpression )
            // InternalAcmeParser.g:17125:2: rulelogicalAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            rulelogicalAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Group__0__Impl"


    // $ANTLR start "rule__LogicalOrExpression__Group__1"
    // InternalAcmeParser.g:17134:1: rule__LogicalOrExpression__Group__1 : rule__LogicalOrExpression__Group__1__Impl ;
    public final void rule__LogicalOrExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17138:1: ( rule__LogicalOrExpression__Group__1__Impl )
            // InternalAcmeParser.g:17139:2: rule__LogicalOrExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LogicalOrExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Group__1"


    // $ANTLR start "rule__LogicalOrExpression__Group__1__Impl"
    // InternalAcmeParser.g:17145:1: rule__LogicalOrExpression__Group__1__Impl : ( ( rule__LogicalOrExpression__Group_1__0 )? ) ;
    public final void rule__LogicalOrExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17149:1: ( ( ( rule__LogicalOrExpression__Group_1__0 )? ) )
            // InternalAcmeParser.g:17150:1: ( ( rule__LogicalOrExpression__Group_1__0 )? )
            {
            // InternalAcmeParser.g:17150:1: ( ( rule__LogicalOrExpression__Group_1__0 )? )
            // InternalAcmeParser.g:17151:2: ( rule__LogicalOrExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalOrExpressionAccess().getGroup_1()); 
            }
            // InternalAcmeParser.g:17152:2: ( rule__LogicalOrExpression__Group_1__0 )?
            int alt193=2;
            int LA193_0 = input.LA(1);

            if ( (LA193_0==Or) ) {
                int LA193_1 = input.LA(2);

                if ( (synpred271_InternalAcmeParser()) ) {
                    alt193=1;
                }
            }
            else if ( (LA193_0==VerticalLineVerticalLine) ) {
                int LA193_2 = input.LA(2);

                if ( (synpred271_InternalAcmeParser()) ) {
                    alt193=1;
                }
            }
            switch (alt193) {
                case 1 :
                    // InternalAcmeParser.g:17152:3: rule__LogicalOrExpression__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LogicalOrExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalOrExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Group__1__Impl"


    // $ANTLR start "rule__LogicalOrExpression__Group_1__0"
    // InternalAcmeParser.g:17161:1: rule__LogicalOrExpression__Group_1__0 : rule__LogicalOrExpression__Group_1__0__Impl rule__LogicalOrExpression__Group_1__1 ;
    public final void rule__LogicalOrExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17165:1: ( rule__LogicalOrExpression__Group_1__0__Impl rule__LogicalOrExpression__Group_1__1 )
            // InternalAcmeParser.g:17166:2: rule__LogicalOrExpression__Group_1__0__Impl rule__LogicalOrExpression__Group_1__1
            {
            pushFollow(FOLLOW_81);
            rule__LogicalOrExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LogicalOrExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Group_1__0"


    // $ANTLR start "rule__LogicalOrExpression__Group_1__0__Impl"
    // InternalAcmeParser.g:17173:1: rule__LogicalOrExpression__Group_1__0__Impl : ( ( rule__LogicalOrExpression__Alternatives_1_0 ) ) ;
    public final void rule__LogicalOrExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17177:1: ( ( ( rule__LogicalOrExpression__Alternatives_1_0 ) ) )
            // InternalAcmeParser.g:17178:1: ( ( rule__LogicalOrExpression__Alternatives_1_0 ) )
            {
            // InternalAcmeParser.g:17178:1: ( ( rule__LogicalOrExpression__Alternatives_1_0 ) )
            // InternalAcmeParser.g:17179:2: ( rule__LogicalOrExpression__Alternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalOrExpressionAccess().getAlternatives_1_0()); 
            }
            // InternalAcmeParser.g:17180:2: ( rule__LogicalOrExpression__Alternatives_1_0 )
            // InternalAcmeParser.g:17180:3: rule__LogicalOrExpression__Alternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__LogicalOrExpression__Alternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalOrExpressionAccess().getAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Group_1__0__Impl"


    // $ANTLR start "rule__LogicalOrExpression__Group_1__1"
    // InternalAcmeParser.g:17188:1: rule__LogicalOrExpression__Group_1__1 : rule__LogicalOrExpression__Group_1__1__Impl ;
    public final void rule__LogicalOrExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17192:1: ( rule__LogicalOrExpression__Group_1__1__Impl )
            // InternalAcmeParser.g:17193:2: rule__LogicalOrExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LogicalOrExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Group_1__1"


    // $ANTLR start "rule__LogicalOrExpression__Group_1__1__Impl"
    // InternalAcmeParser.g:17199:1: rule__LogicalOrExpression__Group_1__1__Impl : ( ( rule__LogicalOrExpression__LogicalOrExprAssignment_1_1 ) ) ;
    public final void rule__LogicalOrExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17203:1: ( ( ( rule__LogicalOrExpression__LogicalOrExprAssignment_1_1 ) ) )
            // InternalAcmeParser.g:17204:1: ( ( rule__LogicalOrExpression__LogicalOrExprAssignment_1_1 ) )
            {
            // InternalAcmeParser.g:17204:1: ( ( rule__LogicalOrExpression__LogicalOrExprAssignment_1_1 ) )
            // InternalAcmeParser.g:17205:2: ( rule__LogicalOrExpression__LogicalOrExprAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalOrExpressionAccess().getLogicalOrExprAssignment_1_1()); 
            }
            // InternalAcmeParser.g:17206:2: ( rule__LogicalOrExpression__LogicalOrExprAssignment_1_1 )
            // InternalAcmeParser.g:17206:3: rule__LogicalOrExpression__LogicalOrExprAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__LogicalOrExpression__LogicalOrExprAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalOrExpressionAccess().getLogicalOrExprAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Group_1__1__Impl"


    // $ANTLR start "rule__LogicalAndExpression__Group__0"
    // InternalAcmeParser.g:17215:1: rule__LogicalAndExpression__Group__0 : rule__LogicalAndExpression__Group__0__Impl rule__LogicalAndExpression__Group__1 ;
    public final void rule__LogicalAndExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17219:1: ( rule__LogicalAndExpression__Group__0__Impl rule__LogicalAndExpression__Group__1 )
            // InternalAcmeParser.g:17220:2: rule__LogicalAndExpression__Group__0__Impl rule__LogicalAndExpression__Group__1
            {
            pushFollow(FOLLOW_84);
            rule__LogicalAndExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LogicalAndExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Group__0"


    // $ANTLR start "rule__LogicalAndExpression__Group__0__Impl"
    // InternalAcmeParser.g:17227:1: rule__LogicalAndExpression__Group__0__Impl : ( ruleequalityExpression ) ;
    public final void rule__LogicalAndExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17231:1: ( ( ruleequalityExpression ) )
            // InternalAcmeParser.g:17232:1: ( ruleequalityExpression )
            {
            // InternalAcmeParser.g:17232:1: ( ruleequalityExpression )
            // InternalAcmeParser.g:17233:2: ruleequalityExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndExpressionAccess().getEqualityExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleequalityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndExpressionAccess().getEqualityExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Group__0__Impl"


    // $ANTLR start "rule__LogicalAndExpression__Group__1"
    // InternalAcmeParser.g:17242:1: rule__LogicalAndExpression__Group__1 : rule__LogicalAndExpression__Group__1__Impl ;
    public final void rule__LogicalAndExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17246:1: ( rule__LogicalAndExpression__Group__1__Impl )
            // InternalAcmeParser.g:17247:2: rule__LogicalAndExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LogicalAndExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Group__1"


    // $ANTLR start "rule__LogicalAndExpression__Group__1__Impl"
    // InternalAcmeParser.g:17253:1: rule__LogicalAndExpression__Group__1__Impl : ( ( rule__LogicalAndExpression__Group_1__0 )? ) ;
    public final void rule__LogicalAndExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17257:1: ( ( ( rule__LogicalAndExpression__Group_1__0 )? ) )
            // InternalAcmeParser.g:17258:1: ( ( rule__LogicalAndExpression__Group_1__0 )? )
            {
            // InternalAcmeParser.g:17258:1: ( ( rule__LogicalAndExpression__Group_1__0 )? )
            // InternalAcmeParser.g:17259:2: ( rule__LogicalAndExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndExpressionAccess().getGroup_1()); 
            }
            // InternalAcmeParser.g:17260:2: ( rule__LogicalAndExpression__Group_1__0 )?
            int alt194=2;
            int LA194_0 = input.LA(1);

            if ( (LA194_0==And) ) {
                int LA194_1 = input.LA(2);

                if ( (synpred272_InternalAcmeParser()) ) {
                    alt194=1;
                }
            }
            else if ( (LA194_0==AmpersandAmpersand) ) {
                int LA194_2 = input.LA(2);

                if ( (synpred272_InternalAcmeParser()) ) {
                    alt194=1;
                }
            }
            switch (alt194) {
                case 1 :
                    // InternalAcmeParser.g:17260:3: rule__LogicalAndExpression__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LogicalAndExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Group__1__Impl"


    // $ANTLR start "rule__LogicalAndExpression__Group_1__0"
    // InternalAcmeParser.g:17269:1: rule__LogicalAndExpression__Group_1__0 : rule__LogicalAndExpression__Group_1__0__Impl rule__LogicalAndExpression__Group_1__1 ;
    public final void rule__LogicalAndExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17273:1: ( rule__LogicalAndExpression__Group_1__0__Impl rule__LogicalAndExpression__Group_1__1 )
            // InternalAcmeParser.g:17274:2: rule__LogicalAndExpression__Group_1__0__Impl rule__LogicalAndExpression__Group_1__1
            {
            pushFollow(FOLLOW_81);
            rule__LogicalAndExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LogicalAndExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Group_1__0"


    // $ANTLR start "rule__LogicalAndExpression__Group_1__0__Impl"
    // InternalAcmeParser.g:17281:1: rule__LogicalAndExpression__Group_1__0__Impl : ( ( rule__LogicalAndExpression__Alternatives_1_0 ) ) ;
    public final void rule__LogicalAndExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17285:1: ( ( ( rule__LogicalAndExpression__Alternatives_1_0 ) ) )
            // InternalAcmeParser.g:17286:1: ( ( rule__LogicalAndExpression__Alternatives_1_0 ) )
            {
            // InternalAcmeParser.g:17286:1: ( ( rule__LogicalAndExpression__Alternatives_1_0 ) )
            // InternalAcmeParser.g:17287:2: ( rule__LogicalAndExpression__Alternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndExpressionAccess().getAlternatives_1_0()); 
            }
            // InternalAcmeParser.g:17288:2: ( rule__LogicalAndExpression__Alternatives_1_0 )
            // InternalAcmeParser.g:17288:3: rule__LogicalAndExpression__Alternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__LogicalAndExpression__Alternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndExpressionAccess().getAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Group_1__0__Impl"


    // $ANTLR start "rule__LogicalAndExpression__Group_1__1"
    // InternalAcmeParser.g:17296:1: rule__LogicalAndExpression__Group_1__1 : rule__LogicalAndExpression__Group_1__1__Impl ;
    public final void rule__LogicalAndExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17300:1: ( rule__LogicalAndExpression__Group_1__1__Impl )
            // InternalAcmeParser.g:17301:2: rule__LogicalAndExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LogicalAndExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Group_1__1"


    // $ANTLR start "rule__LogicalAndExpression__Group_1__1__Impl"
    // InternalAcmeParser.g:17307:1: rule__LogicalAndExpression__Group_1__1__Impl : ( ( rule__LogicalAndExpression__LogicalAndExprAssignment_1_1 ) ) ;
    public final void rule__LogicalAndExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17311:1: ( ( ( rule__LogicalAndExpression__LogicalAndExprAssignment_1_1 ) ) )
            // InternalAcmeParser.g:17312:1: ( ( rule__LogicalAndExpression__LogicalAndExprAssignment_1_1 ) )
            {
            // InternalAcmeParser.g:17312:1: ( ( rule__LogicalAndExpression__LogicalAndExprAssignment_1_1 ) )
            // InternalAcmeParser.g:17313:2: ( rule__LogicalAndExpression__LogicalAndExprAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndExpressionAccess().getLogicalAndExprAssignment_1_1()); 
            }
            // InternalAcmeParser.g:17314:2: ( rule__LogicalAndExpression__LogicalAndExprAssignment_1_1 )
            // InternalAcmeParser.g:17314:3: rule__LogicalAndExpression__LogicalAndExprAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__LogicalAndExpression__LogicalAndExprAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndExpressionAccess().getLogicalAndExprAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Group_1__1__Impl"


    // $ANTLR start "rule__EqualityExpression__Group__0"
    // InternalAcmeParser.g:17323:1: rule__EqualityExpression__Group__0 : rule__EqualityExpression__Group__0__Impl rule__EqualityExpression__Group__1 ;
    public final void rule__EqualityExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17327:1: ( rule__EqualityExpression__Group__0__Impl rule__EqualityExpression__Group__1 )
            // InternalAcmeParser.g:17328:2: rule__EqualityExpression__Group__0__Impl rule__EqualityExpression__Group__1
            {
            pushFollow(FOLLOW_85);
            rule__EqualityExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__EqualityExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityExpression__Group__0"


    // $ANTLR start "rule__EqualityExpression__Group__0__Impl"
    // InternalAcmeParser.g:17335:1: rule__EqualityExpression__Group__0__Impl : ( rulerelationalExpression ) ;
    public final void rule__EqualityExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17339:1: ( ( rulerelationalExpression ) )
            // InternalAcmeParser.g:17340:1: ( rulerelationalExpression )
            {
            // InternalAcmeParser.g:17340:1: ( rulerelationalExpression )
            // InternalAcmeParser.g:17341:2: rulerelationalExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            rulerelationalExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityExpression__Group__0__Impl"


    // $ANTLR start "rule__EqualityExpression__Group__1"
    // InternalAcmeParser.g:17350:1: rule__EqualityExpression__Group__1 : rule__EqualityExpression__Group__1__Impl ;
    public final void rule__EqualityExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17354:1: ( rule__EqualityExpression__Group__1__Impl )
            // InternalAcmeParser.g:17355:2: rule__EqualityExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__EqualityExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityExpression__Group__1"


    // $ANTLR start "rule__EqualityExpression__Group__1__Impl"
    // InternalAcmeParser.g:17361:1: rule__EqualityExpression__Group__1__Impl : ( ( rule__EqualityExpression__Group_1__0 )? ) ;
    public final void rule__EqualityExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17365:1: ( ( ( rule__EqualityExpression__Group_1__0 )? ) )
            // InternalAcmeParser.g:17366:1: ( ( rule__EqualityExpression__Group_1__0 )? )
            {
            // InternalAcmeParser.g:17366:1: ( ( rule__EqualityExpression__Group_1__0 )? )
            // InternalAcmeParser.g:17367:2: ( rule__EqualityExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityExpressionAccess().getGroup_1()); 
            }
            // InternalAcmeParser.g:17368:2: ( rule__EqualityExpression__Group_1__0 )?
            int alt195=2;
            int LA195_0 = input.LA(1);

            if ( (LA195_0==ExclamationMarkEqualsSign) ) {
                int LA195_1 = input.LA(2);

                if ( (synpred273_InternalAcmeParser()) ) {
                    alt195=1;
                }
            }
            else if ( (LA195_0==EqualsSignEqualsSign) ) {
                int LA195_2 = input.LA(2);

                if ( (synpred273_InternalAcmeParser()) ) {
                    alt195=1;
                }
            }
            switch (alt195) {
                case 1 :
                    // InternalAcmeParser.g:17368:3: rule__EqualityExpression__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__EqualityExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityExpression__Group__1__Impl"


    // $ANTLR start "rule__EqualityExpression__Group_1__0"
    // InternalAcmeParser.g:17377:1: rule__EqualityExpression__Group_1__0 : rule__EqualityExpression__Group_1__0__Impl rule__EqualityExpression__Group_1__1 ;
    public final void rule__EqualityExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17381:1: ( rule__EqualityExpression__Group_1__0__Impl rule__EqualityExpression__Group_1__1 )
            // InternalAcmeParser.g:17382:2: rule__EqualityExpression__Group_1__0__Impl rule__EqualityExpression__Group_1__1
            {
            pushFollow(FOLLOW_81);
            rule__EqualityExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__EqualityExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityExpression__Group_1__0"


    // $ANTLR start "rule__EqualityExpression__Group_1__0__Impl"
    // InternalAcmeParser.g:17389:1: rule__EqualityExpression__Group_1__0__Impl : ( ( rule__EqualityExpression__EqAssignment_1_0 ) ) ;
    public final void rule__EqualityExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17393:1: ( ( ( rule__EqualityExpression__EqAssignment_1_0 ) ) )
            // InternalAcmeParser.g:17394:1: ( ( rule__EqualityExpression__EqAssignment_1_0 ) )
            {
            // InternalAcmeParser.g:17394:1: ( ( rule__EqualityExpression__EqAssignment_1_0 ) )
            // InternalAcmeParser.g:17395:2: ( rule__EqualityExpression__EqAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityExpressionAccess().getEqAssignment_1_0()); 
            }
            // InternalAcmeParser.g:17396:2: ( rule__EqualityExpression__EqAssignment_1_0 )
            // InternalAcmeParser.g:17396:3: rule__EqualityExpression__EqAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__EqualityExpression__EqAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityExpressionAccess().getEqAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityExpression__Group_1__0__Impl"


    // $ANTLR start "rule__EqualityExpression__Group_1__1"
    // InternalAcmeParser.g:17404:1: rule__EqualityExpression__Group_1__1 : rule__EqualityExpression__Group_1__1__Impl ;
    public final void rule__EqualityExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17408:1: ( rule__EqualityExpression__Group_1__1__Impl )
            // InternalAcmeParser.g:17409:2: rule__EqualityExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__EqualityExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityExpression__Group_1__1"


    // $ANTLR start "rule__EqualityExpression__Group_1__1__Impl"
    // InternalAcmeParser.g:17415:1: rule__EqualityExpression__Group_1__1__Impl : ( ( rule__EqualityExpression__EqExprAssignment_1_1 ) ) ;
    public final void rule__EqualityExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17419:1: ( ( ( rule__EqualityExpression__EqExprAssignment_1_1 ) ) )
            // InternalAcmeParser.g:17420:1: ( ( rule__EqualityExpression__EqExprAssignment_1_1 ) )
            {
            // InternalAcmeParser.g:17420:1: ( ( rule__EqualityExpression__EqExprAssignment_1_1 ) )
            // InternalAcmeParser.g:17421:2: ( rule__EqualityExpression__EqExprAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityExpressionAccess().getEqExprAssignment_1_1()); 
            }
            // InternalAcmeParser.g:17422:2: ( rule__EqualityExpression__EqExprAssignment_1_1 )
            // InternalAcmeParser.g:17422:3: rule__EqualityExpression__EqExprAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__EqualityExpression__EqExprAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityExpressionAccess().getEqExprAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityExpression__Group_1__1__Impl"


    // $ANTLR start "rule__RelationalExpression__Group__0"
    // InternalAcmeParser.g:17431:1: rule__RelationalExpression__Group__0 : rule__RelationalExpression__Group__0__Impl rule__RelationalExpression__Group__1 ;
    public final void rule__RelationalExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17435:1: ( rule__RelationalExpression__Group__0__Impl rule__RelationalExpression__Group__1 )
            // InternalAcmeParser.g:17436:2: rule__RelationalExpression__Group__0__Impl rule__RelationalExpression__Group__1
            {
            pushFollow(FOLLOW_86);
            rule__RelationalExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RelationalExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group__0"


    // $ANTLR start "rule__RelationalExpression__Group__0__Impl"
    // InternalAcmeParser.g:17443:1: rule__RelationalExpression__Group__0__Impl : ( ruleadditiveExpression ) ;
    public final void rule__RelationalExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17447:1: ( ( ruleadditiveExpression ) )
            // InternalAcmeParser.g:17448:1: ( ruleadditiveExpression )
            {
            // InternalAcmeParser.g:17448:1: ( ruleadditiveExpression )
            // InternalAcmeParser.g:17449:2: ruleadditiveExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleadditiveExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group__0__Impl"


    // $ANTLR start "rule__RelationalExpression__Group__1"
    // InternalAcmeParser.g:17458:1: rule__RelationalExpression__Group__1 : rule__RelationalExpression__Group__1__Impl ;
    public final void rule__RelationalExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17462:1: ( rule__RelationalExpression__Group__1__Impl )
            // InternalAcmeParser.g:17463:2: rule__RelationalExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RelationalExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group__1"


    // $ANTLR start "rule__RelationalExpression__Group__1__Impl"
    // InternalAcmeParser.g:17469:1: rule__RelationalExpression__Group__1__Impl : ( ( rule__RelationalExpression__Group_1__0 )? ) ;
    public final void rule__RelationalExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17473:1: ( ( ( rule__RelationalExpression__Group_1__0 )? ) )
            // InternalAcmeParser.g:17474:1: ( ( rule__RelationalExpression__Group_1__0 )? )
            {
            // InternalAcmeParser.g:17474:1: ( ( rule__RelationalExpression__Group_1__0 )? )
            // InternalAcmeParser.g:17475:2: ( rule__RelationalExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getGroup_1()); 
            }
            // InternalAcmeParser.g:17476:2: ( rule__RelationalExpression__Group_1__0 )?
            int alt196=2;
            switch ( input.LA(1) ) {
                case LessThanSign:
                    {
                    int LA196_1 = input.LA(2);

                    if ( (synpred274_InternalAcmeParser()) ) {
                        alt196=1;
                    }
                    }
                    break;
                case LessThanSignEqualsSign:
                    {
                    int LA196_2 = input.LA(2);

                    if ( (synpred274_InternalAcmeParser()) ) {
                        alt196=1;
                    }
                    }
                    break;
                case GreaterThanSign:
                    {
                    int LA196_3 = input.LA(2);

                    if ( (synpred274_InternalAcmeParser()) ) {
                        alt196=1;
                    }
                    }
                    break;
                case GreaterThanSignEqualsSign:
                    {
                    int LA196_4 = input.LA(2);

                    if ( (synpred274_InternalAcmeParser()) ) {
                        alt196=1;
                    }
                    }
                    break;
            }

            switch (alt196) {
                case 1 :
                    // InternalAcmeParser.g:17476:3: rule__RelationalExpression__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__RelationalExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group__1__Impl"


    // $ANTLR start "rule__RelationalExpression__Group_1__0"
    // InternalAcmeParser.g:17485:1: rule__RelationalExpression__Group_1__0 : rule__RelationalExpression__Group_1__0__Impl rule__RelationalExpression__Group_1__1 ;
    public final void rule__RelationalExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17489:1: ( rule__RelationalExpression__Group_1__0__Impl rule__RelationalExpression__Group_1__1 )
            // InternalAcmeParser.g:17490:2: rule__RelationalExpression__Group_1__0__Impl rule__RelationalExpression__Group_1__1
            {
            pushFollow(FOLLOW_81);
            rule__RelationalExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RelationalExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group_1__0"


    // $ANTLR start "rule__RelationalExpression__Group_1__0__Impl"
    // InternalAcmeParser.g:17497:1: rule__RelationalExpression__Group_1__0__Impl : ( ( rule__RelationalExpression__RelAssignment_1_0 ) ) ;
    public final void rule__RelationalExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17501:1: ( ( ( rule__RelationalExpression__RelAssignment_1_0 ) ) )
            // InternalAcmeParser.g:17502:1: ( ( rule__RelationalExpression__RelAssignment_1_0 ) )
            {
            // InternalAcmeParser.g:17502:1: ( ( rule__RelationalExpression__RelAssignment_1_0 ) )
            // InternalAcmeParser.g:17503:2: ( rule__RelationalExpression__RelAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getRelAssignment_1_0()); 
            }
            // InternalAcmeParser.g:17504:2: ( rule__RelationalExpression__RelAssignment_1_0 )
            // InternalAcmeParser.g:17504:3: rule__RelationalExpression__RelAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__RelationalExpression__RelAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getRelAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group_1__0__Impl"


    // $ANTLR start "rule__RelationalExpression__Group_1__1"
    // InternalAcmeParser.g:17512:1: rule__RelationalExpression__Group_1__1 : rule__RelationalExpression__Group_1__1__Impl ;
    public final void rule__RelationalExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17516:1: ( rule__RelationalExpression__Group_1__1__Impl )
            // InternalAcmeParser.g:17517:2: rule__RelationalExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RelationalExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group_1__1"


    // $ANTLR start "rule__RelationalExpression__Group_1__1__Impl"
    // InternalAcmeParser.g:17523:1: rule__RelationalExpression__Group_1__1__Impl : ( ( rule__RelationalExpression__RelExprAssignment_1_1 ) ) ;
    public final void rule__RelationalExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17527:1: ( ( ( rule__RelationalExpression__RelExprAssignment_1_1 ) ) )
            // InternalAcmeParser.g:17528:1: ( ( rule__RelationalExpression__RelExprAssignment_1_1 ) )
            {
            // InternalAcmeParser.g:17528:1: ( ( rule__RelationalExpression__RelExprAssignment_1_1 ) )
            // InternalAcmeParser.g:17529:2: ( rule__RelationalExpression__RelExprAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getRelExprAssignment_1_1()); 
            }
            // InternalAcmeParser.g:17530:2: ( rule__RelationalExpression__RelExprAssignment_1_1 )
            // InternalAcmeParser.g:17530:3: rule__RelationalExpression__RelExprAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__RelationalExpression__RelExprAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getRelExprAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__Group_1__1__Impl"


    // $ANTLR start "rule__AdditiveExpression__Group__0"
    // InternalAcmeParser.g:17539:1: rule__AdditiveExpression__Group__0 : rule__AdditiveExpression__Group__0__Impl rule__AdditiveExpression__Group__1 ;
    public final void rule__AdditiveExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17543:1: ( rule__AdditiveExpression__Group__0__Impl rule__AdditiveExpression__Group__1 )
            // InternalAcmeParser.g:17544:2: rule__AdditiveExpression__Group__0__Impl rule__AdditiveExpression__Group__1
            {
            pushFollow(FOLLOW_87);
            rule__AdditiveExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AdditiveExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group__0"


    // $ANTLR start "rule__AdditiveExpression__Group__0__Impl"
    // InternalAcmeParser.g:17551:1: rule__AdditiveExpression__Group__0__Impl : ( rulemultiplicativeExpression ) ;
    public final void rule__AdditiveExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17555:1: ( ( rulemultiplicativeExpression ) )
            // InternalAcmeParser.g:17556:1: ( rulemultiplicativeExpression )
            {
            // InternalAcmeParser.g:17556:1: ( rulemultiplicativeExpression )
            // InternalAcmeParser.g:17557:2: rulemultiplicativeExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            rulemultiplicativeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group__0__Impl"


    // $ANTLR start "rule__AdditiveExpression__Group__1"
    // InternalAcmeParser.g:17566:1: rule__AdditiveExpression__Group__1 : rule__AdditiveExpression__Group__1__Impl ;
    public final void rule__AdditiveExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17570:1: ( rule__AdditiveExpression__Group__1__Impl )
            // InternalAcmeParser.g:17571:2: rule__AdditiveExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AdditiveExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group__1"


    // $ANTLR start "rule__AdditiveExpression__Group__1__Impl"
    // InternalAcmeParser.g:17577:1: rule__AdditiveExpression__Group__1__Impl : ( ( rule__AdditiveExpression__Group_1__0 )? ) ;
    public final void rule__AdditiveExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17581:1: ( ( ( rule__AdditiveExpression__Group_1__0 )? ) )
            // InternalAcmeParser.g:17582:1: ( ( rule__AdditiveExpression__Group_1__0 )? )
            {
            // InternalAcmeParser.g:17582:1: ( ( rule__AdditiveExpression__Group_1__0 )? )
            // InternalAcmeParser.g:17583:2: ( rule__AdditiveExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); 
            }
            // InternalAcmeParser.g:17584:2: ( rule__AdditiveExpression__Group_1__0 )?
            int alt197=2;
            int LA197_0 = input.LA(1);

            if ( (LA197_0==PlusSign) ) {
                int LA197_1 = input.LA(2);

                if ( (synpred275_InternalAcmeParser()) ) {
                    alt197=1;
                }
            }
            else if ( (LA197_0==HyphenMinus) ) {
                int LA197_2 = input.LA(2);

                if ( (synpred275_InternalAcmeParser()) ) {
                    alt197=1;
                }
            }
            switch (alt197) {
                case 1 :
                    // InternalAcmeParser.g:17584:3: rule__AdditiveExpression__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AdditiveExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group__1__Impl"


    // $ANTLR start "rule__AdditiveExpression__Group_1__0"
    // InternalAcmeParser.g:17593:1: rule__AdditiveExpression__Group_1__0 : rule__AdditiveExpression__Group_1__0__Impl rule__AdditiveExpression__Group_1__1 ;
    public final void rule__AdditiveExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17597:1: ( rule__AdditiveExpression__Group_1__0__Impl rule__AdditiveExpression__Group_1__1 )
            // InternalAcmeParser.g:17598:2: rule__AdditiveExpression__Group_1__0__Impl rule__AdditiveExpression__Group_1__1
            {
            pushFollow(FOLLOW_81);
            rule__AdditiveExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AdditiveExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group_1__0"


    // $ANTLR start "rule__AdditiveExpression__Group_1__0__Impl"
    // InternalAcmeParser.g:17605:1: rule__AdditiveExpression__Group_1__0__Impl : ( ( rule__AdditiveExpression__AddAssignment_1_0 ) ) ;
    public final void rule__AdditiveExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17609:1: ( ( ( rule__AdditiveExpression__AddAssignment_1_0 ) ) )
            // InternalAcmeParser.g:17610:1: ( ( rule__AdditiveExpression__AddAssignment_1_0 ) )
            {
            // InternalAcmeParser.g:17610:1: ( ( rule__AdditiveExpression__AddAssignment_1_0 ) )
            // InternalAcmeParser.g:17611:2: ( rule__AdditiveExpression__AddAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getAddAssignment_1_0()); 
            }
            // InternalAcmeParser.g:17612:2: ( rule__AdditiveExpression__AddAssignment_1_0 )
            // InternalAcmeParser.g:17612:3: rule__AdditiveExpression__AddAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__AdditiveExpression__AddAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getAddAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group_1__0__Impl"


    // $ANTLR start "rule__AdditiveExpression__Group_1__1"
    // InternalAcmeParser.g:17620:1: rule__AdditiveExpression__Group_1__1 : rule__AdditiveExpression__Group_1__1__Impl ;
    public final void rule__AdditiveExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17624:1: ( rule__AdditiveExpression__Group_1__1__Impl )
            // InternalAcmeParser.g:17625:2: rule__AdditiveExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AdditiveExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group_1__1"


    // $ANTLR start "rule__AdditiveExpression__Group_1__1__Impl"
    // InternalAcmeParser.g:17631:1: rule__AdditiveExpression__Group_1__1__Impl : ( ( rule__AdditiveExpression__AddExprAssignment_1_1 ) ) ;
    public final void rule__AdditiveExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17635:1: ( ( ( rule__AdditiveExpression__AddExprAssignment_1_1 ) ) )
            // InternalAcmeParser.g:17636:1: ( ( rule__AdditiveExpression__AddExprAssignment_1_1 ) )
            {
            // InternalAcmeParser.g:17636:1: ( ( rule__AdditiveExpression__AddExprAssignment_1_1 ) )
            // InternalAcmeParser.g:17637:2: ( rule__AdditiveExpression__AddExprAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getAddExprAssignment_1_1()); 
            }
            // InternalAcmeParser.g:17638:2: ( rule__AdditiveExpression__AddExprAssignment_1_1 )
            // InternalAcmeParser.g:17638:3: rule__AdditiveExpression__AddExprAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AdditiveExpression__AddExprAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getAddExprAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__Group_1__1__Impl"


    // $ANTLR start "rule__MultiplicativeExpression__Group__0"
    // InternalAcmeParser.g:17647:1: rule__MultiplicativeExpression__Group__0 : rule__MultiplicativeExpression__Group__0__Impl rule__MultiplicativeExpression__Group__1 ;
    public final void rule__MultiplicativeExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17651:1: ( rule__MultiplicativeExpression__Group__0__Impl rule__MultiplicativeExpression__Group__1 )
            // InternalAcmeParser.g:17652:2: rule__MultiplicativeExpression__Group__0__Impl rule__MultiplicativeExpression__Group__1
            {
            pushFollow(FOLLOW_88);
            rule__MultiplicativeExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MultiplicativeExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group__0"


    // $ANTLR start "rule__MultiplicativeExpression__Group__0__Impl"
    // InternalAcmeParser.g:17659:1: rule__MultiplicativeExpression__Group__0__Impl : ( ruleunaryExpression ) ;
    public final void rule__MultiplicativeExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17663:1: ( ( ruleunaryExpression ) )
            // InternalAcmeParser.g:17664:1: ( ruleunaryExpression )
            {
            // InternalAcmeParser.g:17664:1: ( ruleunaryExpression )
            // InternalAcmeParser.g:17665:2: ruleunaryExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getUnaryExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleunaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getUnaryExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group__0__Impl"


    // $ANTLR start "rule__MultiplicativeExpression__Group__1"
    // InternalAcmeParser.g:17674:1: rule__MultiplicativeExpression__Group__1 : rule__MultiplicativeExpression__Group__1__Impl ;
    public final void rule__MultiplicativeExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17678:1: ( rule__MultiplicativeExpression__Group__1__Impl )
            // InternalAcmeParser.g:17679:2: rule__MultiplicativeExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MultiplicativeExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group__1"


    // $ANTLR start "rule__MultiplicativeExpression__Group__1__Impl"
    // InternalAcmeParser.g:17685:1: rule__MultiplicativeExpression__Group__1__Impl : ( ( rule__MultiplicativeExpression__Group_1__0 )? ) ;
    public final void rule__MultiplicativeExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17689:1: ( ( ( rule__MultiplicativeExpression__Group_1__0 )? ) )
            // InternalAcmeParser.g:17690:1: ( ( rule__MultiplicativeExpression__Group_1__0 )? )
            {
            // InternalAcmeParser.g:17690:1: ( ( rule__MultiplicativeExpression__Group_1__0 )? )
            // InternalAcmeParser.g:17691:2: ( rule__MultiplicativeExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); 
            }
            // InternalAcmeParser.g:17692:2: ( rule__MultiplicativeExpression__Group_1__0 )?
            int alt198=2;
            switch ( input.LA(1) ) {
                case Asterisk:
                    {
                    int LA198_1 = input.LA(2);

                    if ( (synpred276_InternalAcmeParser()) ) {
                        alt198=1;
                    }
                    }
                    break;
                case Solidus:
                    {
                    int LA198_2 = input.LA(2);

                    if ( (synpred276_InternalAcmeParser()) ) {
                        alt198=1;
                    }
                    }
                    break;
                case PercentSign:
                    {
                    int LA198_3 = input.LA(2);

                    if ( (synpred276_InternalAcmeParser()) ) {
                        alt198=1;
                    }
                    }
                    break;
            }

            switch (alt198) {
                case 1 :
                    // InternalAcmeParser.g:17692:3: rule__MultiplicativeExpression__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__MultiplicativeExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group__1__Impl"


    // $ANTLR start "rule__MultiplicativeExpression__Group_1__0"
    // InternalAcmeParser.g:17701:1: rule__MultiplicativeExpression__Group_1__0 : rule__MultiplicativeExpression__Group_1__0__Impl rule__MultiplicativeExpression__Group_1__1 ;
    public final void rule__MultiplicativeExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17705:1: ( rule__MultiplicativeExpression__Group_1__0__Impl rule__MultiplicativeExpression__Group_1__1 )
            // InternalAcmeParser.g:17706:2: rule__MultiplicativeExpression__Group_1__0__Impl rule__MultiplicativeExpression__Group_1__1
            {
            pushFollow(FOLLOW_81);
            rule__MultiplicativeExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MultiplicativeExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group_1__0"


    // $ANTLR start "rule__MultiplicativeExpression__Group_1__0__Impl"
    // InternalAcmeParser.g:17713:1: rule__MultiplicativeExpression__Group_1__0__Impl : ( ( rule__MultiplicativeExpression__MultAssignment_1_0 ) ) ;
    public final void rule__MultiplicativeExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17717:1: ( ( ( rule__MultiplicativeExpression__MultAssignment_1_0 ) ) )
            // InternalAcmeParser.g:17718:1: ( ( rule__MultiplicativeExpression__MultAssignment_1_0 ) )
            {
            // InternalAcmeParser.g:17718:1: ( ( rule__MultiplicativeExpression__MultAssignment_1_0 ) )
            // InternalAcmeParser.g:17719:2: ( rule__MultiplicativeExpression__MultAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getMultAssignment_1_0()); 
            }
            // InternalAcmeParser.g:17720:2: ( rule__MultiplicativeExpression__MultAssignment_1_0 )
            // InternalAcmeParser.g:17720:3: rule__MultiplicativeExpression__MultAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__MultiplicativeExpression__MultAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getMultAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group_1__0__Impl"


    // $ANTLR start "rule__MultiplicativeExpression__Group_1__1"
    // InternalAcmeParser.g:17728:1: rule__MultiplicativeExpression__Group_1__1 : rule__MultiplicativeExpression__Group_1__1__Impl ;
    public final void rule__MultiplicativeExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17732:1: ( rule__MultiplicativeExpression__Group_1__1__Impl )
            // InternalAcmeParser.g:17733:2: rule__MultiplicativeExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MultiplicativeExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group_1__1"


    // $ANTLR start "rule__MultiplicativeExpression__Group_1__1__Impl"
    // InternalAcmeParser.g:17739:1: rule__MultiplicativeExpression__Group_1__1__Impl : ( ( rule__MultiplicativeExpression__MultExprAssignment_1_1 ) ) ;
    public final void rule__MultiplicativeExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17743:1: ( ( ( rule__MultiplicativeExpression__MultExprAssignment_1_1 ) ) )
            // InternalAcmeParser.g:17744:1: ( ( rule__MultiplicativeExpression__MultExprAssignment_1_1 ) )
            {
            // InternalAcmeParser.g:17744:1: ( ( rule__MultiplicativeExpression__MultExprAssignment_1_1 ) )
            // InternalAcmeParser.g:17745:2: ( rule__MultiplicativeExpression__MultExprAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getMultExprAssignment_1_1()); 
            }
            // InternalAcmeParser.g:17746:2: ( rule__MultiplicativeExpression__MultExprAssignment_1_1 )
            // InternalAcmeParser.g:17746:3: rule__MultiplicativeExpression__MultExprAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__MultiplicativeExpression__MultExprAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getMultExprAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__Group_1__1__Impl"


    // $ANTLR start "rule__UnaryExpression__Group__0"
    // InternalAcmeParser.g:17755:1: rule__UnaryExpression__Group__0 : rule__UnaryExpression__Group__0__Impl rule__UnaryExpression__Group__1 ;
    public final void rule__UnaryExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17759:1: ( rule__UnaryExpression__Group__0__Impl rule__UnaryExpression__Group__1 )
            // InternalAcmeParser.g:17760:2: rule__UnaryExpression__Group__0__Impl rule__UnaryExpression__Group__1
            {
            pushFollow(FOLLOW_81);
            rule__UnaryExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnaryExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__Group__0"


    // $ANTLR start "rule__UnaryExpression__Group__0__Impl"
    // InternalAcmeParser.g:17767:1: rule__UnaryExpression__Group__0__Impl : ( ( rule__UnaryExpression__UnaryAssignment_0 )? ) ;
    public final void rule__UnaryExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17771:1: ( ( ( rule__UnaryExpression__UnaryAssignment_0 )? ) )
            // InternalAcmeParser.g:17772:1: ( ( rule__UnaryExpression__UnaryAssignment_0 )? )
            {
            // InternalAcmeParser.g:17772:1: ( ( rule__UnaryExpression__UnaryAssignment_0 )? )
            // InternalAcmeParser.g:17773:2: ( rule__UnaryExpression__UnaryAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionAccess().getUnaryAssignment_0()); 
            }
            // InternalAcmeParser.g:17774:2: ( rule__UnaryExpression__UnaryAssignment_0 )?
            int alt199=2;
            int LA199_0 = input.LA(1);

            if ( (LA199_0==PlusSignPlusSign||LA199_0==HyphenMinusHyphenMinus||LA199_0==PlusSign||LA199_0==HyphenMinus) ) {
                alt199=1;
            }
            switch (alt199) {
                case 1 :
                    // InternalAcmeParser.g:17774:3: rule__UnaryExpression__UnaryAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnaryExpression__UnaryAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionAccess().getUnaryAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__Group__0__Impl"


    // $ANTLR start "rule__UnaryExpression__Group__1"
    // InternalAcmeParser.g:17782:1: rule__UnaryExpression__Group__1 : rule__UnaryExpression__Group__1__Impl rule__UnaryExpression__Group__2 ;
    public final void rule__UnaryExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17786:1: ( rule__UnaryExpression__Group__1__Impl rule__UnaryExpression__Group__2 )
            // InternalAcmeParser.g:17787:2: rule__UnaryExpression__Group__1__Impl rule__UnaryExpression__Group__2
            {
            pushFollow(FOLLOW_89);
            rule__UnaryExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnaryExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__Group__1"


    // $ANTLR start "rule__UnaryExpression__Group__1__Impl"
    // InternalAcmeParser.g:17794:1: rule__UnaryExpression__Group__1__Impl : ( ( rule__UnaryExpression__PrimaryExprAssignment_1 ) ) ;
    public final void rule__UnaryExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17798:1: ( ( ( rule__UnaryExpression__PrimaryExprAssignment_1 ) ) )
            // InternalAcmeParser.g:17799:1: ( ( rule__UnaryExpression__PrimaryExprAssignment_1 ) )
            {
            // InternalAcmeParser.g:17799:1: ( ( rule__UnaryExpression__PrimaryExprAssignment_1 ) )
            // InternalAcmeParser.g:17800:2: ( rule__UnaryExpression__PrimaryExprAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionAccess().getPrimaryExprAssignment_1()); 
            }
            // InternalAcmeParser.g:17801:2: ( rule__UnaryExpression__PrimaryExprAssignment_1 )
            // InternalAcmeParser.g:17801:3: rule__UnaryExpression__PrimaryExprAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__UnaryExpression__PrimaryExprAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionAccess().getPrimaryExprAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__Group__1__Impl"


    // $ANTLR start "rule__UnaryExpression__Group__2"
    // InternalAcmeParser.g:17809:1: rule__UnaryExpression__Group__2 : rule__UnaryExpression__Group__2__Impl ;
    public final void rule__UnaryExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17813:1: ( rule__UnaryExpression__Group__2__Impl )
            // InternalAcmeParser.g:17814:2: rule__UnaryExpression__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnaryExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__Group__2"


    // $ANTLR start "rule__UnaryExpression__Group__2__Impl"
    // InternalAcmeParser.g:17820:1: rule__UnaryExpression__Group__2__Impl : ( ( rule__UnaryExpression__PostAssignment_2 )? ) ;
    public final void rule__UnaryExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17824:1: ( ( ( rule__UnaryExpression__PostAssignment_2 )? ) )
            // InternalAcmeParser.g:17825:1: ( ( rule__UnaryExpression__PostAssignment_2 )? )
            {
            // InternalAcmeParser.g:17825:1: ( ( rule__UnaryExpression__PostAssignment_2 )? )
            // InternalAcmeParser.g:17826:2: ( rule__UnaryExpression__PostAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionAccess().getPostAssignment_2()); 
            }
            // InternalAcmeParser.g:17827:2: ( rule__UnaryExpression__PostAssignment_2 )?
            int alt200=2;
            int LA200_0 = input.LA(1);

            if ( (LA200_0==PlusSignPlusSign) ) {
                int LA200_1 = input.LA(2);

                if ( (synpred278_InternalAcmeParser()) ) {
                    alt200=1;
                }
            }
            else if ( (LA200_0==HyphenMinusHyphenMinus) ) {
                int LA200_2 = input.LA(2);

                if ( (synpred278_InternalAcmeParser()) ) {
                    alt200=1;
                }
            }
            switch (alt200) {
                case 1 :
                    // InternalAcmeParser.g:17827:3: rule__UnaryExpression__PostAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnaryExpression__PostAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionAccess().getPostAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__Group__2__Impl"


    // $ANTLR start "rule__NonunaryExpression__Group_0__0"
    // InternalAcmeParser.g:17836:1: rule__NonunaryExpression__Group_0__0 : rule__NonunaryExpression__Group_0__0__Impl rule__NonunaryExpression__Group_0__1 ;
    public final void rule__NonunaryExpression__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17840:1: ( rule__NonunaryExpression__Group_0__0__Impl rule__NonunaryExpression__Group_0__1 )
            // InternalAcmeParser.g:17841:2: rule__NonunaryExpression__Group_0__0__Impl rule__NonunaryExpression__Group_0__1
            {
            pushFollow(FOLLOW_73);
            rule__NonunaryExpression__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__NonunaryExpression__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonunaryExpression__Group_0__0"


    // $ANTLR start "rule__NonunaryExpression__Group_0__0__Impl"
    // InternalAcmeParser.g:17848:1: rule__NonunaryExpression__Group_0__0__Impl : ( ExclamationMark ) ;
    public final void rule__NonunaryExpression__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17852:1: ( ( ExclamationMark ) )
            // InternalAcmeParser.g:17853:1: ( ExclamationMark )
            {
            // InternalAcmeParser.g:17853:1: ( ExclamationMark )
            // InternalAcmeParser.g:17854:2: ExclamationMark
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonunaryExpressionAccess().getExclamationMarkKeyword_0_0()); 
            }
            match(input,ExclamationMark,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonunaryExpressionAccess().getExclamationMarkKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonunaryExpression__Group_0__0__Impl"


    // $ANTLR start "rule__NonunaryExpression__Group_0__1"
    // InternalAcmeParser.g:17863:1: rule__NonunaryExpression__Group_0__1 : rule__NonunaryExpression__Group_0__1__Impl ;
    public final void rule__NonunaryExpression__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17867:1: ( rule__NonunaryExpression__Group_0__1__Impl )
            // InternalAcmeParser.g:17868:2: rule__NonunaryExpression__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NonunaryExpression__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonunaryExpression__Group_0__1"


    // $ANTLR start "rule__NonunaryExpression__Group_0__1__Impl"
    // InternalAcmeParser.g:17874:1: rule__NonunaryExpression__Group_0__1__Impl : ( rulebooleanExpression ) ;
    public final void rule__NonunaryExpression__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17878:1: ( ( rulebooleanExpression ) )
            // InternalAcmeParser.g:17879:1: ( rulebooleanExpression )
            {
            // InternalAcmeParser.g:17879:1: ( rulebooleanExpression )
            // InternalAcmeParser.g:17880:2: rulebooleanExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonunaryExpressionAccess().getBooleanExpressionParserRuleCall_0_1()); 
            }
            pushFollow(FOLLOW_2);
            rulebooleanExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonunaryExpressionAccess().getBooleanExpressionParserRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonunaryExpression__Group_0__1__Impl"


    // $ANTLR start "rule__PrimaryExpression__Group_4__0"
    // InternalAcmeParser.g:17890:1: rule__PrimaryExpression__Group_4__0 : rule__PrimaryExpression__Group_4__0__Impl rule__PrimaryExpression__Group_4__1 ;
    public final void rule__PrimaryExpression__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17894:1: ( rule__PrimaryExpression__Group_4__0__Impl rule__PrimaryExpression__Group_4__1 )
            // InternalAcmeParser.g:17895:2: rule__PrimaryExpression__Group_4__0__Impl rule__PrimaryExpression__Group_4__1
            {
            pushFollow(FOLLOW_73);
            rule__PrimaryExpression__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PrimaryExpression__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__Group_4__0"


    // $ANTLR start "rule__PrimaryExpression__Group_4__0__Impl"
    // InternalAcmeParser.g:17902:1: rule__PrimaryExpression__Group_4__0__Impl : ( LeftParenthesis ) ;
    public final void rule__PrimaryExpression__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17906:1: ( ( LeftParenthesis ) )
            // InternalAcmeParser.g:17907:1: ( LeftParenthesis )
            {
            // InternalAcmeParser.g:17907:1: ( LeftParenthesis )
            // InternalAcmeParser.g:17908:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_4_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__Group_4__0__Impl"


    // $ANTLR start "rule__PrimaryExpression__Group_4__1"
    // InternalAcmeParser.g:17917:1: rule__PrimaryExpression__Group_4__1 : rule__PrimaryExpression__Group_4__1__Impl rule__PrimaryExpression__Group_4__2 ;
    public final void rule__PrimaryExpression__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17921:1: ( rule__PrimaryExpression__Group_4__1__Impl rule__PrimaryExpression__Group_4__2 )
            // InternalAcmeParser.g:17922:2: rule__PrimaryExpression__Group_4__1__Impl rule__PrimaryExpression__Group_4__2
            {
            pushFollow(FOLLOW_90);
            rule__PrimaryExpression__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PrimaryExpression__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__Group_4__1"


    // $ANTLR start "rule__PrimaryExpression__Group_4__1__Impl"
    // InternalAcmeParser.g:17929:1: rule__PrimaryExpression__Group_4__1__Impl : ( ruleassignmentExpression ) ;
    public final void rule__PrimaryExpression__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17933:1: ( ( ruleassignmentExpression ) )
            // InternalAcmeParser.g:17934:1: ( ruleassignmentExpression )
            {
            // InternalAcmeParser.g:17934:1: ( ruleassignmentExpression )
            // InternalAcmeParser.g:17935:2: ruleassignmentExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExpressionAccess().getAssignmentExpressionParserRuleCall_4_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleassignmentExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExpressionAccess().getAssignmentExpressionParserRuleCall_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__Group_4__1__Impl"


    // $ANTLR start "rule__PrimaryExpression__Group_4__2"
    // InternalAcmeParser.g:17944:1: rule__PrimaryExpression__Group_4__2 : rule__PrimaryExpression__Group_4__2__Impl ;
    public final void rule__PrimaryExpression__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17948:1: ( rule__PrimaryExpression__Group_4__2__Impl )
            // InternalAcmeParser.g:17949:2: rule__PrimaryExpression__Group_4__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryExpression__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__Group_4__2"


    // $ANTLR start "rule__PrimaryExpression__Group_4__2__Impl"
    // InternalAcmeParser.g:17955:1: rule__PrimaryExpression__Group_4__2__Impl : ( RightParenthesis ) ;
    public final void rule__PrimaryExpression__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17959:1: ( ( RightParenthesis ) )
            // InternalAcmeParser.g:17960:1: ( RightParenthesis )
            {
            // InternalAcmeParser.g:17960:1: ( RightParenthesis )
            // InternalAcmeParser.g:17961:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_4_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__Group_4__2__Impl"


    // $ANTLR start "rule__IdExpression__Group_1__0"
    // InternalAcmeParser.g:17971:1: rule__IdExpression__Group_1__0 : rule__IdExpression__Group_1__0__Impl rule__IdExpression__Group_1__1 ;
    public final void rule__IdExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17975:1: ( rule__IdExpression__Group_1__0__Impl rule__IdExpression__Group_1__1 )
            // InternalAcmeParser.g:17976:2: rule__IdExpression__Group_1__0__Impl rule__IdExpression__Group_1__1
            {
            pushFollow(FOLLOW_11);
            rule__IdExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IdExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Group_1__0"


    // $ANTLR start "rule__IdExpression__Group_1__0__Impl"
    // InternalAcmeParser.g:17983:1: rule__IdExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__IdExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:17987:1: ( ( () ) )
            // InternalAcmeParser.g:17988:1: ( () )
            {
            // InternalAcmeParser.g:17988:1: ( () )
            // InternalAcmeParser.g:17989:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdExpressionAccess().getIdExpressionAction_1_0()); 
            }
            // InternalAcmeParser.g:17990:2: ()
            // InternalAcmeParser.g:17990:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdExpressionAccess().getIdExpressionAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Group_1__0__Impl"


    // $ANTLR start "rule__IdExpression__Group_1__1"
    // InternalAcmeParser.g:17998:1: rule__IdExpression__Group_1__1 : rule__IdExpression__Group_1__1__Impl ;
    public final void rule__IdExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18002:1: ( rule__IdExpression__Group_1__1__Impl )
            // InternalAcmeParser.g:18003:2: rule__IdExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IdExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Group_1__1"


    // $ANTLR start "rule__IdExpression__Group_1__1__Impl"
    // InternalAcmeParser.g:18009:1: rule__IdExpression__Group_1__1__Impl : ( ruleQualifiedIdentifier ) ;
    public final void rule__IdExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18013:1: ( ( ruleQualifiedIdentifier ) )
            // InternalAcmeParser.g:18014:1: ( ruleQualifiedIdentifier )
            {
            // InternalAcmeParser.g:18014:1: ( ruleQualifiedIdentifier )
            // InternalAcmeParser.g:18015:2: ruleQualifiedIdentifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdExpressionAccess().getQualifiedIdentifierParserRuleCall_1_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdExpressionAccess().getQualifiedIdentifierParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Group_1__1__Impl"


    // $ANTLR start "rule__IdExpression__Group_2__0"
    // InternalAcmeParser.g:18025:1: rule__IdExpression__Group_2__0 : rule__IdExpression__Group_2__0__Impl rule__IdExpression__Group_2__1 ;
    public final void rule__IdExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18029:1: ( rule__IdExpression__Group_2__0__Impl rule__IdExpression__Group_2__1 )
            // InternalAcmeParser.g:18030:2: rule__IdExpression__Group_2__0__Impl rule__IdExpression__Group_2__1
            {
            pushFollow(FOLLOW_91);
            rule__IdExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IdExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Group_2__0"


    // $ANTLR start "rule__IdExpression__Group_2__0__Impl"
    // InternalAcmeParser.g:18037:1: rule__IdExpression__Group_2__0__Impl : ( () ) ;
    public final void rule__IdExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18041:1: ( ( () ) )
            // InternalAcmeParser.g:18042:1: ( () )
            {
            // InternalAcmeParser.g:18042:1: ( () )
            // InternalAcmeParser.g:18043:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdExpressionAccess().getIdExpressionAction_2_0()); 
            }
            // InternalAcmeParser.g:18044:2: ()
            // InternalAcmeParser.g:18044:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdExpressionAccess().getIdExpressionAction_2_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Group_2__0__Impl"


    // $ANTLR start "rule__IdExpression__Group_2__1"
    // InternalAcmeParser.g:18052:1: rule__IdExpression__Group_2__1 : rule__IdExpression__Group_2__1__Impl ;
    public final void rule__IdExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18056:1: ( rule__IdExpression__Group_2__1__Impl )
            // InternalAcmeParser.g:18057:2: rule__IdExpression__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IdExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Group_2__1"


    // $ANTLR start "rule__IdExpression__Group_2__1__Impl"
    // InternalAcmeParser.g:18063:1: rule__IdExpression__Group_2__1__Impl : ( RULE_INT ) ;
    public final void rule__IdExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18067:1: ( ( RULE_INT ) )
            // InternalAcmeParser.g:18068:1: ( RULE_INT )
            {
            // InternalAcmeParser.g:18068:1: ( RULE_INT )
            // InternalAcmeParser.g:18069:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdExpressionAccess().getINTTerminalRuleCall_2_1()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdExpressionAccess().getINTTerminalRuleCall_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Group_2__1__Impl"


    // $ANTLR start "rule__IdExpression__Group_3__0"
    // InternalAcmeParser.g:18079:1: rule__IdExpression__Group_3__0 : rule__IdExpression__Group_3__0__Impl rule__IdExpression__Group_3__1 ;
    public final void rule__IdExpression__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18083:1: ( rule__IdExpression__Group_3__0__Impl rule__IdExpression__Group_3__1 )
            // InternalAcmeParser.g:18084:2: rule__IdExpression__Group_3__0__Impl rule__IdExpression__Group_3__1
            {
            pushFollow(FOLLOW_92);
            rule__IdExpression__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IdExpression__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Group_3__0"


    // $ANTLR start "rule__IdExpression__Group_3__0__Impl"
    // InternalAcmeParser.g:18091:1: rule__IdExpression__Group_3__0__Impl : ( () ) ;
    public final void rule__IdExpression__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18095:1: ( ( () ) )
            // InternalAcmeParser.g:18096:1: ( () )
            {
            // InternalAcmeParser.g:18096:1: ( () )
            // InternalAcmeParser.g:18097:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdExpressionAccess().getIdExpressionAction_3_0()); 
            }
            // InternalAcmeParser.g:18098:2: ()
            // InternalAcmeParser.g:18098:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdExpressionAccess().getIdExpressionAction_3_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Group_3__0__Impl"


    // $ANTLR start "rule__IdExpression__Group_3__1"
    // InternalAcmeParser.g:18106:1: rule__IdExpression__Group_3__1 : rule__IdExpression__Group_3__1__Impl ;
    public final void rule__IdExpression__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18110:1: ( rule__IdExpression__Group_3__1__Impl )
            // InternalAcmeParser.g:18111:2: rule__IdExpression__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IdExpression__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Group_3__1"


    // $ANTLR start "rule__IdExpression__Group_3__1__Impl"
    // InternalAcmeParser.g:18117:1: rule__IdExpression__Group_3__1__Impl : ( RULE_FLOAT ) ;
    public final void rule__IdExpression__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18121:1: ( ( RULE_FLOAT ) )
            // InternalAcmeParser.g:18122:1: ( RULE_FLOAT )
            {
            // InternalAcmeParser.g:18122:1: ( RULE_FLOAT )
            // InternalAcmeParser.g:18123:2: RULE_FLOAT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdExpressionAccess().getFLOATTerminalRuleCall_3_1()); 
            }
            match(input,RULE_FLOAT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdExpressionAccess().getFLOATTerminalRuleCall_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Group_3__1__Impl"


    // $ANTLR start "rule__IdExpression__Group_4__0"
    // InternalAcmeParser.g:18133:1: rule__IdExpression__Group_4__0 : rule__IdExpression__Group_4__0__Impl rule__IdExpression__Group_4__1 ;
    public final void rule__IdExpression__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18137:1: ( rule__IdExpression__Group_4__0__Impl rule__IdExpression__Group_4__1 )
            // InternalAcmeParser.g:18138:2: rule__IdExpression__Group_4__0__Impl rule__IdExpression__Group_4__1
            {
            pushFollow(FOLLOW_93);
            rule__IdExpression__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IdExpression__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Group_4__0"


    // $ANTLR start "rule__IdExpression__Group_4__0__Impl"
    // InternalAcmeParser.g:18145:1: rule__IdExpression__Group_4__0__Impl : ( () ) ;
    public final void rule__IdExpression__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18149:1: ( ( () ) )
            // InternalAcmeParser.g:18150:1: ( () )
            {
            // InternalAcmeParser.g:18150:1: ( () )
            // InternalAcmeParser.g:18151:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdExpressionAccess().getIdExpressionAction_4_0()); 
            }
            // InternalAcmeParser.g:18152:2: ()
            // InternalAcmeParser.g:18152:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdExpressionAccess().getIdExpressionAction_4_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Group_4__0__Impl"


    // $ANTLR start "rule__IdExpression__Group_4__1"
    // InternalAcmeParser.g:18160:1: rule__IdExpression__Group_4__1 : rule__IdExpression__Group_4__1__Impl ;
    public final void rule__IdExpression__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18164:1: ( rule__IdExpression__Group_4__1__Impl )
            // InternalAcmeParser.g:18165:2: rule__IdExpression__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IdExpression__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Group_4__1"


    // $ANTLR start "rule__IdExpression__Group_4__1__Impl"
    // InternalAcmeParser.g:18171:1: rule__IdExpression__Group_4__1__Impl : ( RULE_STRING ) ;
    public final void rule__IdExpression__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18175:1: ( ( RULE_STRING ) )
            // InternalAcmeParser.g:18176:1: ( RULE_STRING )
            {
            // InternalAcmeParser.g:18176:1: ( RULE_STRING )
            // InternalAcmeParser.g:18177:2: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdExpressionAccess().getSTRINGTerminalRuleCall_4_1()); 
            }
            match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdExpressionAccess().getSTRINGTerminalRuleCall_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Group_4__1__Impl"


    // $ANTLR start "rule__IdExpression__Group_5__0"
    // InternalAcmeParser.g:18187:1: rule__IdExpression__Group_5__0 : rule__IdExpression__Group_5__0__Impl rule__IdExpression__Group_5__1 ;
    public final void rule__IdExpression__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18191:1: ( rule__IdExpression__Group_5__0__Impl rule__IdExpression__Group_5__1 )
            // InternalAcmeParser.g:18192:2: rule__IdExpression__Group_5__0__Impl rule__IdExpression__Group_5__1
            {
            pushFollow(FOLLOW_94);
            rule__IdExpression__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IdExpression__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Group_5__0"


    // $ANTLR start "rule__IdExpression__Group_5__0__Impl"
    // InternalAcmeParser.g:18199:1: rule__IdExpression__Group_5__0__Impl : ( () ) ;
    public final void rule__IdExpression__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18203:1: ( ( () ) )
            // InternalAcmeParser.g:18204:1: ( () )
            {
            // InternalAcmeParser.g:18204:1: ( () )
            // InternalAcmeParser.g:18205:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdExpressionAccess().getIdExpressionAction_5_0()); 
            }
            // InternalAcmeParser.g:18206:2: ()
            // InternalAcmeParser.g:18206:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdExpressionAccess().getIdExpressionAction_5_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Group_5__0__Impl"


    // $ANTLR start "rule__IdExpression__Group_5__1"
    // InternalAcmeParser.g:18214:1: rule__IdExpression__Group_5__1 : rule__IdExpression__Group_5__1__Impl rule__IdExpression__Group_5__2 ;
    public final void rule__IdExpression__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18218:1: ( rule__IdExpression__Group_5__1__Impl rule__IdExpression__Group_5__2 )
            // InternalAcmeParser.g:18219:2: rule__IdExpression__Group_5__1__Impl rule__IdExpression__Group_5__2
            {
            pushFollow(FOLLOW_95);
            rule__IdExpression__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IdExpression__Group_5__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Group_5__1"


    // $ANTLR start "rule__IdExpression__Group_5__1__Impl"
    // InternalAcmeParser.g:18226:1: rule__IdExpression__Group_5__1__Impl : ( Apostrophe ) ;
    public final void rule__IdExpression__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18230:1: ( ( Apostrophe ) )
            // InternalAcmeParser.g:18231:1: ( Apostrophe )
            {
            // InternalAcmeParser.g:18231:1: ( Apostrophe )
            // InternalAcmeParser.g:18232:2: Apostrophe
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdExpressionAccess().getApostropheKeyword_5_1()); 
            }
            match(input,Apostrophe,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdExpressionAccess().getApostropheKeyword_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Group_5__1__Impl"


    // $ANTLR start "rule__IdExpression__Group_5__2"
    // InternalAcmeParser.g:18241:1: rule__IdExpression__Group_5__2 : rule__IdExpression__Group_5__2__Impl rule__IdExpression__Group_5__3 ;
    public final void rule__IdExpression__Group_5__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18245:1: ( rule__IdExpression__Group_5__2__Impl rule__IdExpression__Group_5__3 )
            // InternalAcmeParser.g:18246:2: rule__IdExpression__Group_5__2__Impl rule__IdExpression__Group_5__3
            {
            pushFollow(FOLLOW_94);
            rule__IdExpression__Group_5__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IdExpression__Group_5__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Group_5__2"


    // $ANTLR start "rule__IdExpression__Group_5__2__Impl"
    // InternalAcmeParser.g:18253:1: rule__IdExpression__Group_5__2__Impl : ( RULE_ANY_OTHER ) ;
    public final void rule__IdExpression__Group_5__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18257:1: ( ( RULE_ANY_OTHER ) )
            // InternalAcmeParser.g:18258:1: ( RULE_ANY_OTHER )
            {
            // InternalAcmeParser.g:18258:1: ( RULE_ANY_OTHER )
            // InternalAcmeParser.g:18259:2: RULE_ANY_OTHER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdExpressionAccess().getANY_OTHERTerminalRuleCall_5_2()); 
            }
            match(input,RULE_ANY_OTHER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdExpressionAccess().getANY_OTHERTerminalRuleCall_5_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Group_5__2__Impl"


    // $ANTLR start "rule__IdExpression__Group_5__3"
    // InternalAcmeParser.g:18268:1: rule__IdExpression__Group_5__3 : rule__IdExpression__Group_5__3__Impl ;
    public final void rule__IdExpression__Group_5__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18272:1: ( rule__IdExpression__Group_5__3__Impl )
            // InternalAcmeParser.g:18273:2: rule__IdExpression__Group_5__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IdExpression__Group_5__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Group_5__3"


    // $ANTLR start "rule__IdExpression__Group_5__3__Impl"
    // InternalAcmeParser.g:18279:1: rule__IdExpression__Group_5__3__Impl : ( Apostrophe ) ;
    public final void rule__IdExpression__Group_5__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18283:1: ( ( Apostrophe ) )
            // InternalAcmeParser.g:18284:1: ( Apostrophe )
            {
            // InternalAcmeParser.g:18284:1: ( Apostrophe )
            // InternalAcmeParser.g:18285:2: Apostrophe
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdExpressionAccess().getApostropheKeyword_5_3()); 
            }
            match(input,Apostrophe,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdExpressionAccess().getApostropheKeyword_5_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Group_5__3__Impl"


    // $ANTLR start "rule__IdExpression__Group_6__0"
    // InternalAcmeParser.g:18295:1: rule__IdExpression__Group_6__0 : rule__IdExpression__Group_6__0__Impl rule__IdExpression__Group_6__1 ;
    public final void rule__IdExpression__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18299:1: ( rule__IdExpression__Group_6__0__Impl rule__IdExpression__Group_6__1 )
            // InternalAcmeParser.g:18300:2: rule__IdExpression__Group_6__0__Impl rule__IdExpression__Group_6__1
            {
            pushFollow(FOLLOW_96);
            rule__IdExpression__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IdExpression__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Group_6__0"


    // $ANTLR start "rule__IdExpression__Group_6__0__Impl"
    // InternalAcmeParser.g:18307:1: rule__IdExpression__Group_6__0__Impl : ( () ) ;
    public final void rule__IdExpression__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18311:1: ( ( () ) )
            // InternalAcmeParser.g:18312:1: ( () )
            {
            // InternalAcmeParser.g:18312:1: ( () )
            // InternalAcmeParser.g:18313:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdExpressionAccess().getIdExpressionAction_6_0()); 
            }
            // InternalAcmeParser.g:18314:2: ()
            // InternalAcmeParser.g:18314:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdExpressionAccess().getIdExpressionAction_6_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Group_6__0__Impl"


    // $ANTLR start "rule__IdExpression__Group_6__1"
    // InternalAcmeParser.g:18322:1: rule__IdExpression__Group_6__1 : rule__IdExpression__Group_6__1__Impl ;
    public final void rule__IdExpression__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18326:1: ( rule__IdExpression__Group_6__1__Impl )
            // InternalAcmeParser.g:18327:2: rule__IdExpression__Group_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IdExpression__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Group_6__1"


    // $ANTLR start "rule__IdExpression__Group_6__1__Impl"
    // InternalAcmeParser.g:18333:1: rule__IdExpression__Group_6__1__Impl : ( True ) ;
    public final void rule__IdExpression__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18337:1: ( ( True ) )
            // InternalAcmeParser.g:18338:1: ( True )
            {
            // InternalAcmeParser.g:18338:1: ( True )
            // InternalAcmeParser.g:18339:2: True
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdExpressionAccess().getTrueKeyword_6_1()); 
            }
            match(input,True,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdExpressionAccess().getTrueKeyword_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Group_6__1__Impl"


    // $ANTLR start "rule__IdExpression__Group_7__0"
    // InternalAcmeParser.g:18349:1: rule__IdExpression__Group_7__0 : rule__IdExpression__Group_7__0__Impl rule__IdExpression__Group_7__1 ;
    public final void rule__IdExpression__Group_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18353:1: ( rule__IdExpression__Group_7__0__Impl rule__IdExpression__Group_7__1 )
            // InternalAcmeParser.g:18354:2: rule__IdExpression__Group_7__0__Impl rule__IdExpression__Group_7__1
            {
            pushFollow(FOLLOW_97);
            rule__IdExpression__Group_7__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IdExpression__Group_7__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Group_7__0"


    // $ANTLR start "rule__IdExpression__Group_7__0__Impl"
    // InternalAcmeParser.g:18361:1: rule__IdExpression__Group_7__0__Impl : ( () ) ;
    public final void rule__IdExpression__Group_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18365:1: ( ( () ) )
            // InternalAcmeParser.g:18366:1: ( () )
            {
            // InternalAcmeParser.g:18366:1: ( () )
            // InternalAcmeParser.g:18367:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdExpressionAccess().getIdExpressionAction_7_0()); 
            }
            // InternalAcmeParser.g:18368:2: ()
            // InternalAcmeParser.g:18368:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdExpressionAccess().getIdExpressionAction_7_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Group_7__0__Impl"


    // $ANTLR start "rule__IdExpression__Group_7__1"
    // InternalAcmeParser.g:18376:1: rule__IdExpression__Group_7__1 : rule__IdExpression__Group_7__1__Impl ;
    public final void rule__IdExpression__Group_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18380:1: ( rule__IdExpression__Group_7__1__Impl )
            // InternalAcmeParser.g:18381:2: rule__IdExpression__Group_7__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IdExpression__Group_7__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Group_7__1"


    // $ANTLR start "rule__IdExpression__Group_7__1__Impl"
    // InternalAcmeParser.g:18387:1: rule__IdExpression__Group_7__1__Impl : ( False ) ;
    public final void rule__IdExpression__Group_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18391:1: ( ( False ) )
            // InternalAcmeParser.g:18392:1: ( False )
            {
            // InternalAcmeParser.g:18392:1: ( False )
            // InternalAcmeParser.g:18393:2: False
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdExpressionAccess().getFalseKeyword_7_1()); 
            }
            match(input,False,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdExpressionAccess().getFalseKeyword_7_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Group_7__1__Impl"


    // $ANTLR start "rule__IdExpression__Group_8__0"
    // InternalAcmeParser.g:18403:1: rule__IdExpression__Group_8__0 : rule__IdExpression__Group_8__0__Impl rule__IdExpression__Group_8__1 ;
    public final void rule__IdExpression__Group_8__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18407:1: ( rule__IdExpression__Group_8__0__Impl rule__IdExpression__Group_8__1 )
            // InternalAcmeParser.g:18408:2: rule__IdExpression__Group_8__0__Impl rule__IdExpression__Group_8__1
            {
            pushFollow(FOLLOW_98);
            rule__IdExpression__Group_8__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IdExpression__Group_8__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Group_8__0"


    // $ANTLR start "rule__IdExpression__Group_8__0__Impl"
    // InternalAcmeParser.g:18415:1: rule__IdExpression__Group_8__0__Impl : ( () ) ;
    public final void rule__IdExpression__Group_8__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18419:1: ( ( () ) )
            // InternalAcmeParser.g:18420:1: ( () )
            {
            // InternalAcmeParser.g:18420:1: ( () )
            // InternalAcmeParser.g:18421:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdExpressionAccess().getIdExpressionAction_8_0()); 
            }
            // InternalAcmeParser.g:18422:2: ()
            // InternalAcmeParser.g:18422:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdExpressionAccess().getIdExpressionAction_8_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Group_8__0__Impl"


    // $ANTLR start "rule__IdExpression__Group_8__1"
    // InternalAcmeParser.g:18430:1: rule__IdExpression__Group_8__1 : rule__IdExpression__Group_8__1__Impl ;
    public final void rule__IdExpression__Group_8__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18434:1: ( rule__IdExpression__Group_8__1__Impl )
            // InternalAcmeParser.g:18435:2: rule__IdExpression__Group_8__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IdExpression__Group_8__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Group_8__1"


    // $ANTLR start "rule__IdExpression__Group_8__1__Impl"
    // InternalAcmeParser.g:18441:1: rule__IdExpression__Group_8__1__Impl : ( TNULL ) ;
    public final void rule__IdExpression__Group_8__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18445:1: ( ( TNULL ) )
            // InternalAcmeParser.g:18446:1: ( TNULL )
            {
            // InternalAcmeParser.g:18446:1: ( TNULL )
            // InternalAcmeParser.g:18447:2: TNULL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdExpressionAccess().getTNULLKeyword_8_1()); 
            }
            match(input,TNULL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdExpressionAccess().getTNULLKeyword_8_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdExpression__Group_8__1__Impl"


    // $ANTLR start "rule__PostIdExpression__Group__0"
    // InternalAcmeParser.g:18457:1: rule__PostIdExpression__Group__0 : rule__PostIdExpression__Group__0__Impl rule__PostIdExpression__Group__1 ;
    public final void rule__PostIdExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18461:1: ( rule__PostIdExpression__Group__0__Impl rule__PostIdExpression__Group__1 )
            // InternalAcmeParser.g:18462:2: rule__PostIdExpression__Group__0__Impl rule__PostIdExpression__Group__1
            {
            pushFollow(FOLLOW_94);
            rule__PostIdExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PostIdExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostIdExpression__Group__0"


    // $ANTLR start "rule__PostIdExpression__Group__0__Impl"
    // InternalAcmeParser.g:18469:1: rule__PostIdExpression__Group__0__Impl : ( ( rule__PostIdExpression__IdAssignment_0 ) ) ;
    public final void rule__PostIdExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18473:1: ( ( ( rule__PostIdExpression__IdAssignment_0 ) ) )
            // InternalAcmeParser.g:18474:1: ( ( rule__PostIdExpression__IdAssignment_0 ) )
            {
            // InternalAcmeParser.g:18474:1: ( ( rule__PostIdExpression__IdAssignment_0 ) )
            // InternalAcmeParser.g:18475:2: ( rule__PostIdExpression__IdAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostIdExpressionAccess().getIdAssignment_0()); 
            }
            // InternalAcmeParser.g:18476:2: ( rule__PostIdExpression__IdAssignment_0 )
            // InternalAcmeParser.g:18476:3: rule__PostIdExpression__IdAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__PostIdExpression__IdAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostIdExpressionAccess().getIdAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostIdExpression__Group__0__Impl"


    // $ANTLR start "rule__PostIdExpression__Group__1"
    // InternalAcmeParser.g:18484:1: rule__PostIdExpression__Group__1 : rule__PostIdExpression__Group__1__Impl ;
    public final void rule__PostIdExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18488:1: ( rule__PostIdExpression__Group__1__Impl )
            // InternalAcmeParser.g:18489:2: rule__PostIdExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PostIdExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostIdExpression__Group__1"


    // $ANTLR start "rule__PostIdExpression__Group__1__Impl"
    // InternalAcmeParser.g:18495:1: rule__PostIdExpression__Group__1__Impl : ( Apostrophe ) ;
    public final void rule__PostIdExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18499:1: ( ( Apostrophe ) )
            // InternalAcmeParser.g:18500:1: ( Apostrophe )
            {
            // InternalAcmeParser.g:18500:1: ( Apostrophe )
            // InternalAcmeParser.g:18501:2: Apostrophe
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostIdExpressionAccess().getApostropheKeyword_1()); 
            }
            match(input,Apostrophe,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostIdExpressionAccess().getApostropheKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostIdExpression__Group__1__Impl"


    // $ANTLR start "rule__MethodCall__Group__0"
    // InternalAcmeParser.g:18511:1: rule__MethodCall__Group__0 : rule__MethodCall__Group__0__Impl rule__MethodCall__Group__1 ;
    public final void rule__MethodCall__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18515:1: ( rule__MethodCall__Group__0__Impl rule__MethodCall__Group__1 )
            // InternalAcmeParser.g:18516:2: rule__MethodCall__Group__0__Impl rule__MethodCall__Group__1
            {
            pushFollow(FOLLOW_77);
            rule__MethodCall__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MethodCall__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodCall__Group__0"


    // $ANTLR start "rule__MethodCall__Group__0__Impl"
    // InternalAcmeParser.g:18523:1: rule__MethodCall__Group__0__Impl : ( ( rule__MethodCall__IdAssignment_0 ) ) ;
    public final void rule__MethodCall__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18527:1: ( ( ( rule__MethodCall__IdAssignment_0 ) ) )
            // InternalAcmeParser.g:18528:1: ( ( rule__MethodCall__IdAssignment_0 ) )
            {
            // InternalAcmeParser.g:18528:1: ( ( rule__MethodCall__IdAssignment_0 ) )
            // InternalAcmeParser.g:18529:2: ( rule__MethodCall__IdAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodCallAccess().getIdAssignment_0()); 
            }
            // InternalAcmeParser.g:18530:2: ( rule__MethodCall__IdAssignment_0 )
            // InternalAcmeParser.g:18530:3: rule__MethodCall__IdAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__MethodCall__IdAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodCallAccess().getIdAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodCall__Group__0__Impl"


    // $ANTLR start "rule__MethodCall__Group__1"
    // InternalAcmeParser.g:18538:1: rule__MethodCall__Group__1 : rule__MethodCall__Group__1__Impl rule__MethodCall__Group__2 ;
    public final void rule__MethodCall__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18542:1: ( rule__MethodCall__Group__1__Impl rule__MethodCall__Group__2 )
            // InternalAcmeParser.g:18543:2: rule__MethodCall__Group__1__Impl rule__MethodCall__Group__2
            {
            pushFollow(FOLLOW_99);
            rule__MethodCall__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MethodCall__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodCall__Group__1"


    // $ANTLR start "rule__MethodCall__Group__1__Impl"
    // InternalAcmeParser.g:18550:1: rule__MethodCall__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__MethodCall__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18554:1: ( ( LeftParenthesis ) )
            // InternalAcmeParser.g:18555:1: ( LeftParenthesis )
            {
            // InternalAcmeParser.g:18555:1: ( LeftParenthesis )
            // InternalAcmeParser.g:18556:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodCallAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodCallAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodCall__Group__1__Impl"


    // $ANTLR start "rule__MethodCall__Group__2"
    // InternalAcmeParser.g:18565:1: rule__MethodCall__Group__2 : rule__MethodCall__Group__2__Impl rule__MethodCall__Group__3 ;
    public final void rule__MethodCall__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18569:1: ( rule__MethodCall__Group__2__Impl rule__MethodCall__Group__3 )
            // InternalAcmeParser.g:18570:2: rule__MethodCall__Group__2__Impl rule__MethodCall__Group__3
            {
            pushFollow(FOLLOW_99);
            rule__MethodCall__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MethodCall__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodCall__Group__2"


    // $ANTLR start "rule__MethodCall__Group__2__Impl"
    // InternalAcmeParser.g:18577:1: rule__MethodCall__Group__2__Impl : ( ( rule__MethodCall__Group_2__0 )? ) ;
    public final void rule__MethodCall__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18581:1: ( ( ( rule__MethodCall__Group_2__0 )? ) )
            // InternalAcmeParser.g:18582:1: ( ( rule__MethodCall__Group_2__0 )? )
            {
            // InternalAcmeParser.g:18582:1: ( ( rule__MethodCall__Group_2__0 )? )
            // InternalAcmeParser.g:18583:2: ( rule__MethodCall__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodCallAccess().getGroup_2()); 
            }
            // InternalAcmeParser.g:18584:2: ( rule__MethodCall__Group_2__0 )?
            int alt201=2;
            int LA201_0 = input.LA(1);

            if ( (LA201_0==Exists||LA201_0==Forall||LA201_0==Select||(LA201_0>=TNULL && LA201_0<=False)||LA201_0==True||LA201_0==PlusSignPlusSign||LA201_0==HyphenMinusHyphenMinus||LA201_0==ExclamationMark||(LA201_0>=Apostrophe && LA201_0<=LeftParenthesis)||LA201_0==PlusSign||LA201_0==HyphenMinus||LA201_0==Solidus||LA201_0==LeftCurlyBracket||(LA201_0>=RULE_FLOAT && LA201_0<=RULE_STRING)) ) {
                alt201=1;
            }
            switch (alt201) {
                case 1 :
                    // InternalAcmeParser.g:18584:3: rule__MethodCall__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__MethodCall__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodCallAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodCall__Group__2__Impl"


    // $ANTLR start "rule__MethodCall__Group__3"
    // InternalAcmeParser.g:18592:1: rule__MethodCall__Group__3 : rule__MethodCall__Group__3__Impl ;
    public final void rule__MethodCall__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18596:1: ( rule__MethodCall__Group__3__Impl )
            // InternalAcmeParser.g:18597:2: rule__MethodCall__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MethodCall__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodCall__Group__3"


    // $ANTLR start "rule__MethodCall__Group__3__Impl"
    // InternalAcmeParser.g:18603:1: rule__MethodCall__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__MethodCall__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18607:1: ( ( RightParenthesis ) )
            // InternalAcmeParser.g:18608:1: ( RightParenthesis )
            {
            // InternalAcmeParser.g:18608:1: ( RightParenthesis )
            // InternalAcmeParser.g:18609:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodCallAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodCallAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodCall__Group__3__Impl"


    // $ANTLR start "rule__MethodCall__Group_2__0"
    // InternalAcmeParser.g:18619:1: rule__MethodCall__Group_2__0 : rule__MethodCall__Group_2__0__Impl rule__MethodCall__Group_2__1 ;
    public final void rule__MethodCall__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18623:1: ( rule__MethodCall__Group_2__0__Impl rule__MethodCall__Group_2__1 )
            // InternalAcmeParser.g:18624:2: rule__MethodCall__Group_2__0__Impl rule__MethodCall__Group_2__1
            {
            pushFollow(FOLLOW_19);
            rule__MethodCall__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MethodCall__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodCall__Group_2__0"


    // $ANTLR start "rule__MethodCall__Group_2__0__Impl"
    // InternalAcmeParser.g:18631:1: rule__MethodCall__Group_2__0__Impl : ( ( rule__MethodCall__ExpressionsAssignment_2_0 ) ) ;
    public final void rule__MethodCall__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18635:1: ( ( ( rule__MethodCall__ExpressionsAssignment_2_0 ) ) )
            // InternalAcmeParser.g:18636:1: ( ( rule__MethodCall__ExpressionsAssignment_2_0 ) )
            {
            // InternalAcmeParser.g:18636:1: ( ( rule__MethodCall__ExpressionsAssignment_2_0 ) )
            // InternalAcmeParser.g:18637:2: ( rule__MethodCall__ExpressionsAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodCallAccess().getExpressionsAssignment_2_0()); 
            }
            // InternalAcmeParser.g:18638:2: ( rule__MethodCall__ExpressionsAssignment_2_0 )
            // InternalAcmeParser.g:18638:3: rule__MethodCall__ExpressionsAssignment_2_0
            {
            pushFollow(FOLLOW_2);
            rule__MethodCall__ExpressionsAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodCallAccess().getExpressionsAssignment_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodCall__Group_2__0__Impl"


    // $ANTLR start "rule__MethodCall__Group_2__1"
    // InternalAcmeParser.g:18646:1: rule__MethodCall__Group_2__1 : rule__MethodCall__Group_2__1__Impl ;
    public final void rule__MethodCall__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18650:1: ( rule__MethodCall__Group_2__1__Impl )
            // InternalAcmeParser.g:18651:2: rule__MethodCall__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MethodCall__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodCall__Group_2__1"


    // $ANTLR start "rule__MethodCall__Group_2__1__Impl"
    // InternalAcmeParser.g:18657:1: rule__MethodCall__Group_2__1__Impl : ( ( rule__MethodCall__Group_2_1__0 )* ) ;
    public final void rule__MethodCall__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18661:1: ( ( ( rule__MethodCall__Group_2_1__0 )* ) )
            // InternalAcmeParser.g:18662:1: ( ( rule__MethodCall__Group_2_1__0 )* )
            {
            // InternalAcmeParser.g:18662:1: ( ( rule__MethodCall__Group_2_1__0 )* )
            // InternalAcmeParser.g:18663:2: ( rule__MethodCall__Group_2_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodCallAccess().getGroup_2_1()); 
            }
            // InternalAcmeParser.g:18664:2: ( rule__MethodCall__Group_2_1__0 )*
            loop202:
            do {
                int alt202=2;
                int LA202_0 = input.LA(1);

                if ( (LA202_0==Comma) ) {
                    alt202=1;
                }


                switch (alt202) {
            	case 1 :
            	    // InternalAcmeParser.g:18664:3: rule__MethodCall__Group_2_1__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__MethodCall__Group_2_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop202;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodCallAccess().getGroup_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodCall__Group_2__1__Impl"


    // $ANTLR start "rule__MethodCall__Group_2_1__0"
    // InternalAcmeParser.g:18673:1: rule__MethodCall__Group_2_1__0 : rule__MethodCall__Group_2_1__0__Impl rule__MethodCall__Group_2_1__1 ;
    public final void rule__MethodCall__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18677:1: ( rule__MethodCall__Group_2_1__0__Impl rule__MethodCall__Group_2_1__1 )
            // InternalAcmeParser.g:18678:2: rule__MethodCall__Group_2_1__0__Impl rule__MethodCall__Group_2_1__1
            {
            pushFollow(FOLLOW_73);
            rule__MethodCall__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MethodCall__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodCall__Group_2_1__0"


    // $ANTLR start "rule__MethodCall__Group_2_1__0__Impl"
    // InternalAcmeParser.g:18685:1: rule__MethodCall__Group_2_1__0__Impl : ( Comma ) ;
    public final void rule__MethodCall__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18689:1: ( ( Comma ) )
            // InternalAcmeParser.g:18690:1: ( Comma )
            {
            // InternalAcmeParser.g:18690:1: ( Comma )
            // InternalAcmeParser.g:18691:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodCallAccess().getCommaKeyword_2_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodCallAccess().getCommaKeyword_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodCall__Group_2_1__0__Impl"


    // $ANTLR start "rule__MethodCall__Group_2_1__1"
    // InternalAcmeParser.g:18700:1: rule__MethodCall__Group_2_1__1 : rule__MethodCall__Group_2_1__1__Impl ;
    public final void rule__MethodCall__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18704:1: ( rule__MethodCall__Group_2_1__1__Impl )
            // InternalAcmeParser.g:18705:2: rule__MethodCall__Group_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MethodCall__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodCall__Group_2_1__1"


    // $ANTLR start "rule__MethodCall__Group_2_1__1__Impl"
    // InternalAcmeParser.g:18711:1: rule__MethodCall__Group_2_1__1__Impl : ( ( rule__MethodCall__ExpressionsAssignment_2_1_1 ) ) ;
    public final void rule__MethodCall__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18715:1: ( ( ( rule__MethodCall__ExpressionsAssignment_2_1_1 ) ) )
            // InternalAcmeParser.g:18716:1: ( ( rule__MethodCall__ExpressionsAssignment_2_1_1 ) )
            {
            // InternalAcmeParser.g:18716:1: ( ( rule__MethodCall__ExpressionsAssignment_2_1_1 ) )
            // InternalAcmeParser.g:18717:2: ( rule__MethodCall__ExpressionsAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodCallAccess().getExpressionsAssignment_2_1_1()); 
            }
            // InternalAcmeParser.g:18718:2: ( rule__MethodCall__ExpressionsAssignment_2_1_1 )
            // InternalAcmeParser.g:18718:3: rule__MethodCall__ExpressionsAssignment_2_1_1
            {
            pushFollow(FOLLOW_2);
            rule__MethodCall__ExpressionsAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodCallAccess().getExpressionsAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodCall__Group_2_1__1__Impl"


    // $ANTLR start "rule__Param__Group__0"
    // InternalAcmeParser.g:18727:1: rule__Param__Group__0 : rule__Param__Group__0__Impl rule__Param__Group__1 ;
    public final void rule__Param__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18731:1: ( rule__Param__Group__0__Impl rule__Param__Group__1 )
            // InternalAcmeParser.g:18732:2: rule__Param__Group__0__Impl rule__Param__Group__1
            {
            pushFollow(FOLLOW_100);
            rule__Param__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Param__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__Group__0"


    // $ANTLR start "rule__Param__Group__0__Impl"
    // InternalAcmeParser.g:18739:1: rule__Param__Group__0__Impl : ( RULE_ID ) ;
    public final void rule__Param__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18743:1: ( ( RULE_ID ) )
            // InternalAcmeParser.g:18744:1: ( RULE_ID )
            {
            // InternalAcmeParser.g:18744:1: ( RULE_ID )
            // InternalAcmeParser.g:18745:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParamAccess().getIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParamAccess().getIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__Group__0__Impl"


    // $ANTLR start "rule__Param__Group__1"
    // InternalAcmeParser.g:18754:1: rule__Param__Group__1 : rule__Param__Group__1__Impl rule__Param__Group__2 ;
    public final void rule__Param__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18758:1: ( rule__Param__Group__1__Impl rule__Param__Group__2 )
            // InternalAcmeParser.g:18759:2: rule__Param__Group__1__Impl rule__Param__Group__2
            {
            pushFollow(FOLLOW_101);
            rule__Param__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Param__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__Group__1"


    // $ANTLR start "rule__Param__Group__1__Impl"
    // InternalAcmeParser.g:18766:1: rule__Param__Group__1__Impl : ( ( rule__Param__DeclaresAssignment_1 ) ) ;
    public final void rule__Param__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18770:1: ( ( ( rule__Param__DeclaresAssignment_1 ) ) )
            // InternalAcmeParser.g:18771:1: ( ( rule__Param__DeclaresAssignment_1 ) )
            {
            // InternalAcmeParser.g:18771:1: ( ( rule__Param__DeclaresAssignment_1 ) )
            // InternalAcmeParser.g:18772:2: ( rule__Param__DeclaresAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParamAccess().getDeclaresAssignment_1()); 
            }
            // InternalAcmeParser.g:18773:2: ( rule__Param__DeclaresAssignment_1 )
            // InternalAcmeParser.g:18773:3: rule__Param__DeclaresAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Param__DeclaresAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParamAccess().getDeclaresAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__Group__1__Impl"


    // $ANTLR start "rule__Param__Group__2"
    // InternalAcmeParser.g:18781:1: rule__Param__Group__2 : rule__Param__Group__2__Impl ;
    public final void rule__Param__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18785:1: ( rule__Param__Group__2__Impl )
            // InternalAcmeParser.g:18786:2: rule__Param__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Param__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__Group__2"


    // $ANTLR start "rule__Param__Group__2__Impl"
    // InternalAcmeParser.g:18792:1: rule__Param__Group__2__Impl : ( ( rule__Param__DataTypeAssignment_2 ) ) ;
    public final void rule__Param__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18796:1: ( ( ( rule__Param__DataTypeAssignment_2 ) ) )
            // InternalAcmeParser.g:18797:1: ( ( rule__Param__DataTypeAssignment_2 ) )
            {
            // InternalAcmeParser.g:18797:1: ( ( rule__Param__DataTypeAssignment_2 ) )
            // InternalAcmeParser.g:18798:2: ( rule__Param__DataTypeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParamAccess().getDataTypeAssignment_2()); 
            }
            // InternalAcmeParser.g:18799:2: ( rule__Param__DataTypeAssignment_2 )
            // InternalAcmeParser.g:18799:3: rule__Param__DataTypeAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Param__DataTypeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParamAccess().getDataTypeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__Group__2__Impl"


    // $ANTLR start "rule__QuantifiedExpression__Group_0__0"
    // InternalAcmeParser.g:18808:1: rule__QuantifiedExpression__Group_0__0 : rule__QuantifiedExpression__Group_0__0__Impl rule__QuantifiedExpression__Group_0__1 ;
    public final void rule__QuantifiedExpression__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18812:1: ( rule__QuantifiedExpression__Group_0__0__Impl rule__QuantifiedExpression__Group_0__1 )
            // InternalAcmeParser.g:18813:2: rule__QuantifiedExpression__Group_0__0__Impl rule__QuantifiedExpression__Group_0__1
            {
            pushFollow(FOLLOW_102);
            rule__QuantifiedExpression__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_0__0"


    // $ANTLR start "rule__QuantifiedExpression__Group_0__0__Impl"
    // InternalAcmeParser.g:18820:1: rule__QuantifiedExpression__Group_0__0__Impl : ( Forall ) ;
    public final void rule__QuantifiedExpression__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18824:1: ( ( Forall ) )
            // InternalAcmeParser.g:18825:1: ( Forall )
            {
            // InternalAcmeParser.g:18825:1: ( Forall )
            // InternalAcmeParser.g:18826:2: Forall
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getForallKeyword_0_0()); 
            }
            match(input,Forall,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getForallKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_0__0__Impl"


    // $ANTLR start "rule__QuantifiedExpression__Group_0__1"
    // InternalAcmeParser.g:18835:1: rule__QuantifiedExpression__Group_0__1 : rule__QuantifiedExpression__Group_0__1__Impl rule__QuantifiedExpression__Group_0__2 ;
    public final void rule__QuantifiedExpression__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18839:1: ( rule__QuantifiedExpression__Group_0__1__Impl rule__QuantifiedExpression__Group_0__2 )
            // InternalAcmeParser.g:18840:2: rule__QuantifiedExpression__Group_0__1__Impl rule__QuantifiedExpression__Group_0__2
            {
            pushFollow(FOLLOW_102);
            rule__QuantifiedExpression__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_0__1"


    // $ANTLR start "rule__QuantifiedExpression__Group_0__1__Impl"
    // InternalAcmeParser.g:18847:1: rule__QuantifiedExpression__Group_0__1__Impl : ( ( Distinct )? ) ;
    public final void rule__QuantifiedExpression__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18851:1: ( ( ( Distinct )? ) )
            // InternalAcmeParser.g:18852:1: ( ( Distinct )? )
            {
            // InternalAcmeParser.g:18852:1: ( ( Distinct )? )
            // InternalAcmeParser.g:18853:2: ( Distinct )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getDistinctKeyword_0_1()); 
            }
            // InternalAcmeParser.g:18854:2: ( Distinct )?
            int alt203=2;
            int LA203_0 = input.LA(1);

            if ( (LA203_0==Distinct) ) {
                alt203=1;
            }
            switch (alt203) {
                case 1 :
                    // InternalAcmeParser.g:18854:3: Distinct
                    {
                    match(input,Distinct,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getDistinctKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_0__1__Impl"


    // $ANTLR start "rule__QuantifiedExpression__Group_0__2"
    // InternalAcmeParser.g:18862:1: rule__QuantifiedExpression__Group_0__2 : rule__QuantifiedExpression__Group_0__2__Impl rule__QuantifiedExpression__Group_0__3 ;
    public final void rule__QuantifiedExpression__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18866:1: ( rule__QuantifiedExpression__Group_0__2__Impl rule__QuantifiedExpression__Group_0__3 )
            // InternalAcmeParser.g:18867:2: rule__QuantifiedExpression__Group_0__2__Impl rule__QuantifiedExpression__Group_0__3
            {
            pushFollow(FOLLOW_103);
            rule__QuantifiedExpression__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__Group_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_0__2"


    // $ANTLR start "rule__QuantifiedExpression__Group_0__2__Impl"
    // InternalAcmeParser.g:18874:1: rule__QuantifiedExpression__Group_0__2__Impl : ( ( rule__QuantifiedExpression__ParamsAssignment_0_2 ) ) ;
    public final void rule__QuantifiedExpression__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18878:1: ( ( ( rule__QuantifiedExpression__ParamsAssignment_0_2 ) ) )
            // InternalAcmeParser.g:18879:1: ( ( rule__QuantifiedExpression__ParamsAssignment_0_2 ) )
            {
            // InternalAcmeParser.g:18879:1: ( ( rule__QuantifiedExpression__ParamsAssignment_0_2 ) )
            // InternalAcmeParser.g:18880:2: ( rule__QuantifiedExpression__ParamsAssignment_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getParamsAssignment_0_2()); 
            }
            // InternalAcmeParser.g:18881:2: ( rule__QuantifiedExpression__ParamsAssignment_0_2 )
            // InternalAcmeParser.g:18881:3: rule__QuantifiedExpression__ParamsAssignment_0_2
            {
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__ParamsAssignment_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getParamsAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_0__2__Impl"


    // $ANTLR start "rule__QuantifiedExpression__Group_0__3"
    // InternalAcmeParser.g:18889:1: rule__QuantifiedExpression__Group_0__3 : rule__QuantifiedExpression__Group_0__3__Impl rule__QuantifiedExpression__Group_0__4 ;
    public final void rule__QuantifiedExpression__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18893:1: ( rule__QuantifiedExpression__Group_0__3__Impl rule__QuantifiedExpression__Group_0__4 )
            // InternalAcmeParser.g:18894:2: rule__QuantifiedExpression__Group_0__3__Impl rule__QuantifiedExpression__Group_0__4
            {
            pushFollow(FOLLOW_103);
            rule__QuantifiedExpression__Group_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__Group_0__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_0__3"


    // $ANTLR start "rule__QuantifiedExpression__Group_0__3__Impl"
    // InternalAcmeParser.g:18901:1: rule__QuantifiedExpression__Group_0__3__Impl : ( ( rule__QuantifiedExpression__Group_0_3__0 )? ) ;
    public final void rule__QuantifiedExpression__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18905:1: ( ( ( rule__QuantifiedExpression__Group_0_3__0 )? ) )
            // InternalAcmeParser.g:18906:1: ( ( rule__QuantifiedExpression__Group_0_3__0 )? )
            {
            // InternalAcmeParser.g:18906:1: ( ( rule__QuantifiedExpression__Group_0_3__0 )? )
            // InternalAcmeParser.g:18907:2: ( rule__QuantifiedExpression__Group_0_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getGroup_0_3()); 
            }
            // InternalAcmeParser.g:18908:2: ( rule__QuantifiedExpression__Group_0_3__0 )?
            int alt204=2;
            int LA204_0 = input.LA(1);

            if ( (LA204_0==Comma) ) {
                alt204=1;
            }
            switch (alt204) {
                case 1 :
                    // InternalAcmeParser.g:18908:3: rule__QuantifiedExpression__Group_0_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__QuantifiedExpression__Group_0_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getGroup_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_0__3__Impl"


    // $ANTLR start "rule__QuantifiedExpression__Group_0__4"
    // InternalAcmeParser.g:18916:1: rule__QuantifiedExpression__Group_0__4 : rule__QuantifiedExpression__Group_0__4__Impl rule__QuantifiedExpression__Group_0__5 ;
    public final void rule__QuantifiedExpression__Group_0__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18920:1: ( rule__QuantifiedExpression__Group_0__4__Impl rule__QuantifiedExpression__Group_0__5 )
            // InternalAcmeParser.g:18921:2: rule__QuantifiedExpression__Group_0__4__Impl rule__QuantifiedExpression__Group_0__5
            {
            pushFollow(FOLLOW_104);
            rule__QuantifiedExpression__Group_0__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__Group_0__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_0__4"


    // $ANTLR start "rule__QuantifiedExpression__Group_0__4__Impl"
    // InternalAcmeParser.g:18928:1: rule__QuantifiedExpression__Group_0__4__Impl : ( In ) ;
    public final void rule__QuantifiedExpression__Group_0__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18932:1: ( ( In ) )
            // InternalAcmeParser.g:18933:1: ( In )
            {
            // InternalAcmeParser.g:18933:1: ( In )
            // InternalAcmeParser.g:18934:2: In
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getInKeyword_0_4()); 
            }
            match(input,In,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getInKeyword_0_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_0__4__Impl"


    // $ANTLR start "rule__QuantifiedExpression__Group_0__5"
    // InternalAcmeParser.g:18943:1: rule__QuantifiedExpression__Group_0__5 : rule__QuantifiedExpression__Group_0__5__Impl rule__QuantifiedExpression__Group_0__6 ;
    public final void rule__QuantifiedExpression__Group_0__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18947:1: ( rule__QuantifiedExpression__Group_0__5__Impl rule__QuantifiedExpression__Group_0__6 )
            // InternalAcmeParser.g:18948:2: rule__QuantifiedExpression__Group_0__5__Impl rule__QuantifiedExpression__Group_0__6
            {
            pushFollow(FOLLOW_105);
            rule__QuantifiedExpression__Group_0__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__Group_0__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_0__5"


    // $ANTLR start "rule__QuantifiedExpression__Group_0__5__Impl"
    // InternalAcmeParser.g:18955:1: rule__QuantifiedExpression__Group_0__5__Impl : ( ( rule__QuantifiedExpression__RangeAssignment_0_5 ) ) ;
    public final void rule__QuantifiedExpression__Group_0__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18959:1: ( ( ( rule__QuantifiedExpression__RangeAssignment_0_5 ) ) )
            // InternalAcmeParser.g:18960:1: ( ( rule__QuantifiedExpression__RangeAssignment_0_5 ) )
            {
            // InternalAcmeParser.g:18960:1: ( ( rule__QuantifiedExpression__RangeAssignment_0_5 ) )
            // InternalAcmeParser.g:18961:2: ( rule__QuantifiedExpression__RangeAssignment_0_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getRangeAssignment_0_5()); 
            }
            // InternalAcmeParser.g:18962:2: ( rule__QuantifiedExpression__RangeAssignment_0_5 )
            // InternalAcmeParser.g:18962:3: rule__QuantifiedExpression__RangeAssignment_0_5
            {
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__RangeAssignment_0_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getRangeAssignment_0_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_0__5__Impl"


    // $ANTLR start "rule__QuantifiedExpression__Group_0__6"
    // InternalAcmeParser.g:18970:1: rule__QuantifiedExpression__Group_0__6 : rule__QuantifiedExpression__Group_0__6__Impl rule__QuantifiedExpression__Group_0__7 ;
    public final void rule__QuantifiedExpression__Group_0__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18974:1: ( rule__QuantifiedExpression__Group_0__6__Impl rule__QuantifiedExpression__Group_0__7 )
            // InternalAcmeParser.g:18975:2: rule__QuantifiedExpression__Group_0__6__Impl rule__QuantifiedExpression__Group_0__7
            {
            pushFollow(FOLLOW_73);
            rule__QuantifiedExpression__Group_0__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__Group_0__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_0__6"


    // $ANTLR start "rule__QuantifiedExpression__Group_0__6__Impl"
    // InternalAcmeParser.g:18982:1: rule__QuantifiedExpression__Group_0__6__Impl : ( VerticalLine ) ;
    public final void rule__QuantifiedExpression__Group_0__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:18986:1: ( ( VerticalLine ) )
            // InternalAcmeParser.g:18987:1: ( VerticalLine )
            {
            // InternalAcmeParser.g:18987:1: ( VerticalLine )
            // InternalAcmeParser.g:18988:2: VerticalLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getVerticalLineKeyword_0_6()); 
            }
            match(input,VerticalLine,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getVerticalLineKeyword_0_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_0__6__Impl"


    // $ANTLR start "rule__QuantifiedExpression__Group_0__7"
    // InternalAcmeParser.g:18997:1: rule__QuantifiedExpression__Group_0__7 : rule__QuantifiedExpression__Group_0__7__Impl ;
    public final void rule__QuantifiedExpression__Group_0__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19001:1: ( rule__QuantifiedExpression__Group_0__7__Impl )
            // InternalAcmeParser.g:19002:2: rule__QuantifiedExpression__Group_0__7__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__Group_0__7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_0__7"


    // $ANTLR start "rule__QuantifiedExpression__Group_0__7__Impl"
    // InternalAcmeParser.g:19008:1: rule__QuantifiedExpression__Group_0__7__Impl : ( ( rule__QuantifiedExpression__ExprAssignment_0_7 ) ) ;
    public final void rule__QuantifiedExpression__Group_0__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19012:1: ( ( ( rule__QuantifiedExpression__ExprAssignment_0_7 ) ) )
            // InternalAcmeParser.g:19013:1: ( ( rule__QuantifiedExpression__ExprAssignment_0_7 ) )
            {
            // InternalAcmeParser.g:19013:1: ( ( rule__QuantifiedExpression__ExprAssignment_0_7 ) )
            // InternalAcmeParser.g:19014:2: ( rule__QuantifiedExpression__ExprAssignment_0_7 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getExprAssignment_0_7()); 
            }
            // InternalAcmeParser.g:19015:2: ( rule__QuantifiedExpression__ExprAssignment_0_7 )
            // InternalAcmeParser.g:19015:3: rule__QuantifiedExpression__ExprAssignment_0_7
            {
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__ExprAssignment_0_7();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getExprAssignment_0_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_0__7__Impl"


    // $ANTLR start "rule__QuantifiedExpression__Group_0_3__0"
    // InternalAcmeParser.g:19024:1: rule__QuantifiedExpression__Group_0_3__0 : rule__QuantifiedExpression__Group_0_3__0__Impl rule__QuantifiedExpression__Group_0_3__1 ;
    public final void rule__QuantifiedExpression__Group_0_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19028:1: ( rule__QuantifiedExpression__Group_0_3__0__Impl rule__QuantifiedExpression__Group_0_3__1 )
            // InternalAcmeParser.g:19029:2: rule__QuantifiedExpression__Group_0_3__0__Impl rule__QuantifiedExpression__Group_0_3__1
            {
            pushFollow(FOLLOW_102);
            rule__QuantifiedExpression__Group_0_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__Group_0_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_0_3__0"


    // $ANTLR start "rule__QuantifiedExpression__Group_0_3__0__Impl"
    // InternalAcmeParser.g:19036:1: rule__QuantifiedExpression__Group_0_3__0__Impl : ( Comma ) ;
    public final void rule__QuantifiedExpression__Group_0_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19040:1: ( ( Comma ) )
            // InternalAcmeParser.g:19041:1: ( Comma )
            {
            // InternalAcmeParser.g:19041:1: ( Comma )
            // InternalAcmeParser.g:19042:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getCommaKeyword_0_3_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getCommaKeyword_0_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_0_3__0__Impl"


    // $ANTLR start "rule__QuantifiedExpression__Group_0_3__1"
    // InternalAcmeParser.g:19051:1: rule__QuantifiedExpression__Group_0_3__1 : rule__QuantifiedExpression__Group_0_3__1__Impl ;
    public final void rule__QuantifiedExpression__Group_0_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19055:1: ( rule__QuantifiedExpression__Group_0_3__1__Impl )
            // InternalAcmeParser.g:19056:2: rule__QuantifiedExpression__Group_0_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__Group_0_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_0_3__1"


    // $ANTLR start "rule__QuantifiedExpression__Group_0_3__1__Impl"
    // InternalAcmeParser.g:19062:1: rule__QuantifiedExpression__Group_0_3__1__Impl : ( ( rule__QuantifiedExpression__ParamsAssignment_0_3_1 ) ) ;
    public final void rule__QuantifiedExpression__Group_0_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19066:1: ( ( ( rule__QuantifiedExpression__ParamsAssignment_0_3_1 ) ) )
            // InternalAcmeParser.g:19067:1: ( ( rule__QuantifiedExpression__ParamsAssignment_0_3_1 ) )
            {
            // InternalAcmeParser.g:19067:1: ( ( rule__QuantifiedExpression__ParamsAssignment_0_3_1 ) )
            // InternalAcmeParser.g:19068:2: ( rule__QuantifiedExpression__ParamsAssignment_0_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getParamsAssignment_0_3_1()); 
            }
            // InternalAcmeParser.g:19069:2: ( rule__QuantifiedExpression__ParamsAssignment_0_3_1 )
            // InternalAcmeParser.g:19069:3: rule__QuantifiedExpression__ParamsAssignment_0_3_1
            {
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__ParamsAssignment_0_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getParamsAssignment_0_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_0_3__1__Impl"


    // $ANTLR start "rule__QuantifiedExpression__Group_1__0"
    // InternalAcmeParser.g:19078:1: rule__QuantifiedExpression__Group_1__0 : rule__QuantifiedExpression__Group_1__0__Impl rule__QuantifiedExpression__Group_1__1 ;
    public final void rule__QuantifiedExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19082:1: ( rule__QuantifiedExpression__Group_1__0__Impl rule__QuantifiedExpression__Group_1__1 )
            // InternalAcmeParser.g:19083:2: rule__QuantifiedExpression__Group_1__0__Impl rule__QuantifiedExpression__Group_1__1
            {
            pushFollow(FOLLOW_106);
            rule__QuantifiedExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_1__0"


    // $ANTLR start "rule__QuantifiedExpression__Group_1__0__Impl"
    // InternalAcmeParser.g:19090:1: rule__QuantifiedExpression__Group_1__0__Impl : ( Exists ) ;
    public final void rule__QuantifiedExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19094:1: ( ( Exists ) )
            // InternalAcmeParser.g:19095:1: ( Exists )
            {
            // InternalAcmeParser.g:19095:1: ( Exists )
            // InternalAcmeParser.g:19096:2: Exists
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getExistsKeyword_1_0()); 
            }
            match(input,Exists,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getExistsKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_1__0__Impl"


    // $ANTLR start "rule__QuantifiedExpression__Group_1__1"
    // InternalAcmeParser.g:19105:1: rule__QuantifiedExpression__Group_1__1 : rule__QuantifiedExpression__Group_1__1__Impl rule__QuantifiedExpression__Group_1__2 ;
    public final void rule__QuantifiedExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19109:1: ( rule__QuantifiedExpression__Group_1__1__Impl rule__QuantifiedExpression__Group_1__2 )
            // InternalAcmeParser.g:19110:2: rule__QuantifiedExpression__Group_1__1__Impl rule__QuantifiedExpression__Group_1__2
            {
            pushFollow(FOLLOW_106);
            rule__QuantifiedExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_1__1"


    // $ANTLR start "rule__QuantifiedExpression__Group_1__1__Impl"
    // InternalAcmeParser.g:19117:1: rule__QuantifiedExpression__Group_1__1__Impl : ( ( Unique )? ) ;
    public final void rule__QuantifiedExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19121:1: ( ( ( Unique )? ) )
            // InternalAcmeParser.g:19122:1: ( ( Unique )? )
            {
            // InternalAcmeParser.g:19122:1: ( ( Unique )? )
            // InternalAcmeParser.g:19123:2: ( Unique )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getUniqueKeyword_1_1()); 
            }
            // InternalAcmeParser.g:19124:2: ( Unique )?
            int alt205=2;
            int LA205_0 = input.LA(1);

            if ( (LA205_0==Unique) ) {
                alt205=1;
            }
            switch (alt205) {
                case 1 :
                    // InternalAcmeParser.g:19124:3: Unique
                    {
                    match(input,Unique,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getUniqueKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_1__1__Impl"


    // $ANTLR start "rule__QuantifiedExpression__Group_1__2"
    // InternalAcmeParser.g:19132:1: rule__QuantifiedExpression__Group_1__2 : rule__QuantifiedExpression__Group_1__2__Impl rule__QuantifiedExpression__Group_1__3 ;
    public final void rule__QuantifiedExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19136:1: ( rule__QuantifiedExpression__Group_1__2__Impl rule__QuantifiedExpression__Group_1__3 )
            // InternalAcmeParser.g:19137:2: rule__QuantifiedExpression__Group_1__2__Impl rule__QuantifiedExpression__Group_1__3
            {
            pushFollow(FOLLOW_103);
            rule__QuantifiedExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_1__2"


    // $ANTLR start "rule__QuantifiedExpression__Group_1__2__Impl"
    // InternalAcmeParser.g:19144:1: rule__QuantifiedExpression__Group_1__2__Impl : ( ( rule__QuantifiedExpression__ParamsAssignment_1_2 ) ) ;
    public final void rule__QuantifiedExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19148:1: ( ( ( rule__QuantifiedExpression__ParamsAssignment_1_2 ) ) )
            // InternalAcmeParser.g:19149:1: ( ( rule__QuantifiedExpression__ParamsAssignment_1_2 ) )
            {
            // InternalAcmeParser.g:19149:1: ( ( rule__QuantifiedExpression__ParamsAssignment_1_2 ) )
            // InternalAcmeParser.g:19150:2: ( rule__QuantifiedExpression__ParamsAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getParamsAssignment_1_2()); 
            }
            // InternalAcmeParser.g:19151:2: ( rule__QuantifiedExpression__ParamsAssignment_1_2 )
            // InternalAcmeParser.g:19151:3: rule__QuantifiedExpression__ParamsAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__ParamsAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getParamsAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_1__2__Impl"


    // $ANTLR start "rule__QuantifiedExpression__Group_1__3"
    // InternalAcmeParser.g:19159:1: rule__QuantifiedExpression__Group_1__3 : rule__QuantifiedExpression__Group_1__3__Impl rule__QuantifiedExpression__Group_1__4 ;
    public final void rule__QuantifiedExpression__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19163:1: ( rule__QuantifiedExpression__Group_1__3__Impl rule__QuantifiedExpression__Group_1__4 )
            // InternalAcmeParser.g:19164:2: rule__QuantifiedExpression__Group_1__3__Impl rule__QuantifiedExpression__Group_1__4
            {
            pushFollow(FOLLOW_103);
            rule__QuantifiedExpression__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__Group_1__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_1__3"


    // $ANTLR start "rule__QuantifiedExpression__Group_1__3__Impl"
    // InternalAcmeParser.g:19171:1: rule__QuantifiedExpression__Group_1__3__Impl : ( ( rule__QuantifiedExpression__Group_1_3__0 )? ) ;
    public final void rule__QuantifiedExpression__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19175:1: ( ( ( rule__QuantifiedExpression__Group_1_3__0 )? ) )
            // InternalAcmeParser.g:19176:1: ( ( rule__QuantifiedExpression__Group_1_3__0 )? )
            {
            // InternalAcmeParser.g:19176:1: ( ( rule__QuantifiedExpression__Group_1_3__0 )? )
            // InternalAcmeParser.g:19177:2: ( rule__QuantifiedExpression__Group_1_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getGroup_1_3()); 
            }
            // InternalAcmeParser.g:19178:2: ( rule__QuantifiedExpression__Group_1_3__0 )?
            int alt206=2;
            int LA206_0 = input.LA(1);

            if ( (LA206_0==Comma) ) {
                alt206=1;
            }
            switch (alt206) {
                case 1 :
                    // InternalAcmeParser.g:19178:3: rule__QuantifiedExpression__Group_1_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__QuantifiedExpression__Group_1_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getGroup_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_1__3__Impl"


    // $ANTLR start "rule__QuantifiedExpression__Group_1__4"
    // InternalAcmeParser.g:19186:1: rule__QuantifiedExpression__Group_1__4 : rule__QuantifiedExpression__Group_1__4__Impl rule__QuantifiedExpression__Group_1__5 ;
    public final void rule__QuantifiedExpression__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19190:1: ( rule__QuantifiedExpression__Group_1__4__Impl rule__QuantifiedExpression__Group_1__5 )
            // InternalAcmeParser.g:19191:2: rule__QuantifiedExpression__Group_1__4__Impl rule__QuantifiedExpression__Group_1__5
            {
            pushFollow(FOLLOW_104);
            rule__QuantifiedExpression__Group_1__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__Group_1__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_1__4"


    // $ANTLR start "rule__QuantifiedExpression__Group_1__4__Impl"
    // InternalAcmeParser.g:19198:1: rule__QuantifiedExpression__Group_1__4__Impl : ( In ) ;
    public final void rule__QuantifiedExpression__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19202:1: ( ( In ) )
            // InternalAcmeParser.g:19203:1: ( In )
            {
            // InternalAcmeParser.g:19203:1: ( In )
            // InternalAcmeParser.g:19204:2: In
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getInKeyword_1_4()); 
            }
            match(input,In,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getInKeyword_1_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_1__4__Impl"


    // $ANTLR start "rule__QuantifiedExpression__Group_1__5"
    // InternalAcmeParser.g:19213:1: rule__QuantifiedExpression__Group_1__5 : rule__QuantifiedExpression__Group_1__5__Impl rule__QuantifiedExpression__Group_1__6 ;
    public final void rule__QuantifiedExpression__Group_1__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19217:1: ( rule__QuantifiedExpression__Group_1__5__Impl rule__QuantifiedExpression__Group_1__6 )
            // InternalAcmeParser.g:19218:2: rule__QuantifiedExpression__Group_1__5__Impl rule__QuantifiedExpression__Group_1__6
            {
            pushFollow(FOLLOW_105);
            rule__QuantifiedExpression__Group_1__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__Group_1__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_1__5"


    // $ANTLR start "rule__QuantifiedExpression__Group_1__5__Impl"
    // InternalAcmeParser.g:19225:1: rule__QuantifiedExpression__Group_1__5__Impl : ( ( rule__QuantifiedExpression__RangeAssignment_1_5 ) ) ;
    public final void rule__QuantifiedExpression__Group_1__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19229:1: ( ( ( rule__QuantifiedExpression__RangeAssignment_1_5 ) ) )
            // InternalAcmeParser.g:19230:1: ( ( rule__QuantifiedExpression__RangeAssignment_1_5 ) )
            {
            // InternalAcmeParser.g:19230:1: ( ( rule__QuantifiedExpression__RangeAssignment_1_5 ) )
            // InternalAcmeParser.g:19231:2: ( rule__QuantifiedExpression__RangeAssignment_1_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getRangeAssignment_1_5()); 
            }
            // InternalAcmeParser.g:19232:2: ( rule__QuantifiedExpression__RangeAssignment_1_5 )
            // InternalAcmeParser.g:19232:3: rule__QuantifiedExpression__RangeAssignment_1_5
            {
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__RangeAssignment_1_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getRangeAssignment_1_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_1__5__Impl"


    // $ANTLR start "rule__QuantifiedExpression__Group_1__6"
    // InternalAcmeParser.g:19240:1: rule__QuantifiedExpression__Group_1__6 : rule__QuantifiedExpression__Group_1__6__Impl rule__QuantifiedExpression__Group_1__7 ;
    public final void rule__QuantifiedExpression__Group_1__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19244:1: ( rule__QuantifiedExpression__Group_1__6__Impl rule__QuantifiedExpression__Group_1__7 )
            // InternalAcmeParser.g:19245:2: rule__QuantifiedExpression__Group_1__6__Impl rule__QuantifiedExpression__Group_1__7
            {
            pushFollow(FOLLOW_73);
            rule__QuantifiedExpression__Group_1__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__Group_1__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_1__6"


    // $ANTLR start "rule__QuantifiedExpression__Group_1__6__Impl"
    // InternalAcmeParser.g:19252:1: rule__QuantifiedExpression__Group_1__6__Impl : ( VerticalLine ) ;
    public final void rule__QuantifiedExpression__Group_1__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19256:1: ( ( VerticalLine ) )
            // InternalAcmeParser.g:19257:1: ( VerticalLine )
            {
            // InternalAcmeParser.g:19257:1: ( VerticalLine )
            // InternalAcmeParser.g:19258:2: VerticalLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getVerticalLineKeyword_1_6()); 
            }
            match(input,VerticalLine,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getVerticalLineKeyword_1_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_1__6__Impl"


    // $ANTLR start "rule__QuantifiedExpression__Group_1__7"
    // InternalAcmeParser.g:19267:1: rule__QuantifiedExpression__Group_1__7 : rule__QuantifiedExpression__Group_1__7__Impl ;
    public final void rule__QuantifiedExpression__Group_1__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19271:1: ( rule__QuantifiedExpression__Group_1__7__Impl )
            // InternalAcmeParser.g:19272:2: rule__QuantifiedExpression__Group_1__7__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__Group_1__7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_1__7"


    // $ANTLR start "rule__QuantifiedExpression__Group_1__7__Impl"
    // InternalAcmeParser.g:19278:1: rule__QuantifiedExpression__Group_1__7__Impl : ( ( rule__QuantifiedExpression__ExprAssignment_1_7 ) ) ;
    public final void rule__QuantifiedExpression__Group_1__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19282:1: ( ( ( rule__QuantifiedExpression__ExprAssignment_1_7 ) ) )
            // InternalAcmeParser.g:19283:1: ( ( rule__QuantifiedExpression__ExprAssignment_1_7 ) )
            {
            // InternalAcmeParser.g:19283:1: ( ( rule__QuantifiedExpression__ExprAssignment_1_7 ) )
            // InternalAcmeParser.g:19284:2: ( rule__QuantifiedExpression__ExprAssignment_1_7 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getExprAssignment_1_7()); 
            }
            // InternalAcmeParser.g:19285:2: ( rule__QuantifiedExpression__ExprAssignment_1_7 )
            // InternalAcmeParser.g:19285:3: rule__QuantifiedExpression__ExprAssignment_1_7
            {
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__ExprAssignment_1_7();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getExprAssignment_1_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_1__7__Impl"


    // $ANTLR start "rule__QuantifiedExpression__Group_1_3__0"
    // InternalAcmeParser.g:19294:1: rule__QuantifiedExpression__Group_1_3__0 : rule__QuantifiedExpression__Group_1_3__0__Impl rule__QuantifiedExpression__Group_1_3__1 ;
    public final void rule__QuantifiedExpression__Group_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19298:1: ( rule__QuantifiedExpression__Group_1_3__0__Impl rule__QuantifiedExpression__Group_1_3__1 )
            // InternalAcmeParser.g:19299:2: rule__QuantifiedExpression__Group_1_3__0__Impl rule__QuantifiedExpression__Group_1_3__1
            {
            pushFollow(FOLLOW_102);
            rule__QuantifiedExpression__Group_1_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__Group_1_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_1_3__0"


    // $ANTLR start "rule__QuantifiedExpression__Group_1_3__0__Impl"
    // InternalAcmeParser.g:19306:1: rule__QuantifiedExpression__Group_1_3__0__Impl : ( Comma ) ;
    public final void rule__QuantifiedExpression__Group_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19310:1: ( ( Comma ) )
            // InternalAcmeParser.g:19311:1: ( Comma )
            {
            // InternalAcmeParser.g:19311:1: ( Comma )
            // InternalAcmeParser.g:19312:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getCommaKeyword_1_3_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getCommaKeyword_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_1_3__0__Impl"


    // $ANTLR start "rule__QuantifiedExpression__Group_1_3__1"
    // InternalAcmeParser.g:19321:1: rule__QuantifiedExpression__Group_1_3__1 : rule__QuantifiedExpression__Group_1_3__1__Impl ;
    public final void rule__QuantifiedExpression__Group_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19325:1: ( rule__QuantifiedExpression__Group_1_3__1__Impl )
            // InternalAcmeParser.g:19326:2: rule__QuantifiedExpression__Group_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__Group_1_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_1_3__1"


    // $ANTLR start "rule__QuantifiedExpression__Group_1_3__1__Impl"
    // InternalAcmeParser.g:19332:1: rule__QuantifiedExpression__Group_1_3__1__Impl : ( ( rule__QuantifiedExpression__ParamsAssignment_1_3_1 ) ) ;
    public final void rule__QuantifiedExpression__Group_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19336:1: ( ( ( rule__QuantifiedExpression__ParamsAssignment_1_3_1 ) ) )
            // InternalAcmeParser.g:19337:1: ( ( rule__QuantifiedExpression__ParamsAssignment_1_3_1 ) )
            {
            // InternalAcmeParser.g:19337:1: ( ( rule__QuantifiedExpression__ParamsAssignment_1_3_1 ) )
            // InternalAcmeParser.g:19338:2: ( rule__QuantifiedExpression__ParamsAssignment_1_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getParamsAssignment_1_3_1()); 
            }
            // InternalAcmeParser.g:19339:2: ( rule__QuantifiedExpression__ParamsAssignment_1_3_1 )
            // InternalAcmeParser.g:19339:3: rule__QuantifiedExpression__ParamsAssignment_1_3_1
            {
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__ParamsAssignment_1_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getParamsAssignment_1_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_1_3__1__Impl"


    // $ANTLR start "rule__QuantifiedExpression__Group_2__0"
    // InternalAcmeParser.g:19348:1: rule__QuantifiedExpression__Group_2__0 : rule__QuantifiedExpression__Group_2__0__Impl rule__QuantifiedExpression__Group_2__1 ;
    public final void rule__QuantifiedExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19352:1: ( rule__QuantifiedExpression__Group_2__0__Impl rule__QuantifiedExpression__Group_2__1 )
            // InternalAcmeParser.g:19353:2: rule__QuantifiedExpression__Group_2__0__Impl rule__QuantifiedExpression__Group_2__1
            {
            pushFollow(FOLLOW_73);
            rule__QuantifiedExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_2__0"


    // $ANTLR start "rule__QuantifiedExpression__Group_2__0__Impl"
    // InternalAcmeParser.g:19360:1: rule__QuantifiedExpression__Group_2__0__Impl : ( ( LeftCurlyBracket )? ) ;
    public final void rule__QuantifiedExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19364:1: ( ( ( LeftCurlyBracket )? ) )
            // InternalAcmeParser.g:19365:1: ( ( LeftCurlyBracket )? )
            {
            // InternalAcmeParser.g:19365:1: ( ( LeftCurlyBracket )? )
            // InternalAcmeParser.g:19366:2: ( LeftCurlyBracket )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getLeftCurlyBracketKeyword_2_0()); 
            }
            // InternalAcmeParser.g:19367:2: ( LeftCurlyBracket )?
            int alt207=2;
            int LA207_0 = input.LA(1);

            if ( (LA207_0==LeftCurlyBracket) ) {
                alt207=1;
            }
            switch (alt207) {
                case 1 :
                    // InternalAcmeParser.g:19367:3: LeftCurlyBracket
                    {
                    match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getLeftCurlyBracketKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_2__0__Impl"


    // $ANTLR start "rule__QuantifiedExpression__Group_2__1"
    // InternalAcmeParser.g:19375:1: rule__QuantifiedExpression__Group_2__1 : rule__QuantifiedExpression__Group_2__1__Impl rule__QuantifiedExpression__Group_2__2 ;
    public final void rule__QuantifiedExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19379:1: ( rule__QuantifiedExpression__Group_2__1__Impl rule__QuantifiedExpression__Group_2__2 )
            // InternalAcmeParser.g:19380:2: rule__QuantifiedExpression__Group_2__1__Impl rule__QuantifiedExpression__Group_2__2
            {
            pushFollow(FOLLOW_102);
            rule__QuantifiedExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_2__1"


    // $ANTLR start "rule__QuantifiedExpression__Group_2__1__Impl"
    // InternalAcmeParser.g:19387:1: rule__QuantifiedExpression__Group_2__1__Impl : ( Select ) ;
    public final void rule__QuantifiedExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19391:1: ( ( Select ) )
            // InternalAcmeParser.g:19392:1: ( Select )
            {
            // InternalAcmeParser.g:19392:1: ( Select )
            // InternalAcmeParser.g:19393:2: Select
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getSelectKeyword_2_1()); 
            }
            match(input,Select,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getSelectKeyword_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_2__1__Impl"


    // $ANTLR start "rule__QuantifiedExpression__Group_2__2"
    // InternalAcmeParser.g:19402:1: rule__QuantifiedExpression__Group_2__2 : rule__QuantifiedExpression__Group_2__2__Impl rule__QuantifiedExpression__Group_2__3 ;
    public final void rule__QuantifiedExpression__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19406:1: ( rule__QuantifiedExpression__Group_2__2__Impl rule__QuantifiedExpression__Group_2__3 )
            // InternalAcmeParser.g:19407:2: rule__QuantifiedExpression__Group_2__2__Impl rule__QuantifiedExpression__Group_2__3
            {
            pushFollow(FOLLOW_103);
            rule__QuantifiedExpression__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__Group_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_2__2"


    // $ANTLR start "rule__QuantifiedExpression__Group_2__2__Impl"
    // InternalAcmeParser.g:19414:1: rule__QuantifiedExpression__Group_2__2__Impl : ( ( rule__QuantifiedExpression__ParamsAssignment_2_2 ) ) ;
    public final void rule__QuantifiedExpression__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19418:1: ( ( ( rule__QuantifiedExpression__ParamsAssignment_2_2 ) ) )
            // InternalAcmeParser.g:19419:1: ( ( rule__QuantifiedExpression__ParamsAssignment_2_2 ) )
            {
            // InternalAcmeParser.g:19419:1: ( ( rule__QuantifiedExpression__ParamsAssignment_2_2 ) )
            // InternalAcmeParser.g:19420:2: ( rule__QuantifiedExpression__ParamsAssignment_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getParamsAssignment_2_2()); 
            }
            // InternalAcmeParser.g:19421:2: ( rule__QuantifiedExpression__ParamsAssignment_2_2 )
            // InternalAcmeParser.g:19421:3: rule__QuantifiedExpression__ParamsAssignment_2_2
            {
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__ParamsAssignment_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getParamsAssignment_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_2__2__Impl"


    // $ANTLR start "rule__QuantifiedExpression__Group_2__3"
    // InternalAcmeParser.g:19429:1: rule__QuantifiedExpression__Group_2__3 : rule__QuantifiedExpression__Group_2__3__Impl rule__QuantifiedExpression__Group_2__4 ;
    public final void rule__QuantifiedExpression__Group_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19433:1: ( rule__QuantifiedExpression__Group_2__3__Impl rule__QuantifiedExpression__Group_2__4 )
            // InternalAcmeParser.g:19434:2: rule__QuantifiedExpression__Group_2__3__Impl rule__QuantifiedExpression__Group_2__4
            {
            pushFollow(FOLLOW_103);
            rule__QuantifiedExpression__Group_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__Group_2__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_2__3"


    // $ANTLR start "rule__QuantifiedExpression__Group_2__3__Impl"
    // InternalAcmeParser.g:19441:1: rule__QuantifiedExpression__Group_2__3__Impl : ( ( rule__QuantifiedExpression__Group_2_3__0 )? ) ;
    public final void rule__QuantifiedExpression__Group_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19445:1: ( ( ( rule__QuantifiedExpression__Group_2_3__0 )? ) )
            // InternalAcmeParser.g:19446:1: ( ( rule__QuantifiedExpression__Group_2_3__0 )? )
            {
            // InternalAcmeParser.g:19446:1: ( ( rule__QuantifiedExpression__Group_2_3__0 )? )
            // InternalAcmeParser.g:19447:2: ( rule__QuantifiedExpression__Group_2_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getGroup_2_3()); 
            }
            // InternalAcmeParser.g:19448:2: ( rule__QuantifiedExpression__Group_2_3__0 )?
            int alt208=2;
            int LA208_0 = input.LA(1);

            if ( (LA208_0==Comma) ) {
                alt208=1;
            }
            switch (alt208) {
                case 1 :
                    // InternalAcmeParser.g:19448:3: rule__QuantifiedExpression__Group_2_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__QuantifiedExpression__Group_2_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getGroup_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_2__3__Impl"


    // $ANTLR start "rule__QuantifiedExpression__Group_2__4"
    // InternalAcmeParser.g:19456:1: rule__QuantifiedExpression__Group_2__4 : rule__QuantifiedExpression__Group_2__4__Impl rule__QuantifiedExpression__Group_2__5 ;
    public final void rule__QuantifiedExpression__Group_2__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19460:1: ( rule__QuantifiedExpression__Group_2__4__Impl rule__QuantifiedExpression__Group_2__5 )
            // InternalAcmeParser.g:19461:2: rule__QuantifiedExpression__Group_2__4__Impl rule__QuantifiedExpression__Group_2__5
            {
            pushFollow(FOLLOW_104);
            rule__QuantifiedExpression__Group_2__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__Group_2__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_2__4"


    // $ANTLR start "rule__QuantifiedExpression__Group_2__4__Impl"
    // InternalAcmeParser.g:19468:1: rule__QuantifiedExpression__Group_2__4__Impl : ( In ) ;
    public final void rule__QuantifiedExpression__Group_2__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19472:1: ( ( In ) )
            // InternalAcmeParser.g:19473:1: ( In )
            {
            // InternalAcmeParser.g:19473:1: ( In )
            // InternalAcmeParser.g:19474:2: In
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getInKeyword_2_4()); 
            }
            match(input,In,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getInKeyword_2_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_2__4__Impl"


    // $ANTLR start "rule__QuantifiedExpression__Group_2__5"
    // InternalAcmeParser.g:19483:1: rule__QuantifiedExpression__Group_2__5 : rule__QuantifiedExpression__Group_2__5__Impl rule__QuantifiedExpression__Group_2__6 ;
    public final void rule__QuantifiedExpression__Group_2__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19487:1: ( rule__QuantifiedExpression__Group_2__5__Impl rule__QuantifiedExpression__Group_2__6 )
            // InternalAcmeParser.g:19488:2: rule__QuantifiedExpression__Group_2__5__Impl rule__QuantifiedExpression__Group_2__6
            {
            pushFollow(FOLLOW_105);
            rule__QuantifiedExpression__Group_2__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__Group_2__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_2__5"


    // $ANTLR start "rule__QuantifiedExpression__Group_2__5__Impl"
    // InternalAcmeParser.g:19495:1: rule__QuantifiedExpression__Group_2__5__Impl : ( ( rule__QuantifiedExpression__RangeAssignment_2_5 ) ) ;
    public final void rule__QuantifiedExpression__Group_2__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19499:1: ( ( ( rule__QuantifiedExpression__RangeAssignment_2_5 ) ) )
            // InternalAcmeParser.g:19500:1: ( ( rule__QuantifiedExpression__RangeAssignment_2_5 ) )
            {
            // InternalAcmeParser.g:19500:1: ( ( rule__QuantifiedExpression__RangeAssignment_2_5 ) )
            // InternalAcmeParser.g:19501:2: ( rule__QuantifiedExpression__RangeAssignment_2_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getRangeAssignment_2_5()); 
            }
            // InternalAcmeParser.g:19502:2: ( rule__QuantifiedExpression__RangeAssignment_2_5 )
            // InternalAcmeParser.g:19502:3: rule__QuantifiedExpression__RangeAssignment_2_5
            {
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__RangeAssignment_2_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getRangeAssignment_2_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_2__5__Impl"


    // $ANTLR start "rule__QuantifiedExpression__Group_2__6"
    // InternalAcmeParser.g:19510:1: rule__QuantifiedExpression__Group_2__6 : rule__QuantifiedExpression__Group_2__6__Impl rule__QuantifiedExpression__Group_2__7 ;
    public final void rule__QuantifiedExpression__Group_2__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19514:1: ( rule__QuantifiedExpression__Group_2__6__Impl rule__QuantifiedExpression__Group_2__7 )
            // InternalAcmeParser.g:19515:2: rule__QuantifiedExpression__Group_2__6__Impl rule__QuantifiedExpression__Group_2__7
            {
            pushFollow(FOLLOW_73);
            rule__QuantifiedExpression__Group_2__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__Group_2__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_2__6"


    // $ANTLR start "rule__QuantifiedExpression__Group_2__6__Impl"
    // InternalAcmeParser.g:19522:1: rule__QuantifiedExpression__Group_2__6__Impl : ( VerticalLine ) ;
    public final void rule__QuantifiedExpression__Group_2__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19526:1: ( ( VerticalLine ) )
            // InternalAcmeParser.g:19527:1: ( VerticalLine )
            {
            // InternalAcmeParser.g:19527:1: ( VerticalLine )
            // InternalAcmeParser.g:19528:2: VerticalLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getVerticalLineKeyword_2_6()); 
            }
            match(input,VerticalLine,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getVerticalLineKeyword_2_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_2__6__Impl"


    // $ANTLR start "rule__QuantifiedExpression__Group_2__7"
    // InternalAcmeParser.g:19537:1: rule__QuantifiedExpression__Group_2__7 : rule__QuantifiedExpression__Group_2__7__Impl rule__QuantifiedExpression__Group_2__8 ;
    public final void rule__QuantifiedExpression__Group_2__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19541:1: ( rule__QuantifiedExpression__Group_2__7__Impl rule__QuantifiedExpression__Group_2__8 )
            // InternalAcmeParser.g:19542:2: rule__QuantifiedExpression__Group_2__7__Impl rule__QuantifiedExpression__Group_2__8
            {
            pushFollow(FOLLOW_107);
            rule__QuantifiedExpression__Group_2__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__Group_2__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_2__7"


    // $ANTLR start "rule__QuantifiedExpression__Group_2__7__Impl"
    // InternalAcmeParser.g:19549:1: rule__QuantifiedExpression__Group_2__7__Impl : ( ( rule__QuantifiedExpression__ExprAssignment_2_7 ) ) ;
    public final void rule__QuantifiedExpression__Group_2__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19553:1: ( ( ( rule__QuantifiedExpression__ExprAssignment_2_7 ) ) )
            // InternalAcmeParser.g:19554:1: ( ( rule__QuantifiedExpression__ExprAssignment_2_7 ) )
            {
            // InternalAcmeParser.g:19554:1: ( ( rule__QuantifiedExpression__ExprAssignment_2_7 ) )
            // InternalAcmeParser.g:19555:2: ( rule__QuantifiedExpression__ExprAssignment_2_7 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getExprAssignment_2_7()); 
            }
            // InternalAcmeParser.g:19556:2: ( rule__QuantifiedExpression__ExprAssignment_2_7 )
            // InternalAcmeParser.g:19556:3: rule__QuantifiedExpression__ExprAssignment_2_7
            {
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__ExprAssignment_2_7();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getExprAssignment_2_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_2__7__Impl"


    // $ANTLR start "rule__QuantifiedExpression__Group_2__8"
    // InternalAcmeParser.g:19564:1: rule__QuantifiedExpression__Group_2__8 : rule__QuantifiedExpression__Group_2__8__Impl ;
    public final void rule__QuantifiedExpression__Group_2__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19568:1: ( rule__QuantifiedExpression__Group_2__8__Impl )
            // InternalAcmeParser.g:19569:2: rule__QuantifiedExpression__Group_2__8__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__Group_2__8__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_2__8"


    // $ANTLR start "rule__QuantifiedExpression__Group_2__8__Impl"
    // InternalAcmeParser.g:19575:1: rule__QuantifiedExpression__Group_2__8__Impl : ( ( RightCurlyBracket )? ) ;
    public final void rule__QuantifiedExpression__Group_2__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19579:1: ( ( ( RightCurlyBracket )? ) )
            // InternalAcmeParser.g:19580:1: ( ( RightCurlyBracket )? )
            {
            // InternalAcmeParser.g:19580:1: ( ( RightCurlyBracket )? )
            // InternalAcmeParser.g:19581:2: ( RightCurlyBracket )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getRightCurlyBracketKeyword_2_8()); 
            }
            // InternalAcmeParser.g:19582:2: ( RightCurlyBracket )?
            int alt209=2;
            int LA209_0 = input.LA(1);

            if ( (LA209_0==RightCurlyBracket) ) {
                int LA209_1 = input.LA(2);

                if ( (synpred287_InternalAcmeParser()) ) {
                    alt209=1;
                }
            }
            switch (alt209) {
                case 1 :
                    // InternalAcmeParser.g:19582:3: RightCurlyBracket
                    {
                    match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getRightCurlyBracketKeyword_2_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_2__8__Impl"


    // $ANTLR start "rule__QuantifiedExpression__Group_2_3__0"
    // InternalAcmeParser.g:19591:1: rule__QuantifiedExpression__Group_2_3__0 : rule__QuantifiedExpression__Group_2_3__0__Impl rule__QuantifiedExpression__Group_2_3__1 ;
    public final void rule__QuantifiedExpression__Group_2_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19595:1: ( rule__QuantifiedExpression__Group_2_3__0__Impl rule__QuantifiedExpression__Group_2_3__1 )
            // InternalAcmeParser.g:19596:2: rule__QuantifiedExpression__Group_2_3__0__Impl rule__QuantifiedExpression__Group_2_3__1
            {
            pushFollow(FOLLOW_102);
            rule__QuantifiedExpression__Group_2_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__Group_2_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_2_3__0"


    // $ANTLR start "rule__QuantifiedExpression__Group_2_3__0__Impl"
    // InternalAcmeParser.g:19603:1: rule__QuantifiedExpression__Group_2_3__0__Impl : ( Comma ) ;
    public final void rule__QuantifiedExpression__Group_2_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19607:1: ( ( Comma ) )
            // InternalAcmeParser.g:19608:1: ( Comma )
            {
            // InternalAcmeParser.g:19608:1: ( Comma )
            // InternalAcmeParser.g:19609:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getCommaKeyword_2_3_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getCommaKeyword_2_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_2_3__0__Impl"


    // $ANTLR start "rule__QuantifiedExpression__Group_2_3__1"
    // InternalAcmeParser.g:19618:1: rule__QuantifiedExpression__Group_2_3__1 : rule__QuantifiedExpression__Group_2_3__1__Impl ;
    public final void rule__QuantifiedExpression__Group_2_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19622:1: ( rule__QuantifiedExpression__Group_2_3__1__Impl )
            // InternalAcmeParser.g:19623:2: rule__QuantifiedExpression__Group_2_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__Group_2_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_2_3__1"


    // $ANTLR start "rule__QuantifiedExpression__Group_2_3__1__Impl"
    // InternalAcmeParser.g:19629:1: rule__QuantifiedExpression__Group_2_3__1__Impl : ( ( rule__QuantifiedExpression__ParamsAssignment_2_3_1 ) ) ;
    public final void rule__QuantifiedExpression__Group_2_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19633:1: ( ( ( rule__QuantifiedExpression__ParamsAssignment_2_3_1 ) ) )
            // InternalAcmeParser.g:19634:1: ( ( rule__QuantifiedExpression__ParamsAssignment_2_3_1 ) )
            {
            // InternalAcmeParser.g:19634:1: ( ( rule__QuantifiedExpression__ParamsAssignment_2_3_1 ) )
            // InternalAcmeParser.g:19635:2: ( rule__QuantifiedExpression__ParamsAssignment_2_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getParamsAssignment_2_3_1()); 
            }
            // InternalAcmeParser.g:19636:2: ( rule__QuantifiedExpression__ParamsAssignment_2_3_1 )
            // InternalAcmeParser.g:19636:3: rule__QuantifiedExpression__ParamsAssignment_2_3_1
            {
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__ParamsAssignment_2_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getParamsAssignment_2_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__Group_2_3__1__Impl"


    // $ANTLR start "rule__PathExpression__Group__0"
    // InternalAcmeParser.g:19645:1: rule__PathExpression__Group__0 : rule__PathExpression__Group__0__Impl rule__PathExpression__Group__1 ;
    public final void rule__PathExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19649:1: ( rule__PathExpression__Group__0__Impl rule__PathExpression__Group__1 )
            // InternalAcmeParser.g:19650:2: rule__PathExpression__Group__0__Impl rule__PathExpression__Group__1
            {
            pushFollow(FOLLOW_11);
            rule__PathExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PathExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpression__Group__0"


    // $ANTLR start "rule__PathExpression__Group__0__Impl"
    // InternalAcmeParser.g:19657:1: rule__PathExpression__Group__0__Impl : ( Solidus ) ;
    public final void rule__PathExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19661:1: ( ( Solidus ) )
            // InternalAcmeParser.g:19662:1: ( Solidus )
            {
            // InternalAcmeParser.g:19662:1: ( Solidus )
            // InternalAcmeParser.g:19663:2: Solidus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathExpressionAccess().getSolidusKeyword_0()); 
            }
            match(input,Solidus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathExpressionAccess().getSolidusKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpression__Group__0__Impl"


    // $ANTLR start "rule__PathExpression__Group__1"
    // InternalAcmeParser.g:19672:1: rule__PathExpression__Group__1 : rule__PathExpression__Group__1__Impl rule__PathExpression__Group__2 ;
    public final void rule__PathExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19676:1: ( rule__PathExpression__Group__1__Impl rule__PathExpression__Group__2 )
            // InternalAcmeParser.g:19677:2: rule__PathExpression__Group__1__Impl rule__PathExpression__Group__2
            {
            pushFollow(FOLLOW_108);
            rule__PathExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PathExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpression__Group__1"


    // $ANTLR start "rule__PathExpression__Group__1__Impl"
    // InternalAcmeParser.g:19684:1: rule__PathExpression__Group__1__Impl : ( ( rule__PathExpression__Alternatives_1 ) ) ;
    public final void rule__PathExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19688:1: ( ( ( rule__PathExpression__Alternatives_1 ) ) )
            // InternalAcmeParser.g:19689:1: ( ( rule__PathExpression__Alternatives_1 ) )
            {
            // InternalAcmeParser.g:19689:1: ( ( rule__PathExpression__Alternatives_1 ) )
            // InternalAcmeParser.g:19690:2: ( rule__PathExpression__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathExpressionAccess().getAlternatives_1()); 
            }
            // InternalAcmeParser.g:19691:2: ( rule__PathExpression__Alternatives_1 )
            // InternalAcmeParser.g:19691:3: rule__PathExpression__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__PathExpression__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathExpressionAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpression__Group__1__Impl"


    // $ANTLR start "rule__PathExpression__Group__2"
    // InternalAcmeParser.g:19699:1: rule__PathExpression__Group__2 : rule__PathExpression__Group__2__Impl rule__PathExpression__Group__3 ;
    public final void rule__PathExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19703:1: ( rule__PathExpression__Group__2__Impl rule__PathExpression__Group__3 )
            // InternalAcmeParser.g:19704:2: rule__PathExpression__Group__2__Impl rule__PathExpression__Group__3
            {
            pushFollow(FOLLOW_108);
            rule__PathExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PathExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpression__Group__2"


    // $ANTLR start "rule__PathExpression__Group__2__Impl"
    // InternalAcmeParser.g:19711:1: rule__PathExpression__Group__2__Impl : ( ( rule__PathExpression__Group_2__0 )? ) ;
    public final void rule__PathExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19715:1: ( ( ( rule__PathExpression__Group_2__0 )? ) )
            // InternalAcmeParser.g:19716:1: ( ( rule__PathExpression__Group_2__0 )? )
            {
            // InternalAcmeParser.g:19716:1: ( ( rule__PathExpression__Group_2__0 )? )
            // InternalAcmeParser.g:19717:2: ( rule__PathExpression__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathExpressionAccess().getGroup_2()); 
            }
            // InternalAcmeParser.g:19718:2: ( rule__PathExpression__Group_2__0 )?
            int alt210=2;
            int LA210_0 = input.LA(1);

            if ( (LA210_0==ColonExclamationMark||LA210_0==Colon) ) {
                alt210=1;
            }
            switch (alt210) {
                case 1 :
                    // InternalAcmeParser.g:19718:3: rule__PathExpression__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PathExpression__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathExpressionAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpression__Group__2__Impl"


    // $ANTLR start "rule__PathExpression__Group__3"
    // InternalAcmeParser.g:19726:1: rule__PathExpression__Group__3 : rule__PathExpression__Group__3__Impl rule__PathExpression__Group__4 ;
    public final void rule__PathExpression__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19730:1: ( rule__PathExpression__Group__3__Impl rule__PathExpression__Group__4 )
            // InternalAcmeParser.g:19731:2: rule__PathExpression__Group__3__Impl rule__PathExpression__Group__4
            {
            pushFollow(FOLLOW_108);
            rule__PathExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PathExpression__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpression__Group__3"


    // $ANTLR start "rule__PathExpression__Group__3__Impl"
    // InternalAcmeParser.g:19738:1: rule__PathExpression__Group__3__Impl : ( ( rule__PathExpression__Group_3__0 )? ) ;
    public final void rule__PathExpression__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19742:1: ( ( ( rule__PathExpression__Group_3__0 )? ) )
            // InternalAcmeParser.g:19743:1: ( ( rule__PathExpression__Group_3__0 )? )
            {
            // InternalAcmeParser.g:19743:1: ( ( rule__PathExpression__Group_3__0 )? )
            // InternalAcmeParser.g:19744:2: ( rule__PathExpression__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathExpressionAccess().getGroup_3()); 
            }
            // InternalAcmeParser.g:19745:2: ( rule__PathExpression__Group_3__0 )?
            int alt211=2;
            int LA211_0 = input.LA(1);

            if ( (LA211_0==LeftSquareBracket) ) {
                alt211=1;
            }
            switch (alt211) {
                case 1 :
                    // InternalAcmeParser.g:19745:3: rule__PathExpression__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PathExpression__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathExpressionAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpression__Group__3__Impl"


    // $ANTLR start "rule__PathExpression__Group__4"
    // InternalAcmeParser.g:19753:1: rule__PathExpression__Group__4 : rule__PathExpression__Group__4__Impl ;
    public final void rule__PathExpression__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19757:1: ( rule__PathExpression__Group__4__Impl )
            // InternalAcmeParser.g:19758:2: rule__PathExpression__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PathExpression__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpression__Group__4"


    // $ANTLR start "rule__PathExpression__Group__4__Impl"
    // InternalAcmeParser.g:19764:1: rule__PathExpression__Group__4__Impl : ( ( rule__PathExpression__ContinuationAssignment_4 )? ) ;
    public final void rule__PathExpression__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19768:1: ( ( ( rule__PathExpression__ContinuationAssignment_4 )? ) )
            // InternalAcmeParser.g:19769:1: ( ( rule__PathExpression__ContinuationAssignment_4 )? )
            {
            // InternalAcmeParser.g:19769:1: ( ( rule__PathExpression__ContinuationAssignment_4 )? )
            // InternalAcmeParser.g:19770:2: ( rule__PathExpression__ContinuationAssignment_4 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathExpressionAccess().getContinuationAssignment_4()); 
            }
            // InternalAcmeParser.g:19771:2: ( rule__PathExpression__ContinuationAssignment_4 )?
            int alt212=2;
            alt212 = dfa212.predict(input);
            switch (alt212) {
                case 1 :
                    // InternalAcmeParser.g:19771:3: rule__PathExpression__ContinuationAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__PathExpression__ContinuationAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathExpressionAccess().getContinuationAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpression__Group__4__Impl"


    // $ANTLR start "rule__PathExpression__Group_2__0"
    // InternalAcmeParser.g:19780:1: rule__PathExpression__Group_2__0 : rule__PathExpression__Group_2__0__Impl rule__PathExpression__Group_2__1 ;
    public final void rule__PathExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19784:1: ( rule__PathExpression__Group_2__0__Impl rule__PathExpression__Group_2__1 )
            // InternalAcmeParser.g:19785:2: rule__PathExpression__Group_2__0__Impl rule__PathExpression__Group_2__1
            {
            pushFollow(FOLLOW_11);
            rule__PathExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PathExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpression__Group_2__0"


    // $ANTLR start "rule__PathExpression__Group_2__0__Impl"
    // InternalAcmeParser.g:19792:1: rule__PathExpression__Group_2__0__Impl : ( ( rule__PathExpression__DeclaresAssignment_2_0 ) ) ;
    public final void rule__PathExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19796:1: ( ( ( rule__PathExpression__DeclaresAssignment_2_0 ) ) )
            // InternalAcmeParser.g:19797:1: ( ( rule__PathExpression__DeclaresAssignment_2_0 ) )
            {
            // InternalAcmeParser.g:19797:1: ( ( rule__PathExpression__DeclaresAssignment_2_0 ) )
            // InternalAcmeParser.g:19798:2: ( rule__PathExpression__DeclaresAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathExpressionAccess().getDeclaresAssignment_2_0()); 
            }
            // InternalAcmeParser.g:19799:2: ( rule__PathExpression__DeclaresAssignment_2_0 )
            // InternalAcmeParser.g:19799:3: rule__PathExpression__DeclaresAssignment_2_0
            {
            pushFollow(FOLLOW_2);
            rule__PathExpression__DeclaresAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathExpressionAccess().getDeclaresAssignment_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpression__Group_2__0__Impl"


    // $ANTLR start "rule__PathExpression__Group_2__1"
    // InternalAcmeParser.g:19807:1: rule__PathExpression__Group_2__1 : rule__PathExpression__Group_2__1__Impl ;
    public final void rule__PathExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19811:1: ( rule__PathExpression__Group_2__1__Impl )
            // InternalAcmeParser.g:19812:2: rule__PathExpression__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PathExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpression__Group_2__1"


    // $ANTLR start "rule__PathExpression__Group_2__1__Impl"
    // InternalAcmeParser.g:19818:1: rule__PathExpression__Group_2__1__Impl : ( ruleQualifiedIdentifier ) ;
    public final void rule__PathExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19822:1: ( ( ruleQualifiedIdentifier ) )
            // InternalAcmeParser.g:19823:1: ( ruleQualifiedIdentifier )
            {
            // InternalAcmeParser.g:19823:1: ( ruleQualifiedIdentifier )
            // InternalAcmeParser.g:19824:2: ruleQualifiedIdentifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathExpressionAccess().getQualifiedIdentifierParserRuleCall_2_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathExpressionAccess().getQualifiedIdentifierParserRuleCall_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpression__Group_2__1__Impl"


    // $ANTLR start "rule__PathExpression__Group_3__0"
    // InternalAcmeParser.g:19834:1: rule__PathExpression__Group_3__0 : rule__PathExpression__Group_3__0__Impl rule__PathExpression__Group_3__1 ;
    public final void rule__PathExpression__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19838:1: ( rule__PathExpression__Group_3__0__Impl rule__PathExpression__Group_3__1 )
            // InternalAcmeParser.g:19839:2: rule__PathExpression__Group_3__0__Impl rule__PathExpression__Group_3__1
            {
            pushFollow(FOLLOW_73);
            rule__PathExpression__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PathExpression__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpression__Group_3__0"


    // $ANTLR start "rule__PathExpression__Group_3__0__Impl"
    // InternalAcmeParser.g:19846:1: rule__PathExpression__Group_3__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__PathExpression__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19850:1: ( ( LeftSquareBracket ) )
            // InternalAcmeParser.g:19851:1: ( LeftSquareBracket )
            {
            // InternalAcmeParser.g:19851:1: ( LeftSquareBracket )
            // InternalAcmeParser.g:19852:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathExpressionAccess().getLeftSquareBracketKeyword_3_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathExpressionAccess().getLeftSquareBracketKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpression__Group_3__0__Impl"


    // $ANTLR start "rule__PathExpression__Group_3__1"
    // InternalAcmeParser.g:19861:1: rule__PathExpression__Group_3__1 : rule__PathExpression__Group_3__1__Impl rule__PathExpression__Group_3__2 ;
    public final void rule__PathExpression__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19865:1: ( rule__PathExpression__Group_3__1__Impl rule__PathExpression__Group_3__2 )
            // InternalAcmeParser.g:19866:2: rule__PathExpression__Group_3__1__Impl rule__PathExpression__Group_3__2
            {
            pushFollow(FOLLOW_109);
            rule__PathExpression__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PathExpression__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpression__Group_3__1"


    // $ANTLR start "rule__PathExpression__Group_3__1__Impl"
    // InternalAcmeParser.g:19873:1: rule__PathExpression__Group_3__1__Impl : ( ( rule__PathExpression__SelectorAssignment_3_1 ) ) ;
    public final void rule__PathExpression__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19877:1: ( ( ( rule__PathExpression__SelectorAssignment_3_1 ) ) )
            // InternalAcmeParser.g:19878:1: ( ( rule__PathExpression__SelectorAssignment_3_1 ) )
            {
            // InternalAcmeParser.g:19878:1: ( ( rule__PathExpression__SelectorAssignment_3_1 ) )
            // InternalAcmeParser.g:19879:2: ( rule__PathExpression__SelectorAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathExpressionAccess().getSelectorAssignment_3_1()); 
            }
            // InternalAcmeParser.g:19880:2: ( rule__PathExpression__SelectorAssignment_3_1 )
            // InternalAcmeParser.g:19880:3: rule__PathExpression__SelectorAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__PathExpression__SelectorAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathExpressionAccess().getSelectorAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpression__Group_3__1__Impl"


    // $ANTLR start "rule__PathExpression__Group_3__2"
    // InternalAcmeParser.g:19888:1: rule__PathExpression__Group_3__2 : rule__PathExpression__Group_3__2__Impl ;
    public final void rule__PathExpression__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19892:1: ( rule__PathExpression__Group_3__2__Impl )
            // InternalAcmeParser.g:19893:2: rule__PathExpression__Group_3__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PathExpression__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpression__Group_3__2"


    // $ANTLR start "rule__PathExpression__Group_3__2__Impl"
    // InternalAcmeParser.g:19899:1: rule__PathExpression__Group_3__2__Impl : ( RightSquareBracket ) ;
    public final void rule__PathExpression__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19903:1: ( ( RightSquareBracket ) )
            // InternalAcmeParser.g:19904:1: ( RightSquareBracket )
            {
            // InternalAcmeParser.g:19904:1: ( RightSquareBracket )
            // InternalAcmeParser.g:19905:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathExpressionAccess().getRightSquareBracketKeyword_3_2()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathExpressionAccess().getRightSquareBracketKeyword_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpression__Group_3__2__Impl"


    // $ANTLR start "rule__PathExpressionContinuation__Group__0"
    // InternalAcmeParser.g:19915:1: rule__PathExpressionContinuation__Group__0 : rule__PathExpressionContinuation__Group__0__Impl rule__PathExpressionContinuation__Group__1 ;
    public final void rule__PathExpressionContinuation__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19919:1: ( rule__PathExpressionContinuation__Group__0__Impl rule__PathExpressionContinuation__Group__1 )
            // InternalAcmeParser.g:19920:2: rule__PathExpressionContinuation__Group__0__Impl rule__PathExpressionContinuation__Group__1
            {
            pushFollow(FOLLOW_110);
            rule__PathExpressionContinuation__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PathExpressionContinuation__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpressionContinuation__Group__0"


    // $ANTLR start "rule__PathExpressionContinuation__Group__0__Impl"
    // InternalAcmeParser.g:19927:1: rule__PathExpressionContinuation__Group__0__Impl : ( () ) ;
    public final void rule__PathExpressionContinuation__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19931:1: ( ( () ) )
            // InternalAcmeParser.g:19932:1: ( () )
            {
            // InternalAcmeParser.g:19932:1: ( () )
            // InternalAcmeParser.g:19933:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathExpressionContinuationAccess().getPathExpressionContinuationAction_0()); 
            }
            // InternalAcmeParser.g:19934:2: ()
            // InternalAcmeParser.g:19934:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathExpressionContinuationAccess().getPathExpressionContinuationAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpressionContinuation__Group__0__Impl"


    // $ANTLR start "rule__PathExpressionContinuation__Group__1"
    // InternalAcmeParser.g:19942:1: rule__PathExpressionContinuation__Group__1 : rule__PathExpressionContinuation__Group__1__Impl rule__PathExpressionContinuation__Group__2 ;
    public final void rule__PathExpressionContinuation__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19946:1: ( rule__PathExpressionContinuation__Group__1__Impl rule__PathExpressionContinuation__Group__2 )
            // InternalAcmeParser.g:19947:2: rule__PathExpressionContinuation__Group__1__Impl rule__PathExpressionContinuation__Group__2
            {
            pushFollow(FOLLOW_111);
            rule__PathExpressionContinuation__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PathExpressionContinuation__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpressionContinuation__Group__1"


    // $ANTLR start "rule__PathExpressionContinuation__Group__1__Impl"
    // InternalAcmeParser.g:19954:1: rule__PathExpressionContinuation__Group__1__Impl : ( Solidus ) ;
    public final void rule__PathExpressionContinuation__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19958:1: ( ( Solidus ) )
            // InternalAcmeParser.g:19959:1: ( Solidus )
            {
            // InternalAcmeParser.g:19959:1: ( Solidus )
            // InternalAcmeParser.g:19960:2: Solidus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathExpressionContinuationAccess().getSolidusKeyword_1()); 
            }
            match(input,Solidus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathExpressionContinuationAccess().getSolidusKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpressionContinuation__Group__1__Impl"


    // $ANTLR start "rule__PathExpressionContinuation__Group__2"
    // InternalAcmeParser.g:19969:1: rule__PathExpressionContinuation__Group__2 : rule__PathExpressionContinuation__Group__2__Impl rule__PathExpressionContinuation__Group__3 ;
    public final void rule__PathExpressionContinuation__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19973:1: ( rule__PathExpressionContinuation__Group__2__Impl rule__PathExpressionContinuation__Group__3 )
            // InternalAcmeParser.g:19974:2: rule__PathExpressionContinuation__Group__2__Impl rule__PathExpressionContinuation__Group__3
            {
            pushFollow(FOLLOW_111);
            rule__PathExpressionContinuation__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PathExpressionContinuation__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpressionContinuation__Group__2"


    // $ANTLR start "rule__PathExpressionContinuation__Group__2__Impl"
    // InternalAcmeParser.g:19981:1: rule__PathExpressionContinuation__Group__2__Impl : ( ( rule__PathExpressionContinuation__PathAssignment_2 )? ) ;
    public final void rule__PathExpressionContinuation__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:19985:1: ( ( ( rule__PathExpressionContinuation__PathAssignment_2 )? ) )
            // InternalAcmeParser.g:19986:1: ( ( rule__PathExpressionContinuation__PathAssignment_2 )? )
            {
            // InternalAcmeParser.g:19986:1: ( ( rule__PathExpressionContinuation__PathAssignment_2 )? )
            // InternalAcmeParser.g:19987:2: ( rule__PathExpressionContinuation__PathAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathExpressionContinuationAccess().getPathAssignment_2()); 
            }
            // InternalAcmeParser.g:19988:2: ( rule__PathExpressionContinuation__PathAssignment_2 )?
            int alt213=2;
            int LA213_0 = input.LA(1);

            if ( (LA213_0==FullStopFullStopFullStop) ) {
                alt213=1;
            }
            switch (alt213) {
                case 1 :
                    // InternalAcmeParser.g:19988:3: rule__PathExpressionContinuation__PathAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__PathExpressionContinuation__PathAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathExpressionContinuationAccess().getPathAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpressionContinuation__Group__2__Impl"


    // $ANTLR start "rule__PathExpressionContinuation__Group__3"
    // InternalAcmeParser.g:19996:1: rule__PathExpressionContinuation__Group__3 : rule__PathExpressionContinuation__Group__3__Impl rule__PathExpressionContinuation__Group__4 ;
    public final void rule__PathExpressionContinuation__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20000:1: ( rule__PathExpressionContinuation__Group__3__Impl rule__PathExpressionContinuation__Group__4 )
            // InternalAcmeParser.g:20001:2: rule__PathExpressionContinuation__Group__3__Impl rule__PathExpressionContinuation__Group__4
            {
            pushFollow(FOLLOW_108);
            rule__PathExpressionContinuation__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PathExpressionContinuation__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpressionContinuation__Group__3"


    // $ANTLR start "rule__PathExpressionContinuation__Group__3__Impl"
    // InternalAcmeParser.g:20008:1: rule__PathExpressionContinuation__Group__3__Impl : ( RULE_ID ) ;
    public final void rule__PathExpressionContinuation__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20012:1: ( ( RULE_ID ) )
            // InternalAcmeParser.g:20013:1: ( RULE_ID )
            {
            // InternalAcmeParser.g:20013:1: ( RULE_ID )
            // InternalAcmeParser.g:20014:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathExpressionContinuationAccess().getIDTerminalRuleCall_3()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathExpressionContinuationAccess().getIDTerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpressionContinuation__Group__3__Impl"


    // $ANTLR start "rule__PathExpressionContinuation__Group__4"
    // InternalAcmeParser.g:20023:1: rule__PathExpressionContinuation__Group__4 : rule__PathExpressionContinuation__Group__4__Impl rule__PathExpressionContinuation__Group__5 ;
    public final void rule__PathExpressionContinuation__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20027:1: ( rule__PathExpressionContinuation__Group__4__Impl rule__PathExpressionContinuation__Group__5 )
            // InternalAcmeParser.g:20028:2: rule__PathExpressionContinuation__Group__4__Impl rule__PathExpressionContinuation__Group__5
            {
            pushFollow(FOLLOW_108);
            rule__PathExpressionContinuation__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PathExpressionContinuation__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpressionContinuation__Group__4"


    // $ANTLR start "rule__PathExpressionContinuation__Group__4__Impl"
    // InternalAcmeParser.g:20035:1: rule__PathExpressionContinuation__Group__4__Impl : ( ( rule__PathExpressionContinuation__Group_4__0 )? ) ;
    public final void rule__PathExpressionContinuation__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20039:1: ( ( ( rule__PathExpressionContinuation__Group_4__0 )? ) )
            // InternalAcmeParser.g:20040:1: ( ( rule__PathExpressionContinuation__Group_4__0 )? )
            {
            // InternalAcmeParser.g:20040:1: ( ( rule__PathExpressionContinuation__Group_4__0 )? )
            // InternalAcmeParser.g:20041:2: ( rule__PathExpressionContinuation__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathExpressionContinuationAccess().getGroup_4()); 
            }
            // InternalAcmeParser.g:20042:2: ( rule__PathExpressionContinuation__Group_4__0 )?
            int alt214=2;
            int LA214_0 = input.LA(1);

            if ( (LA214_0==ColonExclamationMark||LA214_0==Colon) ) {
                alt214=1;
            }
            switch (alt214) {
                case 1 :
                    // InternalAcmeParser.g:20042:3: rule__PathExpressionContinuation__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PathExpressionContinuation__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathExpressionContinuationAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpressionContinuation__Group__4__Impl"


    // $ANTLR start "rule__PathExpressionContinuation__Group__5"
    // InternalAcmeParser.g:20050:1: rule__PathExpressionContinuation__Group__5 : rule__PathExpressionContinuation__Group__5__Impl rule__PathExpressionContinuation__Group__6 ;
    public final void rule__PathExpressionContinuation__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20054:1: ( rule__PathExpressionContinuation__Group__5__Impl rule__PathExpressionContinuation__Group__6 )
            // InternalAcmeParser.g:20055:2: rule__PathExpressionContinuation__Group__5__Impl rule__PathExpressionContinuation__Group__6
            {
            pushFollow(FOLLOW_108);
            rule__PathExpressionContinuation__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PathExpressionContinuation__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpressionContinuation__Group__5"


    // $ANTLR start "rule__PathExpressionContinuation__Group__5__Impl"
    // InternalAcmeParser.g:20062:1: rule__PathExpressionContinuation__Group__5__Impl : ( ( rule__PathExpressionContinuation__Group_5__0 )? ) ;
    public final void rule__PathExpressionContinuation__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20066:1: ( ( ( rule__PathExpressionContinuation__Group_5__0 )? ) )
            // InternalAcmeParser.g:20067:1: ( ( rule__PathExpressionContinuation__Group_5__0 )? )
            {
            // InternalAcmeParser.g:20067:1: ( ( rule__PathExpressionContinuation__Group_5__0 )? )
            // InternalAcmeParser.g:20068:2: ( rule__PathExpressionContinuation__Group_5__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathExpressionContinuationAccess().getGroup_5()); 
            }
            // InternalAcmeParser.g:20069:2: ( rule__PathExpressionContinuation__Group_5__0 )?
            int alt215=2;
            int LA215_0 = input.LA(1);

            if ( (LA215_0==LeftSquareBracket) ) {
                alt215=1;
            }
            switch (alt215) {
                case 1 :
                    // InternalAcmeParser.g:20069:3: rule__PathExpressionContinuation__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PathExpressionContinuation__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathExpressionContinuationAccess().getGroup_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpressionContinuation__Group__5__Impl"


    // $ANTLR start "rule__PathExpressionContinuation__Group__6"
    // InternalAcmeParser.g:20077:1: rule__PathExpressionContinuation__Group__6 : rule__PathExpressionContinuation__Group__6__Impl ;
    public final void rule__PathExpressionContinuation__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20081:1: ( rule__PathExpressionContinuation__Group__6__Impl )
            // InternalAcmeParser.g:20082:2: rule__PathExpressionContinuation__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PathExpressionContinuation__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpressionContinuation__Group__6"


    // $ANTLR start "rule__PathExpressionContinuation__Group__6__Impl"
    // InternalAcmeParser.g:20088:1: rule__PathExpressionContinuation__Group__6__Impl : ( ( rule__PathExpressionContinuation__ContinueAssignment_6 )? ) ;
    public final void rule__PathExpressionContinuation__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20092:1: ( ( ( rule__PathExpressionContinuation__ContinueAssignment_6 )? ) )
            // InternalAcmeParser.g:20093:1: ( ( rule__PathExpressionContinuation__ContinueAssignment_6 )? )
            {
            // InternalAcmeParser.g:20093:1: ( ( rule__PathExpressionContinuation__ContinueAssignment_6 )? )
            // InternalAcmeParser.g:20094:2: ( rule__PathExpressionContinuation__ContinueAssignment_6 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathExpressionContinuationAccess().getContinueAssignment_6()); 
            }
            // InternalAcmeParser.g:20095:2: ( rule__PathExpressionContinuation__ContinueAssignment_6 )?
            int alt216=2;
            alt216 = dfa216.predict(input);
            switch (alt216) {
                case 1 :
                    // InternalAcmeParser.g:20095:3: rule__PathExpressionContinuation__ContinueAssignment_6
                    {
                    pushFollow(FOLLOW_2);
                    rule__PathExpressionContinuation__ContinueAssignment_6();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathExpressionContinuationAccess().getContinueAssignment_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpressionContinuation__Group__6__Impl"


    // $ANTLR start "rule__PathExpressionContinuation__Group_4__0"
    // InternalAcmeParser.g:20104:1: rule__PathExpressionContinuation__Group_4__0 : rule__PathExpressionContinuation__Group_4__0__Impl rule__PathExpressionContinuation__Group_4__1 ;
    public final void rule__PathExpressionContinuation__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20108:1: ( rule__PathExpressionContinuation__Group_4__0__Impl rule__PathExpressionContinuation__Group_4__1 )
            // InternalAcmeParser.g:20109:2: rule__PathExpressionContinuation__Group_4__0__Impl rule__PathExpressionContinuation__Group_4__1
            {
            pushFollow(FOLLOW_11);
            rule__PathExpressionContinuation__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PathExpressionContinuation__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpressionContinuation__Group_4__0"


    // $ANTLR start "rule__PathExpressionContinuation__Group_4__0__Impl"
    // InternalAcmeParser.g:20116:1: rule__PathExpressionContinuation__Group_4__0__Impl : ( ( rule__PathExpressionContinuation__DeclaresAssignment_4_0 ) ) ;
    public final void rule__PathExpressionContinuation__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20120:1: ( ( ( rule__PathExpressionContinuation__DeclaresAssignment_4_0 ) ) )
            // InternalAcmeParser.g:20121:1: ( ( rule__PathExpressionContinuation__DeclaresAssignment_4_0 ) )
            {
            // InternalAcmeParser.g:20121:1: ( ( rule__PathExpressionContinuation__DeclaresAssignment_4_0 ) )
            // InternalAcmeParser.g:20122:2: ( rule__PathExpressionContinuation__DeclaresAssignment_4_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathExpressionContinuationAccess().getDeclaresAssignment_4_0()); 
            }
            // InternalAcmeParser.g:20123:2: ( rule__PathExpressionContinuation__DeclaresAssignment_4_0 )
            // InternalAcmeParser.g:20123:3: rule__PathExpressionContinuation__DeclaresAssignment_4_0
            {
            pushFollow(FOLLOW_2);
            rule__PathExpressionContinuation__DeclaresAssignment_4_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathExpressionContinuationAccess().getDeclaresAssignment_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpressionContinuation__Group_4__0__Impl"


    // $ANTLR start "rule__PathExpressionContinuation__Group_4__1"
    // InternalAcmeParser.g:20131:1: rule__PathExpressionContinuation__Group_4__1 : rule__PathExpressionContinuation__Group_4__1__Impl ;
    public final void rule__PathExpressionContinuation__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20135:1: ( rule__PathExpressionContinuation__Group_4__1__Impl )
            // InternalAcmeParser.g:20136:2: rule__PathExpressionContinuation__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PathExpressionContinuation__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpressionContinuation__Group_4__1"


    // $ANTLR start "rule__PathExpressionContinuation__Group_4__1__Impl"
    // InternalAcmeParser.g:20142:1: rule__PathExpressionContinuation__Group_4__1__Impl : ( ruleQualifiedIdentifier ) ;
    public final void rule__PathExpressionContinuation__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20146:1: ( ( ruleQualifiedIdentifier ) )
            // InternalAcmeParser.g:20147:1: ( ruleQualifiedIdentifier )
            {
            // InternalAcmeParser.g:20147:1: ( ruleQualifiedIdentifier )
            // InternalAcmeParser.g:20148:2: ruleQualifiedIdentifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathExpressionContinuationAccess().getQualifiedIdentifierParserRuleCall_4_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathExpressionContinuationAccess().getQualifiedIdentifierParserRuleCall_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpressionContinuation__Group_4__1__Impl"


    // $ANTLR start "rule__PathExpressionContinuation__Group_5__0"
    // InternalAcmeParser.g:20158:1: rule__PathExpressionContinuation__Group_5__0 : rule__PathExpressionContinuation__Group_5__0__Impl rule__PathExpressionContinuation__Group_5__1 ;
    public final void rule__PathExpressionContinuation__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20162:1: ( rule__PathExpressionContinuation__Group_5__0__Impl rule__PathExpressionContinuation__Group_5__1 )
            // InternalAcmeParser.g:20163:2: rule__PathExpressionContinuation__Group_5__0__Impl rule__PathExpressionContinuation__Group_5__1
            {
            pushFollow(FOLLOW_73);
            rule__PathExpressionContinuation__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PathExpressionContinuation__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpressionContinuation__Group_5__0"


    // $ANTLR start "rule__PathExpressionContinuation__Group_5__0__Impl"
    // InternalAcmeParser.g:20170:1: rule__PathExpressionContinuation__Group_5__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__PathExpressionContinuation__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20174:1: ( ( LeftSquareBracket ) )
            // InternalAcmeParser.g:20175:1: ( LeftSquareBracket )
            {
            // InternalAcmeParser.g:20175:1: ( LeftSquareBracket )
            // InternalAcmeParser.g:20176:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathExpressionContinuationAccess().getLeftSquareBracketKeyword_5_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathExpressionContinuationAccess().getLeftSquareBracketKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpressionContinuation__Group_5__0__Impl"


    // $ANTLR start "rule__PathExpressionContinuation__Group_5__1"
    // InternalAcmeParser.g:20185:1: rule__PathExpressionContinuation__Group_5__1 : rule__PathExpressionContinuation__Group_5__1__Impl rule__PathExpressionContinuation__Group_5__2 ;
    public final void rule__PathExpressionContinuation__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20189:1: ( rule__PathExpressionContinuation__Group_5__1__Impl rule__PathExpressionContinuation__Group_5__2 )
            // InternalAcmeParser.g:20190:2: rule__PathExpressionContinuation__Group_5__1__Impl rule__PathExpressionContinuation__Group_5__2
            {
            pushFollow(FOLLOW_109);
            rule__PathExpressionContinuation__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PathExpressionContinuation__Group_5__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpressionContinuation__Group_5__1"


    // $ANTLR start "rule__PathExpressionContinuation__Group_5__1__Impl"
    // InternalAcmeParser.g:20197:1: rule__PathExpressionContinuation__Group_5__1__Impl : ( ( rule__PathExpressionContinuation__ExpressionAssignment_5_1 ) ) ;
    public final void rule__PathExpressionContinuation__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20201:1: ( ( ( rule__PathExpressionContinuation__ExpressionAssignment_5_1 ) ) )
            // InternalAcmeParser.g:20202:1: ( ( rule__PathExpressionContinuation__ExpressionAssignment_5_1 ) )
            {
            // InternalAcmeParser.g:20202:1: ( ( rule__PathExpressionContinuation__ExpressionAssignment_5_1 ) )
            // InternalAcmeParser.g:20203:2: ( rule__PathExpressionContinuation__ExpressionAssignment_5_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathExpressionContinuationAccess().getExpressionAssignment_5_1()); 
            }
            // InternalAcmeParser.g:20204:2: ( rule__PathExpressionContinuation__ExpressionAssignment_5_1 )
            // InternalAcmeParser.g:20204:3: rule__PathExpressionContinuation__ExpressionAssignment_5_1
            {
            pushFollow(FOLLOW_2);
            rule__PathExpressionContinuation__ExpressionAssignment_5_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathExpressionContinuationAccess().getExpressionAssignment_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpressionContinuation__Group_5__1__Impl"


    // $ANTLR start "rule__PathExpressionContinuation__Group_5__2"
    // InternalAcmeParser.g:20212:1: rule__PathExpressionContinuation__Group_5__2 : rule__PathExpressionContinuation__Group_5__2__Impl ;
    public final void rule__PathExpressionContinuation__Group_5__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20216:1: ( rule__PathExpressionContinuation__Group_5__2__Impl )
            // InternalAcmeParser.g:20217:2: rule__PathExpressionContinuation__Group_5__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PathExpressionContinuation__Group_5__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpressionContinuation__Group_5__2"


    // $ANTLR start "rule__PathExpressionContinuation__Group_5__2__Impl"
    // InternalAcmeParser.g:20223:1: rule__PathExpressionContinuation__Group_5__2__Impl : ( RightSquareBracket ) ;
    public final void rule__PathExpressionContinuation__Group_5__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20227:1: ( ( RightSquareBracket ) )
            // InternalAcmeParser.g:20228:1: ( RightSquareBracket )
            {
            // InternalAcmeParser.g:20228:1: ( RightSquareBracket )
            // InternalAcmeParser.g:20229:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathExpressionContinuationAccess().getRightSquareBracketKeyword_5_2()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathExpressionContinuationAccess().getRightSquareBracketKeyword_5_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpressionContinuation__Group_5__2__Impl"


    // $ANTLR start "rule__LiteralSet__Group__0"
    // InternalAcmeParser.g:20239:1: rule__LiteralSet__Group__0 : rule__LiteralSet__Group__0__Impl rule__LiteralSet__Group__1 ;
    public final void rule__LiteralSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20243:1: ( rule__LiteralSet__Group__0__Impl rule__LiteralSet__Group__1 )
            // InternalAcmeParser.g:20244:2: rule__LiteralSet__Group__0__Impl rule__LiteralSet__Group__1
            {
            pushFollow(FOLLOW_112);
            rule__LiteralSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LiteralSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralSet__Group__0"


    // $ANTLR start "rule__LiteralSet__Group__0__Impl"
    // InternalAcmeParser.g:20251:1: rule__LiteralSet__Group__0__Impl : ( ( rule__LiteralSet__LbAssignment_0 ) ) ;
    public final void rule__LiteralSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20255:1: ( ( ( rule__LiteralSet__LbAssignment_0 ) ) )
            // InternalAcmeParser.g:20256:1: ( ( rule__LiteralSet__LbAssignment_0 ) )
            {
            // InternalAcmeParser.g:20256:1: ( ( rule__LiteralSet__LbAssignment_0 ) )
            // InternalAcmeParser.g:20257:2: ( rule__LiteralSet__LbAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralSetAccess().getLbAssignment_0()); 
            }
            // InternalAcmeParser.g:20258:2: ( rule__LiteralSet__LbAssignment_0 )
            // InternalAcmeParser.g:20258:3: rule__LiteralSet__LbAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__LiteralSet__LbAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralSetAccess().getLbAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralSet__Group__0__Impl"


    // $ANTLR start "rule__LiteralSet__Group__1"
    // InternalAcmeParser.g:20266:1: rule__LiteralSet__Group__1 : rule__LiteralSet__Group__1__Impl rule__LiteralSet__Group__2 ;
    public final void rule__LiteralSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20270:1: ( rule__LiteralSet__Group__1__Impl rule__LiteralSet__Group__2 )
            // InternalAcmeParser.g:20271:2: rule__LiteralSet__Group__1__Impl rule__LiteralSet__Group__2
            {
            pushFollow(FOLLOW_112);
            rule__LiteralSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LiteralSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralSet__Group__1"


    // $ANTLR start "rule__LiteralSet__Group__1__Impl"
    // InternalAcmeParser.g:20278:1: rule__LiteralSet__Group__1__Impl : ( ( rule__LiteralSet__Group_1__0 )? ) ;
    public final void rule__LiteralSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20282:1: ( ( ( rule__LiteralSet__Group_1__0 )? ) )
            // InternalAcmeParser.g:20283:1: ( ( rule__LiteralSet__Group_1__0 )? )
            {
            // InternalAcmeParser.g:20283:1: ( ( rule__LiteralSet__Group_1__0 )? )
            // InternalAcmeParser.g:20284:2: ( rule__LiteralSet__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralSetAccess().getGroup_1()); 
            }
            // InternalAcmeParser.g:20285:2: ( rule__LiteralSet__Group_1__0 )?
            int alt217=2;
            int LA217_0 = input.LA(1);

            if ( (LA217_0==Exists||LA217_0==Forall||LA217_0==Select||(LA217_0>=TNULL && LA217_0<=False)||LA217_0==True||LA217_0==PlusSignPlusSign||LA217_0==HyphenMinusHyphenMinus||LA217_0==ExclamationMark||(LA217_0>=Apostrophe && LA217_0<=LeftParenthesis)||LA217_0==PlusSign||LA217_0==HyphenMinus||LA217_0==Solidus||LA217_0==LeftCurlyBracket||(LA217_0>=RULE_FLOAT && LA217_0<=RULE_STRING)) ) {
                alt217=1;
            }
            switch (alt217) {
                case 1 :
                    // InternalAcmeParser.g:20285:3: rule__LiteralSet__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LiteralSet__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralSetAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralSet__Group__1__Impl"


    // $ANTLR start "rule__LiteralSet__Group__2"
    // InternalAcmeParser.g:20293:1: rule__LiteralSet__Group__2 : rule__LiteralSet__Group__2__Impl ;
    public final void rule__LiteralSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20297:1: ( rule__LiteralSet__Group__2__Impl )
            // InternalAcmeParser.g:20298:2: rule__LiteralSet__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LiteralSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralSet__Group__2"


    // $ANTLR start "rule__LiteralSet__Group__2__Impl"
    // InternalAcmeParser.g:20304:1: rule__LiteralSet__Group__2__Impl : ( RightCurlyBracket ) ;
    public final void rule__LiteralSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20308:1: ( ( RightCurlyBracket ) )
            // InternalAcmeParser.g:20309:1: ( RightCurlyBracket )
            {
            // InternalAcmeParser.g:20309:1: ( RightCurlyBracket )
            // InternalAcmeParser.g:20310:2: RightCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralSetAccess().getRightCurlyBracketKeyword_2()); 
            }
            match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralSetAccess().getRightCurlyBracketKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralSet__Group__2__Impl"


    // $ANTLR start "rule__LiteralSet__Group_1__0"
    // InternalAcmeParser.g:20320:1: rule__LiteralSet__Group_1__0 : rule__LiteralSet__Group_1__0__Impl rule__LiteralSet__Group_1__1 ;
    public final void rule__LiteralSet__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20324:1: ( rule__LiteralSet__Group_1__0__Impl rule__LiteralSet__Group_1__1 )
            // InternalAcmeParser.g:20325:2: rule__LiteralSet__Group_1__0__Impl rule__LiteralSet__Group_1__1
            {
            pushFollow(FOLLOW_19);
            rule__LiteralSet__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LiteralSet__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralSet__Group_1__0"


    // $ANTLR start "rule__LiteralSet__Group_1__0__Impl"
    // InternalAcmeParser.g:20332:1: rule__LiteralSet__Group_1__0__Impl : ( ( rule__LiteralSet__ExprAssignment_1_0 ) ) ;
    public final void rule__LiteralSet__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20336:1: ( ( ( rule__LiteralSet__ExprAssignment_1_0 ) ) )
            // InternalAcmeParser.g:20337:1: ( ( rule__LiteralSet__ExprAssignment_1_0 ) )
            {
            // InternalAcmeParser.g:20337:1: ( ( rule__LiteralSet__ExprAssignment_1_0 ) )
            // InternalAcmeParser.g:20338:2: ( rule__LiteralSet__ExprAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralSetAccess().getExprAssignment_1_0()); 
            }
            // InternalAcmeParser.g:20339:2: ( rule__LiteralSet__ExprAssignment_1_0 )
            // InternalAcmeParser.g:20339:3: rule__LiteralSet__ExprAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__LiteralSet__ExprAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralSetAccess().getExprAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralSet__Group_1__0__Impl"


    // $ANTLR start "rule__LiteralSet__Group_1__1"
    // InternalAcmeParser.g:20347:1: rule__LiteralSet__Group_1__1 : rule__LiteralSet__Group_1__1__Impl ;
    public final void rule__LiteralSet__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20351:1: ( rule__LiteralSet__Group_1__1__Impl )
            // InternalAcmeParser.g:20352:2: rule__LiteralSet__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LiteralSet__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralSet__Group_1__1"


    // $ANTLR start "rule__LiteralSet__Group_1__1__Impl"
    // InternalAcmeParser.g:20358:1: rule__LiteralSet__Group_1__1__Impl : ( ( rule__LiteralSet__Group_1_1__0 )* ) ;
    public final void rule__LiteralSet__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20362:1: ( ( ( rule__LiteralSet__Group_1_1__0 )* ) )
            // InternalAcmeParser.g:20363:1: ( ( rule__LiteralSet__Group_1_1__0 )* )
            {
            // InternalAcmeParser.g:20363:1: ( ( rule__LiteralSet__Group_1_1__0 )* )
            // InternalAcmeParser.g:20364:2: ( rule__LiteralSet__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralSetAccess().getGroup_1_1()); 
            }
            // InternalAcmeParser.g:20365:2: ( rule__LiteralSet__Group_1_1__0 )*
            loop218:
            do {
                int alt218=2;
                int LA218_0 = input.LA(1);

                if ( (LA218_0==Comma) ) {
                    alt218=1;
                }


                switch (alt218) {
            	case 1 :
            	    // InternalAcmeParser.g:20365:3: rule__LiteralSet__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__LiteralSet__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop218;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralSetAccess().getGroup_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralSet__Group_1__1__Impl"


    // $ANTLR start "rule__LiteralSet__Group_1_1__0"
    // InternalAcmeParser.g:20374:1: rule__LiteralSet__Group_1_1__0 : rule__LiteralSet__Group_1_1__0__Impl rule__LiteralSet__Group_1_1__1 ;
    public final void rule__LiteralSet__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20378:1: ( rule__LiteralSet__Group_1_1__0__Impl rule__LiteralSet__Group_1_1__1 )
            // InternalAcmeParser.g:20379:2: rule__LiteralSet__Group_1_1__0__Impl rule__LiteralSet__Group_1_1__1
            {
            pushFollow(FOLLOW_73);
            rule__LiteralSet__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LiteralSet__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralSet__Group_1_1__0"


    // $ANTLR start "rule__LiteralSet__Group_1_1__0__Impl"
    // InternalAcmeParser.g:20386:1: rule__LiteralSet__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__LiteralSet__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20390:1: ( ( Comma ) )
            // InternalAcmeParser.g:20391:1: ( Comma )
            {
            // InternalAcmeParser.g:20391:1: ( Comma )
            // InternalAcmeParser.g:20392:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralSetAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralSetAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralSet__Group_1_1__0__Impl"


    // $ANTLR start "rule__LiteralSet__Group_1_1__1"
    // InternalAcmeParser.g:20401:1: rule__LiteralSet__Group_1_1__1 : rule__LiteralSet__Group_1_1__1__Impl ;
    public final void rule__LiteralSet__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20405:1: ( rule__LiteralSet__Group_1_1__1__Impl )
            // InternalAcmeParser.g:20406:2: rule__LiteralSet__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LiteralSet__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralSet__Group_1_1__1"


    // $ANTLR start "rule__LiteralSet__Group_1_1__1__Impl"
    // InternalAcmeParser.g:20412:1: rule__LiteralSet__Group_1_1__1__Impl : ( ( rule__LiteralSet__ExprAssignment_1_1_1 ) ) ;
    public final void rule__LiteralSet__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20416:1: ( ( ( rule__LiteralSet__ExprAssignment_1_1_1 ) ) )
            // InternalAcmeParser.g:20417:1: ( ( rule__LiteralSet__ExprAssignment_1_1_1 ) )
            {
            // InternalAcmeParser.g:20417:1: ( ( rule__LiteralSet__ExprAssignment_1_1_1 ) )
            // InternalAcmeParser.g:20418:2: ( rule__LiteralSet__ExprAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralSetAccess().getExprAssignment_1_1_1()); 
            }
            // InternalAcmeParser.g:20419:2: ( rule__LiteralSet__ExprAssignment_1_1_1 )
            // InternalAcmeParser.g:20419:3: rule__LiteralSet__ExprAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__LiteralSet__ExprAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralSetAccess().getExprAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralSet__Group_1_1__1__Impl"


    // $ANTLR start "rule__DataType__Group_0__0"
    // InternalAcmeParser.g:20428:1: rule__DataType__Group_0__0 : rule__DataType__Group_0__0__Impl rule__DataType__Group_0__1 ;
    public final void rule__DataType__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20432:1: ( rule__DataType__Group_0__0__Impl rule__DataType__Group_0__1 )
            // InternalAcmeParser.g:20433:2: rule__DataType__Group_0__0__Impl rule__DataType__Group_0__1
            {
            pushFollow(FOLLOW_113);
            rule__DataType__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DataType__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_0__0"


    // $ANTLR start "rule__DataType__Group_0__0__Impl"
    // InternalAcmeParser.g:20440:1: rule__DataType__Group_0__0__Impl : ( () ) ;
    public final void rule__DataType__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20444:1: ( ( () ) )
            // InternalAcmeParser.g:20445:1: ( () )
            {
            // InternalAcmeParser.g:20445:1: ( () )
            // InternalAcmeParser.g:20446:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getDataTypeAction_0_0()); 
            }
            // InternalAcmeParser.g:20447:2: ()
            // InternalAcmeParser.g:20447:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getDataTypeAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_0__0__Impl"


    // $ANTLR start "rule__DataType__Group_0__1"
    // InternalAcmeParser.g:20455:1: rule__DataType__Group_0__1 : rule__DataType__Group_0__1__Impl ;
    public final void rule__DataType__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20459:1: ( rule__DataType__Group_0__1__Impl )
            // InternalAcmeParser.g:20460:2: rule__DataType__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DataType__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_0__1"


    // $ANTLR start "rule__DataType__Group_0__1__Impl"
    // InternalAcmeParser.g:20466:1: rule__DataType__Group_0__1__Impl : ( Object ) ;
    public final void rule__DataType__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20470:1: ( ( Object ) )
            // InternalAcmeParser.g:20471:1: ( Object )
            {
            // InternalAcmeParser.g:20471:1: ( Object )
            // InternalAcmeParser.g:20472:2: Object
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getObjectKeyword_0_1()); 
            }
            match(input,Object,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getObjectKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_0__1__Impl"


    // $ANTLR start "rule__DataType__Group_1__0"
    // InternalAcmeParser.g:20482:1: rule__DataType__Group_1__0 : rule__DataType__Group_1__0__Impl rule__DataType__Group_1__1 ;
    public final void rule__DataType__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20486:1: ( rule__DataType__Group_1__0__Impl rule__DataType__Group_1__1 )
            // InternalAcmeParser.g:20487:2: rule__DataType__Group_1__0__Impl rule__DataType__Group_1__1
            {
            pushFollow(FOLLOW_114);
            rule__DataType__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DataType__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_1__0"


    // $ANTLR start "rule__DataType__Group_1__0__Impl"
    // InternalAcmeParser.g:20494:1: rule__DataType__Group_1__0__Impl : ( () ) ;
    public final void rule__DataType__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20498:1: ( ( () ) )
            // InternalAcmeParser.g:20499:1: ( () )
            {
            // InternalAcmeParser.g:20499:1: ( () )
            // InternalAcmeParser.g:20500:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getDataTypeAction_1_0()); 
            }
            // InternalAcmeParser.g:20501:2: ()
            // InternalAcmeParser.g:20501:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getDataTypeAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_1__0__Impl"


    // $ANTLR start "rule__DataType__Group_1__1"
    // InternalAcmeParser.g:20509:1: rule__DataType__Group_1__1 : rule__DataType__Group_1__1__Impl ;
    public final void rule__DataType__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20513:1: ( rule__DataType__Group_1__1__Impl )
            // InternalAcmeParser.g:20514:2: rule__DataType__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DataType__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_1__1"


    // $ANTLR start "rule__DataType__Group_1__1__Impl"
    // InternalAcmeParser.g:20520:1: rule__DataType__Group_1__1__Impl : ( Int ) ;
    public final void rule__DataType__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20524:1: ( ( Int ) )
            // InternalAcmeParser.g:20525:1: ( Int )
            {
            // InternalAcmeParser.g:20525:1: ( Int )
            // InternalAcmeParser.g:20526:2: Int
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getIntKeyword_1_1()); 
            }
            match(input,Int,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getIntKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_1__1__Impl"


    // $ANTLR start "rule__DataType__Group_2__0"
    // InternalAcmeParser.g:20536:1: rule__DataType__Group_2__0 : rule__DataType__Group_2__0__Impl rule__DataType__Group_2__1 ;
    public final void rule__DataType__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20540:1: ( rule__DataType__Group_2__0__Impl rule__DataType__Group_2__1 )
            // InternalAcmeParser.g:20541:2: rule__DataType__Group_2__0__Impl rule__DataType__Group_2__1
            {
            pushFollow(FOLLOW_115);
            rule__DataType__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DataType__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_2__0"


    // $ANTLR start "rule__DataType__Group_2__0__Impl"
    // InternalAcmeParser.g:20548:1: rule__DataType__Group_2__0__Impl : ( () ) ;
    public final void rule__DataType__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20552:1: ( ( () ) )
            // InternalAcmeParser.g:20553:1: ( () )
            {
            // InternalAcmeParser.g:20553:1: ( () )
            // InternalAcmeParser.g:20554:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getDataTypeAction_2_0()); 
            }
            // InternalAcmeParser.g:20555:2: ()
            // InternalAcmeParser.g:20555:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getDataTypeAction_2_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_2__0__Impl"


    // $ANTLR start "rule__DataType__Group_2__1"
    // InternalAcmeParser.g:20563:1: rule__DataType__Group_2__1 : rule__DataType__Group_2__1__Impl ;
    public final void rule__DataType__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20567:1: ( rule__DataType__Group_2__1__Impl )
            // InternalAcmeParser.g:20568:2: rule__DataType__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DataType__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_2__1"


    // $ANTLR start "rule__DataType__Group_2__1__Impl"
    // InternalAcmeParser.g:20574:1: rule__DataType__Group_2__1__Impl : ( Float ) ;
    public final void rule__DataType__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20578:1: ( ( Float ) )
            // InternalAcmeParser.g:20579:1: ( Float )
            {
            // InternalAcmeParser.g:20579:1: ( Float )
            // InternalAcmeParser.g:20580:2: Float
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getFloatKeyword_2_1()); 
            }
            match(input,Float,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getFloatKeyword_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_2__1__Impl"


    // $ANTLR start "rule__DataType__Group_3__0"
    // InternalAcmeParser.g:20590:1: rule__DataType__Group_3__0 : rule__DataType__Group_3__0__Impl rule__DataType__Group_3__1 ;
    public final void rule__DataType__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20594:1: ( rule__DataType__Group_3__0__Impl rule__DataType__Group_3__1 )
            // InternalAcmeParser.g:20595:2: rule__DataType__Group_3__0__Impl rule__DataType__Group_3__1
            {
            pushFollow(FOLLOW_116);
            rule__DataType__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DataType__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_3__0"


    // $ANTLR start "rule__DataType__Group_3__0__Impl"
    // InternalAcmeParser.g:20602:1: rule__DataType__Group_3__0__Impl : ( () ) ;
    public final void rule__DataType__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20606:1: ( ( () ) )
            // InternalAcmeParser.g:20607:1: ( () )
            {
            // InternalAcmeParser.g:20607:1: ( () )
            // InternalAcmeParser.g:20608:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getDataTypeAction_3_0()); 
            }
            // InternalAcmeParser.g:20609:2: ()
            // InternalAcmeParser.g:20609:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getDataTypeAction_3_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_3__0__Impl"


    // $ANTLR start "rule__DataType__Group_3__1"
    // InternalAcmeParser.g:20617:1: rule__DataType__Group_3__1 : rule__DataType__Group_3__1__Impl ;
    public final void rule__DataType__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20621:1: ( rule__DataType__Group_3__1__Impl )
            // InternalAcmeParser.g:20622:2: rule__DataType__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DataType__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_3__1"


    // $ANTLR start "rule__DataType__Group_3__1__Impl"
    // InternalAcmeParser.g:20628:1: rule__DataType__Group_3__1__Impl : ( Boolean ) ;
    public final void rule__DataType__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20632:1: ( ( Boolean ) )
            // InternalAcmeParser.g:20633:1: ( Boolean )
            {
            // InternalAcmeParser.g:20633:1: ( Boolean )
            // InternalAcmeParser.g:20634:2: Boolean
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getBooleanKeyword_3_1()); 
            }
            match(input,Boolean,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getBooleanKeyword_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_3__1__Impl"


    // $ANTLR start "rule__DataType__Group_4__0"
    // InternalAcmeParser.g:20644:1: rule__DataType__Group_4__0 : rule__DataType__Group_4__0__Impl rule__DataType__Group_4__1 ;
    public final void rule__DataType__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20648:1: ( rule__DataType__Group_4__0__Impl rule__DataType__Group_4__1 )
            // InternalAcmeParser.g:20649:2: rule__DataType__Group_4__0__Impl rule__DataType__Group_4__1
            {
            pushFollow(FOLLOW_117);
            rule__DataType__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DataType__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_4__0"


    // $ANTLR start "rule__DataType__Group_4__0__Impl"
    // InternalAcmeParser.g:20656:1: rule__DataType__Group_4__0__Impl : ( () ) ;
    public final void rule__DataType__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20660:1: ( ( () ) )
            // InternalAcmeParser.g:20661:1: ( () )
            {
            // InternalAcmeParser.g:20661:1: ( () )
            // InternalAcmeParser.g:20662:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getDataTypeAction_4_0()); 
            }
            // InternalAcmeParser.g:20663:2: ()
            // InternalAcmeParser.g:20663:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getDataTypeAction_4_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_4__0__Impl"


    // $ANTLR start "rule__DataType__Group_4__1"
    // InternalAcmeParser.g:20671:1: rule__DataType__Group_4__1 : rule__DataType__Group_4__1__Impl ;
    public final void rule__DataType__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20675:1: ( rule__DataType__Group_4__1__Impl )
            // InternalAcmeParser.g:20676:2: rule__DataType__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DataType__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_4__1"


    // $ANTLR start "rule__DataType__Group_4__1__Impl"
    // InternalAcmeParser.g:20682:1: rule__DataType__Group_4__1__Impl : ( Bool ) ;
    public final void rule__DataType__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20686:1: ( ( Bool ) )
            // InternalAcmeParser.g:20687:1: ( Bool )
            {
            // InternalAcmeParser.g:20687:1: ( Bool )
            // InternalAcmeParser.g:20688:2: Bool
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getBoolKeyword_4_1()); 
            }
            match(input,Bool,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getBoolKeyword_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_4__1__Impl"


    // $ANTLR start "rule__DataType__Group_5__0"
    // InternalAcmeParser.g:20698:1: rule__DataType__Group_5__0 : rule__DataType__Group_5__0__Impl rule__DataType__Group_5__1 ;
    public final void rule__DataType__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20702:1: ( rule__DataType__Group_5__0__Impl rule__DataType__Group_5__1 )
            // InternalAcmeParser.g:20703:2: rule__DataType__Group_5__0__Impl rule__DataType__Group_5__1
            {
            pushFollow(FOLLOW_118);
            rule__DataType__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DataType__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_5__0"


    // $ANTLR start "rule__DataType__Group_5__0__Impl"
    // InternalAcmeParser.g:20710:1: rule__DataType__Group_5__0__Impl : ( () ) ;
    public final void rule__DataType__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20714:1: ( ( () ) )
            // InternalAcmeParser.g:20715:1: ( () )
            {
            // InternalAcmeParser.g:20715:1: ( () )
            // InternalAcmeParser.g:20716:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getDataTypeAction_5_0()); 
            }
            // InternalAcmeParser.g:20717:2: ()
            // InternalAcmeParser.g:20717:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getDataTypeAction_5_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_5__0__Impl"


    // $ANTLR start "rule__DataType__Group_5__1"
    // InternalAcmeParser.g:20725:1: rule__DataType__Group_5__1 : rule__DataType__Group_5__1__Impl ;
    public final void rule__DataType__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20729:1: ( rule__DataType__Group_5__1__Impl )
            // InternalAcmeParser.g:20730:2: rule__DataType__Group_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DataType__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_5__1"


    // $ANTLR start "rule__DataType__Group_5__1__Impl"
    // InternalAcmeParser.g:20736:1: rule__DataType__Group_5__1__Impl : ( Char ) ;
    public final void rule__DataType__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20740:1: ( ( Char ) )
            // InternalAcmeParser.g:20741:1: ( Char )
            {
            // InternalAcmeParser.g:20741:1: ( Char )
            // InternalAcmeParser.g:20742:2: Char
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getCharKeyword_5_1()); 
            }
            match(input,Char,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getCharKeyword_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_5__1__Impl"


    // $ANTLR start "rule__DataType__Group_6__0"
    // InternalAcmeParser.g:20752:1: rule__DataType__Group_6__0 : rule__DataType__Group_6__0__Impl rule__DataType__Group_6__1 ;
    public final void rule__DataType__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20756:1: ( rule__DataType__Group_6__0__Impl rule__DataType__Group_6__1 )
            // InternalAcmeParser.g:20757:2: rule__DataType__Group_6__0__Impl rule__DataType__Group_6__1
            {
            pushFollow(FOLLOW_119);
            rule__DataType__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DataType__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_6__0"


    // $ANTLR start "rule__DataType__Group_6__0__Impl"
    // InternalAcmeParser.g:20764:1: rule__DataType__Group_6__0__Impl : ( () ) ;
    public final void rule__DataType__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20768:1: ( ( () ) )
            // InternalAcmeParser.g:20769:1: ( () )
            {
            // InternalAcmeParser.g:20769:1: ( () )
            // InternalAcmeParser.g:20770:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getDataTypeAction_6_0()); 
            }
            // InternalAcmeParser.g:20771:2: ()
            // InternalAcmeParser.g:20771:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getDataTypeAction_6_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_6__0__Impl"


    // $ANTLR start "rule__DataType__Group_6__1"
    // InternalAcmeParser.g:20779:1: rule__DataType__Group_6__1 : rule__DataType__Group_6__1__Impl ;
    public final void rule__DataType__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20783:1: ( rule__DataType__Group_6__1__Impl )
            // InternalAcmeParser.g:20784:2: rule__DataType__Group_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DataType__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_6__1"


    // $ANTLR start "rule__DataType__Group_6__1__Impl"
    // InternalAcmeParser.g:20790:1: rule__DataType__Group_6__1__Impl : ( String ) ;
    public final void rule__DataType__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20794:1: ( ( String ) )
            // InternalAcmeParser.g:20795:1: ( String )
            {
            // InternalAcmeParser.g:20795:1: ( String )
            // InternalAcmeParser.g:20796:2: String
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getStringKeyword_6_1()); 
            }
            match(input,String,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getStringKeyword_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_6__1__Impl"


    // $ANTLR start "rule__DataType__Group_7__0"
    // InternalAcmeParser.g:20806:1: rule__DataType__Group_7__0 : rule__DataType__Group_7__0__Impl rule__DataType__Group_7__1 ;
    public final void rule__DataType__Group_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20810:1: ( rule__DataType__Group_7__0__Impl rule__DataType__Group_7__1 )
            // InternalAcmeParser.g:20811:2: rule__DataType__Group_7__0__Impl rule__DataType__Group_7__1
            {
            pushFollow(FOLLOW_63);
            rule__DataType__Group_7__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DataType__Group_7__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_7__0"


    // $ANTLR start "rule__DataType__Group_7__0__Impl"
    // InternalAcmeParser.g:20818:1: rule__DataType__Group_7__0__Impl : ( () ) ;
    public final void rule__DataType__Group_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20822:1: ( ( () ) )
            // InternalAcmeParser.g:20823:1: ( () )
            {
            // InternalAcmeParser.g:20823:1: ( () )
            // InternalAcmeParser.g:20824:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getDataTypeAction_7_0()); 
            }
            // InternalAcmeParser.g:20825:2: ()
            // InternalAcmeParser.g:20825:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getDataTypeAction_7_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_7__0__Impl"


    // $ANTLR start "rule__DataType__Group_7__1"
    // InternalAcmeParser.g:20833:1: rule__DataType__Group_7__1 : rule__DataType__Group_7__1__Impl rule__DataType__Group_7__2 ;
    public final void rule__DataType__Group_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20837:1: ( rule__DataType__Group_7__1__Impl rule__DataType__Group_7__2 )
            // InternalAcmeParser.g:20838:2: rule__DataType__Group_7__1__Impl rule__DataType__Group_7__2
            {
            pushFollow(FOLLOW_13);
            rule__DataType__Group_7__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DataType__Group_7__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_7__1"


    // $ANTLR start "rule__DataType__Group_7__1__Impl"
    // InternalAcmeParser.g:20845:1: rule__DataType__Group_7__1__Impl : ( Set ) ;
    public final void rule__DataType__Group_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20849:1: ( ( Set ) )
            // InternalAcmeParser.g:20850:1: ( Set )
            {
            // InternalAcmeParser.g:20850:1: ( Set )
            // InternalAcmeParser.g:20851:2: Set
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getSetKeyword_7_1()); 
            }
            match(input,Set,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getSetKeyword_7_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_7__1__Impl"


    // $ANTLR start "rule__DataType__Group_7__2"
    // InternalAcmeParser.g:20860:1: rule__DataType__Group_7__2 : rule__DataType__Group_7__2__Impl ;
    public final void rule__DataType__Group_7__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20864:1: ( rule__DataType__Group_7__2__Impl )
            // InternalAcmeParser.g:20865:2: rule__DataType__Group_7__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DataType__Group_7__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_7__2"


    // $ANTLR start "rule__DataType__Group_7__2__Impl"
    // InternalAcmeParser.g:20871:1: rule__DataType__Group_7__2__Impl : ( ( rule__DataType__Group_7_2__0 )? ) ;
    public final void rule__DataType__Group_7__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20875:1: ( ( ( rule__DataType__Group_7_2__0 )? ) )
            // InternalAcmeParser.g:20876:1: ( ( rule__DataType__Group_7_2__0 )? )
            {
            // InternalAcmeParser.g:20876:1: ( ( rule__DataType__Group_7_2__0 )? )
            // InternalAcmeParser.g:20877:2: ( rule__DataType__Group_7_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getGroup_7_2()); 
            }
            // InternalAcmeParser.g:20878:2: ( rule__DataType__Group_7_2__0 )?
            int alt219=2;
            int LA219_0 = input.LA(1);

            if ( (LA219_0==LeftCurlyBracket) ) {
                alt219=1;
            }
            switch (alt219) {
                case 1 :
                    // InternalAcmeParser.g:20878:3: rule__DataType__Group_7_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DataType__Group_7_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getGroup_7_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_7__2__Impl"


    // $ANTLR start "rule__DataType__Group_7_2__0"
    // InternalAcmeParser.g:20887:1: rule__DataType__Group_7_2__0 : rule__DataType__Group_7_2__0__Impl rule__DataType__Group_7_2__1 ;
    public final void rule__DataType__Group_7_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20891:1: ( rule__DataType__Group_7_2__0__Impl rule__DataType__Group_7_2__1 )
            // InternalAcmeParser.g:20892:2: rule__DataType__Group_7_2__0__Impl rule__DataType__Group_7_2__1
            {
            pushFollow(FOLLOW_101);
            rule__DataType__Group_7_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DataType__Group_7_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_7_2__0"


    // $ANTLR start "rule__DataType__Group_7_2__0__Impl"
    // InternalAcmeParser.g:20899:1: rule__DataType__Group_7_2__0__Impl : ( LeftCurlyBracket ) ;
    public final void rule__DataType__Group_7_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20903:1: ( ( LeftCurlyBracket ) )
            // InternalAcmeParser.g:20904:1: ( LeftCurlyBracket )
            {
            // InternalAcmeParser.g:20904:1: ( LeftCurlyBracket )
            // InternalAcmeParser.g:20905:2: LeftCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getLeftCurlyBracketKeyword_7_2_0()); 
            }
            match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getLeftCurlyBracketKeyword_7_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_7_2__0__Impl"


    // $ANTLR start "rule__DataType__Group_7_2__1"
    // InternalAcmeParser.g:20914:1: rule__DataType__Group_7_2__1 : rule__DataType__Group_7_2__1__Impl rule__DataType__Group_7_2__2 ;
    public final void rule__DataType__Group_7_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20918:1: ( rule__DataType__Group_7_2__1__Impl rule__DataType__Group_7_2__2 )
            // InternalAcmeParser.g:20919:2: rule__DataType__Group_7_2__1__Impl rule__DataType__Group_7_2__2
            {
            pushFollow(FOLLOW_107);
            rule__DataType__Group_7_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DataType__Group_7_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_7_2__1"


    // $ANTLR start "rule__DataType__Group_7_2__1__Impl"
    // InternalAcmeParser.g:20926:1: rule__DataType__Group_7_2__1__Impl : ( ( rule__DataType__DataTypeAssignment_7_2_1 ) ) ;
    public final void rule__DataType__Group_7_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20930:1: ( ( ( rule__DataType__DataTypeAssignment_7_2_1 ) ) )
            // InternalAcmeParser.g:20931:1: ( ( rule__DataType__DataTypeAssignment_7_2_1 ) )
            {
            // InternalAcmeParser.g:20931:1: ( ( rule__DataType__DataTypeAssignment_7_2_1 ) )
            // InternalAcmeParser.g:20932:2: ( rule__DataType__DataTypeAssignment_7_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getDataTypeAssignment_7_2_1()); 
            }
            // InternalAcmeParser.g:20933:2: ( rule__DataType__DataTypeAssignment_7_2_1 )
            // InternalAcmeParser.g:20933:3: rule__DataType__DataTypeAssignment_7_2_1
            {
            pushFollow(FOLLOW_2);
            rule__DataType__DataTypeAssignment_7_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getDataTypeAssignment_7_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_7_2__1__Impl"


    // $ANTLR start "rule__DataType__Group_7_2__2"
    // InternalAcmeParser.g:20941:1: rule__DataType__Group_7_2__2 : rule__DataType__Group_7_2__2__Impl ;
    public final void rule__DataType__Group_7_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20945:1: ( rule__DataType__Group_7_2__2__Impl )
            // InternalAcmeParser.g:20946:2: rule__DataType__Group_7_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DataType__Group_7_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_7_2__2"


    // $ANTLR start "rule__DataType__Group_7_2__2__Impl"
    // InternalAcmeParser.g:20952:1: rule__DataType__Group_7_2__2__Impl : ( RightCurlyBracket ) ;
    public final void rule__DataType__Group_7_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20956:1: ( ( RightCurlyBracket ) )
            // InternalAcmeParser.g:20957:1: ( RightCurlyBracket )
            {
            // InternalAcmeParser.g:20957:1: ( RightCurlyBracket )
            // InternalAcmeParser.g:20958:2: RightCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getRightCurlyBracketKeyword_7_2_2()); 
            }
            match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getRightCurlyBracketKeyword_7_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_7_2__2__Impl"


    // $ANTLR start "rule__DataType__Group_8__0"
    // InternalAcmeParser.g:20968:1: rule__DataType__Group_8__0 : rule__DataType__Group_8__0__Impl rule__DataType__Group_8__1 ;
    public final void rule__DataType__Group_8__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20972:1: ( rule__DataType__Group_8__0__Impl rule__DataType__Group_8__1 )
            // InternalAcmeParser.g:20973:2: rule__DataType__Group_8__0__Impl rule__DataType__Group_8__1
            {
            pushFollow(FOLLOW_13);
            rule__DataType__Group_8__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DataType__Group_8__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_8__0"


    // $ANTLR start "rule__DataType__Group_8__0__Impl"
    // InternalAcmeParser.g:20980:1: rule__DataType__Group_8__0__Impl : ( ( rule__DataType__Alternatives_8_0 ) ) ;
    public final void rule__DataType__Group_8__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20984:1: ( ( ( rule__DataType__Alternatives_8_0 ) ) )
            // InternalAcmeParser.g:20985:1: ( ( rule__DataType__Alternatives_8_0 ) )
            {
            // InternalAcmeParser.g:20985:1: ( ( rule__DataType__Alternatives_8_0 ) )
            // InternalAcmeParser.g:20986:2: ( rule__DataType__Alternatives_8_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getAlternatives_8_0()); 
            }
            // InternalAcmeParser.g:20987:2: ( rule__DataType__Alternatives_8_0 )
            // InternalAcmeParser.g:20987:3: rule__DataType__Alternatives_8_0
            {
            pushFollow(FOLLOW_2);
            rule__DataType__Alternatives_8_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getAlternatives_8_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_8__0__Impl"


    // $ANTLR start "rule__DataType__Group_8__1"
    // InternalAcmeParser.g:20995:1: rule__DataType__Group_8__1 : rule__DataType__Group_8__1__Impl ;
    public final void rule__DataType__Group_8__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:20999:1: ( rule__DataType__Group_8__1__Impl )
            // InternalAcmeParser.g:21000:2: rule__DataType__Group_8__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DataType__Group_8__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_8__1"


    // $ANTLR start "rule__DataType__Group_8__1__Impl"
    // InternalAcmeParser.g:21006:1: rule__DataType__Group_8__1__Impl : ( ( rule__DataType__Group_8_1__0 ) ) ;
    public final void rule__DataType__Group_8__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21010:1: ( ( ( rule__DataType__Group_8_1__0 ) ) )
            // InternalAcmeParser.g:21011:1: ( ( rule__DataType__Group_8_1__0 ) )
            {
            // InternalAcmeParser.g:21011:1: ( ( rule__DataType__Group_8_1__0 ) )
            // InternalAcmeParser.g:21012:2: ( rule__DataType__Group_8_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getGroup_8_1()); 
            }
            // InternalAcmeParser.g:21013:2: ( rule__DataType__Group_8_1__0 )
            // InternalAcmeParser.g:21013:3: rule__DataType__Group_8_1__0
            {
            pushFollow(FOLLOW_2);
            rule__DataType__Group_8_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getGroup_8_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_8__1__Impl"


    // $ANTLR start "rule__DataType__Group_8_1__0"
    // InternalAcmeParser.g:21022:1: rule__DataType__Group_8_1__0 : rule__DataType__Group_8_1__0__Impl rule__DataType__Group_8_1__1 ;
    public final void rule__DataType__Group_8_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21026:1: ( rule__DataType__Group_8_1__0__Impl rule__DataType__Group_8_1__1 )
            // InternalAcmeParser.g:21027:2: rule__DataType__Group_8_1__0__Impl rule__DataType__Group_8_1__1
            {
            pushFollow(FOLLOW_101);
            rule__DataType__Group_8_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DataType__Group_8_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_8_1__0"


    // $ANTLR start "rule__DataType__Group_8_1__0__Impl"
    // InternalAcmeParser.g:21034:1: rule__DataType__Group_8_1__0__Impl : ( LeftCurlyBracket ) ;
    public final void rule__DataType__Group_8_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21038:1: ( ( LeftCurlyBracket ) )
            // InternalAcmeParser.g:21039:1: ( LeftCurlyBracket )
            {
            // InternalAcmeParser.g:21039:1: ( LeftCurlyBracket )
            // InternalAcmeParser.g:21040:2: LeftCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getLeftCurlyBracketKeyword_8_1_0()); 
            }
            match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getLeftCurlyBracketKeyword_8_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_8_1__0__Impl"


    // $ANTLR start "rule__DataType__Group_8_1__1"
    // InternalAcmeParser.g:21049:1: rule__DataType__Group_8_1__1 : rule__DataType__Group_8_1__1__Impl rule__DataType__Group_8_1__2 ;
    public final void rule__DataType__Group_8_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21053:1: ( rule__DataType__Group_8_1__1__Impl rule__DataType__Group_8_1__2 )
            // InternalAcmeParser.g:21054:2: rule__DataType__Group_8_1__1__Impl rule__DataType__Group_8_1__2
            {
            pushFollow(FOLLOW_107);
            rule__DataType__Group_8_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DataType__Group_8_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_8_1__1"


    // $ANTLR start "rule__DataType__Group_8_1__1__Impl"
    // InternalAcmeParser.g:21061:1: rule__DataType__Group_8_1__1__Impl : ( ( rule__DataType__DataTypeAssignment_8_1_1 ) ) ;
    public final void rule__DataType__Group_8_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21065:1: ( ( ( rule__DataType__DataTypeAssignment_8_1_1 ) ) )
            // InternalAcmeParser.g:21066:1: ( ( rule__DataType__DataTypeAssignment_8_1_1 ) )
            {
            // InternalAcmeParser.g:21066:1: ( ( rule__DataType__DataTypeAssignment_8_1_1 ) )
            // InternalAcmeParser.g:21067:2: ( rule__DataType__DataTypeAssignment_8_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getDataTypeAssignment_8_1_1()); 
            }
            // InternalAcmeParser.g:21068:2: ( rule__DataType__DataTypeAssignment_8_1_1 )
            // InternalAcmeParser.g:21068:3: rule__DataType__DataTypeAssignment_8_1_1
            {
            pushFollow(FOLLOW_2);
            rule__DataType__DataTypeAssignment_8_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getDataTypeAssignment_8_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_8_1__1__Impl"


    // $ANTLR start "rule__DataType__Group_8_1__2"
    // InternalAcmeParser.g:21076:1: rule__DataType__Group_8_1__2 : rule__DataType__Group_8_1__2__Impl ;
    public final void rule__DataType__Group_8_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21080:1: ( rule__DataType__Group_8_1__2__Impl )
            // InternalAcmeParser.g:21081:2: rule__DataType__Group_8_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DataType__Group_8_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_8_1__2"


    // $ANTLR start "rule__DataType__Group_8_1__2__Impl"
    // InternalAcmeParser.g:21087:1: rule__DataType__Group_8_1__2__Impl : ( RightCurlyBracket ) ;
    public final void rule__DataType__Group_8_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21091:1: ( ( RightCurlyBracket ) )
            // InternalAcmeParser.g:21092:1: ( RightCurlyBracket )
            {
            // InternalAcmeParser.g:21092:1: ( RightCurlyBracket )
            // InternalAcmeParser.g:21093:2: RightCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getRightCurlyBracketKeyword_8_1_2()); 
            }
            match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getRightCurlyBracketKeyword_8_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_8_1__2__Impl"


    // $ANTLR start "rule__DataType__Group_9__0"
    // InternalAcmeParser.g:21103:1: rule__DataType__Group_9__0 : rule__DataType__Group_9__0__Impl rule__DataType__Group_9__1 ;
    public final void rule__DataType__Group_9__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21107:1: ( rule__DataType__Group_9__0__Impl rule__DataType__Group_9__1 )
            // InternalAcmeParser.g:21108:2: rule__DataType__Group_9__0__Impl rule__DataType__Group_9__1
            {
            pushFollow(FOLLOW_61);
            rule__DataType__Group_9__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DataType__Group_9__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_9__0"


    // $ANTLR start "rule__DataType__Group_9__0__Impl"
    // InternalAcmeParser.g:21115:1: rule__DataType__Group_9__0__Impl : ( () ) ;
    public final void rule__DataType__Group_9__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21119:1: ( ( () ) )
            // InternalAcmeParser.g:21120:1: ( () )
            {
            // InternalAcmeParser.g:21120:1: ( () )
            // InternalAcmeParser.g:21121:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getDataTypeAction_9_0()); 
            }
            // InternalAcmeParser.g:21122:2: ()
            // InternalAcmeParser.g:21122:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getDataTypeAction_9_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_9__0__Impl"


    // $ANTLR start "rule__DataType__Group_9__1"
    // InternalAcmeParser.g:21130:1: rule__DataType__Group_9__1 : rule__DataType__Group_9__1__Impl rule__DataType__Group_9__2 ;
    public final void rule__DataType__Group_9__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21134:1: ( rule__DataType__Group_9__1__Impl rule__DataType__Group_9__2 )
            // InternalAcmeParser.g:21135:2: rule__DataType__Group_9__1__Impl rule__DataType__Group_9__2
            {
            pushFollow(FOLLOW_58);
            rule__DataType__Group_9__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DataType__Group_9__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_9__1"


    // $ANTLR start "rule__DataType__Group_9__1__Impl"
    // InternalAcmeParser.g:21142:1: rule__DataType__Group_9__1__Impl : ( Record ) ;
    public final void rule__DataType__Group_9__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21146:1: ( ( Record ) )
            // InternalAcmeParser.g:21147:1: ( Record )
            {
            // InternalAcmeParser.g:21147:1: ( Record )
            // InternalAcmeParser.g:21148:2: Record
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getRecordKeyword_9_1()); 
            }
            match(input,Record,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getRecordKeyword_9_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_9__1__Impl"


    // $ANTLR start "rule__DataType__Group_9__2"
    // InternalAcmeParser.g:21157:1: rule__DataType__Group_9__2 : rule__DataType__Group_9__2__Impl ;
    public final void rule__DataType__Group_9__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21161:1: ( rule__DataType__Group_9__2__Impl )
            // InternalAcmeParser.g:21162:2: rule__DataType__Group_9__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DataType__Group_9__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_9__2"


    // $ANTLR start "rule__DataType__Group_9__2__Impl"
    // InternalAcmeParser.g:21168:1: rule__DataType__Group_9__2__Impl : ( ( rule__DataType__Group_9_2__0 )? ) ;
    public final void rule__DataType__Group_9__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21172:1: ( ( ( rule__DataType__Group_9_2__0 )? ) )
            // InternalAcmeParser.g:21173:1: ( ( rule__DataType__Group_9_2__0 )? )
            {
            // InternalAcmeParser.g:21173:1: ( ( rule__DataType__Group_9_2__0 )? )
            // InternalAcmeParser.g:21174:2: ( rule__DataType__Group_9_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getGroup_9_2()); 
            }
            // InternalAcmeParser.g:21175:2: ( rule__DataType__Group_9_2__0 )?
            int alt220=2;
            int LA220_0 = input.LA(1);

            if ( (LA220_0==LeftSquareBracket) ) {
                alt220=1;
            }
            switch (alt220) {
                case 1 :
                    // InternalAcmeParser.g:21175:3: rule__DataType__Group_9_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DataType__Group_9_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getGroup_9_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_9__2__Impl"


    // $ANTLR start "rule__DataType__Group_9_2__0"
    // InternalAcmeParser.g:21184:1: rule__DataType__Group_9_2__0 : rule__DataType__Group_9_2__0__Impl rule__DataType__Group_9_2__1 ;
    public final void rule__DataType__Group_9_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21188:1: ( rule__DataType__Group_9_2__0__Impl rule__DataType__Group_9_2__1 )
            // InternalAcmeParser.g:21189:2: rule__DataType__Group_9_2__0__Impl rule__DataType__Group_9_2__1
            {
            pushFollow(FOLLOW_59);
            rule__DataType__Group_9_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DataType__Group_9_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_9_2__0"


    // $ANTLR start "rule__DataType__Group_9_2__0__Impl"
    // InternalAcmeParser.g:21196:1: rule__DataType__Group_9_2__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__DataType__Group_9_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21200:1: ( ( LeftSquareBracket ) )
            // InternalAcmeParser.g:21201:1: ( LeftSquareBracket )
            {
            // InternalAcmeParser.g:21201:1: ( LeftSquareBracket )
            // InternalAcmeParser.g:21202:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getLeftSquareBracketKeyword_9_2_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getLeftSquareBracketKeyword_9_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_9_2__0__Impl"


    // $ANTLR start "rule__DataType__Group_9_2__1"
    // InternalAcmeParser.g:21211:1: rule__DataType__Group_9_2__1 : rule__DataType__Group_9_2__1__Impl rule__DataType__Group_9_2__2 ;
    public final void rule__DataType__Group_9_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21215:1: ( rule__DataType__Group_9_2__1__Impl rule__DataType__Group_9_2__2 )
            // InternalAcmeParser.g:21216:2: rule__DataType__Group_9_2__1__Impl rule__DataType__Group_9_2__2
            {
            pushFollow(FOLLOW_59);
            rule__DataType__Group_9_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DataType__Group_9_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_9_2__1"


    // $ANTLR start "rule__DataType__Group_9_2__1__Impl"
    // InternalAcmeParser.g:21223:1: rule__DataType__Group_9_2__1__Impl : ( ( rule__DataType__Group_9_2_1__0 )* ) ;
    public final void rule__DataType__Group_9_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21227:1: ( ( ( rule__DataType__Group_9_2_1__0 )* ) )
            // InternalAcmeParser.g:21228:1: ( ( rule__DataType__Group_9_2_1__0 )* )
            {
            // InternalAcmeParser.g:21228:1: ( ( rule__DataType__Group_9_2_1__0 )* )
            // InternalAcmeParser.g:21229:2: ( rule__DataType__Group_9_2_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getGroup_9_2_1()); 
            }
            // InternalAcmeParser.g:21230:2: ( rule__DataType__Group_9_2_1__0 )*
            loop221:
            do {
                int alt221=2;
                int LA221_0 = input.LA(1);

                if ( (LA221_0==RULE_ID) ) {
                    alt221=1;
                }


                switch (alt221) {
            	case 1 :
            	    // InternalAcmeParser.g:21230:3: rule__DataType__Group_9_2_1__0
            	    {
            	    pushFollow(FOLLOW_62);
            	    rule__DataType__Group_9_2_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop221;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getGroup_9_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_9_2__1__Impl"


    // $ANTLR start "rule__DataType__Group_9_2__2"
    // InternalAcmeParser.g:21238:1: rule__DataType__Group_9_2__2 : rule__DataType__Group_9_2__2__Impl ;
    public final void rule__DataType__Group_9_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21242:1: ( rule__DataType__Group_9_2__2__Impl )
            // InternalAcmeParser.g:21243:2: rule__DataType__Group_9_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DataType__Group_9_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_9_2__2"


    // $ANTLR start "rule__DataType__Group_9_2__2__Impl"
    // InternalAcmeParser.g:21249:1: rule__DataType__Group_9_2__2__Impl : ( RightSquareBracket ) ;
    public final void rule__DataType__Group_9_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21253:1: ( ( RightSquareBracket ) )
            // InternalAcmeParser.g:21254:1: ( RightSquareBracket )
            {
            // InternalAcmeParser.g:21254:1: ( RightSquareBracket )
            // InternalAcmeParser.g:21255:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getRightSquareBracketKeyword_9_2_2()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getRightSquareBracketKeyword_9_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_9_2__2__Impl"


    // $ANTLR start "rule__DataType__Group_9_2_1__0"
    // InternalAcmeParser.g:21265:1: rule__DataType__Group_9_2_1__0 : rule__DataType__Group_9_2_1__0__Impl rule__DataType__Group_9_2_1__1 ;
    public final void rule__DataType__Group_9_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21269:1: ( rule__DataType__Group_9_2_1__0__Impl rule__DataType__Group_9_2_1__1 )
            // InternalAcmeParser.g:21270:2: rule__DataType__Group_9_2_1__0__Impl rule__DataType__Group_9_2_1__1
            {
            pushFollow(FOLLOW_120);
            rule__DataType__Group_9_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DataType__Group_9_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_9_2_1__0"


    // $ANTLR start "rule__DataType__Group_9_2_1__0__Impl"
    // InternalAcmeParser.g:21277:1: rule__DataType__Group_9_2_1__0__Impl : ( ( rule__DataType__IdAssignment_9_2_1_0 ) ) ;
    public final void rule__DataType__Group_9_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21281:1: ( ( ( rule__DataType__IdAssignment_9_2_1_0 ) ) )
            // InternalAcmeParser.g:21282:1: ( ( rule__DataType__IdAssignment_9_2_1_0 ) )
            {
            // InternalAcmeParser.g:21282:1: ( ( rule__DataType__IdAssignment_9_2_1_0 ) )
            // InternalAcmeParser.g:21283:2: ( rule__DataType__IdAssignment_9_2_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getIdAssignment_9_2_1_0()); 
            }
            // InternalAcmeParser.g:21284:2: ( rule__DataType__IdAssignment_9_2_1_0 )
            // InternalAcmeParser.g:21284:3: rule__DataType__IdAssignment_9_2_1_0
            {
            pushFollow(FOLLOW_2);
            rule__DataType__IdAssignment_9_2_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getIdAssignment_9_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_9_2_1__0__Impl"


    // $ANTLR start "rule__DataType__Group_9_2_1__1"
    // InternalAcmeParser.g:21292:1: rule__DataType__Group_9_2_1__1 : rule__DataType__Group_9_2_1__1__Impl rule__DataType__Group_9_2_1__2 ;
    public final void rule__DataType__Group_9_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21296:1: ( rule__DataType__Group_9_2_1__1__Impl rule__DataType__Group_9_2_1__2 )
            // InternalAcmeParser.g:21297:2: rule__DataType__Group_9_2_1__1__Impl rule__DataType__Group_9_2_1__2
            {
            pushFollow(FOLLOW_120);
            rule__DataType__Group_9_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DataType__Group_9_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_9_2_1__1"


    // $ANTLR start "rule__DataType__Group_9_2_1__1__Impl"
    // InternalAcmeParser.g:21304:1: rule__DataType__Group_9_2_1__1__Impl : ( ( rule__DataType__Group_9_2_1_1__0 )* ) ;
    public final void rule__DataType__Group_9_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21308:1: ( ( ( rule__DataType__Group_9_2_1_1__0 )* ) )
            // InternalAcmeParser.g:21309:1: ( ( rule__DataType__Group_9_2_1_1__0 )* )
            {
            // InternalAcmeParser.g:21309:1: ( ( rule__DataType__Group_9_2_1_1__0 )* )
            // InternalAcmeParser.g:21310:2: ( rule__DataType__Group_9_2_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getGroup_9_2_1_1()); 
            }
            // InternalAcmeParser.g:21311:2: ( rule__DataType__Group_9_2_1_1__0 )*
            loop222:
            do {
                int alt222=2;
                int LA222_0 = input.LA(1);

                if ( (LA222_0==Comma) ) {
                    alt222=1;
                }


                switch (alt222) {
            	case 1 :
            	    // InternalAcmeParser.g:21311:3: rule__DataType__Group_9_2_1_1__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__DataType__Group_9_2_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop222;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getGroup_9_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_9_2_1__1__Impl"


    // $ANTLR start "rule__DataType__Group_9_2_1__2"
    // InternalAcmeParser.g:21319:1: rule__DataType__Group_9_2_1__2 : rule__DataType__Group_9_2_1__2__Impl rule__DataType__Group_9_2_1__3 ;
    public final void rule__DataType__Group_9_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21323:1: ( rule__DataType__Group_9_2_1__2__Impl rule__DataType__Group_9_2_1__3 )
            // InternalAcmeParser.g:21324:2: rule__DataType__Group_9_2_1__2__Impl rule__DataType__Group_9_2_1__3
            {
            pushFollow(FOLLOW_101);
            rule__DataType__Group_9_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DataType__Group_9_2_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_9_2_1__2"


    // $ANTLR start "rule__DataType__Group_9_2_1__2__Impl"
    // InternalAcmeParser.g:21331:1: rule__DataType__Group_9_2_1__2__Impl : ( Colon ) ;
    public final void rule__DataType__Group_9_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21335:1: ( ( Colon ) )
            // InternalAcmeParser.g:21336:1: ( Colon )
            {
            // InternalAcmeParser.g:21336:1: ( Colon )
            // InternalAcmeParser.g:21337:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getColonKeyword_9_2_1_2()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getColonKeyword_9_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_9_2_1__2__Impl"


    // $ANTLR start "rule__DataType__Group_9_2_1__3"
    // InternalAcmeParser.g:21346:1: rule__DataType__Group_9_2_1__3 : rule__DataType__Group_9_2_1__3__Impl rule__DataType__Group_9_2_1__4 ;
    public final void rule__DataType__Group_9_2_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21350:1: ( rule__DataType__Group_9_2_1__3__Impl rule__DataType__Group_9_2_1__4 )
            // InternalAcmeParser.g:21351:2: rule__DataType__Group_9_2_1__3__Impl rule__DataType__Group_9_2_1__4
            {
            pushFollow(FOLLOW_7);
            rule__DataType__Group_9_2_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DataType__Group_9_2_1__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_9_2_1__3"


    // $ANTLR start "rule__DataType__Group_9_2_1__3__Impl"
    // InternalAcmeParser.g:21358:1: rule__DataType__Group_9_2_1__3__Impl : ( ( rule__DataType__TypeAssignment_9_2_1_3 ) ) ;
    public final void rule__DataType__Group_9_2_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21362:1: ( ( ( rule__DataType__TypeAssignment_9_2_1_3 ) ) )
            // InternalAcmeParser.g:21363:1: ( ( rule__DataType__TypeAssignment_9_2_1_3 ) )
            {
            // InternalAcmeParser.g:21363:1: ( ( rule__DataType__TypeAssignment_9_2_1_3 ) )
            // InternalAcmeParser.g:21364:2: ( rule__DataType__TypeAssignment_9_2_1_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getTypeAssignment_9_2_1_3()); 
            }
            // InternalAcmeParser.g:21365:2: ( rule__DataType__TypeAssignment_9_2_1_3 )
            // InternalAcmeParser.g:21365:3: rule__DataType__TypeAssignment_9_2_1_3
            {
            pushFollow(FOLLOW_2);
            rule__DataType__TypeAssignment_9_2_1_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getTypeAssignment_9_2_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_9_2_1__3__Impl"


    // $ANTLR start "rule__DataType__Group_9_2_1__4"
    // InternalAcmeParser.g:21373:1: rule__DataType__Group_9_2_1__4 : rule__DataType__Group_9_2_1__4__Impl ;
    public final void rule__DataType__Group_9_2_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21377:1: ( rule__DataType__Group_9_2_1__4__Impl )
            // InternalAcmeParser.g:21378:2: rule__DataType__Group_9_2_1__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DataType__Group_9_2_1__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_9_2_1__4"


    // $ANTLR start "rule__DataType__Group_9_2_1__4__Impl"
    // InternalAcmeParser.g:21384:1: rule__DataType__Group_9_2_1__4__Impl : ( Semicolon ) ;
    public final void rule__DataType__Group_9_2_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21388:1: ( ( Semicolon ) )
            // InternalAcmeParser.g:21389:1: ( Semicolon )
            {
            // InternalAcmeParser.g:21389:1: ( Semicolon )
            // InternalAcmeParser.g:21390:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getSemicolonKeyword_9_2_1_4()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getSemicolonKeyword_9_2_1_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_9_2_1__4__Impl"


    // $ANTLR start "rule__DataType__Group_9_2_1_1__0"
    // InternalAcmeParser.g:21400:1: rule__DataType__Group_9_2_1_1__0 : rule__DataType__Group_9_2_1_1__0__Impl rule__DataType__Group_9_2_1_1__1 ;
    public final void rule__DataType__Group_9_2_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21404:1: ( rule__DataType__Group_9_2_1_1__0__Impl rule__DataType__Group_9_2_1_1__1 )
            // InternalAcmeParser.g:21405:2: rule__DataType__Group_9_2_1_1__0__Impl rule__DataType__Group_9_2_1_1__1
            {
            pushFollow(FOLLOW_11);
            rule__DataType__Group_9_2_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DataType__Group_9_2_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_9_2_1_1__0"


    // $ANTLR start "rule__DataType__Group_9_2_1_1__0__Impl"
    // InternalAcmeParser.g:21412:1: rule__DataType__Group_9_2_1_1__0__Impl : ( Comma ) ;
    public final void rule__DataType__Group_9_2_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21416:1: ( ( Comma ) )
            // InternalAcmeParser.g:21417:1: ( Comma )
            {
            // InternalAcmeParser.g:21417:1: ( Comma )
            // InternalAcmeParser.g:21418:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getCommaKeyword_9_2_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getCommaKeyword_9_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_9_2_1_1__0__Impl"


    // $ANTLR start "rule__DataType__Group_9_2_1_1__1"
    // InternalAcmeParser.g:21427:1: rule__DataType__Group_9_2_1_1__1 : rule__DataType__Group_9_2_1_1__1__Impl ;
    public final void rule__DataType__Group_9_2_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21431:1: ( rule__DataType__Group_9_2_1_1__1__Impl )
            // InternalAcmeParser.g:21432:2: rule__DataType__Group_9_2_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DataType__Group_9_2_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_9_2_1_1__1"


    // $ANTLR start "rule__DataType__Group_9_2_1_1__1__Impl"
    // InternalAcmeParser.g:21438:1: rule__DataType__Group_9_2_1_1__1__Impl : ( ( rule__DataType__IdAssignment_9_2_1_1_1 ) ) ;
    public final void rule__DataType__Group_9_2_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21442:1: ( ( ( rule__DataType__IdAssignment_9_2_1_1_1 ) ) )
            // InternalAcmeParser.g:21443:1: ( ( rule__DataType__IdAssignment_9_2_1_1_1 ) )
            {
            // InternalAcmeParser.g:21443:1: ( ( rule__DataType__IdAssignment_9_2_1_1_1 ) )
            // InternalAcmeParser.g:21444:2: ( rule__DataType__IdAssignment_9_2_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getIdAssignment_9_2_1_1_1()); 
            }
            // InternalAcmeParser.g:21445:2: ( rule__DataType__IdAssignment_9_2_1_1_1 )
            // InternalAcmeParser.g:21445:3: rule__DataType__IdAssignment_9_2_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__DataType__IdAssignment_9_2_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getIdAssignment_9_2_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_9_2_1_1__1__Impl"


    // $ANTLR start "rule__DataType__Group_10__0"
    // InternalAcmeParser.g:21454:1: rule__DataType__Group_10__0 : rule__DataType__Group_10__0__Impl rule__DataType__Group_10__1 ;
    public final void rule__DataType__Group_10__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21458:1: ( rule__DataType__Group_10__0__Impl rule__DataType__Group_10__1 )
            // InternalAcmeParser.g:21459:2: rule__DataType__Group_10__0__Impl rule__DataType__Group_10__1
            {
            pushFollow(FOLLOW_121);
            rule__DataType__Group_10__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DataType__Group_10__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_10__0"


    // $ANTLR start "rule__DataType__Group_10__0__Impl"
    // InternalAcmeParser.g:21466:1: rule__DataType__Group_10__0__Impl : ( () ) ;
    public final void rule__DataType__Group_10__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21470:1: ( ( () ) )
            // InternalAcmeParser.g:21471:1: ( () )
            {
            // InternalAcmeParser.g:21471:1: ( () )
            // InternalAcmeParser.g:21472:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getDataTypeAction_10_0()); 
            }
            // InternalAcmeParser.g:21473:2: ()
            // InternalAcmeParser.g:21473:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getDataTypeAction_10_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_10__0__Impl"


    // $ANTLR start "rule__DataType__Group_10__1"
    // InternalAcmeParser.g:21481:1: rule__DataType__Group_10__1 : rule__DataType__Group_10__1__Impl rule__DataType__Group_10__2 ;
    public final void rule__DataType__Group_10__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21485:1: ( rule__DataType__Group_10__1__Impl rule__DataType__Group_10__2 )
            // InternalAcmeParser.g:21486:2: rule__DataType__Group_10__1__Impl rule__DataType__Group_10__2
            {
            pushFollow(FOLLOW_13);
            rule__DataType__Group_10__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DataType__Group_10__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_10__1"


    // $ANTLR start "rule__DataType__Group_10__1__Impl"
    // InternalAcmeParser.g:21493:1: rule__DataType__Group_10__1__Impl : ( Enum ) ;
    public final void rule__DataType__Group_10__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21497:1: ( ( Enum ) )
            // InternalAcmeParser.g:21498:1: ( Enum )
            {
            // InternalAcmeParser.g:21498:1: ( Enum )
            // InternalAcmeParser.g:21499:2: Enum
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getEnumKeyword_10_1()); 
            }
            match(input,Enum,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getEnumKeyword_10_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_10__1__Impl"


    // $ANTLR start "rule__DataType__Group_10__2"
    // InternalAcmeParser.g:21508:1: rule__DataType__Group_10__2 : rule__DataType__Group_10__2__Impl ;
    public final void rule__DataType__Group_10__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21512:1: ( rule__DataType__Group_10__2__Impl )
            // InternalAcmeParser.g:21513:2: rule__DataType__Group_10__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DataType__Group_10__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_10__2"


    // $ANTLR start "rule__DataType__Group_10__2__Impl"
    // InternalAcmeParser.g:21519:1: rule__DataType__Group_10__2__Impl : ( ( rule__DataType__Group_10_2__0 )? ) ;
    public final void rule__DataType__Group_10__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21523:1: ( ( ( rule__DataType__Group_10_2__0 )? ) )
            // InternalAcmeParser.g:21524:1: ( ( rule__DataType__Group_10_2__0 )? )
            {
            // InternalAcmeParser.g:21524:1: ( ( rule__DataType__Group_10_2__0 )? )
            // InternalAcmeParser.g:21525:2: ( rule__DataType__Group_10_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getGroup_10_2()); 
            }
            // InternalAcmeParser.g:21526:2: ( rule__DataType__Group_10_2__0 )?
            int alt223=2;
            int LA223_0 = input.LA(1);

            if ( (LA223_0==LeftCurlyBracket) ) {
                alt223=1;
            }
            switch (alt223) {
                case 1 :
                    // InternalAcmeParser.g:21526:3: rule__DataType__Group_10_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DataType__Group_10_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getGroup_10_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_10__2__Impl"


    // $ANTLR start "rule__DataType__Group_10_2__0"
    // InternalAcmeParser.g:21535:1: rule__DataType__Group_10_2__0 : rule__DataType__Group_10_2__0__Impl rule__DataType__Group_10_2__1 ;
    public final void rule__DataType__Group_10_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21539:1: ( rule__DataType__Group_10_2__0__Impl rule__DataType__Group_10_2__1 )
            // InternalAcmeParser.g:21540:2: rule__DataType__Group_10_2__0__Impl rule__DataType__Group_10_2__1
            {
            pushFollow(FOLLOW_32);
            rule__DataType__Group_10_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DataType__Group_10_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_10_2__0"


    // $ANTLR start "rule__DataType__Group_10_2__0__Impl"
    // InternalAcmeParser.g:21547:1: rule__DataType__Group_10_2__0__Impl : ( LeftCurlyBracket ) ;
    public final void rule__DataType__Group_10_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21551:1: ( ( LeftCurlyBracket ) )
            // InternalAcmeParser.g:21552:1: ( LeftCurlyBracket )
            {
            // InternalAcmeParser.g:21552:1: ( LeftCurlyBracket )
            // InternalAcmeParser.g:21553:2: LeftCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getLeftCurlyBracketKeyword_10_2_0()); 
            }
            match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getLeftCurlyBracketKeyword_10_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_10_2__0__Impl"


    // $ANTLR start "rule__DataType__Group_10_2__1"
    // InternalAcmeParser.g:21562:1: rule__DataType__Group_10_2__1 : rule__DataType__Group_10_2__1__Impl rule__DataType__Group_10_2__2 ;
    public final void rule__DataType__Group_10_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21566:1: ( rule__DataType__Group_10_2__1__Impl rule__DataType__Group_10_2__2 )
            // InternalAcmeParser.g:21567:2: rule__DataType__Group_10_2__1__Impl rule__DataType__Group_10_2__2
            {
            pushFollow(FOLLOW_32);
            rule__DataType__Group_10_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DataType__Group_10_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_10_2__1"


    // $ANTLR start "rule__DataType__Group_10_2__1__Impl"
    // InternalAcmeParser.g:21574:1: rule__DataType__Group_10_2__1__Impl : ( ( rule__DataType__Group_10_2_1__0 )? ) ;
    public final void rule__DataType__Group_10_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21578:1: ( ( ( rule__DataType__Group_10_2_1__0 )? ) )
            // InternalAcmeParser.g:21579:1: ( ( rule__DataType__Group_10_2_1__0 )? )
            {
            // InternalAcmeParser.g:21579:1: ( ( rule__DataType__Group_10_2_1__0 )? )
            // InternalAcmeParser.g:21580:2: ( rule__DataType__Group_10_2_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getGroup_10_2_1()); 
            }
            // InternalAcmeParser.g:21581:2: ( rule__DataType__Group_10_2_1__0 )?
            int alt224=2;
            int LA224_0 = input.LA(1);

            if ( (LA224_0==RULE_ID) ) {
                alt224=1;
            }
            switch (alt224) {
                case 1 :
                    // InternalAcmeParser.g:21581:3: rule__DataType__Group_10_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DataType__Group_10_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getGroup_10_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_10_2__1__Impl"


    // $ANTLR start "rule__DataType__Group_10_2__2"
    // InternalAcmeParser.g:21589:1: rule__DataType__Group_10_2__2 : rule__DataType__Group_10_2__2__Impl ;
    public final void rule__DataType__Group_10_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21593:1: ( rule__DataType__Group_10_2__2__Impl )
            // InternalAcmeParser.g:21594:2: rule__DataType__Group_10_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DataType__Group_10_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_10_2__2"


    // $ANTLR start "rule__DataType__Group_10_2__2__Impl"
    // InternalAcmeParser.g:21600:1: rule__DataType__Group_10_2__2__Impl : ( RightCurlyBracket ) ;
    public final void rule__DataType__Group_10_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21604:1: ( ( RightCurlyBracket ) )
            // InternalAcmeParser.g:21605:1: ( RightCurlyBracket )
            {
            // InternalAcmeParser.g:21605:1: ( RightCurlyBracket )
            // InternalAcmeParser.g:21606:2: RightCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getRightCurlyBracketKeyword_10_2_2()); 
            }
            match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getRightCurlyBracketKeyword_10_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_10_2__2__Impl"


    // $ANTLR start "rule__DataType__Group_10_2_1__0"
    // InternalAcmeParser.g:21616:1: rule__DataType__Group_10_2_1__0 : rule__DataType__Group_10_2_1__0__Impl rule__DataType__Group_10_2_1__1 ;
    public final void rule__DataType__Group_10_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21620:1: ( rule__DataType__Group_10_2_1__0__Impl rule__DataType__Group_10_2_1__1 )
            // InternalAcmeParser.g:21621:2: rule__DataType__Group_10_2_1__0__Impl rule__DataType__Group_10_2_1__1
            {
            pushFollow(FOLLOW_19);
            rule__DataType__Group_10_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DataType__Group_10_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_10_2_1__0"


    // $ANTLR start "rule__DataType__Group_10_2_1__0__Impl"
    // InternalAcmeParser.g:21628:1: rule__DataType__Group_10_2_1__0__Impl : ( RULE_ID ) ;
    public final void rule__DataType__Group_10_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21632:1: ( ( RULE_ID ) )
            // InternalAcmeParser.g:21633:1: ( RULE_ID )
            {
            // InternalAcmeParser.g:21633:1: ( RULE_ID )
            // InternalAcmeParser.g:21634:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getIDTerminalRuleCall_10_2_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getIDTerminalRuleCall_10_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_10_2_1__0__Impl"


    // $ANTLR start "rule__DataType__Group_10_2_1__1"
    // InternalAcmeParser.g:21643:1: rule__DataType__Group_10_2_1__1 : rule__DataType__Group_10_2_1__1__Impl ;
    public final void rule__DataType__Group_10_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21647:1: ( rule__DataType__Group_10_2_1__1__Impl )
            // InternalAcmeParser.g:21648:2: rule__DataType__Group_10_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DataType__Group_10_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_10_2_1__1"


    // $ANTLR start "rule__DataType__Group_10_2_1__1__Impl"
    // InternalAcmeParser.g:21654:1: rule__DataType__Group_10_2_1__1__Impl : ( ( rule__DataType__Group_10_2_1_1__0 )* ) ;
    public final void rule__DataType__Group_10_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21658:1: ( ( ( rule__DataType__Group_10_2_1_1__0 )* ) )
            // InternalAcmeParser.g:21659:1: ( ( rule__DataType__Group_10_2_1_1__0 )* )
            {
            // InternalAcmeParser.g:21659:1: ( ( rule__DataType__Group_10_2_1_1__0 )* )
            // InternalAcmeParser.g:21660:2: ( rule__DataType__Group_10_2_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getGroup_10_2_1_1()); 
            }
            // InternalAcmeParser.g:21661:2: ( rule__DataType__Group_10_2_1_1__0 )*
            loop225:
            do {
                int alt225=2;
                int LA225_0 = input.LA(1);

                if ( (LA225_0==Comma) ) {
                    alt225=1;
                }


                switch (alt225) {
            	case 1 :
            	    // InternalAcmeParser.g:21661:3: rule__DataType__Group_10_2_1_1__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__DataType__Group_10_2_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop225;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getGroup_10_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_10_2_1__1__Impl"


    // $ANTLR start "rule__DataType__Group_10_2_1_1__0"
    // InternalAcmeParser.g:21670:1: rule__DataType__Group_10_2_1_1__0 : rule__DataType__Group_10_2_1_1__0__Impl rule__DataType__Group_10_2_1_1__1 ;
    public final void rule__DataType__Group_10_2_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21674:1: ( rule__DataType__Group_10_2_1_1__0__Impl rule__DataType__Group_10_2_1_1__1 )
            // InternalAcmeParser.g:21675:2: rule__DataType__Group_10_2_1_1__0__Impl rule__DataType__Group_10_2_1_1__1
            {
            pushFollow(FOLLOW_11);
            rule__DataType__Group_10_2_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DataType__Group_10_2_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_10_2_1_1__0"


    // $ANTLR start "rule__DataType__Group_10_2_1_1__0__Impl"
    // InternalAcmeParser.g:21682:1: rule__DataType__Group_10_2_1_1__0__Impl : ( Comma ) ;
    public final void rule__DataType__Group_10_2_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21686:1: ( ( Comma ) )
            // InternalAcmeParser.g:21687:1: ( Comma )
            {
            // InternalAcmeParser.g:21687:1: ( Comma )
            // InternalAcmeParser.g:21688:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getCommaKeyword_10_2_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getCommaKeyword_10_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_10_2_1_1__0__Impl"


    // $ANTLR start "rule__DataType__Group_10_2_1_1__1"
    // InternalAcmeParser.g:21697:1: rule__DataType__Group_10_2_1_1__1 : rule__DataType__Group_10_2_1_1__1__Impl ;
    public final void rule__DataType__Group_10_2_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21701:1: ( rule__DataType__Group_10_2_1_1__1__Impl )
            // InternalAcmeParser.g:21702:2: rule__DataType__Group_10_2_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DataType__Group_10_2_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_10_2_1_1__1"


    // $ANTLR start "rule__DataType__Group_10_2_1_1__1__Impl"
    // InternalAcmeParser.g:21708:1: rule__DataType__Group_10_2_1_1__1__Impl : ( RULE_ID ) ;
    public final void rule__DataType__Group_10_2_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21712:1: ( ( RULE_ID ) )
            // InternalAcmeParser.g:21713:1: ( RULE_ID )
            {
            // InternalAcmeParser.g:21713:1: ( RULE_ID )
            // InternalAcmeParser.g:21714:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getIDTerminalRuleCall_10_2_1_1_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getIDTerminalRuleCall_10_2_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group_10_2_1_1__1__Impl"


    // $ANTLR start "rule__AcmeCompUnit__ImportsAssignment_0"
    // InternalAcmeParser.g:21724:1: rule__AcmeCompUnit__ImportsAssignment_0 : ( ruleAcmeImportDeclaration ) ;
    public final void rule__AcmeCompUnit__ImportsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21728:1: ( ( ruleAcmeImportDeclaration ) )
            // InternalAcmeParser.g:21729:2: ( ruleAcmeImportDeclaration )
            {
            // InternalAcmeParser.g:21729:2: ( ruleAcmeImportDeclaration )
            // InternalAcmeParser.g:21730:3: ruleAcmeImportDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeCompUnitAccess().getImportsAcmeImportDeclarationParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeImportDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeCompUnitAccess().getImportsAcmeImportDeclarationParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeCompUnit__ImportsAssignment_0"


    // $ANTLR start "rule__AcmeCompUnit__SystemsAssignment_1_0"
    // InternalAcmeParser.g:21739:1: rule__AcmeCompUnit__SystemsAssignment_1_0 : ( ruleAcmeSystemDeclaration ) ;
    public final void rule__AcmeCompUnit__SystemsAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21743:1: ( ( ruleAcmeSystemDeclaration ) )
            // InternalAcmeParser.g:21744:2: ( ruleAcmeSystemDeclaration )
            {
            // InternalAcmeParser.g:21744:2: ( ruleAcmeSystemDeclaration )
            // InternalAcmeParser.g:21745:3: ruleAcmeSystemDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeCompUnitAccess().getSystemsAcmeSystemDeclarationParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeSystemDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeCompUnitAccess().getSystemsAcmeSystemDeclarationParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeCompUnit__SystemsAssignment_1_0"


    // $ANTLR start "rule__AcmeCompUnit__FamiliesAssignment_1_1"
    // InternalAcmeParser.g:21754:1: rule__AcmeCompUnit__FamiliesAssignment_1_1 : ( ruleAcmeFamilyDeclaration ) ;
    public final void rule__AcmeCompUnit__FamiliesAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21758:1: ( ( ruleAcmeFamilyDeclaration ) )
            // InternalAcmeParser.g:21759:2: ( ruleAcmeFamilyDeclaration )
            {
            // InternalAcmeParser.g:21759:2: ( ruleAcmeFamilyDeclaration )
            // InternalAcmeParser.g:21760:3: ruleAcmeFamilyDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeCompUnitAccess().getFamiliesAcmeFamilyDeclarationParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeFamilyDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeCompUnitAccess().getFamiliesAcmeFamilyDeclarationParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeCompUnit__FamiliesAssignment_1_1"


    // $ANTLR start "rule__AcmeImportDeclaration__FileAssignment_1_0"
    // InternalAcmeParser.g:21769:1: rule__AcmeImportDeclaration__FileAssignment_1_0 : ( ruleFilename ) ;
    public final void rule__AcmeImportDeclaration__FileAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21773:1: ( ( ruleFilename ) )
            // InternalAcmeParser.g:21774:2: ( ruleFilename )
            {
            // InternalAcmeParser.g:21774:2: ( ruleFilename )
            // InternalAcmeParser.g:21775:3: ruleFilename
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeImportDeclarationAccess().getFileFilenameParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFilename();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeImportDeclarationAccess().getFileFilenameParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeImportDeclaration__FileAssignment_1_0"


    // $ANTLR start "rule__AcmeImportDeclaration__LitAssignment_1_1"
    // InternalAcmeParser.g:21784:1: rule__AcmeImportDeclaration__LitAssignment_1_1 : ( ruleStringLiteral ) ;
    public final void rule__AcmeImportDeclaration__LitAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21788:1: ( ( ruleStringLiteral ) )
            // InternalAcmeParser.g:21789:2: ( ruleStringLiteral )
            {
            // InternalAcmeParser.g:21789:2: ( ruleStringLiteral )
            // InternalAcmeParser.g:21790:3: ruleStringLiteral
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeImportDeclarationAccess().getLitStringLiteralParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStringLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeImportDeclarationAccess().getLitStringLiteralParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeImportDeclaration__LitAssignment_1_1"


    // $ANTLR start "rule__StringLiteral__LitAssignment"
    // InternalAcmeParser.g:21799:1: rule__StringLiteral__LitAssignment : ( RULE_STRING ) ;
    public final void rule__StringLiteral__LitAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21803:1: ( ( RULE_STRING ) )
            // InternalAcmeParser.g:21804:2: ( RULE_STRING )
            {
            // InternalAcmeParser.g:21804:2: ( RULE_STRING )
            // InternalAcmeParser.g:21805:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringLiteralAccess().getLitSTRINGTerminalRuleCall_0()); 
            }
            match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringLiteralAccess().getLitSTRINGTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringLiteral__LitAssignment"


    // $ANTLR start "rule__AcmeFamilyDeclaration__NameAssignment_1"
    // InternalAcmeParser.g:21814:1: rule__AcmeFamilyDeclaration__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__AcmeFamilyDeclaration__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21818:1: ( ( RULE_ID ) )
            // InternalAcmeParser.g:21819:2: ( RULE_ID )
            {
            // InternalAcmeParser.g:21819:2: ( RULE_ID )
            // InternalAcmeParser.g:21820:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyDeclaration__NameAssignment_1"


    // $ANTLR start "rule__AcmeFamilyDeclaration__RefsAssignment_2_1_0_0_1"
    // InternalAcmeParser.g:21829:1: rule__AcmeFamilyDeclaration__RefsAssignment_2_1_0_0_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmeFamilyDeclaration__RefsAssignment_2_1_0_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21833:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:21834:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:21834:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:21835:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyDeclarationAccess().getRefsAcmeFamilyDeclarationCrossReference_2_1_0_0_1_0()); 
            }
            // InternalAcmeParser.g:21836:3: ( RULE_ID )
            // InternalAcmeParser.g:21837:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyDeclarationAccess().getRefsAcmeFamilyDeclarationIDTerminalRuleCall_2_1_0_0_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyDeclarationAccess().getRefsAcmeFamilyDeclarationIDTerminalRuleCall_2_1_0_0_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyDeclarationAccess().getRefsAcmeFamilyDeclarationCrossReference_2_1_0_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyDeclaration__RefsAssignment_2_1_0_0_1"


    // $ANTLR start "rule__AcmeFamilyDeclaration__RefsAssignment_2_1_0_0_2_1"
    // InternalAcmeParser.g:21848:1: rule__AcmeFamilyDeclaration__RefsAssignment_2_1_0_0_2_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmeFamilyDeclaration__RefsAssignment_2_1_0_0_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21852:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:21853:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:21853:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:21854:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyDeclarationAccess().getRefsAcmeFamilyDeclarationCrossReference_2_1_0_0_2_1_0()); 
            }
            // InternalAcmeParser.g:21855:3: ( RULE_ID )
            // InternalAcmeParser.g:21856:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyDeclarationAccess().getRefsAcmeFamilyDeclarationIDTerminalRuleCall_2_1_0_0_2_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyDeclarationAccess().getRefsAcmeFamilyDeclarationIDTerminalRuleCall_2_1_0_0_2_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyDeclarationAccess().getRefsAcmeFamilyDeclarationCrossReference_2_1_0_0_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyDeclaration__RefsAssignment_2_1_0_0_2_1"


    // $ANTLR start "rule__AcmeFamilyDeclaration__BodyAssignment_2_1_1"
    // InternalAcmeParser.g:21867:1: rule__AcmeFamilyDeclaration__BodyAssignment_2_1_1 : ( ruleAcmeFamilyBody ) ;
    public final void rule__AcmeFamilyDeclaration__BodyAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21871:1: ( ( ruleAcmeFamilyBody ) )
            // InternalAcmeParser.g:21872:2: ( ruleAcmeFamilyBody )
            {
            // InternalAcmeParser.g:21872:2: ( ruleAcmeFamilyBody )
            // InternalAcmeParser.g:21873:3: ruleAcmeFamilyBody
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyDeclarationAccess().getBodyAcmeFamilyBodyParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeFamilyBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyDeclarationAccess().getBodyAcmeFamilyBodyParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyDeclaration__BodyAssignment_2_1_1"


    // $ANTLR start "rule__AcmeFamilyBody__PortTypesAssignment_2_0"
    // InternalAcmeParser.g:21882:1: rule__AcmeFamilyBody__PortTypesAssignment_2_0 : ( ruleAcmePortTypeDeclaration ) ;
    public final void rule__AcmeFamilyBody__PortTypesAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21886:1: ( ( ruleAcmePortTypeDeclaration ) )
            // InternalAcmeParser.g:21887:2: ( ruleAcmePortTypeDeclaration )
            {
            // InternalAcmeParser.g:21887:2: ( ruleAcmePortTypeDeclaration )
            // InternalAcmeParser.g:21888:3: ruleAcmePortTypeDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyBodyAccess().getPortTypesAcmePortTypeDeclarationParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePortTypeDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyBodyAccess().getPortTypesAcmePortTypeDeclarationParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyBody__PortTypesAssignment_2_0"


    // $ANTLR start "rule__AcmeFamilyBody__RoleTypesAssignment_2_1"
    // InternalAcmeParser.g:21897:1: rule__AcmeFamilyBody__RoleTypesAssignment_2_1 : ( ruleAcmeRoleTypeDeclaration ) ;
    public final void rule__AcmeFamilyBody__RoleTypesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21901:1: ( ( ruleAcmeRoleTypeDeclaration ) )
            // InternalAcmeParser.g:21902:2: ( ruleAcmeRoleTypeDeclaration )
            {
            // InternalAcmeParser.g:21902:2: ( ruleAcmeRoleTypeDeclaration )
            // InternalAcmeParser.g:21903:3: ruleAcmeRoleTypeDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyBodyAccess().getRoleTypesAcmeRoleTypeDeclarationParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeRoleTypeDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyBodyAccess().getRoleTypesAcmeRoleTypeDeclarationParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyBody__RoleTypesAssignment_2_1"


    // $ANTLR start "rule__AcmeFamilyBody__ComponentTypesAssignment_2_2"
    // InternalAcmeParser.g:21912:1: rule__AcmeFamilyBody__ComponentTypesAssignment_2_2 : ( ruleAcmeComponentTypeDeclaration ) ;
    public final void rule__AcmeFamilyBody__ComponentTypesAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21916:1: ( ( ruleAcmeComponentTypeDeclaration ) )
            // InternalAcmeParser.g:21917:2: ( ruleAcmeComponentTypeDeclaration )
            {
            // InternalAcmeParser.g:21917:2: ( ruleAcmeComponentTypeDeclaration )
            // InternalAcmeParser.g:21918:3: ruleAcmeComponentTypeDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyBodyAccess().getComponentTypesAcmeComponentTypeDeclarationParserRuleCall_2_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeComponentTypeDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyBodyAccess().getComponentTypesAcmeComponentTypeDeclarationParserRuleCall_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyBody__ComponentTypesAssignment_2_2"


    // $ANTLR start "rule__AcmeFamilyBody__ConnectorTypesAssignment_2_3"
    // InternalAcmeParser.g:21927:1: rule__AcmeFamilyBody__ConnectorTypesAssignment_2_3 : ( ruleAcmeConnectorTypeDeclaration ) ;
    public final void rule__AcmeFamilyBody__ConnectorTypesAssignment_2_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21931:1: ( ( ruleAcmeConnectorTypeDeclaration ) )
            // InternalAcmeParser.g:21932:2: ( ruleAcmeConnectorTypeDeclaration )
            {
            // InternalAcmeParser.g:21932:2: ( ruleAcmeConnectorTypeDeclaration )
            // InternalAcmeParser.g:21933:3: ruleAcmeConnectorTypeDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyBodyAccess().getConnectorTypesAcmeConnectorTypeDeclarationParserRuleCall_2_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeConnectorTypeDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyBodyAccess().getConnectorTypesAcmeConnectorTypeDeclarationParserRuleCall_2_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyBody__ConnectorTypesAssignment_2_3"


    // $ANTLR start "rule__AcmeFamilyBody__ElementTypesAssignment_2_4"
    // InternalAcmeParser.g:21942:1: rule__AcmeFamilyBody__ElementTypesAssignment_2_4 : ( ruleAcmeElementTypeDeclaration ) ;
    public final void rule__AcmeFamilyBody__ElementTypesAssignment_2_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21946:1: ( ( ruleAcmeElementTypeDeclaration ) )
            // InternalAcmeParser.g:21947:2: ( ruleAcmeElementTypeDeclaration )
            {
            // InternalAcmeParser.g:21947:2: ( ruleAcmeElementTypeDeclaration )
            // InternalAcmeParser.g:21948:3: ruleAcmeElementTypeDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyBodyAccess().getElementTypesAcmeElementTypeDeclarationParserRuleCall_2_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeElementTypeDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyBodyAccess().getElementTypesAcmeElementTypeDeclarationParserRuleCall_2_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyBody__ElementTypesAssignment_2_4"


    // $ANTLR start "rule__AcmeFamilyBody__PropertyTypesAssignment_2_5"
    // InternalAcmeParser.g:21957:1: rule__AcmeFamilyBody__PropertyTypesAssignment_2_5 : ( ruleAcmePropertyTypeDeclaration ) ;
    public final void rule__AcmeFamilyBody__PropertyTypesAssignment_2_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21961:1: ( ( ruleAcmePropertyTypeDeclaration ) )
            // InternalAcmeParser.g:21962:2: ( ruleAcmePropertyTypeDeclaration )
            {
            // InternalAcmeParser.g:21962:2: ( ruleAcmePropertyTypeDeclaration )
            // InternalAcmeParser.g:21963:3: ruleAcmePropertyTypeDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyBodyAccess().getPropertyTypesAcmePropertyTypeDeclarationParserRuleCall_2_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyTypeDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyBodyAccess().getPropertyTypesAcmePropertyTypeDeclarationParserRuleCall_2_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyBody__PropertyTypesAssignment_2_5"


    // $ANTLR start "rule__AcmeFamilyBody__GroupTypesAssignment_2_6"
    // InternalAcmeParser.g:21972:1: rule__AcmeFamilyBody__GroupTypesAssignment_2_6 : ( ruleAcmeGroupTypeDeclaration ) ;
    public final void rule__AcmeFamilyBody__GroupTypesAssignment_2_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21976:1: ( ( ruleAcmeGroupTypeDeclaration ) )
            // InternalAcmeParser.g:21977:2: ( ruleAcmeGroupTypeDeclaration )
            {
            // InternalAcmeParser.g:21977:2: ( ruleAcmeGroupTypeDeclaration )
            // InternalAcmeParser.g:21978:3: ruleAcmeGroupTypeDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyBodyAccess().getGroupTypesAcmeGroupTypeDeclarationParserRuleCall_2_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeGroupTypeDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyBodyAccess().getGroupTypesAcmeGroupTypeDeclarationParserRuleCall_2_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyBody__GroupTypesAssignment_2_6"


    // $ANTLR start "rule__AcmeFamilyBody__FunctionsAssignment_2_7"
    // InternalAcmeParser.g:21987:1: rule__AcmeFamilyBody__FunctionsAssignment_2_7 : ( ruleDesignAnalysisDeclaration ) ;
    public final void rule__AcmeFamilyBody__FunctionsAssignment_2_7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:21991:1: ( ( ruleDesignAnalysisDeclaration ) )
            // InternalAcmeParser.g:21992:2: ( ruleDesignAnalysisDeclaration )
            {
            // InternalAcmeParser.g:21992:2: ( ruleDesignAnalysisDeclaration )
            // InternalAcmeParser.g:21993:3: ruleDesignAnalysisDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyBodyAccess().getFunctionsDesignAnalysisDeclarationParserRuleCall_2_7_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDesignAnalysisDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyBodyAccess().getFunctionsDesignAnalysisDeclarationParserRuleCall_2_7_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyBody__FunctionsAssignment_2_7"


    // $ANTLR start "rule__AcmeFamilyBody__RulesAssignment_2_8"
    // InternalAcmeParser.g:22002:1: rule__AcmeFamilyBody__RulesAssignment_2_8 : ( ruleDesignRule ) ;
    public final void rule__AcmeFamilyBody__RulesAssignment_2_8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22006:1: ( ( ruleDesignRule ) )
            // InternalAcmeParser.g:22007:2: ( ruleDesignRule )
            {
            // InternalAcmeParser.g:22007:2: ( ruleDesignRule )
            // InternalAcmeParser.g:22008:3: ruleDesignRule
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyBodyAccess().getRulesDesignRuleParserRuleCall_2_8_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDesignRule();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyBodyAccess().getRulesDesignRuleParserRuleCall_2_8_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyBody__RulesAssignment_2_8"


    // $ANTLR start "rule__AcmeFamilyBody__ComponentsAssignment_2_9"
    // InternalAcmeParser.g:22017:1: rule__AcmeFamilyBody__ComponentsAssignment_2_9 : ( ruleAcmeComponentDeclaration ) ;
    public final void rule__AcmeFamilyBody__ComponentsAssignment_2_9() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22021:1: ( ( ruleAcmeComponentDeclaration ) )
            // InternalAcmeParser.g:22022:2: ( ruleAcmeComponentDeclaration )
            {
            // InternalAcmeParser.g:22022:2: ( ruleAcmeComponentDeclaration )
            // InternalAcmeParser.g:22023:3: ruleAcmeComponentDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyBodyAccess().getComponentsAcmeComponentDeclarationParserRuleCall_2_9_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeComponentDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyBodyAccess().getComponentsAcmeComponentDeclarationParserRuleCall_2_9_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyBody__ComponentsAssignment_2_9"


    // $ANTLR start "rule__AcmeFamilyBody__ConnectorsAssignment_2_10"
    // InternalAcmeParser.g:22032:1: rule__AcmeFamilyBody__ConnectorsAssignment_2_10 : ( ruleAcmeConnectorDeclaration ) ;
    public final void rule__AcmeFamilyBody__ConnectorsAssignment_2_10() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22036:1: ( ( ruleAcmeConnectorDeclaration ) )
            // InternalAcmeParser.g:22037:2: ( ruleAcmeConnectorDeclaration )
            {
            // InternalAcmeParser.g:22037:2: ( ruleAcmeConnectorDeclaration )
            // InternalAcmeParser.g:22038:3: ruleAcmeConnectorDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyBodyAccess().getConnectorsAcmeConnectorDeclarationParserRuleCall_2_10_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeConnectorDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyBodyAccess().getConnectorsAcmeConnectorDeclarationParserRuleCall_2_10_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyBody__ConnectorsAssignment_2_10"


    // $ANTLR start "rule__AcmeFamilyBody__PropertiesAssignment_2_11"
    // InternalAcmeParser.g:22047:1: rule__AcmeFamilyBody__PropertiesAssignment_2_11 : ( ruleAcmePropertyDeclaration ) ;
    public final void rule__AcmeFamilyBody__PropertiesAssignment_2_11() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22051:1: ( ( ruleAcmePropertyDeclaration ) )
            // InternalAcmeParser.g:22052:2: ( ruleAcmePropertyDeclaration )
            {
            // InternalAcmeParser.g:22052:2: ( ruleAcmePropertyDeclaration )
            // InternalAcmeParser.g:22053:3: ruleAcmePropertyDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyBodyAccess().getPropertiesAcmePropertyDeclarationParserRuleCall_2_11_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyBodyAccess().getPropertiesAcmePropertyDeclarationParserRuleCall_2_11_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyBody__PropertiesAssignment_2_11"


    // $ANTLR start "rule__AcmeFamilyBody__GroupsAssignment_2_12"
    // InternalAcmeParser.g:22062:1: rule__AcmeFamilyBody__GroupsAssignment_2_12 : ( ruleAcmeGroupDeclaration ) ;
    public final void rule__AcmeFamilyBody__GroupsAssignment_2_12() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22066:1: ( ( ruleAcmeGroupDeclaration ) )
            // InternalAcmeParser.g:22067:2: ( ruleAcmeGroupDeclaration )
            {
            // InternalAcmeParser.g:22067:2: ( ruleAcmeGroupDeclaration )
            // InternalAcmeParser.g:22068:3: ruleAcmeGroupDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyBodyAccess().getGroupsAcmeGroupDeclarationParserRuleCall_2_12_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeGroupDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyBodyAccess().getGroupsAcmeGroupDeclarationParserRuleCall_2_12_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyBody__GroupsAssignment_2_12"


    // $ANTLR start "rule__AcmeFamilyBody__AttachmentsAssignment_2_13"
    // InternalAcmeParser.g:22077:1: rule__AcmeFamilyBody__AttachmentsAssignment_2_13 : ( ruleAcmeAttachmentDeclaration ) ;
    public final void rule__AcmeFamilyBody__AttachmentsAssignment_2_13() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22081:1: ( ( ruleAcmeAttachmentDeclaration ) )
            // InternalAcmeParser.g:22082:2: ( ruleAcmeAttachmentDeclaration )
            {
            // InternalAcmeParser.g:22082:2: ( ruleAcmeAttachmentDeclaration )
            // InternalAcmeParser.g:22083:3: ruleAcmeAttachmentDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeFamilyBodyAccess().getAttachmentsAcmeAttachmentDeclarationParserRuleCall_2_13_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeAttachmentDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeFamilyBodyAccess().getAttachmentsAcmeAttachmentDeclarationParserRuleCall_2_13_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeFamilyBody__AttachmentsAssignment_2_13"


    // $ANTLR start "rule__AcmeSystemDeclaration__NameAssignment_1"
    // InternalAcmeParser.g:22092:1: rule__AcmeSystemDeclaration__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__AcmeSystemDeclaration__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22096:1: ( ( RULE_ID ) )
            // InternalAcmeParser.g:22097:2: ( RULE_ID )
            {
            // InternalAcmeParser.g:22097:2: ( RULE_ID )
            // InternalAcmeParser.g:22098:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__NameAssignment_1"


    // $ANTLR start "rule__AcmeSystemDeclaration__DeclaredAssignment_2_1"
    // InternalAcmeParser.g:22107:1: rule__AcmeSystemDeclaration__DeclaredAssignment_2_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmeSystemDeclaration__DeclaredAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22111:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:22112:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:22112:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:22113:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemDeclarationAccess().getDeclaredAcmeFamilyDeclarationCrossReference_2_1_0()); 
            }
            // InternalAcmeParser.g:22114:3: ( RULE_ID )
            // InternalAcmeParser.g:22115:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemDeclarationAccess().getDeclaredAcmeFamilyDeclarationIDTerminalRuleCall_2_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemDeclarationAccess().getDeclaredAcmeFamilyDeclarationIDTerminalRuleCall_2_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemDeclarationAccess().getDeclaredAcmeFamilyDeclarationCrossReference_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__DeclaredAssignment_2_1"


    // $ANTLR start "rule__AcmeSystemDeclaration__DeclaredAssignment_2_2_1"
    // InternalAcmeParser.g:22126:1: rule__AcmeSystemDeclaration__DeclaredAssignment_2_2_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmeSystemDeclaration__DeclaredAssignment_2_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22130:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:22131:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:22131:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:22132:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemDeclarationAccess().getDeclaredAcmeFamilyDeclarationCrossReference_2_2_1_0()); 
            }
            // InternalAcmeParser.g:22133:3: ( RULE_ID )
            // InternalAcmeParser.g:22134:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemDeclarationAccess().getDeclaredAcmeFamilyDeclarationIDTerminalRuleCall_2_2_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemDeclarationAccess().getDeclaredAcmeFamilyDeclarationIDTerminalRuleCall_2_2_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemDeclarationAccess().getDeclaredAcmeFamilyDeclarationCrossReference_2_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__DeclaredAssignment_2_2_1"


    // $ANTLR start "rule__AcmeSystemDeclaration__BodyAssignment_3_1_1_0_0"
    // InternalAcmeParser.g:22145:1: rule__AcmeSystemDeclaration__BodyAssignment_3_1_1_0_0 : ( ruleAcmeSystemBody ) ;
    public final void rule__AcmeSystemDeclaration__BodyAssignment_3_1_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22149:1: ( ( ruleAcmeSystemBody ) )
            // InternalAcmeParser.g:22150:2: ( ruleAcmeSystemBody )
            {
            // InternalAcmeParser.g:22150:2: ( ruleAcmeSystemBody )
            // InternalAcmeParser.g:22151:3: ruleAcmeSystemBody
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemDeclarationAccess().getBodyAcmeSystemBodyParserRuleCall_3_1_1_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeSystemBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemDeclarationAccess().getBodyAcmeSystemBodyParserRuleCall_3_1_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__BodyAssignment_3_1_1_0_0"


    // $ANTLR start "rule__AcmeSystemDeclaration__InstantiatedAssignment_3_1_1_1_1"
    // InternalAcmeParser.g:22160:1: rule__AcmeSystemDeclaration__InstantiatedAssignment_3_1_1_1_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmeSystemDeclaration__InstantiatedAssignment_3_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22164:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:22165:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:22165:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:22166:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemDeclarationAccess().getInstantiatedAcmeFamilyDeclarationCrossReference_3_1_1_1_1_0()); 
            }
            // InternalAcmeParser.g:22167:3: ( RULE_ID )
            // InternalAcmeParser.g:22168:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemDeclarationAccess().getInstantiatedAcmeFamilyDeclarationIDTerminalRuleCall_3_1_1_1_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemDeclarationAccess().getInstantiatedAcmeFamilyDeclarationIDTerminalRuleCall_3_1_1_1_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemDeclarationAccess().getInstantiatedAcmeFamilyDeclarationCrossReference_3_1_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__InstantiatedAssignment_3_1_1_1_1"


    // $ANTLR start "rule__AcmeSystemDeclaration__InstantiatedAssignment_3_1_1_1_2_1"
    // InternalAcmeParser.g:22179:1: rule__AcmeSystemDeclaration__InstantiatedAssignment_3_1_1_1_2_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmeSystemDeclaration__InstantiatedAssignment_3_1_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22183:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:22184:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:22184:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:22185:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemDeclarationAccess().getInstantiatedAcmeFamilyDeclarationCrossReference_3_1_1_1_2_1_0()); 
            }
            // InternalAcmeParser.g:22186:3: ( RULE_ID )
            // InternalAcmeParser.g:22187:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemDeclarationAccess().getInstantiatedAcmeFamilyDeclarationIDTerminalRuleCall_3_1_1_1_2_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemDeclarationAccess().getInstantiatedAcmeFamilyDeclarationIDTerminalRuleCall_3_1_1_1_2_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemDeclarationAccess().getInstantiatedAcmeFamilyDeclarationCrossReference_3_1_1_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__InstantiatedAssignment_3_1_1_1_2_1"


    // $ANTLR start "rule__AcmeSystemDeclaration__BodyAssignment_3_1_1_1_3_1_2"
    // InternalAcmeParser.g:22198:1: rule__AcmeSystemDeclaration__BodyAssignment_3_1_1_1_3_1_2 : ( ruleAcmeSystemBody ) ;
    public final void rule__AcmeSystemDeclaration__BodyAssignment_3_1_1_1_3_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22202:1: ( ( ruleAcmeSystemBody ) )
            // InternalAcmeParser.g:22203:2: ( ruleAcmeSystemBody )
            {
            // InternalAcmeParser.g:22203:2: ( ruleAcmeSystemBody )
            // InternalAcmeParser.g:22204:3: ruleAcmeSystemBody
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemDeclarationAccess().getBodyAcmeSystemBodyParserRuleCall_3_1_1_1_3_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeSystemBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemDeclarationAccess().getBodyAcmeSystemBodyParserRuleCall_3_1_1_1_3_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemDeclaration__BodyAssignment_3_1_1_1_3_1_2"


    // $ANTLR start "rule__AcmeSystemBody__PropertiesAssignment_2_0"
    // InternalAcmeParser.g:22213:1: rule__AcmeSystemBody__PropertiesAssignment_2_0 : ( ruleAcmePropertyDeclaration ) ;
    public final void rule__AcmeSystemBody__PropertiesAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22217:1: ( ( ruleAcmePropertyDeclaration ) )
            // InternalAcmeParser.g:22218:2: ( ruleAcmePropertyDeclaration )
            {
            // InternalAcmeParser.g:22218:2: ( ruleAcmePropertyDeclaration )
            // InternalAcmeParser.g:22219:3: ruleAcmePropertyDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemBodyAccess().getPropertiesAcmePropertyDeclarationParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemBodyAccess().getPropertiesAcmePropertyDeclarationParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemBody__PropertiesAssignment_2_0"


    // $ANTLR start "rule__AcmeSystemBody__ComponentsAssignment_2_1"
    // InternalAcmeParser.g:22228:1: rule__AcmeSystemBody__ComponentsAssignment_2_1 : ( ruleAcmeComponentDeclaration ) ;
    public final void rule__AcmeSystemBody__ComponentsAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22232:1: ( ( ruleAcmeComponentDeclaration ) )
            // InternalAcmeParser.g:22233:2: ( ruleAcmeComponentDeclaration )
            {
            // InternalAcmeParser.g:22233:2: ( ruleAcmeComponentDeclaration )
            // InternalAcmeParser.g:22234:3: ruleAcmeComponentDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemBodyAccess().getComponentsAcmeComponentDeclarationParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeComponentDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemBodyAccess().getComponentsAcmeComponentDeclarationParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemBody__ComponentsAssignment_2_1"


    // $ANTLR start "rule__AcmeSystemBody__ConnectorsAssignment_2_2"
    // InternalAcmeParser.g:22243:1: rule__AcmeSystemBody__ConnectorsAssignment_2_2 : ( ruleAcmeConnectorDeclaration ) ;
    public final void rule__AcmeSystemBody__ConnectorsAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22247:1: ( ( ruleAcmeConnectorDeclaration ) )
            // InternalAcmeParser.g:22248:2: ( ruleAcmeConnectorDeclaration )
            {
            // InternalAcmeParser.g:22248:2: ( ruleAcmeConnectorDeclaration )
            // InternalAcmeParser.g:22249:3: ruleAcmeConnectorDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemBodyAccess().getConnectorsAcmeConnectorDeclarationParserRuleCall_2_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeConnectorDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemBodyAccess().getConnectorsAcmeConnectorDeclarationParserRuleCall_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemBody__ConnectorsAssignment_2_2"


    // $ANTLR start "rule__AcmeSystemBody__AttachmentsAssignment_2_3"
    // InternalAcmeParser.g:22258:1: rule__AcmeSystemBody__AttachmentsAssignment_2_3 : ( ruleAcmeAttachmentDeclaration ) ;
    public final void rule__AcmeSystemBody__AttachmentsAssignment_2_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22262:1: ( ( ruleAcmeAttachmentDeclaration ) )
            // InternalAcmeParser.g:22263:2: ( ruleAcmeAttachmentDeclaration )
            {
            // InternalAcmeParser.g:22263:2: ( ruleAcmeAttachmentDeclaration )
            // InternalAcmeParser.g:22264:3: ruleAcmeAttachmentDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemBodyAccess().getAttachmentsAcmeAttachmentDeclarationParserRuleCall_2_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeAttachmentDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemBodyAccess().getAttachmentsAcmeAttachmentDeclarationParserRuleCall_2_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemBody__AttachmentsAssignment_2_3"


    // $ANTLR start "rule__AcmeSystemBody__GroupsAssignment_2_4"
    // InternalAcmeParser.g:22273:1: rule__AcmeSystemBody__GroupsAssignment_2_4 : ( ruleAcmeGroupDeclaration ) ;
    public final void rule__AcmeSystemBody__GroupsAssignment_2_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22277:1: ( ( ruleAcmeGroupDeclaration ) )
            // InternalAcmeParser.g:22278:2: ( ruleAcmeGroupDeclaration )
            {
            // InternalAcmeParser.g:22278:2: ( ruleAcmeGroupDeclaration )
            // InternalAcmeParser.g:22279:3: ruleAcmeGroupDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemBodyAccess().getGroupsAcmeGroupDeclarationParserRuleCall_2_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeGroupDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemBodyAccess().getGroupsAcmeGroupDeclarationParserRuleCall_2_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemBody__GroupsAssignment_2_4"


    // $ANTLR start "rule__AcmeSystemBody__RulesAssignment_2_5"
    // InternalAcmeParser.g:22288:1: rule__AcmeSystemBody__RulesAssignment_2_5 : ( ruleDesignRule ) ;
    public final void rule__AcmeSystemBody__RulesAssignment_2_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22292:1: ( ( ruleDesignRule ) )
            // InternalAcmeParser.g:22293:2: ( ruleDesignRule )
            {
            // InternalAcmeParser.g:22293:2: ( ruleDesignRule )
            // InternalAcmeParser.g:22294:3: ruleDesignRule
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeSystemBodyAccess().getRulesDesignRuleParserRuleCall_2_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDesignRule();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeSystemBodyAccess().getRulesDesignRuleParserRuleCall_2_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeSystemBody__RulesAssignment_2_5"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__VisibilityAssignment_0"
    // InternalAcmeParser.g:22303:1: rule__AcmeElementTypeDeclaration__VisibilityAssignment_0 : ( ruleVisibility ) ;
    public final void rule__AcmeElementTypeDeclaration__VisibilityAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22307:1: ( ( ruleVisibility ) )
            // InternalAcmeParser.g:22308:2: ( ruleVisibility )
            {
            // InternalAcmeParser.g:22308:2: ( ruleVisibility )
            // InternalAcmeParser.g:22309:3: ruleVisibility
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeElementTypeDeclarationAccess().getVisibilityVisibilityEnumRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleVisibility();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeElementTypeDeclarationAccess().getVisibilityVisibilityEnumRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__VisibilityAssignment_0"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__ExtensibilityAssignment_1"
    // InternalAcmeParser.g:22318:1: rule__AcmeElementTypeDeclaration__ExtensibilityAssignment_1 : ( ruleExtensability ) ;
    public final void rule__AcmeElementTypeDeclaration__ExtensibilityAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22322:1: ( ( ruleExtensability ) )
            // InternalAcmeParser.g:22323:2: ( ruleExtensability )
            {
            // InternalAcmeParser.g:22323:2: ( ruleExtensability )
            // InternalAcmeParser.g:22324:3: ruleExtensability
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeElementTypeDeclarationAccess().getExtensibilityExtensabilityEnumRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExtensability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeElementTypeDeclarationAccess().getExtensibilityExtensabilityEnumRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__ExtensibilityAssignment_1"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__NameAssignment_4"
    // InternalAcmeParser.g:22333:1: rule__AcmeElementTypeDeclaration__NameAssignment_4 : ( RULE_ID ) ;
    public final void rule__AcmeElementTypeDeclaration__NameAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22337:1: ( ( RULE_ID ) )
            // InternalAcmeParser.g:22338:2: ( RULE_ID )
            {
            // InternalAcmeParser.g:22338:2: ( RULE_ID )
            // InternalAcmeParser.g:22339:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeElementTypeDeclarationAccess().getNameIDTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeElementTypeDeclarationAccess().getNameIDTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__NameAssignment_4"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__BodyAssignment_5_1_0_1"
    // InternalAcmeParser.g:22348:1: rule__AcmeElementTypeDeclaration__BodyAssignment_5_1_0_1 : ( ruleAcmeGenericElementBody ) ;
    public final void rule__AcmeElementTypeDeclaration__BodyAssignment_5_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22352:1: ( ( ruleAcmeGenericElementBody ) )
            // InternalAcmeParser.g:22353:2: ( ruleAcmeGenericElementBody )
            {
            // InternalAcmeParser.g:22353:2: ( ruleAcmeGenericElementBody )
            // InternalAcmeParser.g:22354:3: ruleAcmeGenericElementBody
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeElementTypeDeclarationAccess().getBodyAcmeGenericElementBodyParserRuleCall_5_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeGenericElementBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeElementTypeDeclarationAccess().getBodyAcmeGenericElementBodyParserRuleCall_5_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__BodyAssignment_5_1_0_1"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__RefsAssignment_5_1_1_1"
    // InternalAcmeParser.g:22363:1: rule__AcmeElementTypeDeclaration__RefsAssignment_5_1_1_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmeElementTypeDeclaration__RefsAssignment_5_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22367:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:22368:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:22368:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:22369:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeElementTypeDeclarationAccess().getRefsAcmeElementTypeDeclarationCrossReference_5_1_1_1_0()); 
            }
            // InternalAcmeParser.g:22370:3: ( RULE_ID )
            // InternalAcmeParser.g:22371:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeElementTypeDeclarationAccess().getRefsAcmeElementTypeDeclarationIDTerminalRuleCall_5_1_1_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeElementTypeDeclarationAccess().getRefsAcmeElementTypeDeclarationIDTerminalRuleCall_5_1_1_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeElementTypeDeclarationAccess().getRefsAcmeElementTypeDeclarationCrossReference_5_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__RefsAssignment_5_1_1_1"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__RefsAssignment_5_1_1_2_1"
    // InternalAcmeParser.g:22382:1: rule__AcmeElementTypeDeclaration__RefsAssignment_5_1_1_2_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmeElementTypeDeclaration__RefsAssignment_5_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22386:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:22387:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:22387:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:22388:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeElementTypeDeclarationAccess().getRefsAcmeElementTypeDeclarationCrossReference_5_1_1_2_1_0()); 
            }
            // InternalAcmeParser.g:22389:3: ( RULE_ID )
            // InternalAcmeParser.g:22390:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeElementTypeDeclarationAccess().getRefsAcmeElementTypeDeclarationIDTerminalRuleCall_5_1_1_2_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeElementTypeDeclarationAccess().getRefsAcmeElementTypeDeclarationIDTerminalRuleCall_5_1_1_2_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeElementTypeDeclarationAccess().getRefsAcmeElementTypeDeclarationCrossReference_5_1_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__RefsAssignment_5_1_1_2_1"


    // $ANTLR start "rule__AcmeElementTypeDeclaration__BodyAssignment_5_1_1_3_1_1"
    // InternalAcmeParser.g:22401:1: rule__AcmeElementTypeDeclaration__BodyAssignment_5_1_1_3_1_1 : ( ruleAcmeGenericElementBody ) ;
    public final void rule__AcmeElementTypeDeclaration__BodyAssignment_5_1_1_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22405:1: ( ( ruleAcmeGenericElementBody ) )
            // InternalAcmeParser.g:22406:2: ( ruleAcmeGenericElementBody )
            {
            // InternalAcmeParser.g:22406:2: ( ruleAcmeGenericElementBody )
            // InternalAcmeParser.g:22407:3: ruleAcmeGenericElementBody
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeElementTypeDeclarationAccess().getBodyAcmeGenericElementBodyParserRuleCall_5_1_1_3_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeGenericElementBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeElementTypeDeclarationAccess().getBodyAcmeGenericElementBodyParserRuleCall_5_1_1_3_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeElementTypeDeclaration__BodyAssignment_5_1_1_3_1_1"


    // $ANTLR start "rule__AcmeGenericElementBody__PropertiesAssignment_2_0"
    // InternalAcmeParser.g:22416:1: rule__AcmeGenericElementBody__PropertiesAssignment_2_0 : ( ruleAcmePropertyDeclaration ) ;
    public final void rule__AcmeGenericElementBody__PropertiesAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22420:1: ( ( ruleAcmePropertyDeclaration ) )
            // InternalAcmeParser.g:22421:2: ( ruleAcmePropertyDeclaration )
            {
            // InternalAcmeParser.g:22421:2: ( ruleAcmePropertyDeclaration )
            // InternalAcmeParser.g:22422:3: ruleAcmePropertyDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGenericElementBodyAccess().getPropertiesAcmePropertyDeclarationParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGenericElementBodyAccess().getPropertiesAcmePropertyDeclarationParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGenericElementBody__PropertiesAssignment_2_0"


    // $ANTLR start "rule__AcmeGenericElementBody__RulesAssignment_2_1"
    // InternalAcmeParser.g:22431:1: rule__AcmeGenericElementBody__RulesAssignment_2_1 : ( ruleDesignRule ) ;
    public final void rule__AcmeGenericElementBody__RulesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22435:1: ( ( ruleDesignRule ) )
            // InternalAcmeParser.g:22436:2: ( ruleDesignRule )
            {
            // InternalAcmeParser.g:22436:2: ( ruleDesignRule )
            // InternalAcmeParser.g:22437:3: ruleDesignRule
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGenericElementBodyAccess().getRulesDesignRuleParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDesignRule();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGenericElementBodyAccess().getRulesDesignRuleParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGenericElementBody__RulesAssignment_2_1"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__VisibilityAssignment_0"
    // InternalAcmeParser.g:22446:1: rule__AcmeGroupTypeDeclaration__VisibilityAssignment_0 : ( ruleVisibility ) ;
    public final void rule__AcmeGroupTypeDeclaration__VisibilityAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22450:1: ( ( ruleVisibility ) )
            // InternalAcmeParser.g:22451:2: ( ruleVisibility )
            {
            // InternalAcmeParser.g:22451:2: ( ruleVisibility )
            // InternalAcmeParser.g:22452:3: ruleVisibility
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupTypeDeclarationAccess().getVisibilityVisibilityEnumRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleVisibility();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupTypeDeclarationAccess().getVisibilityVisibilityEnumRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__VisibilityAssignment_0"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__ExtensibilityAssignment_1"
    // InternalAcmeParser.g:22461:1: rule__AcmeGroupTypeDeclaration__ExtensibilityAssignment_1 : ( ruleExtensability ) ;
    public final void rule__AcmeGroupTypeDeclaration__ExtensibilityAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22465:1: ( ( ruleExtensability ) )
            // InternalAcmeParser.g:22466:2: ( ruleExtensability )
            {
            // InternalAcmeParser.g:22466:2: ( ruleExtensability )
            // InternalAcmeParser.g:22467:3: ruleExtensability
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupTypeDeclarationAccess().getExtensibilityExtensabilityEnumRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExtensability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupTypeDeclarationAccess().getExtensibilityExtensabilityEnumRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__ExtensibilityAssignment_1"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__NameAssignment_4"
    // InternalAcmeParser.g:22476:1: rule__AcmeGroupTypeDeclaration__NameAssignment_4 : ( RULE_ID ) ;
    public final void rule__AcmeGroupTypeDeclaration__NameAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22480:1: ( ( RULE_ID ) )
            // InternalAcmeParser.g:22481:2: ( RULE_ID )
            {
            // InternalAcmeParser.g:22481:2: ( RULE_ID )
            // InternalAcmeParser.g:22482:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupTypeDeclarationAccess().getNameIDTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupTypeDeclarationAccess().getNameIDTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__NameAssignment_4"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__BodyAssignment_5_1_0_1"
    // InternalAcmeParser.g:22491:1: rule__AcmeGroupTypeDeclaration__BodyAssignment_5_1_0_1 : ( ruleAcmeGroupBody ) ;
    public final void rule__AcmeGroupTypeDeclaration__BodyAssignment_5_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22495:1: ( ( ruleAcmeGroupBody ) )
            // InternalAcmeParser.g:22496:2: ( ruleAcmeGroupBody )
            {
            // InternalAcmeParser.g:22496:2: ( ruleAcmeGroupBody )
            // InternalAcmeParser.g:22497:3: ruleAcmeGroupBody
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupTypeDeclarationAccess().getBodyAcmeGroupBodyParserRuleCall_5_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeGroupBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupTypeDeclarationAccess().getBodyAcmeGroupBodyParserRuleCall_5_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__BodyAssignment_5_1_0_1"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__RefsAssignment_5_1_1_1"
    // InternalAcmeParser.g:22506:1: rule__AcmeGroupTypeDeclaration__RefsAssignment_5_1_1_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmeGroupTypeDeclaration__RefsAssignment_5_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22510:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:22511:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:22511:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:22512:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupTypeDeclarationAccess().getRefsAcmeGroupTypeDeclarationCrossReference_5_1_1_1_0()); 
            }
            // InternalAcmeParser.g:22513:3: ( RULE_ID )
            // InternalAcmeParser.g:22514:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupTypeDeclarationAccess().getRefsAcmeGroupTypeDeclarationIDTerminalRuleCall_5_1_1_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupTypeDeclarationAccess().getRefsAcmeGroupTypeDeclarationIDTerminalRuleCall_5_1_1_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupTypeDeclarationAccess().getRefsAcmeGroupTypeDeclarationCrossReference_5_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__RefsAssignment_5_1_1_1"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__RefsAssignment_5_1_1_2_1"
    // InternalAcmeParser.g:22525:1: rule__AcmeGroupTypeDeclaration__RefsAssignment_5_1_1_2_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmeGroupTypeDeclaration__RefsAssignment_5_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22529:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:22530:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:22530:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:22531:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupTypeDeclarationAccess().getRefsAcmeGroupTypeDeclarationCrossReference_5_1_1_2_1_0()); 
            }
            // InternalAcmeParser.g:22532:3: ( RULE_ID )
            // InternalAcmeParser.g:22533:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupTypeDeclarationAccess().getRefsAcmeGroupTypeDeclarationIDTerminalRuleCall_5_1_1_2_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupTypeDeclarationAccess().getRefsAcmeGroupTypeDeclarationIDTerminalRuleCall_5_1_1_2_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupTypeDeclarationAccess().getRefsAcmeGroupTypeDeclarationCrossReference_5_1_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__RefsAssignment_5_1_1_2_1"


    // $ANTLR start "rule__AcmeGroupTypeDeclaration__BodyAssignment_5_1_1_3_1_1"
    // InternalAcmeParser.g:22544:1: rule__AcmeGroupTypeDeclaration__BodyAssignment_5_1_1_3_1_1 : ( ruleAcmeGroupBody ) ;
    public final void rule__AcmeGroupTypeDeclaration__BodyAssignment_5_1_1_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22548:1: ( ( ruleAcmeGroupBody ) )
            // InternalAcmeParser.g:22549:2: ( ruleAcmeGroupBody )
            {
            // InternalAcmeParser.g:22549:2: ( ruleAcmeGroupBody )
            // InternalAcmeParser.g:22550:3: ruleAcmeGroupBody
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupTypeDeclarationAccess().getBodyAcmeGroupBodyParserRuleCall_5_1_1_3_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeGroupBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupTypeDeclarationAccess().getBodyAcmeGroupBodyParserRuleCall_5_1_1_3_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupTypeDeclaration__BodyAssignment_5_1_1_3_1_1"


    // $ANTLR start "rule__AcmeGroupDeclaration__NameAssignment_1"
    // InternalAcmeParser.g:22559:1: rule__AcmeGroupDeclaration__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__AcmeGroupDeclaration__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22563:1: ( ( RULE_ID ) )
            // InternalAcmeParser.g:22564:2: ( RULE_ID )
            {
            // InternalAcmeParser.g:22564:2: ( RULE_ID )
            // InternalAcmeParser.g:22565:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__NameAssignment_1"


    // $ANTLR start "rule__AcmeGroupDeclaration__DeclaredAssignment_2_1"
    // InternalAcmeParser.g:22574:1: rule__AcmeGroupDeclaration__DeclaredAssignment_2_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmeGroupDeclaration__DeclaredAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22578:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:22579:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:22579:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:22580:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupDeclarationAccess().getDeclaredGroupOrGenericRefCrossReference_2_1_0()); 
            }
            // InternalAcmeParser.g:22581:3: ( RULE_ID )
            // InternalAcmeParser.g:22582:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupDeclarationAccess().getDeclaredGroupOrGenericRefIDTerminalRuleCall_2_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupDeclarationAccess().getDeclaredGroupOrGenericRefIDTerminalRuleCall_2_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupDeclarationAccess().getDeclaredGroupOrGenericRefCrossReference_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__DeclaredAssignment_2_1"


    // $ANTLR start "rule__AcmeGroupDeclaration__DeclaredAssignment_2_2_1"
    // InternalAcmeParser.g:22593:1: rule__AcmeGroupDeclaration__DeclaredAssignment_2_2_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmeGroupDeclaration__DeclaredAssignment_2_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22597:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:22598:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:22598:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:22599:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupDeclarationAccess().getDeclaredGroupOrGenericRefCrossReference_2_2_1_0()); 
            }
            // InternalAcmeParser.g:22600:3: ( RULE_ID )
            // InternalAcmeParser.g:22601:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupDeclarationAccess().getDeclaredGroupOrGenericRefIDTerminalRuleCall_2_2_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupDeclarationAccess().getDeclaredGroupOrGenericRefIDTerminalRuleCall_2_2_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupDeclarationAccess().getDeclaredGroupOrGenericRefCrossReference_2_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__DeclaredAssignment_2_2_1"


    // $ANTLR start "rule__AcmeGroupDeclaration__BodyAssignment_3_1_1_0_0"
    // InternalAcmeParser.g:22612:1: rule__AcmeGroupDeclaration__BodyAssignment_3_1_1_0_0 : ( ruleAcmeGroupBody ) ;
    public final void rule__AcmeGroupDeclaration__BodyAssignment_3_1_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22616:1: ( ( ruleAcmeGroupBody ) )
            // InternalAcmeParser.g:22617:2: ( ruleAcmeGroupBody )
            {
            // InternalAcmeParser.g:22617:2: ( ruleAcmeGroupBody )
            // InternalAcmeParser.g:22618:3: ruleAcmeGroupBody
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupDeclarationAccess().getBodyAcmeGroupBodyParserRuleCall_3_1_1_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeGroupBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupDeclarationAccess().getBodyAcmeGroupBodyParserRuleCall_3_1_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__BodyAssignment_3_1_1_0_0"


    // $ANTLR start "rule__AcmeGroupDeclaration__InstantiatedAssignment_3_1_1_1_1"
    // InternalAcmeParser.g:22627:1: rule__AcmeGroupDeclaration__InstantiatedAssignment_3_1_1_1_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmeGroupDeclaration__InstantiatedAssignment_3_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22631:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:22632:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:22632:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:22633:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupDeclarationAccess().getInstantiatedGroupOrGenericRefCrossReference_3_1_1_1_1_0()); 
            }
            // InternalAcmeParser.g:22634:3: ( RULE_ID )
            // InternalAcmeParser.g:22635:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupDeclarationAccess().getInstantiatedGroupOrGenericRefIDTerminalRuleCall_3_1_1_1_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupDeclarationAccess().getInstantiatedGroupOrGenericRefIDTerminalRuleCall_3_1_1_1_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupDeclarationAccess().getInstantiatedGroupOrGenericRefCrossReference_3_1_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__InstantiatedAssignment_3_1_1_1_1"


    // $ANTLR start "rule__AcmeGroupDeclaration__InstantiatedAssignment_3_1_1_1_2_1"
    // InternalAcmeParser.g:22646:1: rule__AcmeGroupDeclaration__InstantiatedAssignment_3_1_1_1_2_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmeGroupDeclaration__InstantiatedAssignment_3_1_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22650:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:22651:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:22651:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:22652:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupDeclarationAccess().getInstantiatedGroupOrGenericRefCrossReference_3_1_1_1_2_1_0()); 
            }
            // InternalAcmeParser.g:22653:3: ( RULE_ID )
            // InternalAcmeParser.g:22654:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupDeclarationAccess().getInstantiatedGroupOrGenericRefIDTerminalRuleCall_3_1_1_1_2_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupDeclarationAccess().getInstantiatedGroupOrGenericRefIDTerminalRuleCall_3_1_1_1_2_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupDeclarationAccess().getInstantiatedGroupOrGenericRefCrossReference_3_1_1_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__InstantiatedAssignment_3_1_1_1_2_1"


    // $ANTLR start "rule__AcmeGroupDeclaration__BodyAssignment_3_1_1_1_3_1_2"
    // InternalAcmeParser.g:22665:1: rule__AcmeGroupDeclaration__BodyAssignment_3_1_1_1_3_1_2 : ( ruleAcmeGroupBody ) ;
    public final void rule__AcmeGroupDeclaration__BodyAssignment_3_1_1_1_3_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22669:1: ( ( ruleAcmeGroupBody ) )
            // InternalAcmeParser.g:22670:2: ( ruleAcmeGroupBody )
            {
            // InternalAcmeParser.g:22670:2: ( ruleAcmeGroupBody )
            // InternalAcmeParser.g:22671:3: ruleAcmeGroupBody
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupDeclarationAccess().getBodyAcmeGroupBodyParserRuleCall_3_1_1_1_3_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeGroupBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupDeclarationAccess().getBodyAcmeGroupBodyParserRuleCall_3_1_1_1_3_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupDeclaration__BodyAssignment_3_1_1_1_3_1_2"


    // $ANTLR start "rule__AcmeGroupBody__MembersAssignment_2_0"
    // InternalAcmeParser.g:22680:1: rule__AcmeGroupBody__MembersAssignment_2_0 : ( ruleMembersBlock ) ;
    public final void rule__AcmeGroupBody__MembersAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22684:1: ( ( ruleMembersBlock ) )
            // InternalAcmeParser.g:22685:2: ( ruleMembersBlock )
            {
            // InternalAcmeParser.g:22685:2: ( ruleMembersBlock )
            // InternalAcmeParser.g:22686:3: ruleMembersBlock
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupBodyAccess().getMembersMembersBlockParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMembersBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupBodyAccess().getMembersMembersBlockParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupBody__MembersAssignment_2_0"


    // $ANTLR start "rule__AcmeGroupBody__PropertiesAssignment_2_1"
    // InternalAcmeParser.g:22695:1: rule__AcmeGroupBody__PropertiesAssignment_2_1 : ( ruleAcmePropertyDeclaration ) ;
    public final void rule__AcmeGroupBody__PropertiesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22699:1: ( ( ruleAcmePropertyDeclaration ) )
            // InternalAcmeParser.g:22700:2: ( ruleAcmePropertyDeclaration )
            {
            // InternalAcmeParser.g:22700:2: ( ruleAcmePropertyDeclaration )
            // InternalAcmeParser.g:22701:3: ruleAcmePropertyDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupBodyAccess().getPropertiesAcmePropertyDeclarationParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupBodyAccess().getPropertiesAcmePropertyDeclarationParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupBody__PropertiesAssignment_2_1"


    // $ANTLR start "rule__AcmeGroupBody__RulesAssignment_2_2"
    // InternalAcmeParser.g:22710:1: rule__AcmeGroupBody__RulesAssignment_2_2 : ( ruleDesignRule ) ;
    public final void rule__AcmeGroupBody__RulesAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22714:1: ( ( ruleDesignRule ) )
            // InternalAcmeParser.g:22715:2: ( ruleDesignRule )
            {
            // InternalAcmeParser.g:22715:2: ( ruleDesignRule )
            // InternalAcmeParser.g:22716:3: ruleDesignRule
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeGroupBodyAccess().getRulesDesignRuleParserRuleCall_2_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDesignRule();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeGroupBodyAccess().getRulesDesignRuleParserRuleCall_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeGroupBody__RulesAssignment_2_2"


    // $ANTLR start "rule__MembersBlock__RefsAssignment_3_0"
    // InternalAcmeParser.g:22725:1: rule__MembersBlock__RefsAssignment_3_0 : ( ( RULE_ID ) ) ;
    public final void rule__MembersBlock__RefsAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22729:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:22730:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:22730:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:22731:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMembersBlockAccess().getRefsElementsRefCrossReference_3_0_0()); 
            }
            // InternalAcmeParser.g:22732:3: ( RULE_ID )
            // InternalAcmeParser.g:22733:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMembersBlockAccess().getRefsElementsRefIDTerminalRuleCall_3_0_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMembersBlockAccess().getRefsElementsRefIDTerminalRuleCall_3_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMembersBlockAccess().getRefsElementsRefCrossReference_3_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MembersBlock__RefsAssignment_3_0"


    // $ANTLR start "rule__MembersBlock__RefsAssignment_3_1_1"
    // InternalAcmeParser.g:22744:1: rule__MembersBlock__RefsAssignment_3_1_1 : ( ( RULE_ID ) ) ;
    public final void rule__MembersBlock__RefsAssignment_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22748:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:22749:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:22749:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:22750:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMembersBlockAccess().getRefsElementsRefCrossReference_3_1_1_0()); 
            }
            // InternalAcmeParser.g:22751:3: ( RULE_ID )
            // InternalAcmeParser.g:22752:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMembersBlockAccess().getRefsElementsRefIDTerminalRuleCall_3_1_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMembersBlockAccess().getRefsElementsRefIDTerminalRuleCall_3_1_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMembersBlockAccess().getRefsElementsRefCrossReference_3_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MembersBlock__RefsAssignment_3_1_1"


    // $ANTLR start "rule__AcmePortTypeDeclaration__VisibilityAssignment_0"
    // InternalAcmeParser.g:22763:1: rule__AcmePortTypeDeclaration__VisibilityAssignment_0 : ( ruleVisibility ) ;
    public final void rule__AcmePortTypeDeclaration__VisibilityAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22767:1: ( ( ruleVisibility ) )
            // InternalAcmeParser.g:22768:2: ( ruleVisibility )
            {
            // InternalAcmeParser.g:22768:2: ( ruleVisibility )
            // InternalAcmeParser.g:22769:3: ruleVisibility
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortTypeDeclarationAccess().getVisibilityVisibilityEnumRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleVisibility();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortTypeDeclarationAccess().getVisibilityVisibilityEnumRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__VisibilityAssignment_0"


    // $ANTLR start "rule__AcmePortTypeDeclaration__ExtensibilityAssignment_1"
    // InternalAcmeParser.g:22778:1: rule__AcmePortTypeDeclaration__ExtensibilityAssignment_1 : ( ruleExtensability ) ;
    public final void rule__AcmePortTypeDeclaration__ExtensibilityAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22782:1: ( ( ruleExtensability ) )
            // InternalAcmeParser.g:22783:2: ( ruleExtensability )
            {
            // InternalAcmeParser.g:22783:2: ( ruleExtensability )
            // InternalAcmeParser.g:22784:3: ruleExtensability
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortTypeDeclarationAccess().getExtensibilityExtensabilityEnumRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExtensability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortTypeDeclarationAccess().getExtensibilityExtensabilityEnumRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__ExtensibilityAssignment_1"


    // $ANTLR start "rule__AcmePortTypeDeclaration__NameAssignment_4"
    // InternalAcmeParser.g:22793:1: rule__AcmePortTypeDeclaration__NameAssignment_4 : ( RULE_ID ) ;
    public final void rule__AcmePortTypeDeclaration__NameAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22797:1: ( ( RULE_ID ) )
            // InternalAcmeParser.g:22798:2: ( RULE_ID )
            {
            // InternalAcmeParser.g:22798:2: ( RULE_ID )
            // InternalAcmeParser.g:22799:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortTypeDeclarationAccess().getNameIDTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortTypeDeclarationAccess().getNameIDTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__NameAssignment_4"


    // $ANTLR start "rule__AcmePortTypeDeclaration__BodyAssignment_5_1_0_1"
    // InternalAcmeParser.g:22808:1: rule__AcmePortTypeDeclaration__BodyAssignment_5_1_0_1 : ( ruleAcmePortBody ) ;
    public final void rule__AcmePortTypeDeclaration__BodyAssignment_5_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22812:1: ( ( ruleAcmePortBody ) )
            // InternalAcmeParser.g:22813:2: ( ruleAcmePortBody )
            {
            // InternalAcmeParser.g:22813:2: ( ruleAcmePortBody )
            // InternalAcmeParser.g:22814:3: ruleAcmePortBody
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortTypeDeclarationAccess().getBodyAcmePortBodyParserRuleCall_5_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePortBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortTypeDeclarationAccess().getBodyAcmePortBodyParserRuleCall_5_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__BodyAssignment_5_1_0_1"


    // $ANTLR start "rule__AcmePortTypeDeclaration__RefsAssignment_5_1_1_1"
    // InternalAcmeParser.g:22823:1: rule__AcmePortTypeDeclaration__RefsAssignment_5_1_1_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmePortTypeDeclaration__RefsAssignment_5_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22827:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:22828:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:22828:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:22829:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortTypeDeclarationAccess().getRefsAcmePortTypeDeclarationCrossReference_5_1_1_1_0()); 
            }
            // InternalAcmeParser.g:22830:3: ( RULE_ID )
            // InternalAcmeParser.g:22831:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortTypeDeclarationAccess().getRefsAcmePortTypeDeclarationIDTerminalRuleCall_5_1_1_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortTypeDeclarationAccess().getRefsAcmePortTypeDeclarationIDTerminalRuleCall_5_1_1_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortTypeDeclarationAccess().getRefsAcmePortTypeDeclarationCrossReference_5_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__RefsAssignment_5_1_1_1"


    // $ANTLR start "rule__AcmePortTypeDeclaration__RefsAssignment_5_1_1_2_1"
    // InternalAcmeParser.g:22842:1: rule__AcmePortTypeDeclaration__RefsAssignment_5_1_1_2_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmePortTypeDeclaration__RefsAssignment_5_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22846:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:22847:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:22847:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:22848:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortTypeDeclarationAccess().getRefsAcmePortTypeDeclarationCrossReference_5_1_1_2_1_0()); 
            }
            // InternalAcmeParser.g:22849:3: ( RULE_ID )
            // InternalAcmeParser.g:22850:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortTypeDeclarationAccess().getRefsAcmePortTypeDeclarationIDTerminalRuleCall_5_1_1_2_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortTypeDeclarationAccess().getRefsAcmePortTypeDeclarationIDTerminalRuleCall_5_1_1_2_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortTypeDeclarationAccess().getRefsAcmePortTypeDeclarationCrossReference_5_1_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__RefsAssignment_5_1_1_2_1"


    // $ANTLR start "rule__AcmePortTypeDeclaration__BodyAssignment_5_1_1_3_1_1"
    // InternalAcmeParser.g:22861:1: rule__AcmePortTypeDeclaration__BodyAssignment_5_1_1_3_1_1 : ( ruleAcmePortBody ) ;
    public final void rule__AcmePortTypeDeclaration__BodyAssignment_5_1_1_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22865:1: ( ( ruleAcmePortBody ) )
            // InternalAcmeParser.g:22866:2: ( ruleAcmePortBody )
            {
            // InternalAcmeParser.g:22866:2: ( ruleAcmePortBody )
            // InternalAcmeParser.g:22867:3: ruleAcmePortBody
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortTypeDeclarationAccess().getBodyAcmePortBodyParserRuleCall_5_1_1_3_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePortBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortTypeDeclarationAccess().getBodyAcmePortBodyParserRuleCall_5_1_1_3_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortTypeDeclaration__BodyAssignment_5_1_1_3_1_1"


    // $ANTLR start "rule__AcmePortDeclaration__NameAssignment_1"
    // InternalAcmeParser.g:22876:1: rule__AcmePortDeclaration__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__AcmePortDeclaration__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22880:1: ( ( RULE_ID ) )
            // InternalAcmeParser.g:22881:2: ( RULE_ID )
            {
            // InternalAcmeParser.g:22881:2: ( RULE_ID )
            // InternalAcmeParser.g:22882:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__NameAssignment_1"


    // $ANTLR start "rule__AcmePortDeclaration__DeclaredAssignment_2_1"
    // InternalAcmeParser.g:22891:1: rule__AcmePortDeclaration__DeclaredAssignment_2_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmePortDeclaration__DeclaredAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22895:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:22896:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:22896:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:22897:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortDeclarationAccess().getDeclaredPortOrGenericRefCrossReference_2_1_0()); 
            }
            // InternalAcmeParser.g:22898:3: ( RULE_ID )
            // InternalAcmeParser.g:22899:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortDeclarationAccess().getDeclaredPortOrGenericRefIDTerminalRuleCall_2_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortDeclarationAccess().getDeclaredPortOrGenericRefIDTerminalRuleCall_2_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortDeclarationAccess().getDeclaredPortOrGenericRefCrossReference_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__DeclaredAssignment_2_1"


    // $ANTLR start "rule__AcmePortDeclaration__DeclaredAssignment_2_2_1"
    // InternalAcmeParser.g:22910:1: rule__AcmePortDeclaration__DeclaredAssignment_2_2_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmePortDeclaration__DeclaredAssignment_2_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22914:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:22915:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:22915:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:22916:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortDeclarationAccess().getDeclaredPortOrGenericRefCrossReference_2_2_1_0()); 
            }
            // InternalAcmeParser.g:22917:3: ( RULE_ID )
            // InternalAcmeParser.g:22918:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortDeclarationAccess().getDeclaredPortOrGenericRefIDTerminalRuleCall_2_2_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortDeclarationAccess().getDeclaredPortOrGenericRefIDTerminalRuleCall_2_2_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortDeclarationAccess().getDeclaredPortOrGenericRefCrossReference_2_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__DeclaredAssignment_2_2_1"


    // $ANTLR start "rule__AcmePortDeclaration__BodyAssignment_3_1_1_0_0"
    // InternalAcmeParser.g:22929:1: rule__AcmePortDeclaration__BodyAssignment_3_1_1_0_0 : ( ruleAcmePortBody ) ;
    public final void rule__AcmePortDeclaration__BodyAssignment_3_1_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22933:1: ( ( ruleAcmePortBody ) )
            // InternalAcmeParser.g:22934:2: ( ruleAcmePortBody )
            {
            // InternalAcmeParser.g:22934:2: ( ruleAcmePortBody )
            // InternalAcmeParser.g:22935:3: ruleAcmePortBody
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortDeclarationAccess().getBodyAcmePortBodyParserRuleCall_3_1_1_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePortBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortDeclarationAccess().getBodyAcmePortBodyParserRuleCall_3_1_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__BodyAssignment_3_1_1_0_0"


    // $ANTLR start "rule__AcmePortDeclaration__InstantiatedAssignment_3_1_1_1_1"
    // InternalAcmeParser.g:22944:1: rule__AcmePortDeclaration__InstantiatedAssignment_3_1_1_1_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmePortDeclaration__InstantiatedAssignment_3_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22948:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:22949:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:22949:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:22950:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortDeclarationAccess().getInstantiatedPortOrGenericRefCrossReference_3_1_1_1_1_0()); 
            }
            // InternalAcmeParser.g:22951:3: ( RULE_ID )
            // InternalAcmeParser.g:22952:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortDeclarationAccess().getInstantiatedPortOrGenericRefIDTerminalRuleCall_3_1_1_1_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortDeclarationAccess().getInstantiatedPortOrGenericRefIDTerminalRuleCall_3_1_1_1_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortDeclarationAccess().getInstantiatedPortOrGenericRefCrossReference_3_1_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__InstantiatedAssignment_3_1_1_1_1"


    // $ANTLR start "rule__AcmePortDeclaration__InstantiatedAssignment_3_1_1_1_2_1"
    // InternalAcmeParser.g:22963:1: rule__AcmePortDeclaration__InstantiatedAssignment_3_1_1_1_2_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmePortDeclaration__InstantiatedAssignment_3_1_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22967:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:22968:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:22968:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:22969:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortDeclarationAccess().getInstantiatedPortOrGenericRefCrossReference_3_1_1_1_2_1_0()); 
            }
            // InternalAcmeParser.g:22970:3: ( RULE_ID )
            // InternalAcmeParser.g:22971:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortDeclarationAccess().getInstantiatedPortOrGenericRefIDTerminalRuleCall_3_1_1_1_2_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortDeclarationAccess().getInstantiatedPortOrGenericRefIDTerminalRuleCall_3_1_1_1_2_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortDeclarationAccess().getInstantiatedPortOrGenericRefCrossReference_3_1_1_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__InstantiatedAssignment_3_1_1_1_2_1"


    // $ANTLR start "rule__AcmePortDeclaration__BodyAssignment_3_1_1_1_3_1_2"
    // InternalAcmeParser.g:22982:1: rule__AcmePortDeclaration__BodyAssignment_3_1_1_1_3_1_2 : ( ruleAcmePortBody ) ;
    public final void rule__AcmePortDeclaration__BodyAssignment_3_1_1_1_3_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:22986:1: ( ( ruleAcmePortBody ) )
            // InternalAcmeParser.g:22987:2: ( ruleAcmePortBody )
            {
            // InternalAcmeParser.g:22987:2: ( ruleAcmePortBody )
            // InternalAcmeParser.g:22988:3: ruleAcmePortBody
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortDeclarationAccess().getBodyAcmePortBodyParserRuleCall_3_1_1_1_3_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePortBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortDeclarationAccess().getBodyAcmePortBodyParserRuleCall_3_1_1_1_3_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortDeclaration__BodyAssignment_3_1_1_1_3_1_2"


    // $ANTLR start "rule__AcmePortBody__PropertiesAssignment_2_0"
    // InternalAcmeParser.g:22997:1: rule__AcmePortBody__PropertiesAssignment_2_0 : ( ruleAcmePropertyDeclaration ) ;
    public final void rule__AcmePortBody__PropertiesAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23001:1: ( ( ruleAcmePropertyDeclaration ) )
            // InternalAcmeParser.g:23002:2: ( ruleAcmePropertyDeclaration )
            {
            // InternalAcmeParser.g:23002:2: ( ruleAcmePropertyDeclaration )
            // InternalAcmeParser.g:23003:3: ruleAcmePropertyDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortBodyAccess().getPropertiesAcmePropertyDeclarationParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortBodyAccess().getPropertiesAcmePropertyDeclarationParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortBody__PropertiesAssignment_2_0"


    // $ANTLR start "rule__AcmePortBody__RulesAssignment_2_1"
    // InternalAcmeParser.g:23012:1: rule__AcmePortBody__RulesAssignment_2_1 : ( ruleDesignRule ) ;
    public final void rule__AcmePortBody__RulesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23016:1: ( ( ruleDesignRule ) )
            // InternalAcmeParser.g:23017:2: ( ruleDesignRule )
            {
            // InternalAcmeParser.g:23017:2: ( ruleDesignRule )
            // InternalAcmeParser.g:23018:3: ruleDesignRule
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortBodyAccess().getRulesDesignRuleParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDesignRule();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortBodyAccess().getRulesDesignRuleParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortBody__RulesAssignment_2_1"


    // $ANTLR start "rule__AcmePortBody__RepresentationsAssignment_2_2"
    // InternalAcmeParser.g:23027:1: rule__AcmePortBody__RepresentationsAssignment_2_2 : ( ruleAcmeRepresentationDeclaration ) ;
    public final void rule__AcmePortBody__RepresentationsAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23031:1: ( ( ruleAcmeRepresentationDeclaration ) )
            // InternalAcmeParser.g:23032:2: ( ruleAcmeRepresentationDeclaration )
            {
            // InternalAcmeParser.g:23032:2: ( ruleAcmeRepresentationDeclaration )
            // InternalAcmeParser.g:23033:3: ruleAcmeRepresentationDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePortBodyAccess().getRepresentationsAcmeRepresentationDeclarationParserRuleCall_2_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeRepresentationDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePortBodyAccess().getRepresentationsAcmeRepresentationDeclarationParserRuleCall_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePortBody__RepresentationsAssignment_2_2"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__VisibilityAssignment_0"
    // InternalAcmeParser.g:23042:1: rule__AcmeRoleTypeDeclaration__VisibilityAssignment_0 : ( ruleVisibility ) ;
    public final void rule__AcmeRoleTypeDeclaration__VisibilityAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23046:1: ( ( ruleVisibility ) )
            // InternalAcmeParser.g:23047:2: ( ruleVisibility )
            {
            // InternalAcmeParser.g:23047:2: ( ruleVisibility )
            // InternalAcmeParser.g:23048:3: ruleVisibility
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleTypeDeclarationAccess().getVisibilityVisibilityEnumRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleVisibility();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleTypeDeclarationAccess().getVisibilityVisibilityEnumRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__VisibilityAssignment_0"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__ExtensibilityAssignment_1"
    // InternalAcmeParser.g:23057:1: rule__AcmeRoleTypeDeclaration__ExtensibilityAssignment_1 : ( ruleExtensability ) ;
    public final void rule__AcmeRoleTypeDeclaration__ExtensibilityAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23061:1: ( ( ruleExtensability ) )
            // InternalAcmeParser.g:23062:2: ( ruleExtensability )
            {
            // InternalAcmeParser.g:23062:2: ( ruleExtensability )
            // InternalAcmeParser.g:23063:3: ruleExtensability
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleTypeDeclarationAccess().getExtensibilityExtensabilityEnumRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExtensability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleTypeDeclarationAccess().getExtensibilityExtensabilityEnumRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__ExtensibilityAssignment_1"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__NameAssignment_4"
    // InternalAcmeParser.g:23072:1: rule__AcmeRoleTypeDeclaration__NameAssignment_4 : ( RULE_ID ) ;
    public final void rule__AcmeRoleTypeDeclaration__NameAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23076:1: ( ( RULE_ID ) )
            // InternalAcmeParser.g:23077:2: ( RULE_ID )
            {
            // InternalAcmeParser.g:23077:2: ( RULE_ID )
            // InternalAcmeParser.g:23078:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleTypeDeclarationAccess().getNameIDTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleTypeDeclarationAccess().getNameIDTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__NameAssignment_4"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__BodyAssignment_5_1_0_1"
    // InternalAcmeParser.g:23087:1: rule__AcmeRoleTypeDeclaration__BodyAssignment_5_1_0_1 : ( ruleAcmePortBody ) ;
    public final void rule__AcmeRoleTypeDeclaration__BodyAssignment_5_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23091:1: ( ( ruleAcmePortBody ) )
            // InternalAcmeParser.g:23092:2: ( ruleAcmePortBody )
            {
            // InternalAcmeParser.g:23092:2: ( ruleAcmePortBody )
            // InternalAcmeParser.g:23093:3: ruleAcmePortBody
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleTypeDeclarationAccess().getBodyAcmePortBodyParserRuleCall_5_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePortBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleTypeDeclarationAccess().getBodyAcmePortBodyParserRuleCall_5_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__BodyAssignment_5_1_0_1"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__RefsAssignment_5_1_1_1"
    // InternalAcmeParser.g:23102:1: rule__AcmeRoleTypeDeclaration__RefsAssignment_5_1_1_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmeRoleTypeDeclaration__RefsAssignment_5_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23106:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:23107:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:23107:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:23108:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleTypeDeclarationAccess().getRefsAcmeRoleTypeDeclarationCrossReference_5_1_1_1_0()); 
            }
            // InternalAcmeParser.g:23109:3: ( RULE_ID )
            // InternalAcmeParser.g:23110:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleTypeDeclarationAccess().getRefsAcmeRoleTypeDeclarationIDTerminalRuleCall_5_1_1_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleTypeDeclarationAccess().getRefsAcmeRoleTypeDeclarationIDTerminalRuleCall_5_1_1_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleTypeDeclarationAccess().getRefsAcmeRoleTypeDeclarationCrossReference_5_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__RefsAssignment_5_1_1_1"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__RefsAssignment_5_1_1_2_1"
    // InternalAcmeParser.g:23121:1: rule__AcmeRoleTypeDeclaration__RefsAssignment_5_1_1_2_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmeRoleTypeDeclaration__RefsAssignment_5_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23125:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:23126:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:23126:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:23127:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleTypeDeclarationAccess().getRefsAcmeRoleTypeDeclarationCrossReference_5_1_1_2_1_0()); 
            }
            // InternalAcmeParser.g:23128:3: ( RULE_ID )
            // InternalAcmeParser.g:23129:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleTypeDeclarationAccess().getRefsAcmeRoleTypeDeclarationIDTerminalRuleCall_5_1_1_2_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleTypeDeclarationAccess().getRefsAcmeRoleTypeDeclarationIDTerminalRuleCall_5_1_1_2_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleTypeDeclarationAccess().getRefsAcmeRoleTypeDeclarationCrossReference_5_1_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__RefsAssignment_5_1_1_2_1"


    // $ANTLR start "rule__AcmeRoleTypeDeclaration__BodyAssignment_5_1_1_3_1_1"
    // InternalAcmeParser.g:23140:1: rule__AcmeRoleTypeDeclaration__BodyAssignment_5_1_1_3_1_1 : ( ruleAcmePortBody ) ;
    public final void rule__AcmeRoleTypeDeclaration__BodyAssignment_5_1_1_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23144:1: ( ( ruleAcmePortBody ) )
            // InternalAcmeParser.g:23145:2: ( ruleAcmePortBody )
            {
            // InternalAcmeParser.g:23145:2: ( ruleAcmePortBody )
            // InternalAcmeParser.g:23146:3: ruleAcmePortBody
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleTypeDeclarationAccess().getBodyAcmePortBodyParserRuleCall_5_1_1_3_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePortBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleTypeDeclarationAccess().getBodyAcmePortBodyParserRuleCall_5_1_1_3_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleTypeDeclaration__BodyAssignment_5_1_1_3_1_1"


    // $ANTLR start "rule__AcmeRoleDeclaration__NameAssignment_1"
    // InternalAcmeParser.g:23155:1: rule__AcmeRoleDeclaration__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__AcmeRoleDeclaration__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23159:1: ( ( RULE_ID ) )
            // InternalAcmeParser.g:23160:2: ( RULE_ID )
            {
            // InternalAcmeParser.g:23160:2: ( RULE_ID )
            // InternalAcmeParser.g:23161:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__NameAssignment_1"


    // $ANTLR start "rule__AcmeRoleDeclaration__DeclaredAssignment_2_1"
    // InternalAcmeParser.g:23170:1: rule__AcmeRoleDeclaration__DeclaredAssignment_2_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmeRoleDeclaration__DeclaredAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23174:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:23175:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:23175:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:23176:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleDeclarationAccess().getDeclaredRoleOrGenericRefCrossReference_2_1_0()); 
            }
            // InternalAcmeParser.g:23177:3: ( RULE_ID )
            // InternalAcmeParser.g:23178:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleDeclarationAccess().getDeclaredRoleOrGenericRefIDTerminalRuleCall_2_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleDeclarationAccess().getDeclaredRoleOrGenericRefIDTerminalRuleCall_2_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleDeclarationAccess().getDeclaredRoleOrGenericRefCrossReference_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__DeclaredAssignment_2_1"


    // $ANTLR start "rule__AcmeRoleDeclaration__DeclaredAssignment_2_2_1"
    // InternalAcmeParser.g:23189:1: rule__AcmeRoleDeclaration__DeclaredAssignment_2_2_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmeRoleDeclaration__DeclaredAssignment_2_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23193:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:23194:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:23194:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:23195:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleDeclarationAccess().getDeclaredRoleOrGenericRefCrossReference_2_2_1_0()); 
            }
            // InternalAcmeParser.g:23196:3: ( RULE_ID )
            // InternalAcmeParser.g:23197:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleDeclarationAccess().getDeclaredRoleOrGenericRefIDTerminalRuleCall_2_2_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleDeclarationAccess().getDeclaredRoleOrGenericRefIDTerminalRuleCall_2_2_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleDeclarationAccess().getDeclaredRoleOrGenericRefCrossReference_2_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__DeclaredAssignment_2_2_1"


    // $ANTLR start "rule__AcmeRoleDeclaration__BodyAssignment_3_1_1_0_0"
    // InternalAcmeParser.g:23208:1: rule__AcmeRoleDeclaration__BodyAssignment_3_1_1_0_0 : ( ruleAcmeRoleBody ) ;
    public final void rule__AcmeRoleDeclaration__BodyAssignment_3_1_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23212:1: ( ( ruleAcmeRoleBody ) )
            // InternalAcmeParser.g:23213:2: ( ruleAcmeRoleBody )
            {
            // InternalAcmeParser.g:23213:2: ( ruleAcmeRoleBody )
            // InternalAcmeParser.g:23214:3: ruleAcmeRoleBody
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleDeclarationAccess().getBodyAcmeRoleBodyParserRuleCall_3_1_1_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeRoleBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleDeclarationAccess().getBodyAcmeRoleBodyParserRuleCall_3_1_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__BodyAssignment_3_1_1_0_0"


    // $ANTLR start "rule__AcmeRoleDeclaration__InstantiatedAssignment_3_1_1_1_1"
    // InternalAcmeParser.g:23223:1: rule__AcmeRoleDeclaration__InstantiatedAssignment_3_1_1_1_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmeRoleDeclaration__InstantiatedAssignment_3_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23227:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:23228:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:23228:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:23229:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleDeclarationAccess().getInstantiatedRoleOrGenericRefCrossReference_3_1_1_1_1_0()); 
            }
            // InternalAcmeParser.g:23230:3: ( RULE_ID )
            // InternalAcmeParser.g:23231:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleDeclarationAccess().getInstantiatedRoleOrGenericRefIDTerminalRuleCall_3_1_1_1_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleDeclarationAccess().getInstantiatedRoleOrGenericRefIDTerminalRuleCall_3_1_1_1_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleDeclarationAccess().getInstantiatedRoleOrGenericRefCrossReference_3_1_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__InstantiatedAssignment_3_1_1_1_1"


    // $ANTLR start "rule__AcmeRoleDeclaration__InstantiatedAssignment_3_1_1_1_2_1"
    // InternalAcmeParser.g:23242:1: rule__AcmeRoleDeclaration__InstantiatedAssignment_3_1_1_1_2_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmeRoleDeclaration__InstantiatedAssignment_3_1_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23246:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:23247:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:23247:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:23248:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleDeclarationAccess().getInstantiatedRoleOrGenericRefCrossReference_3_1_1_1_2_1_0()); 
            }
            // InternalAcmeParser.g:23249:3: ( RULE_ID )
            // InternalAcmeParser.g:23250:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleDeclarationAccess().getInstantiatedRoleOrGenericRefIDTerminalRuleCall_3_1_1_1_2_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleDeclarationAccess().getInstantiatedRoleOrGenericRefIDTerminalRuleCall_3_1_1_1_2_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleDeclarationAccess().getInstantiatedRoleOrGenericRefCrossReference_3_1_1_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__InstantiatedAssignment_3_1_1_1_2_1"


    // $ANTLR start "rule__AcmeRoleDeclaration__BodyAssignment_3_1_1_1_3_1_2"
    // InternalAcmeParser.g:23261:1: rule__AcmeRoleDeclaration__BodyAssignment_3_1_1_1_3_1_2 : ( ruleAcmeRoleBody ) ;
    public final void rule__AcmeRoleDeclaration__BodyAssignment_3_1_1_1_3_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23265:1: ( ( ruleAcmeRoleBody ) )
            // InternalAcmeParser.g:23266:2: ( ruleAcmeRoleBody )
            {
            // InternalAcmeParser.g:23266:2: ( ruleAcmeRoleBody )
            // InternalAcmeParser.g:23267:3: ruleAcmeRoleBody
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleDeclarationAccess().getBodyAcmeRoleBodyParserRuleCall_3_1_1_1_3_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeRoleBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleDeclarationAccess().getBodyAcmeRoleBodyParserRuleCall_3_1_1_1_3_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleDeclaration__BodyAssignment_3_1_1_1_3_1_2"


    // $ANTLR start "rule__AcmeRoleBody__PropertiesAssignment_2_0"
    // InternalAcmeParser.g:23276:1: rule__AcmeRoleBody__PropertiesAssignment_2_0 : ( ruleAcmePropertyDeclaration ) ;
    public final void rule__AcmeRoleBody__PropertiesAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23280:1: ( ( ruleAcmePropertyDeclaration ) )
            // InternalAcmeParser.g:23281:2: ( ruleAcmePropertyDeclaration )
            {
            // InternalAcmeParser.g:23281:2: ( ruleAcmePropertyDeclaration )
            // InternalAcmeParser.g:23282:3: ruleAcmePropertyDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleBodyAccess().getPropertiesAcmePropertyDeclarationParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleBodyAccess().getPropertiesAcmePropertyDeclarationParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleBody__PropertiesAssignment_2_0"


    // $ANTLR start "rule__AcmeRoleBody__RulesAssignment_2_1"
    // InternalAcmeParser.g:23291:1: rule__AcmeRoleBody__RulesAssignment_2_1 : ( ruleDesignRule ) ;
    public final void rule__AcmeRoleBody__RulesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23295:1: ( ( ruleDesignRule ) )
            // InternalAcmeParser.g:23296:2: ( ruleDesignRule )
            {
            // InternalAcmeParser.g:23296:2: ( ruleDesignRule )
            // InternalAcmeParser.g:23297:3: ruleDesignRule
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleBodyAccess().getRulesDesignRuleParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDesignRule();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleBodyAccess().getRulesDesignRuleParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleBody__RulesAssignment_2_1"


    // $ANTLR start "rule__AcmeRoleBody__RepresentationsAssignment_2_2"
    // InternalAcmeParser.g:23306:1: rule__AcmeRoleBody__RepresentationsAssignment_2_2 : ( ruleAcmeRepresentationDeclaration ) ;
    public final void rule__AcmeRoleBody__RepresentationsAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23310:1: ( ( ruleAcmeRepresentationDeclaration ) )
            // InternalAcmeParser.g:23311:2: ( ruleAcmeRepresentationDeclaration )
            {
            // InternalAcmeParser.g:23311:2: ( ruleAcmeRepresentationDeclaration )
            // InternalAcmeParser.g:23312:3: ruleAcmeRepresentationDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeRoleBodyAccess().getRepresentationsAcmeRepresentationDeclarationParserRuleCall_2_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeRepresentationDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeRoleBodyAccess().getRepresentationsAcmeRepresentationDeclarationParserRuleCall_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeRoleBody__RepresentationsAssignment_2_2"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__VisibilityAssignment_0"
    // InternalAcmeParser.g:23321:1: rule__AcmeComponentTypeDeclaration__VisibilityAssignment_0 : ( ruleVisibility ) ;
    public final void rule__AcmeComponentTypeDeclaration__VisibilityAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23325:1: ( ( ruleVisibility ) )
            // InternalAcmeParser.g:23326:2: ( ruleVisibility )
            {
            // InternalAcmeParser.g:23326:2: ( ruleVisibility )
            // InternalAcmeParser.g:23327:3: ruleVisibility
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentTypeDeclarationAccess().getVisibilityVisibilityEnumRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleVisibility();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentTypeDeclarationAccess().getVisibilityVisibilityEnumRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__VisibilityAssignment_0"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__ExtensibilityAssignment_1"
    // InternalAcmeParser.g:23336:1: rule__AcmeComponentTypeDeclaration__ExtensibilityAssignment_1 : ( ruleExtensability ) ;
    public final void rule__AcmeComponentTypeDeclaration__ExtensibilityAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23340:1: ( ( ruleExtensability ) )
            // InternalAcmeParser.g:23341:2: ( ruleExtensability )
            {
            // InternalAcmeParser.g:23341:2: ( ruleExtensability )
            // InternalAcmeParser.g:23342:3: ruleExtensability
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentTypeDeclarationAccess().getExtensibilityExtensabilityEnumRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExtensability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentTypeDeclarationAccess().getExtensibilityExtensabilityEnumRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__ExtensibilityAssignment_1"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__NameAssignment_4"
    // InternalAcmeParser.g:23351:1: rule__AcmeComponentTypeDeclaration__NameAssignment_4 : ( RULE_ID ) ;
    public final void rule__AcmeComponentTypeDeclaration__NameAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23355:1: ( ( RULE_ID ) )
            // InternalAcmeParser.g:23356:2: ( RULE_ID )
            {
            // InternalAcmeParser.g:23356:2: ( RULE_ID )
            // InternalAcmeParser.g:23357:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentTypeDeclarationAccess().getNameIDTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentTypeDeclarationAccess().getNameIDTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__NameAssignment_4"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__BodyAssignment_5_1_0_1"
    // InternalAcmeParser.g:23366:1: rule__AcmeComponentTypeDeclaration__BodyAssignment_5_1_0_1 : ( ruleAcmeComponentBody ) ;
    public final void rule__AcmeComponentTypeDeclaration__BodyAssignment_5_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23370:1: ( ( ruleAcmeComponentBody ) )
            // InternalAcmeParser.g:23371:2: ( ruleAcmeComponentBody )
            {
            // InternalAcmeParser.g:23371:2: ( ruleAcmeComponentBody )
            // InternalAcmeParser.g:23372:3: ruleAcmeComponentBody
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentTypeDeclarationAccess().getBodyAcmeComponentBodyParserRuleCall_5_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeComponentBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentTypeDeclarationAccess().getBodyAcmeComponentBodyParserRuleCall_5_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__BodyAssignment_5_1_0_1"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__RefsAssignment_5_1_1_1"
    // InternalAcmeParser.g:23381:1: rule__AcmeComponentTypeDeclaration__RefsAssignment_5_1_1_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmeComponentTypeDeclaration__RefsAssignment_5_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23385:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:23386:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:23386:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:23387:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentTypeDeclarationAccess().getRefsAcmeComponentTypeDeclarationCrossReference_5_1_1_1_0()); 
            }
            // InternalAcmeParser.g:23388:3: ( RULE_ID )
            // InternalAcmeParser.g:23389:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentTypeDeclarationAccess().getRefsAcmeComponentTypeDeclarationIDTerminalRuleCall_5_1_1_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentTypeDeclarationAccess().getRefsAcmeComponentTypeDeclarationIDTerminalRuleCall_5_1_1_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentTypeDeclarationAccess().getRefsAcmeComponentTypeDeclarationCrossReference_5_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__RefsAssignment_5_1_1_1"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__RefsAssignment_5_1_1_2_1"
    // InternalAcmeParser.g:23400:1: rule__AcmeComponentTypeDeclaration__RefsAssignment_5_1_1_2_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmeComponentTypeDeclaration__RefsAssignment_5_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23404:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:23405:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:23405:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:23406:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentTypeDeclarationAccess().getRefsAcmeComponentTypeDeclarationCrossReference_5_1_1_2_1_0()); 
            }
            // InternalAcmeParser.g:23407:3: ( RULE_ID )
            // InternalAcmeParser.g:23408:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentTypeDeclarationAccess().getRefsAcmeComponentTypeDeclarationIDTerminalRuleCall_5_1_1_2_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentTypeDeclarationAccess().getRefsAcmeComponentTypeDeclarationIDTerminalRuleCall_5_1_1_2_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentTypeDeclarationAccess().getRefsAcmeComponentTypeDeclarationCrossReference_5_1_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__RefsAssignment_5_1_1_2_1"


    // $ANTLR start "rule__AcmeComponentTypeDeclaration__BodyAssignment_5_1_1_3_1_1"
    // InternalAcmeParser.g:23419:1: rule__AcmeComponentTypeDeclaration__BodyAssignment_5_1_1_3_1_1 : ( ruleAcmeComponentBody ) ;
    public final void rule__AcmeComponentTypeDeclaration__BodyAssignment_5_1_1_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23423:1: ( ( ruleAcmeComponentBody ) )
            // InternalAcmeParser.g:23424:2: ( ruleAcmeComponentBody )
            {
            // InternalAcmeParser.g:23424:2: ( ruleAcmeComponentBody )
            // InternalAcmeParser.g:23425:3: ruleAcmeComponentBody
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentTypeDeclarationAccess().getBodyAcmeComponentBodyParserRuleCall_5_1_1_3_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeComponentBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentTypeDeclarationAccess().getBodyAcmeComponentBodyParserRuleCall_5_1_1_3_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentTypeDeclaration__BodyAssignment_5_1_1_3_1_1"


    // $ANTLR start "rule__AcmeComponentDeclaration__NameAssignment_1"
    // InternalAcmeParser.g:23434:1: rule__AcmeComponentDeclaration__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__AcmeComponentDeclaration__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23438:1: ( ( RULE_ID ) )
            // InternalAcmeParser.g:23439:2: ( RULE_ID )
            {
            // InternalAcmeParser.g:23439:2: ( RULE_ID )
            // InternalAcmeParser.g:23440:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__NameAssignment_1"


    // $ANTLR start "rule__AcmeComponentDeclaration__DeclaredAssignment_2_1"
    // InternalAcmeParser.g:23449:1: rule__AcmeComponentDeclaration__DeclaredAssignment_2_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmeComponentDeclaration__DeclaredAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23453:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:23454:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:23454:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:23455:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentDeclarationAccess().getDeclaredComponentOrGenericRefCrossReference_2_1_0()); 
            }
            // InternalAcmeParser.g:23456:3: ( RULE_ID )
            // InternalAcmeParser.g:23457:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentDeclarationAccess().getDeclaredComponentOrGenericRefIDTerminalRuleCall_2_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentDeclarationAccess().getDeclaredComponentOrGenericRefIDTerminalRuleCall_2_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentDeclarationAccess().getDeclaredComponentOrGenericRefCrossReference_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__DeclaredAssignment_2_1"


    // $ANTLR start "rule__AcmeComponentDeclaration__DeclaredAssignment_2_2_1"
    // InternalAcmeParser.g:23468:1: rule__AcmeComponentDeclaration__DeclaredAssignment_2_2_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmeComponentDeclaration__DeclaredAssignment_2_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23472:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:23473:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:23473:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:23474:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentDeclarationAccess().getDeclaredComponentOrGenericRefCrossReference_2_2_1_0()); 
            }
            // InternalAcmeParser.g:23475:3: ( RULE_ID )
            // InternalAcmeParser.g:23476:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentDeclarationAccess().getDeclaredComponentOrGenericRefIDTerminalRuleCall_2_2_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentDeclarationAccess().getDeclaredComponentOrGenericRefIDTerminalRuleCall_2_2_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentDeclarationAccess().getDeclaredComponentOrGenericRefCrossReference_2_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__DeclaredAssignment_2_2_1"


    // $ANTLR start "rule__AcmeComponentDeclaration__BodyAssignment_3_1_1_0_0"
    // InternalAcmeParser.g:23487:1: rule__AcmeComponentDeclaration__BodyAssignment_3_1_1_0_0 : ( ruleAcmeComponentBody ) ;
    public final void rule__AcmeComponentDeclaration__BodyAssignment_3_1_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23491:1: ( ( ruleAcmeComponentBody ) )
            // InternalAcmeParser.g:23492:2: ( ruleAcmeComponentBody )
            {
            // InternalAcmeParser.g:23492:2: ( ruleAcmeComponentBody )
            // InternalAcmeParser.g:23493:3: ruleAcmeComponentBody
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentDeclarationAccess().getBodyAcmeComponentBodyParserRuleCall_3_1_1_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeComponentBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentDeclarationAccess().getBodyAcmeComponentBodyParserRuleCall_3_1_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__BodyAssignment_3_1_1_0_0"


    // $ANTLR start "rule__AcmeComponentDeclaration__InstantiatedAssignment_3_1_1_1_1"
    // InternalAcmeParser.g:23502:1: rule__AcmeComponentDeclaration__InstantiatedAssignment_3_1_1_1_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmeComponentDeclaration__InstantiatedAssignment_3_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23506:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:23507:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:23507:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:23508:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentDeclarationAccess().getInstantiatedComponentOrGenericRefCrossReference_3_1_1_1_1_0()); 
            }
            // InternalAcmeParser.g:23509:3: ( RULE_ID )
            // InternalAcmeParser.g:23510:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentDeclarationAccess().getInstantiatedComponentOrGenericRefIDTerminalRuleCall_3_1_1_1_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentDeclarationAccess().getInstantiatedComponentOrGenericRefIDTerminalRuleCall_3_1_1_1_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentDeclarationAccess().getInstantiatedComponentOrGenericRefCrossReference_3_1_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__InstantiatedAssignment_3_1_1_1_1"


    // $ANTLR start "rule__AcmeComponentDeclaration__InstantiatedAssignment_3_1_1_1_2_1"
    // InternalAcmeParser.g:23521:1: rule__AcmeComponentDeclaration__InstantiatedAssignment_3_1_1_1_2_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmeComponentDeclaration__InstantiatedAssignment_3_1_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23525:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:23526:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:23526:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:23527:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentDeclarationAccess().getInstantiatedComponentOrGenericRefCrossReference_3_1_1_1_2_1_0()); 
            }
            // InternalAcmeParser.g:23528:3: ( RULE_ID )
            // InternalAcmeParser.g:23529:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentDeclarationAccess().getInstantiatedComponentOrGenericRefIDTerminalRuleCall_3_1_1_1_2_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentDeclarationAccess().getInstantiatedComponentOrGenericRefIDTerminalRuleCall_3_1_1_1_2_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentDeclarationAccess().getInstantiatedComponentOrGenericRefCrossReference_3_1_1_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__InstantiatedAssignment_3_1_1_1_2_1"


    // $ANTLR start "rule__AcmeComponentDeclaration__BodyAssignment_3_1_1_1_3_1_2"
    // InternalAcmeParser.g:23540:1: rule__AcmeComponentDeclaration__BodyAssignment_3_1_1_1_3_1_2 : ( ruleAcmeComponentBody ) ;
    public final void rule__AcmeComponentDeclaration__BodyAssignment_3_1_1_1_3_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23544:1: ( ( ruleAcmeComponentBody ) )
            // InternalAcmeParser.g:23545:2: ( ruleAcmeComponentBody )
            {
            // InternalAcmeParser.g:23545:2: ( ruleAcmeComponentBody )
            // InternalAcmeParser.g:23546:3: ruleAcmeComponentBody
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentDeclarationAccess().getBodyAcmeComponentBodyParserRuleCall_3_1_1_1_3_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeComponentBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentDeclarationAccess().getBodyAcmeComponentBodyParserRuleCall_3_1_1_1_3_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentDeclaration__BodyAssignment_3_1_1_1_3_1_2"


    // $ANTLR start "rule__AcmeComponentBody__PortsAssignment_2_0"
    // InternalAcmeParser.g:23555:1: rule__AcmeComponentBody__PortsAssignment_2_0 : ( ruleAcmePortDeclaration ) ;
    public final void rule__AcmeComponentBody__PortsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23559:1: ( ( ruleAcmePortDeclaration ) )
            // InternalAcmeParser.g:23560:2: ( ruleAcmePortDeclaration )
            {
            // InternalAcmeParser.g:23560:2: ( ruleAcmePortDeclaration )
            // InternalAcmeParser.g:23561:3: ruleAcmePortDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentBodyAccess().getPortsAcmePortDeclarationParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePortDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentBodyAccess().getPortsAcmePortDeclarationParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentBody__PortsAssignment_2_0"


    // $ANTLR start "rule__AcmeComponentBody__PropertiesAssignment_2_1"
    // InternalAcmeParser.g:23570:1: rule__AcmeComponentBody__PropertiesAssignment_2_1 : ( ruleAcmePropertyDeclaration ) ;
    public final void rule__AcmeComponentBody__PropertiesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23574:1: ( ( ruleAcmePropertyDeclaration ) )
            // InternalAcmeParser.g:23575:2: ( ruleAcmePropertyDeclaration )
            {
            // InternalAcmeParser.g:23575:2: ( ruleAcmePropertyDeclaration )
            // InternalAcmeParser.g:23576:3: ruleAcmePropertyDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentBodyAccess().getPropertiesAcmePropertyDeclarationParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentBodyAccess().getPropertiesAcmePropertyDeclarationParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentBody__PropertiesAssignment_2_1"


    // $ANTLR start "rule__AcmeComponentBody__RulesAssignment_2_2"
    // InternalAcmeParser.g:23585:1: rule__AcmeComponentBody__RulesAssignment_2_2 : ( ruleDesignRule ) ;
    public final void rule__AcmeComponentBody__RulesAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23589:1: ( ( ruleDesignRule ) )
            // InternalAcmeParser.g:23590:2: ( ruleDesignRule )
            {
            // InternalAcmeParser.g:23590:2: ( ruleDesignRule )
            // InternalAcmeParser.g:23591:3: ruleDesignRule
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentBodyAccess().getRulesDesignRuleParserRuleCall_2_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDesignRule();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentBodyAccess().getRulesDesignRuleParserRuleCall_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentBody__RulesAssignment_2_2"


    // $ANTLR start "rule__AcmeComponentBody__RepresentationsAssignment_2_3"
    // InternalAcmeParser.g:23600:1: rule__AcmeComponentBody__RepresentationsAssignment_2_3 : ( ruleAcmeRepresentationDeclaration ) ;
    public final void rule__AcmeComponentBody__RepresentationsAssignment_2_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23604:1: ( ( ruleAcmeRepresentationDeclaration ) )
            // InternalAcmeParser.g:23605:2: ( ruleAcmeRepresentationDeclaration )
            {
            // InternalAcmeParser.g:23605:2: ( ruleAcmeRepresentationDeclaration )
            // InternalAcmeParser.g:23606:3: ruleAcmeRepresentationDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeComponentBodyAccess().getRepresentationsAcmeRepresentationDeclarationParserRuleCall_2_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeRepresentationDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeComponentBodyAccess().getRepresentationsAcmeRepresentationDeclarationParserRuleCall_2_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeComponentBody__RepresentationsAssignment_2_3"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__VisibilityAssignment_0"
    // InternalAcmeParser.g:23615:1: rule__AcmeConnectorTypeDeclaration__VisibilityAssignment_0 : ( ruleVisibility ) ;
    public final void rule__AcmeConnectorTypeDeclaration__VisibilityAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23619:1: ( ( ruleVisibility ) )
            // InternalAcmeParser.g:23620:2: ( ruleVisibility )
            {
            // InternalAcmeParser.g:23620:2: ( ruleVisibility )
            // InternalAcmeParser.g:23621:3: ruleVisibility
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getVisibilityVisibilityEnumRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleVisibility();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getVisibilityVisibilityEnumRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__VisibilityAssignment_0"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__ExtensibilityAssignment_1"
    // InternalAcmeParser.g:23630:1: rule__AcmeConnectorTypeDeclaration__ExtensibilityAssignment_1 : ( ruleExtensability ) ;
    public final void rule__AcmeConnectorTypeDeclaration__ExtensibilityAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23634:1: ( ( ruleExtensability ) )
            // InternalAcmeParser.g:23635:2: ( ruleExtensability )
            {
            // InternalAcmeParser.g:23635:2: ( ruleExtensability )
            // InternalAcmeParser.g:23636:3: ruleExtensability
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getExtensibilityExtensabilityEnumRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExtensability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getExtensibilityExtensabilityEnumRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__ExtensibilityAssignment_1"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__NameAssignment_4"
    // InternalAcmeParser.g:23645:1: rule__AcmeConnectorTypeDeclaration__NameAssignment_4 : ( RULE_ID ) ;
    public final void rule__AcmeConnectorTypeDeclaration__NameAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23649:1: ( ( RULE_ID ) )
            // InternalAcmeParser.g:23650:2: ( RULE_ID )
            {
            // InternalAcmeParser.g:23650:2: ( RULE_ID )
            // InternalAcmeParser.g:23651:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getNameIDTerminalRuleCall_4_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getNameIDTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__NameAssignment_4"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__BodyAssignment_5_1_0_1"
    // InternalAcmeParser.g:23660:1: rule__AcmeConnectorTypeDeclaration__BodyAssignment_5_1_0_1 : ( ruleAcmeConnectorBody ) ;
    public final void rule__AcmeConnectorTypeDeclaration__BodyAssignment_5_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23664:1: ( ( ruleAcmeConnectorBody ) )
            // InternalAcmeParser.g:23665:2: ( ruleAcmeConnectorBody )
            {
            // InternalAcmeParser.g:23665:2: ( ruleAcmeConnectorBody )
            // InternalAcmeParser.g:23666:3: ruleAcmeConnectorBody
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getBodyAcmeConnectorBodyParserRuleCall_5_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeConnectorBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getBodyAcmeConnectorBodyParserRuleCall_5_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__BodyAssignment_5_1_0_1"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__RefsAssignment_5_1_1_1"
    // InternalAcmeParser.g:23675:1: rule__AcmeConnectorTypeDeclaration__RefsAssignment_5_1_1_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmeConnectorTypeDeclaration__RefsAssignment_5_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23679:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:23680:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:23680:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:23681:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getRefsAcmeConnectorTypeDeclarationCrossReference_5_1_1_1_0()); 
            }
            // InternalAcmeParser.g:23682:3: ( RULE_ID )
            // InternalAcmeParser.g:23683:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getRefsAcmeConnectorTypeDeclarationIDTerminalRuleCall_5_1_1_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getRefsAcmeConnectorTypeDeclarationIDTerminalRuleCall_5_1_1_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getRefsAcmeConnectorTypeDeclarationCrossReference_5_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__RefsAssignment_5_1_1_1"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__RefsAssignment_5_1_1_2_1"
    // InternalAcmeParser.g:23694:1: rule__AcmeConnectorTypeDeclaration__RefsAssignment_5_1_1_2_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmeConnectorTypeDeclaration__RefsAssignment_5_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23698:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:23699:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:23699:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:23700:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getRefsAcmeConnectorTypeDeclarationCrossReference_5_1_1_2_1_0()); 
            }
            // InternalAcmeParser.g:23701:3: ( RULE_ID )
            // InternalAcmeParser.g:23702:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getRefsAcmeConnectorTypeDeclarationIDTerminalRuleCall_5_1_1_2_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getRefsAcmeConnectorTypeDeclarationIDTerminalRuleCall_5_1_1_2_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getRefsAcmeConnectorTypeDeclarationCrossReference_5_1_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__RefsAssignment_5_1_1_2_1"


    // $ANTLR start "rule__AcmeConnectorTypeDeclaration__BodyAssignment_5_1_1_3_1_1"
    // InternalAcmeParser.g:23713:1: rule__AcmeConnectorTypeDeclaration__BodyAssignment_5_1_1_3_1_1 : ( ruleAcmeConnectorBody ) ;
    public final void rule__AcmeConnectorTypeDeclaration__BodyAssignment_5_1_1_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23717:1: ( ( ruleAcmeConnectorBody ) )
            // InternalAcmeParser.g:23718:2: ( ruleAcmeConnectorBody )
            {
            // InternalAcmeParser.g:23718:2: ( ruleAcmeConnectorBody )
            // InternalAcmeParser.g:23719:3: ruleAcmeConnectorBody
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getBodyAcmeConnectorBodyParserRuleCall_5_1_1_3_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeConnectorBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorTypeDeclarationAccess().getBodyAcmeConnectorBodyParserRuleCall_5_1_1_3_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorTypeDeclaration__BodyAssignment_5_1_1_3_1_1"


    // $ANTLR start "rule__AcmeConnectorDeclaration__NameAssignment_1"
    // InternalAcmeParser.g:23728:1: rule__AcmeConnectorDeclaration__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__AcmeConnectorDeclaration__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23732:1: ( ( RULE_ID ) )
            // InternalAcmeParser.g:23733:2: ( RULE_ID )
            {
            // InternalAcmeParser.g:23733:2: ( RULE_ID )
            // InternalAcmeParser.g:23734:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__NameAssignment_1"


    // $ANTLR start "rule__AcmeConnectorDeclaration__DeclaredAssignment_2_1"
    // InternalAcmeParser.g:23743:1: rule__AcmeConnectorDeclaration__DeclaredAssignment_2_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmeConnectorDeclaration__DeclaredAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23747:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:23748:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:23748:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:23749:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorDeclarationAccess().getDeclaredConnectorOrGenericRefCrossReference_2_1_0()); 
            }
            // InternalAcmeParser.g:23750:3: ( RULE_ID )
            // InternalAcmeParser.g:23751:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorDeclarationAccess().getDeclaredConnectorOrGenericRefIDTerminalRuleCall_2_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorDeclarationAccess().getDeclaredConnectorOrGenericRefIDTerminalRuleCall_2_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorDeclarationAccess().getDeclaredConnectorOrGenericRefCrossReference_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__DeclaredAssignment_2_1"


    // $ANTLR start "rule__AcmeConnectorDeclaration__DeclaredAssignment_2_2_1"
    // InternalAcmeParser.g:23762:1: rule__AcmeConnectorDeclaration__DeclaredAssignment_2_2_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmeConnectorDeclaration__DeclaredAssignment_2_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23766:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:23767:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:23767:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:23768:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorDeclarationAccess().getDeclaredConnectorOrGenericRefCrossReference_2_2_1_0()); 
            }
            // InternalAcmeParser.g:23769:3: ( RULE_ID )
            // InternalAcmeParser.g:23770:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorDeclarationAccess().getDeclaredConnectorOrGenericRefIDTerminalRuleCall_2_2_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorDeclarationAccess().getDeclaredConnectorOrGenericRefIDTerminalRuleCall_2_2_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorDeclarationAccess().getDeclaredConnectorOrGenericRefCrossReference_2_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__DeclaredAssignment_2_2_1"


    // $ANTLR start "rule__AcmeConnectorDeclaration__BodyAssignment_3_1_1_0_0"
    // InternalAcmeParser.g:23781:1: rule__AcmeConnectorDeclaration__BodyAssignment_3_1_1_0_0 : ( ruleAcmeConnectorBody ) ;
    public final void rule__AcmeConnectorDeclaration__BodyAssignment_3_1_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23785:1: ( ( ruleAcmeConnectorBody ) )
            // InternalAcmeParser.g:23786:2: ( ruleAcmeConnectorBody )
            {
            // InternalAcmeParser.g:23786:2: ( ruleAcmeConnectorBody )
            // InternalAcmeParser.g:23787:3: ruleAcmeConnectorBody
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorDeclarationAccess().getBodyAcmeConnectorBodyParserRuleCall_3_1_1_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeConnectorBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorDeclarationAccess().getBodyAcmeConnectorBodyParserRuleCall_3_1_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__BodyAssignment_3_1_1_0_0"


    // $ANTLR start "rule__AcmeConnectorDeclaration__InstantiatedAssignment_3_1_1_1_1"
    // InternalAcmeParser.g:23796:1: rule__AcmeConnectorDeclaration__InstantiatedAssignment_3_1_1_1_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmeConnectorDeclaration__InstantiatedAssignment_3_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23800:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:23801:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:23801:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:23802:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorDeclarationAccess().getInstantiatedConnectorOrGenericRefCrossReference_3_1_1_1_1_0()); 
            }
            // InternalAcmeParser.g:23803:3: ( RULE_ID )
            // InternalAcmeParser.g:23804:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorDeclarationAccess().getInstantiatedConnectorOrGenericRefIDTerminalRuleCall_3_1_1_1_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorDeclarationAccess().getInstantiatedConnectorOrGenericRefIDTerminalRuleCall_3_1_1_1_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorDeclarationAccess().getInstantiatedConnectorOrGenericRefCrossReference_3_1_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__InstantiatedAssignment_3_1_1_1_1"


    // $ANTLR start "rule__AcmeConnectorDeclaration__InstantiatedAssignment_3_1_1_1_2_1"
    // InternalAcmeParser.g:23815:1: rule__AcmeConnectorDeclaration__InstantiatedAssignment_3_1_1_1_2_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmeConnectorDeclaration__InstantiatedAssignment_3_1_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23819:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:23820:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:23820:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:23821:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorDeclarationAccess().getInstantiatedConnectorOrGenericRefCrossReference_3_1_1_1_2_1_0()); 
            }
            // InternalAcmeParser.g:23822:3: ( RULE_ID )
            // InternalAcmeParser.g:23823:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorDeclarationAccess().getInstantiatedConnectorOrGenericRefIDTerminalRuleCall_3_1_1_1_2_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorDeclarationAccess().getInstantiatedConnectorOrGenericRefIDTerminalRuleCall_3_1_1_1_2_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorDeclarationAccess().getInstantiatedConnectorOrGenericRefCrossReference_3_1_1_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__InstantiatedAssignment_3_1_1_1_2_1"


    // $ANTLR start "rule__AcmeConnectorDeclaration__BodyAssignment_3_1_1_1_3_1_2"
    // InternalAcmeParser.g:23834:1: rule__AcmeConnectorDeclaration__BodyAssignment_3_1_1_1_3_1_2 : ( ruleAcmeConnectorBody ) ;
    public final void rule__AcmeConnectorDeclaration__BodyAssignment_3_1_1_1_3_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23838:1: ( ( ruleAcmeConnectorBody ) )
            // InternalAcmeParser.g:23839:2: ( ruleAcmeConnectorBody )
            {
            // InternalAcmeParser.g:23839:2: ( ruleAcmeConnectorBody )
            // InternalAcmeParser.g:23840:3: ruleAcmeConnectorBody
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorDeclarationAccess().getBodyAcmeConnectorBodyParserRuleCall_3_1_1_1_3_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeConnectorBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorDeclarationAccess().getBodyAcmeConnectorBodyParserRuleCall_3_1_1_1_3_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorDeclaration__BodyAssignment_3_1_1_1_3_1_2"


    // $ANTLR start "rule__AcmeConnectorBody__RolesAssignment_2_0"
    // InternalAcmeParser.g:23849:1: rule__AcmeConnectorBody__RolesAssignment_2_0 : ( ruleAcmeRoleDeclaration ) ;
    public final void rule__AcmeConnectorBody__RolesAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23853:1: ( ( ruleAcmeRoleDeclaration ) )
            // InternalAcmeParser.g:23854:2: ( ruleAcmeRoleDeclaration )
            {
            // InternalAcmeParser.g:23854:2: ( ruleAcmeRoleDeclaration )
            // InternalAcmeParser.g:23855:3: ruleAcmeRoleDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorBodyAccess().getRolesAcmeRoleDeclarationParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeRoleDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorBodyAccess().getRolesAcmeRoleDeclarationParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorBody__RolesAssignment_2_0"


    // $ANTLR start "rule__AcmeConnectorBody__PropertiesAssignment_2_1"
    // InternalAcmeParser.g:23864:1: rule__AcmeConnectorBody__PropertiesAssignment_2_1 : ( ruleAcmePropertyDeclaration ) ;
    public final void rule__AcmeConnectorBody__PropertiesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23868:1: ( ( ruleAcmePropertyDeclaration ) )
            // InternalAcmeParser.g:23869:2: ( ruleAcmePropertyDeclaration )
            {
            // InternalAcmeParser.g:23869:2: ( ruleAcmePropertyDeclaration )
            // InternalAcmeParser.g:23870:3: ruleAcmePropertyDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorBodyAccess().getPropertiesAcmePropertyDeclarationParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorBodyAccess().getPropertiesAcmePropertyDeclarationParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorBody__PropertiesAssignment_2_1"


    // $ANTLR start "rule__AcmeConnectorBody__RulesAssignment_2_2"
    // InternalAcmeParser.g:23879:1: rule__AcmeConnectorBody__RulesAssignment_2_2 : ( ruleDesignRule ) ;
    public final void rule__AcmeConnectorBody__RulesAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23883:1: ( ( ruleDesignRule ) )
            // InternalAcmeParser.g:23884:2: ( ruleDesignRule )
            {
            // InternalAcmeParser.g:23884:2: ( ruleDesignRule )
            // InternalAcmeParser.g:23885:3: ruleDesignRule
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorBodyAccess().getRulesDesignRuleParserRuleCall_2_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDesignRule();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorBodyAccess().getRulesDesignRuleParserRuleCall_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorBody__RulesAssignment_2_2"


    // $ANTLR start "rule__AcmeConnectorBody__RepresentationsAssignment_2_3"
    // InternalAcmeParser.g:23894:1: rule__AcmeConnectorBody__RepresentationsAssignment_2_3 : ( ruleAcmeRepresentationDeclaration ) ;
    public final void rule__AcmeConnectorBody__RepresentationsAssignment_2_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23898:1: ( ( ruleAcmeRepresentationDeclaration ) )
            // InternalAcmeParser.g:23899:2: ( ruleAcmeRepresentationDeclaration )
            {
            // InternalAcmeParser.g:23899:2: ( ruleAcmeRepresentationDeclaration )
            // InternalAcmeParser.g:23900:3: ruleAcmeRepresentationDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeConnectorBodyAccess().getRepresentationsAcmeRepresentationDeclarationParserRuleCall_2_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeRepresentationDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeConnectorBodyAccess().getRepresentationsAcmeRepresentationDeclarationParserRuleCall_2_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeConnectorBody__RepresentationsAssignment_2_3"


    // $ANTLR start "rule__AcmeBindingDeclaration__OuterAssignment_0"
    // InternalAcmeParser.g:23909:1: rule__AcmeBindingDeclaration__OuterAssignment_0 : ( ( RULE_ID ) ) ;
    public final void rule__AcmeBindingDeclaration__OuterAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23913:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:23914:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:23914:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:23915:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeBindingDeclarationAccess().getOuterPortOrRoleRefCrossReference_0_0()); 
            }
            // InternalAcmeParser.g:23916:3: ( RULE_ID )
            // InternalAcmeParser.g:23917:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeBindingDeclarationAccess().getOuterPortOrRoleRefIDTerminalRuleCall_0_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeBindingDeclarationAccess().getOuterPortOrRoleRefIDTerminalRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeBindingDeclarationAccess().getOuterPortOrRoleRefCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeBindingDeclaration__OuterAssignment_0"


    // $ANTLR start "rule__AcmeBindingDeclaration__InnerAssignment_2"
    // InternalAcmeParser.g:23928:1: rule__AcmeBindingDeclaration__InnerAssignment_2 : ( ( RULE_ID ) ) ;
    public final void rule__AcmeBindingDeclaration__InnerAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23932:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:23933:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:23933:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:23934:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeBindingDeclarationAccess().getInnerPortOrRoleRefCrossReference_2_0()); 
            }
            // InternalAcmeParser.g:23935:3: ( RULE_ID )
            // InternalAcmeParser.g:23936:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeBindingDeclarationAccess().getInnerPortOrRoleRefIDTerminalRuleCall_2_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeBindingDeclarationAccess().getInnerPortOrRoleRefIDTerminalRuleCall_2_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeBindingDeclarationAccess().getInnerPortOrRoleRefCrossReference_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeBindingDeclaration__InnerAssignment_2"


    // $ANTLR start "rule__AcmeBindingDeclaration__PropertiesAssignment_3_1"
    // InternalAcmeParser.g:23947:1: rule__AcmeBindingDeclaration__PropertiesAssignment_3_1 : ( ruleAcmePropertyDeclaration ) ;
    public final void rule__AcmeBindingDeclaration__PropertiesAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23951:1: ( ( ruleAcmePropertyDeclaration ) )
            // InternalAcmeParser.g:23952:2: ( ruleAcmePropertyDeclaration )
            {
            // InternalAcmeParser.g:23952:2: ( ruleAcmePropertyDeclaration )
            // InternalAcmeParser.g:23953:3: ruleAcmePropertyDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeBindingDeclarationAccess().getPropertiesAcmePropertyDeclarationParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeBindingDeclarationAccess().getPropertiesAcmePropertyDeclarationParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeBindingDeclaration__PropertiesAssignment_3_1"


    // $ANTLR start "rule__AcmeAttachmentDeclaration__PortAssignment_1"
    // InternalAcmeParser.g:23962:1: rule__AcmeAttachmentDeclaration__PortAssignment_1 : ( ( ruleQualifiedIdentifier ) ) ;
    public final void rule__AcmeAttachmentDeclaration__PortAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23966:1: ( ( ( ruleQualifiedIdentifier ) ) )
            // InternalAcmeParser.g:23967:2: ( ( ruleQualifiedIdentifier ) )
            {
            // InternalAcmeParser.g:23967:2: ( ( ruleQualifiedIdentifier ) )
            // InternalAcmeParser.g:23968:3: ( ruleQualifiedIdentifier )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeAttachmentDeclarationAccess().getPortAcmePortDeclarationCrossReference_1_0()); 
            }
            // InternalAcmeParser.g:23969:3: ( ruleQualifiedIdentifier )
            // InternalAcmeParser.g:23970:4: ruleQualifiedIdentifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeAttachmentDeclarationAccess().getPortAcmePortDeclarationQualifiedIdentifierParserRuleCall_1_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeAttachmentDeclarationAccess().getPortAcmePortDeclarationQualifiedIdentifierParserRuleCall_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeAttachmentDeclarationAccess().getPortAcmePortDeclarationCrossReference_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeAttachmentDeclaration__PortAssignment_1"


    // $ANTLR start "rule__AcmeAttachmentDeclaration__RoleAssignment_3"
    // InternalAcmeParser.g:23981:1: rule__AcmeAttachmentDeclaration__RoleAssignment_3 : ( ( ruleQualifiedIdentifier ) ) ;
    public final void rule__AcmeAttachmentDeclaration__RoleAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:23985:1: ( ( ( ruleQualifiedIdentifier ) ) )
            // InternalAcmeParser.g:23986:2: ( ( ruleQualifiedIdentifier ) )
            {
            // InternalAcmeParser.g:23986:2: ( ( ruleQualifiedIdentifier ) )
            // InternalAcmeParser.g:23987:3: ( ruleQualifiedIdentifier )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeAttachmentDeclarationAccess().getRoleAcmeRoleDeclarationCrossReference_3_0()); 
            }
            // InternalAcmeParser.g:23988:3: ( ruleQualifiedIdentifier )
            // InternalAcmeParser.g:23989:4: ruleQualifiedIdentifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeAttachmentDeclarationAccess().getRoleAcmeRoleDeclarationQualifiedIdentifierParserRuleCall_3_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeAttachmentDeclarationAccess().getRoleAcmeRoleDeclarationQualifiedIdentifierParserRuleCall_3_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeAttachmentDeclarationAccess().getRoleAcmeRoleDeclarationCrossReference_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeAttachmentDeclaration__RoleAssignment_3"


    // $ANTLR start "rule__AcmePropertyDeclaration__NameAssignment_1"
    // InternalAcmeParser.g:24000:1: rule__AcmePropertyDeclaration__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__AcmePropertyDeclaration__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24004:1: ( ( RULE_ID ) )
            // InternalAcmeParser.g:24005:2: ( RULE_ID )
            {
            // InternalAcmeParser.g:24005:2: ( RULE_ID )
            // InternalAcmeParser.g:24006:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyDeclaration__NameAssignment_1"


    // $ANTLR start "rule__AcmePropertyDeclaration__TypeAssignment_2_1"
    // InternalAcmeParser.g:24015:1: rule__AcmePropertyDeclaration__TypeAssignment_2_1 : ( ruleAcmePropertyTypeRef ) ;
    public final void rule__AcmePropertyDeclaration__TypeAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24019:1: ( ( ruleAcmePropertyTypeRef ) )
            // InternalAcmeParser.g:24020:2: ( ruleAcmePropertyTypeRef )
            {
            // InternalAcmeParser.g:24020:2: ( ruleAcmePropertyTypeRef )
            // InternalAcmeParser.g:24021:3: ruleAcmePropertyTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyDeclarationAccess().getTypeAcmePropertyTypeRefParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyDeclarationAccess().getTypeAcmePropertyTypeRefParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyDeclaration__TypeAssignment_2_1"


    // $ANTLR start "rule__AcmePropertyDeclaration__ValAssignment_3_0_1"
    // InternalAcmeParser.g:24030:1: rule__AcmePropertyDeclaration__ValAssignment_3_0_1 : ( ruleAcmePropertyValueDeclaration ) ;
    public final void rule__AcmePropertyDeclaration__ValAssignment_3_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24034:1: ( ( ruleAcmePropertyValueDeclaration ) )
            // InternalAcmeParser.g:24035:2: ( ruleAcmePropertyValueDeclaration )
            {
            // InternalAcmeParser.g:24035:2: ( ruleAcmePropertyValueDeclaration )
            // InternalAcmeParser.g:24036:3: ruleAcmePropertyValueDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyDeclarationAccess().getValAcmePropertyValueDeclarationParserRuleCall_3_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyValueDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyDeclarationAccess().getValAcmePropertyValueDeclarationParserRuleCall_3_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyDeclaration__ValAssignment_3_0_1"


    // $ANTLR start "rule__AcmePropertyDeclaration__ValAssignment_3_1_1"
    // InternalAcmeParser.g:24045:1: rule__AcmePropertyDeclaration__ValAssignment_3_1_1 : ( ruleAcmePropertyValueDeclaration ) ;
    public final void rule__AcmePropertyDeclaration__ValAssignment_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24049:1: ( ( ruleAcmePropertyValueDeclaration ) )
            // InternalAcmeParser.g:24050:2: ( ruleAcmePropertyValueDeclaration )
            {
            // InternalAcmeParser.g:24050:2: ( ruleAcmePropertyValueDeclaration )
            // InternalAcmeParser.g:24051:3: ruleAcmePropertyValueDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyDeclarationAccess().getValAcmePropertyValueDeclarationParserRuleCall_3_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyValueDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyDeclarationAccess().getValAcmePropertyValueDeclarationParserRuleCall_3_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyDeclaration__ValAssignment_3_1_1"


    // $ANTLR start "rule__AcmePropertyDeclaration__MetaAssignment_4"
    // InternalAcmeParser.g:24060:1: rule__AcmePropertyDeclaration__MetaAssignment_4 : ( ruleAcmePropertyBlock ) ;
    public final void rule__AcmePropertyDeclaration__MetaAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24064:1: ( ( ruleAcmePropertyBlock ) )
            // InternalAcmeParser.g:24065:2: ( ruleAcmePropertyBlock )
            {
            // InternalAcmeParser.g:24065:2: ( ruleAcmePropertyBlock )
            // InternalAcmeParser.g:24066:3: ruleAcmePropertyBlock
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyDeclarationAccess().getMetaAcmePropertyBlockParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyDeclarationAccess().getMetaAcmePropertyBlockParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyDeclaration__MetaAssignment_4"


    // $ANTLR start "rule__AcmePropertyValueDeclaration__ValueAssignment_0"
    // InternalAcmeParser.g:24075:1: rule__AcmePropertyValueDeclaration__ValueAssignment_0 : ( ruleIntegerLiteral ) ;
    public final void rule__AcmePropertyValueDeclaration__ValueAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24079:1: ( ( ruleIntegerLiteral ) )
            // InternalAcmeParser.g:24080:2: ( ruleIntegerLiteral )
            {
            // InternalAcmeParser.g:24080:2: ( ruleIntegerLiteral )
            // InternalAcmeParser.g:24081:3: ruleIntegerLiteral
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyValueDeclarationAccess().getValueIntegerLiteralParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleIntegerLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyValueDeclarationAccess().getValueIntegerLiteralParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyValueDeclaration__ValueAssignment_0"


    // $ANTLR start "rule__AcmePropertyValueDeclaration__ValueAssignment_1"
    // InternalAcmeParser.g:24090:1: rule__AcmePropertyValueDeclaration__ValueAssignment_1 : ( ruleFloatLiteral ) ;
    public final void rule__AcmePropertyValueDeclaration__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24094:1: ( ( ruleFloatLiteral ) )
            // InternalAcmeParser.g:24095:2: ( ruleFloatLiteral )
            {
            // InternalAcmeParser.g:24095:2: ( ruleFloatLiteral )
            // InternalAcmeParser.g:24096:3: ruleFloatLiteral
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyValueDeclarationAccess().getValueFloatLiteralParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFloatLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyValueDeclarationAccess().getValueFloatLiteralParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyValueDeclaration__ValueAssignment_1"


    // $ANTLR start "rule__AcmePropertyValueDeclaration__ValueAssignment_2"
    // InternalAcmeParser.g:24105:1: rule__AcmePropertyValueDeclaration__ValueAssignment_2 : ( ruleStringLiteral ) ;
    public final void rule__AcmePropertyValueDeclaration__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24109:1: ( ( ruleStringLiteral ) )
            // InternalAcmeParser.g:24110:2: ( ruleStringLiteral )
            {
            // InternalAcmeParser.g:24110:2: ( ruleStringLiteral )
            // InternalAcmeParser.g:24111:3: ruleStringLiteral
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyValueDeclarationAccess().getValueStringLiteralParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStringLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyValueDeclarationAccess().getValueStringLiteralParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyValueDeclaration__ValueAssignment_2"


    // $ANTLR start "rule__AcmePropertyValueDeclaration__ValueAssignment_3"
    // InternalAcmeParser.g:24120:1: rule__AcmePropertyValueDeclaration__ValueAssignment_3 : ( ruleBooleanLiteral ) ;
    public final void rule__AcmePropertyValueDeclaration__ValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24124:1: ( ( ruleBooleanLiteral ) )
            // InternalAcmeParser.g:24125:2: ( ruleBooleanLiteral )
            {
            // InternalAcmeParser.g:24125:2: ( ruleBooleanLiteral )
            // InternalAcmeParser.g:24126:3: ruleBooleanLiteral
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyValueDeclarationAccess().getValueBooleanLiteralParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBooleanLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyValueDeclarationAccess().getValueBooleanLiteralParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyValueDeclaration__ValueAssignment_3"


    // $ANTLR start "rule__AcmePropertyValueDeclaration__ValueAssignment_4"
    // InternalAcmeParser.g:24135:1: rule__AcmePropertyValueDeclaration__ValueAssignment_4 : ( ruleAcmePropertySet ) ;
    public final void rule__AcmePropertyValueDeclaration__ValueAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24139:1: ( ( ruleAcmePropertySet ) )
            // InternalAcmeParser.g:24140:2: ( ruleAcmePropertySet )
            {
            // InternalAcmeParser.g:24140:2: ( ruleAcmePropertySet )
            // InternalAcmeParser.g:24141:3: ruleAcmePropertySet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyValueDeclarationAccess().getValueAcmePropertySetParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertySet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyValueDeclarationAccess().getValueAcmePropertySetParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyValueDeclaration__ValueAssignment_4"


    // $ANTLR start "rule__AcmePropertyValueDeclaration__ValueAssignment_5"
    // InternalAcmeParser.g:24150:1: rule__AcmePropertyValueDeclaration__ValueAssignment_5 : ( ruleAcmePropertyRecord ) ;
    public final void rule__AcmePropertyValueDeclaration__ValueAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24154:1: ( ( ruleAcmePropertyRecord ) )
            // InternalAcmeParser.g:24155:2: ( ruleAcmePropertyRecord )
            {
            // InternalAcmeParser.g:24155:2: ( ruleAcmePropertyRecord )
            // InternalAcmeParser.g:24156:3: ruleAcmePropertyRecord
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyValueDeclarationAccess().getValueAcmePropertyRecordParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyRecord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyValueDeclarationAccess().getValueAcmePropertyRecordParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyValueDeclaration__ValueAssignment_5"


    // $ANTLR start "rule__AcmePropertyValueDeclaration__ValueAssignment_6"
    // InternalAcmeParser.g:24165:1: rule__AcmePropertyValueDeclaration__ValueAssignment_6 : ( ruleAcmePropertySequence ) ;
    public final void rule__AcmePropertyValueDeclaration__ValueAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24169:1: ( ( ruleAcmePropertySequence ) )
            // InternalAcmeParser.g:24170:2: ( ruleAcmePropertySequence )
            {
            // InternalAcmeParser.g:24170:2: ( ruleAcmePropertySequence )
            // InternalAcmeParser.g:24171:3: ruleAcmePropertySequence
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyValueDeclarationAccess().getValueAcmePropertySequenceParserRuleCall_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertySequence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyValueDeclarationAccess().getValueAcmePropertySequenceParserRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyValueDeclaration__ValueAssignment_6"


    // $ANTLR start "rule__AcmePropertyValueDeclaration__ValueAssignment_7"
    // InternalAcmeParser.g:24180:1: rule__AcmePropertyValueDeclaration__ValueAssignment_7 : ( ruleEnumIdentifier ) ;
    public final void rule__AcmePropertyValueDeclaration__ValueAssignment_7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24184:1: ( ( ruleEnumIdentifier ) )
            // InternalAcmeParser.g:24185:2: ( ruleEnumIdentifier )
            {
            // InternalAcmeParser.g:24185:2: ( ruleEnumIdentifier )
            // InternalAcmeParser.g:24186:3: ruleEnumIdentifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyValueDeclarationAccess().getValueEnumIdentifierParserRuleCall_7_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEnumIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyValueDeclarationAccess().getValueEnumIdentifierParserRuleCall_7_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyValueDeclaration__ValueAssignment_7"


    // $ANTLR start "rule__BooleanLiteral__IsTrueAssignment_0"
    // InternalAcmeParser.g:24195:1: rule__BooleanLiteral__IsTrueAssignment_0 : ( ( True ) ) ;
    public final void rule__BooleanLiteral__IsTrueAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24199:1: ( ( ( True ) ) )
            // InternalAcmeParser.g:24200:2: ( ( True ) )
            {
            // InternalAcmeParser.g:24200:2: ( ( True ) )
            // InternalAcmeParser.g:24201:3: ( True )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanLiteralAccess().getIsTrueTrueKeyword_0_0()); 
            }
            // InternalAcmeParser.g:24202:3: ( True )
            // InternalAcmeParser.g:24203:4: True
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanLiteralAccess().getIsTrueTrueKeyword_0_0()); 
            }
            match(input,True,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanLiteralAccess().getIsTrueTrueKeyword_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanLiteralAccess().getIsTrueTrueKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanLiteral__IsTrueAssignment_0"


    // $ANTLR start "rule__IntegerLiteral__ValueAssignment"
    // InternalAcmeParser.g:24214:1: rule__IntegerLiteral__ValueAssignment : ( RULE_INT ) ;
    public final void rule__IntegerLiteral__ValueAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24218:1: ( ( RULE_INT ) )
            // InternalAcmeParser.g:24219:2: ( RULE_INT )
            {
            // InternalAcmeParser.g:24219:2: ( RULE_INT )
            // InternalAcmeParser.g:24220:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerLiteralAccess().getValueINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerLiteralAccess().getValueINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerLiteral__ValueAssignment"


    // $ANTLR start "rule__FloatLiteral__ValueAssignment"
    // InternalAcmeParser.g:24229:1: rule__FloatLiteral__ValueAssignment : ( RULE_FLOAT ) ;
    public final void rule__FloatLiteral__ValueAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24233:1: ( ( RULE_FLOAT ) )
            // InternalAcmeParser.g:24234:2: ( RULE_FLOAT )
            {
            // InternalAcmeParser.g:24234:2: ( RULE_FLOAT )
            // InternalAcmeParser.g:24235:3: RULE_FLOAT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFloatLiteralAccess().getValueFLOATTerminalRuleCall_0()); 
            }
            match(input,RULE_FLOAT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFloatLiteralAccess().getValueFLOATTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FloatLiteral__ValueAssignment"


    // $ANTLR start "rule__EnumIdentifier__ValueAssignment"
    // InternalAcmeParser.g:24244:1: rule__EnumIdentifier__ValueAssignment : ( RULE_ID ) ;
    public final void rule__EnumIdentifier__ValueAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24248:1: ( ( RULE_ID ) )
            // InternalAcmeParser.g:24249:2: ( RULE_ID )
            {
            // InternalAcmeParser.g:24249:2: ( RULE_ID )
            // InternalAcmeParser.g:24250:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEnumIdentifierAccess().getValueIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEnumIdentifierAccess().getValueIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnumIdentifier__ValueAssignment"


    // $ANTLR start "rule__AcmePropertyCompoundElement__ValueAssignment_0"
    // InternalAcmeParser.g:24259:1: rule__AcmePropertyCompoundElement__ValueAssignment_0 : ( ruleAcmePropertySet ) ;
    public final void rule__AcmePropertyCompoundElement__ValueAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24263:1: ( ( ruleAcmePropertySet ) )
            // InternalAcmeParser.g:24264:2: ( ruleAcmePropertySet )
            {
            // InternalAcmeParser.g:24264:2: ( ruleAcmePropertySet )
            // InternalAcmeParser.g:24265:3: ruleAcmePropertySet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyCompoundElementAccess().getValueAcmePropertySetParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertySet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyCompoundElementAccess().getValueAcmePropertySetParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyCompoundElement__ValueAssignment_0"


    // $ANTLR start "rule__AcmePropertyCompoundElement__ValueAssignment_1"
    // InternalAcmeParser.g:24274:1: rule__AcmePropertyCompoundElement__ValueAssignment_1 : ( ruleAcmePropertyRecord ) ;
    public final void rule__AcmePropertyCompoundElement__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24278:1: ( ( ruleAcmePropertyRecord ) )
            // InternalAcmeParser.g:24279:2: ( ruleAcmePropertyRecord )
            {
            // InternalAcmeParser.g:24279:2: ( ruleAcmePropertyRecord )
            // InternalAcmeParser.g:24280:3: ruleAcmePropertyRecord
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyCompoundElementAccess().getValueAcmePropertyRecordParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyRecord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyCompoundElementAccess().getValueAcmePropertyRecordParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyCompoundElement__ValueAssignment_1"


    // $ANTLR start "rule__AcmePropertyCompoundElement__ValueAssignment_2"
    // InternalAcmeParser.g:24289:1: rule__AcmePropertyCompoundElement__ValueAssignment_2 : ( ruleAcmePropertySequence ) ;
    public final void rule__AcmePropertyCompoundElement__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24293:1: ( ( ruleAcmePropertySequence ) )
            // InternalAcmeParser.g:24294:2: ( ruleAcmePropertySequence )
            {
            // InternalAcmeParser.g:24294:2: ( ruleAcmePropertySequence )
            // InternalAcmeParser.g:24295:3: ruleAcmePropertySequence
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyCompoundElementAccess().getValueAcmePropertySequenceParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertySequence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyCompoundElementAccess().getValueAcmePropertySequenceParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyCompoundElement__ValueAssignment_2"


    // $ANTLR start "rule__AcmePropertySet__ValuesAssignment_2_0"
    // InternalAcmeParser.g:24304:1: rule__AcmePropertySet__ValuesAssignment_2_0 : ( ruleAcmePropertyValueDeclaration ) ;
    public final void rule__AcmePropertySet__ValuesAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24308:1: ( ( ruleAcmePropertyValueDeclaration ) )
            // InternalAcmeParser.g:24309:2: ( ruleAcmePropertyValueDeclaration )
            {
            // InternalAcmeParser.g:24309:2: ( ruleAcmePropertyValueDeclaration )
            // InternalAcmeParser.g:24310:3: ruleAcmePropertyValueDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertySetAccess().getValuesAcmePropertyValueDeclarationParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyValueDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertySetAccess().getValuesAcmePropertyValueDeclarationParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertySet__ValuesAssignment_2_0"


    // $ANTLR start "rule__AcmePropertySet__ValuesAssignment_2_1_1"
    // InternalAcmeParser.g:24319:1: rule__AcmePropertySet__ValuesAssignment_2_1_1 : ( ruleAcmePropertyValueDeclaration ) ;
    public final void rule__AcmePropertySet__ValuesAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24323:1: ( ( ruleAcmePropertyValueDeclaration ) )
            // InternalAcmeParser.g:24324:2: ( ruleAcmePropertyValueDeclaration )
            {
            // InternalAcmeParser.g:24324:2: ( ruleAcmePropertyValueDeclaration )
            // InternalAcmeParser.g:24325:3: ruleAcmePropertyValueDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertySetAccess().getValuesAcmePropertyValueDeclarationParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyValueDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertySetAccess().getValuesAcmePropertyValueDeclarationParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertySet__ValuesAssignment_2_1_1"


    // $ANTLR start "rule__AcmePropertySequence__ValuesAssignment_2_0"
    // InternalAcmeParser.g:24334:1: rule__AcmePropertySequence__ValuesAssignment_2_0 : ( ruleAcmePropertyValueDeclaration ) ;
    public final void rule__AcmePropertySequence__ValuesAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24338:1: ( ( ruleAcmePropertyValueDeclaration ) )
            // InternalAcmeParser.g:24339:2: ( ruleAcmePropertyValueDeclaration )
            {
            // InternalAcmeParser.g:24339:2: ( ruleAcmePropertyValueDeclaration )
            // InternalAcmeParser.g:24340:3: ruleAcmePropertyValueDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertySequenceAccess().getValuesAcmePropertyValueDeclarationParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyValueDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertySequenceAccess().getValuesAcmePropertyValueDeclarationParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertySequence__ValuesAssignment_2_0"


    // $ANTLR start "rule__AcmePropertySequence__ValuesAssignment_2_1_1"
    // InternalAcmeParser.g:24349:1: rule__AcmePropertySequence__ValuesAssignment_2_1_1 : ( ruleAcmePropertyValueDeclaration ) ;
    public final void rule__AcmePropertySequence__ValuesAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24353:1: ( ( ruleAcmePropertyValueDeclaration ) )
            // InternalAcmeParser.g:24354:2: ( ruleAcmePropertyValueDeclaration )
            {
            // InternalAcmeParser.g:24354:2: ( ruleAcmePropertyValueDeclaration )
            // InternalAcmeParser.g:24355:3: ruleAcmePropertyValueDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertySequenceAccess().getValuesAcmePropertyValueDeclarationParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyValueDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertySequenceAccess().getValuesAcmePropertyValueDeclarationParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertySequence__ValuesAssignment_2_1_1"


    // $ANTLR start "rule__AcmePropertyRecordEntry__NameAssignment_0"
    // InternalAcmeParser.g:24364:1: rule__AcmePropertyRecordEntry__NameAssignment_0 : ( RULE_ID ) ;
    public final void rule__AcmePropertyRecordEntry__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24368:1: ( ( RULE_ID ) )
            // InternalAcmeParser.g:24369:2: ( RULE_ID )
            {
            // InternalAcmeParser.g:24369:2: ( RULE_ID )
            // InternalAcmeParser.g:24370:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyRecordEntryAccess().getNameIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyRecordEntryAccess().getNameIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecordEntry__NameAssignment_0"


    // $ANTLR start "rule__AcmePropertyRecordEntry__RefAssignment_1_1"
    // InternalAcmeParser.g:24379:1: rule__AcmePropertyRecordEntry__RefAssignment_1_1 : ( ruleAcmePropertyTypeDeclaration ) ;
    public final void rule__AcmePropertyRecordEntry__RefAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24383:1: ( ( ruleAcmePropertyTypeDeclaration ) )
            // InternalAcmeParser.g:24384:2: ( ruleAcmePropertyTypeDeclaration )
            {
            // InternalAcmeParser.g:24384:2: ( ruleAcmePropertyTypeDeclaration )
            // InternalAcmeParser.g:24385:3: ruleAcmePropertyTypeDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyRecordEntryAccess().getRefAcmePropertyTypeDeclarationParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyTypeDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyRecordEntryAccess().getRefAcmePropertyTypeDeclarationParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecordEntry__RefAssignment_1_1"


    // $ANTLR start "rule__AcmePropertyRecordEntry__ValueAssignment_3"
    // InternalAcmeParser.g:24394:1: rule__AcmePropertyRecordEntry__ValueAssignment_3 : ( ruleAcmePropertyValueDeclaration ) ;
    public final void rule__AcmePropertyRecordEntry__ValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24398:1: ( ( ruleAcmePropertyValueDeclaration ) )
            // InternalAcmeParser.g:24399:2: ( ruleAcmePropertyValueDeclaration )
            {
            // InternalAcmeParser.g:24399:2: ( ruleAcmePropertyValueDeclaration )
            // InternalAcmeParser.g:24400:3: ruleAcmePropertyValueDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyRecordEntryAccess().getValueAcmePropertyValueDeclarationParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyValueDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyRecordEntryAccess().getValueAcmePropertyValueDeclarationParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecordEntry__ValueAssignment_3"


    // $ANTLR start "rule__AcmePropertyRecord__FieldsAssignment_2_0"
    // InternalAcmeParser.g:24409:1: rule__AcmePropertyRecord__FieldsAssignment_2_0 : ( ruleAcmePropertyRecordEntry ) ;
    public final void rule__AcmePropertyRecord__FieldsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24413:1: ( ( ruleAcmePropertyRecordEntry ) )
            // InternalAcmeParser.g:24414:2: ( ruleAcmePropertyRecordEntry )
            {
            // InternalAcmeParser.g:24414:2: ( ruleAcmePropertyRecordEntry )
            // InternalAcmeParser.g:24415:3: ruleAcmePropertyRecordEntry
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyRecordAccess().getFieldsAcmePropertyRecordEntryParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyRecordEntry();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyRecordAccess().getFieldsAcmePropertyRecordEntryParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecord__FieldsAssignment_2_0"


    // $ANTLR start "rule__AcmePropertyRecord__FieldsAssignment_2_1_1"
    // InternalAcmeParser.g:24424:1: rule__AcmePropertyRecord__FieldsAssignment_2_1_1 : ( ruleAcmePropertyRecordEntry ) ;
    public final void rule__AcmePropertyRecord__FieldsAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24428:1: ( ( ruleAcmePropertyRecordEntry ) )
            // InternalAcmeParser.g:24429:2: ( ruleAcmePropertyRecordEntry )
            {
            // InternalAcmeParser.g:24429:2: ( ruleAcmePropertyRecordEntry )
            // InternalAcmeParser.g:24430:3: ruleAcmePropertyRecordEntry
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyRecordAccess().getFieldsAcmePropertyRecordEntryParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyRecordEntry();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyRecordAccess().getFieldsAcmePropertyRecordEntryParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecord__FieldsAssignment_2_1_1"


    // $ANTLR start "rule__AcmePropertyTypeRecord__FieldsAssignment_3"
    // InternalAcmeParser.g:24439:1: rule__AcmePropertyTypeRecord__FieldsAssignment_3 : ( ruleAcmePropertyRecordFieldDescription ) ;
    public final void rule__AcmePropertyTypeRecord__FieldsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24443:1: ( ( ruleAcmePropertyRecordFieldDescription ) )
            // InternalAcmeParser.g:24444:2: ( ruleAcmePropertyRecordFieldDescription )
            {
            // InternalAcmeParser.g:24444:2: ( ruleAcmePropertyRecordFieldDescription )
            // InternalAcmeParser.g:24445:3: ruleAcmePropertyRecordFieldDescription
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeRecordAccess().getFieldsAcmePropertyRecordFieldDescriptionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyRecordFieldDescription();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeRecordAccess().getFieldsAcmePropertyRecordFieldDescriptionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeRecord__FieldsAssignment_3"


    // $ANTLR start "rule__AcmePropertyTypeSet__TypeAssignment_3"
    // InternalAcmeParser.g:24454:1: rule__AcmePropertyTypeSet__TypeAssignment_3 : ( ruleAcmePropertyTypeRef ) ;
    public final void rule__AcmePropertyTypeSet__TypeAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24458:1: ( ( ruleAcmePropertyTypeRef ) )
            // InternalAcmeParser.g:24459:2: ( ruleAcmePropertyTypeRef )
            {
            // InternalAcmeParser.g:24459:2: ( ruleAcmePropertyTypeRef )
            // InternalAcmeParser.g:24460:3: ruleAcmePropertyTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeSetAccess().getTypeAcmePropertyTypeRefParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeSetAccess().getTypeAcmePropertyTypeRefParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeSet__TypeAssignment_3"


    // $ANTLR start "rule__AcmePropertyTypeSequence__TypeAssignment_3"
    // InternalAcmeParser.g:24469:1: rule__AcmePropertyTypeSequence__TypeAssignment_3 : ( ruleAcmePropertyTypeRef ) ;
    public final void rule__AcmePropertyTypeSequence__TypeAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24473:1: ( ( ruleAcmePropertyTypeRef ) )
            // InternalAcmeParser.g:24474:2: ( ruleAcmePropertyTypeRef )
            {
            // InternalAcmeParser.g:24474:2: ( ruleAcmePropertyTypeRef )
            // InternalAcmeParser.g:24475:3: ruleAcmePropertyTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeSequenceAccess().getTypeAcmePropertyTypeRefParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeSequenceAccess().getTypeAcmePropertyTypeRefParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeSequence__TypeAssignment_3"


    // $ANTLR start "rule__AcmePropertyRecordFieldDescription__NameAssignment_0"
    // InternalAcmeParser.g:24484:1: rule__AcmePropertyRecordFieldDescription__NameAssignment_0 : ( RULE_ID ) ;
    public final void rule__AcmePropertyRecordFieldDescription__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24488:1: ( ( RULE_ID ) )
            // InternalAcmeParser.g:24489:2: ( RULE_ID )
            {
            // InternalAcmeParser.g:24489:2: ( RULE_ID )
            // InternalAcmeParser.g:24490:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyRecordFieldDescriptionAccess().getNameIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyRecordFieldDescriptionAccess().getNameIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecordFieldDescription__NameAssignment_0"


    // $ANTLR start "rule__AcmePropertyRecordFieldDescription__TypeAssignment_2"
    // InternalAcmeParser.g:24499:1: rule__AcmePropertyRecordFieldDescription__TypeAssignment_2 : ( ruleAcmePropertyTypeRef ) ;
    public final void rule__AcmePropertyRecordFieldDescription__TypeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24503:1: ( ( ruleAcmePropertyTypeRef ) )
            // InternalAcmeParser.g:24504:2: ( ruleAcmePropertyTypeRef )
            {
            // InternalAcmeParser.g:24504:2: ( ruleAcmePropertyTypeRef )
            // InternalAcmeParser.g:24505:3: ruleAcmePropertyTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyRecordFieldDescriptionAccess().getTypeAcmePropertyTypeRefParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyRecordFieldDescriptionAccess().getTypeAcmePropertyTypeRefParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyRecordFieldDescription__TypeAssignment_2"


    // $ANTLR start "rule__AcmePropertyTypeRef__StructureAssignment_0"
    // InternalAcmeParser.g:24514:1: rule__AcmePropertyTypeRef__StructureAssignment_0 : ( ruleAcmePropertyTypeStructure ) ;
    public final void rule__AcmePropertyTypeRef__StructureAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24518:1: ( ( ruleAcmePropertyTypeStructure ) )
            // InternalAcmeParser.g:24519:2: ( ruleAcmePropertyTypeStructure )
            {
            // InternalAcmeParser.g:24519:2: ( ruleAcmePropertyTypeStructure )
            // InternalAcmeParser.g:24520:3: ruleAcmePropertyTypeStructure
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeRefAccess().getStructureAcmePropertyTypeStructureParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyTypeStructure();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeRefAccess().getStructureAcmePropertyTypeStructureParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeRef__StructureAssignment_0"


    // $ANTLR start "rule__AcmePropertyTypeRef__RefAssignment_1"
    // InternalAcmeParser.g:24529:1: rule__AcmePropertyTypeRef__RefAssignment_1 : ( ( RULE_ID ) ) ;
    public final void rule__AcmePropertyTypeRef__RefAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24533:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:24534:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:24534:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:24535:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeRefAccess().getRefAcmePropertyTypeDeclarationCrossReference_1_0()); 
            }
            // InternalAcmeParser.g:24536:3: ( RULE_ID )
            // InternalAcmeParser.g:24537:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeRefAccess().getRefAcmePropertyTypeDeclarationIDTerminalRuleCall_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeRefAccess().getRefAcmePropertyTypeDeclarationIDTerminalRuleCall_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeRefAccess().getRefAcmePropertyTypeDeclarationCrossReference_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeRef__RefAssignment_1"


    // $ANTLR start "rule__AcmePropertyTypeStructure__PrimitiveAssignment_0"
    // InternalAcmeParser.g:24548:1: rule__AcmePropertyTypeStructure__PrimitiveAssignment_0 : ( rulePrimitivePropertyType ) ;
    public final void rule__AcmePropertyTypeStructure__PrimitiveAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24552:1: ( ( rulePrimitivePropertyType ) )
            // InternalAcmeParser.g:24553:2: ( rulePrimitivePropertyType )
            {
            // InternalAcmeParser.g:24553:2: ( rulePrimitivePropertyType )
            // InternalAcmeParser.g:24554:3: rulePrimitivePropertyType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeStructureAccess().getPrimitivePrimitivePropertyTypeEnumRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePrimitivePropertyType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeStructureAccess().getPrimitivePrimitivePropertyTypeEnumRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeStructure__PrimitiveAssignment_0"


    // $ANTLR start "rule__AcmePropertyTypeStructure__StructureAssignment_1"
    // InternalAcmeParser.g:24563:1: rule__AcmePropertyTypeStructure__StructureAssignment_1 : ( ruleAcmePropertyTypeRecord ) ;
    public final void rule__AcmePropertyTypeStructure__StructureAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24567:1: ( ( ruleAcmePropertyTypeRecord ) )
            // InternalAcmeParser.g:24568:2: ( ruleAcmePropertyTypeRecord )
            {
            // InternalAcmeParser.g:24568:2: ( ruleAcmePropertyTypeRecord )
            // InternalAcmeParser.g:24569:3: ruleAcmePropertyTypeRecord
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeStructureAccess().getStructureAcmePropertyTypeRecordParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyTypeRecord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeStructureAccess().getStructureAcmePropertyTypeRecordParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeStructure__StructureAssignment_1"


    // $ANTLR start "rule__AcmePropertyTypeStructure__StructureAssignment_2"
    // InternalAcmeParser.g:24578:1: rule__AcmePropertyTypeStructure__StructureAssignment_2 : ( ruleAcmePropertyTypeSet ) ;
    public final void rule__AcmePropertyTypeStructure__StructureAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24582:1: ( ( ruleAcmePropertyTypeSet ) )
            // InternalAcmeParser.g:24583:2: ( ruleAcmePropertyTypeSet )
            {
            // InternalAcmeParser.g:24583:2: ( ruleAcmePropertyTypeSet )
            // InternalAcmeParser.g:24584:3: ruleAcmePropertyTypeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeStructureAccess().getStructureAcmePropertyTypeSetParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyTypeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeStructureAccess().getStructureAcmePropertyTypeSetParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeStructure__StructureAssignment_2"


    // $ANTLR start "rule__AcmePropertyTypeStructure__StructureAssignment_3"
    // InternalAcmeParser.g:24593:1: rule__AcmePropertyTypeStructure__StructureAssignment_3 : ( ruleAcmePropertyTypeSequence ) ;
    public final void rule__AcmePropertyTypeStructure__StructureAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24597:1: ( ( ruleAcmePropertyTypeSequence ) )
            // InternalAcmeParser.g:24598:2: ( ruleAcmePropertyTypeSequence )
            {
            // InternalAcmeParser.g:24598:2: ( ruleAcmePropertyTypeSequence )
            // InternalAcmeParser.g:24599:3: ruleAcmePropertyTypeSequence
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeStructureAccess().getStructureAcmePropertyTypeSequenceParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyTypeSequence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeStructureAccess().getStructureAcmePropertyTypeSequenceParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeStructure__StructureAssignment_3"


    // $ANTLR start "rule__AcmePropertyTypeStructure__NumAssignment_4"
    // InternalAcmeParser.g:24608:1: rule__AcmePropertyTypeStructure__NumAssignment_4 : ( ruleAcmePropertyTypeEnum ) ;
    public final void rule__AcmePropertyTypeStructure__NumAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24612:1: ( ( ruleAcmePropertyTypeEnum ) )
            // InternalAcmeParser.g:24613:2: ( ruleAcmePropertyTypeEnum )
            {
            // InternalAcmeParser.g:24613:2: ( ruleAcmePropertyTypeEnum )
            // InternalAcmeParser.g:24614:3: ruleAcmePropertyTypeEnum
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeStructureAccess().getNumAcmePropertyTypeEnumParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyTypeEnum();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeStructureAccess().getNumAcmePropertyTypeEnumParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeStructure__NumAssignment_4"


    // $ANTLR start "rule__AcmePropertyTypeDeclaration__NameAssignment_2"
    // InternalAcmeParser.g:24623:1: rule__AcmePropertyTypeDeclaration__NameAssignment_2 : ( RULE_ID ) ;
    public final void rule__AcmePropertyTypeDeclaration__NameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24627:1: ( ( RULE_ID ) )
            // InternalAcmeParser.g:24628:2: ( RULE_ID )
            {
            // InternalAcmeParser.g:24628:2: ( RULE_ID )
            // InternalAcmeParser.g:24629:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeDeclarationAccess().getNameIDTerminalRuleCall_2_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeDeclarationAccess().getNameIDTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeDeclaration__NameAssignment_2"


    // $ANTLR start "rule__AcmePropertyTypeDeclaration__TypeAssignment_3_1_1"
    // InternalAcmeParser.g:24638:1: rule__AcmePropertyTypeDeclaration__TypeAssignment_3_1_1 : ( ruleAcmePropertyTypeRef ) ;
    public final void rule__AcmePropertyTypeDeclaration__TypeAssignment_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24642:1: ( ( ruleAcmePropertyTypeRef ) )
            // InternalAcmeParser.g:24643:2: ( ruleAcmePropertyTypeRef )
            {
            // InternalAcmeParser.g:24643:2: ( ruleAcmePropertyTypeRef )
            // InternalAcmeParser.g:24644:3: ruleAcmePropertyTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyTypeDeclarationAccess().getTypeAcmePropertyTypeRefParserRuleCall_3_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyTypeDeclarationAccess().getTypeAcmePropertyTypeRefParserRuleCall_3_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyTypeDeclaration__TypeAssignment_3_1_1"


    // $ANTLR start "rule__AcmePropertyBlockEntry__NameAssignment_0"
    // InternalAcmeParser.g:24653:1: rule__AcmePropertyBlockEntry__NameAssignment_0 : ( RULE_ID ) ;
    public final void rule__AcmePropertyBlockEntry__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24657:1: ( ( RULE_ID ) )
            // InternalAcmeParser.g:24658:2: ( RULE_ID )
            {
            // InternalAcmeParser.g:24658:2: ( RULE_ID )
            // InternalAcmeParser.g:24659:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyBlockEntryAccess().getNameIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyBlockEntryAccess().getNameIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyBlockEntry__NameAssignment_0"


    // $ANTLR start "rule__AcmePropertyBlockEntry__TypeAssignment_1_1"
    // InternalAcmeParser.g:24668:1: rule__AcmePropertyBlockEntry__TypeAssignment_1_1 : ( ruleAcmePropertyTypeRef ) ;
    public final void rule__AcmePropertyBlockEntry__TypeAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24672:1: ( ( ruleAcmePropertyTypeRef ) )
            // InternalAcmeParser.g:24673:2: ( ruleAcmePropertyTypeRef )
            {
            // InternalAcmeParser.g:24673:2: ( ruleAcmePropertyTypeRef )
            // InternalAcmeParser.g:24674:3: ruleAcmePropertyTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyBlockEntryAccess().getTypeAcmePropertyTypeRefParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyBlockEntryAccess().getTypeAcmePropertyTypeRefParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyBlockEntry__TypeAssignment_1_1"


    // $ANTLR start "rule__AcmePropertyBlockEntry__AssAssignment_2_0"
    // InternalAcmeParser.g:24683:1: rule__AcmePropertyBlockEntry__AssAssignment_2_0 : ( ( rule__AcmePropertyBlockEntry__AssAlternatives_2_0_0 ) ) ;
    public final void rule__AcmePropertyBlockEntry__AssAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24687:1: ( ( ( rule__AcmePropertyBlockEntry__AssAlternatives_2_0_0 ) ) )
            // InternalAcmeParser.g:24688:2: ( ( rule__AcmePropertyBlockEntry__AssAlternatives_2_0_0 ) )
            {
            // InternalAcmeParser.g:24688:2: ( ( rule__AcmePropertyBlockEntry__AssAlternatives_2_0_0 ) )
            // InternalAcmeParser.g:24689:3: ( rule__AcmePropertyBlockEntry__AssAlternatives_2_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyBlockEntryAccess().getAssAlternatives_2_0_0()); 
            }
            // InternalAcmeParser.g:24690:3: ( rule__AcmePropertyBlockEntry__AssAlternatives_2_0_0 )
            // InternalAcmeParser.g:24690:4: rule__AcmePropertyBlockEntry__AssAlternatives_2_0_0
            {
            pushFollow(FOLLOW_2);
            rule__AcmePropertyBlockEntry__AssAlternatives_2_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyBlockEntryAccess().getAssAlternatives_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyBlockEntry__AssAssignment_2_0"


    // $ANTLR start "rule__AcmePropertyBlockEntry__ValAssignment_2_1"
    // InternalAcmeParser.g:24698:1: rule__AcmePropertyBlockEntry__ValAssignment_2_1 : ( ruleAcmePropertyValueDeclaration ) ;
    public final void rule__AcmePropertyBlockEntry__ValAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24702:1: ( ( ruleAcmePropertyValueDeclaration ) )
            // InternalAcmeParser.g:24703:2: ( ruleAcmePropertyValueDeclaration )
            {
            // InternalAcmeParser.g:24703:2: ( ruleAcmePropertyValueDeclaration )
            // InternalAcmeParser.g:24704:3: ruleAcmePropertyValueDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyBlockEntryAccess().getValAcmePropertyValueDeclarationParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyValueDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyBlockEntryAccess().getValAcmePropertyValueDeclarationParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyBlockEntry__ValAssignment_2_1"


    // $ANTLR start "rule__AcmePropertyBlock__PropertiesAssignment_2"
    // InternalAcmeParser.g:24713:1: rule__AcmePropertyBlock__PropertiesAssignment_2 : ( ruleAcmePropertyBlockEntry ) ;
    public final void rule__AcmePropertyBlock__PropertiesAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24717:1: ( ( ruleAcmePropertyBlockEntry ) )
            // InternalAcmeParser.g:24718:2: ( ruleAcmePropertyBlockEntry )
            {
            // InternalAcmeParser.g:24718:2: ( ruleAcmePropertyBlockEntry )
            // InternalAcmeParser.g:24719:3: ruleAcmePropertyBlockEntry
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmePropertyBlockAccess().getPropertiesAcmePropertyBlockEntryParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyBlockEntry();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmePropertyBlockAccess().getPropertiesAcmePropertyBlockEntryParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmePropertyBlock__PropertiesAssignment_2"


    // $ANTLR start "rule__DesignRule__NameAssignment_0_1"
    // InternalAcmeParser.g:24728:1: rule__DesignRule__NameAssignment_0_1 : ( RULE_ID ) ;
    public final void rule__DesignRule__NameAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24732:1: ( ( RULE_ID ) )
            // InternalAcmeParser.g:24733:2: ( RULE_ID )
            {
            // InternalAcmeParser.g:24733:2: ( RULE_ID )
            // InternalAcmeParser.g:24734:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignRuleAccess().getNameIDTerminalRuleCall_0_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignRuleAccess().getNameIDTerminalRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignRule__NameAssignment_0_1"


    // $ANTLR start "rule__DesignRule__KindAssignment_1"
    // InternalAcmeParser.g:24743:1: rule__DesignRule__KindAssignment_1 : ( ( rule__DesignRule__KindAlternatives_1_0 ) ) ;
    public final void rule__DesignRule__KindAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24747:1: ( ( ( rule__DesignRule__KindAlternatives_1_0 ) ) )
            // InternalAcmeParser.g:24748:2: ( ( rule__DesignRule__KindAlternatives_1_0 ) )
            {
            // InternalAcmeParser.g:24748:2: ( ( rule__DesignRule__KindAlternatives_1_0 ) )
            // InternalAcmeParser.g:24749:3: ( rule__DesignRule__KindAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignRuleAccess().getKindAlternatives_1_0()); 
            }
            // InternalAcmeParser.g:24750:3: ( rule__DesignRule__KindAlternatives_1_0 )
            // InternalAcmeParser.g:24750:4: rule__DesignRule__KindAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__DesignRule__KindAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignRuleAccess().getKindAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignRule__KindAssignment_1"


    // $ANTLR start "rule__DesignRule__ExprAssignment_2"
    // InternalAcmeParser.g:24758:1: rule__DesignRule__ExprAssignment_2 : ( rulebooleanExpression ) ;
    public final void rule__DesignRule__ExprAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24762:1: ( ( rulebooleanExpression ) )
            // InternalAcmeParser.g:24763:2: ( rulebooleanExpression )
            {
            // InternalAcmeParser.g:24763:2: ( rulebooleanExpression )
            // InternalAcmeParser.g:24764:3: rulebooleanExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignRuleAccess().getExprBooleanExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulebooleanExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignRuleAccess().getExprBooleanExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignRule__ExprAssignment_2"


    // $ANTLR start "rule__DesignRule__MetaAssignment_3"
    // InternalAcmeParser.g:24773:1: rule__DesignRule__MetaAssignment_3 : ( ruleAcmePropertyBlock ) ;
    public final void rule__DesignRule__MetaAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24777:1: ( ( ruleAcmePropertyBlock ) )
            // InternalAcmeParser.g:24778:2: ( ruleAcmePropertyBlock )
            {
            // InternalAcmeParser.g:24778:2: ( ruleAcmePropertyBlock )
            // InternalAcmeParser.g:24779:3: ruleAcmePropertyBlock
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignRuleAccess().getMetaAcmePropertyBlockParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignRuleAccess().getMetaAcmePropertyBlockParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignRule__MetaAssignment_3"


    // $ANTLR start "rule__DesignAnalysisDeclaration__NameAssignment_0_2"
    // InternalAcmeParser.g:24788:1: rule__DesignAnalysisDeclaration__NameAssignment_0_2 : ( RULE_ID ) ;
    public final void rule__DesignAnalysisDeclaration__NameAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24792:1: ( ( RULE_ID ) )
            // InternalAcmeParser.g:24793:2: ( RULE_ID )
            {
            // InternalAcmeParser.g:24793:2: ( RULE_ID )
            // InternalAcmeParser.g:24794:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getNameIDTerminalRuleCall_0_2_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getNameIDTerminalRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__NameAssignment_0_2"


    // $ANTLR start "rule__DesignAnalysisDeclaration__ParamsAssignment_0_4_0"
    // InternalAcmeParser.g:24803:1: rule__DesignAnalysisDeclaration__ParamsAssignment_0_4_0 : ( ruleFormalParam ) ;
    public final void rule__DesignAnalysisDeclaration__ParamsAssignment_0_4_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24807:1: ( ( ruleFormalParam ) )
            // InternalAcmeParser.g:24808:2: ( ruleFormalParam )
            {
            // InternalAcmeParser.g:24808:2: ( ruleFormalParam )
            // InternalAcmeParser.g:24809:3: ruleFormalParam
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getParamsFormalParamParserRuleCall_0_4_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFormalParam();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getParamsFormalParamParserRuleCall_0_4_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__ParamsAssignment_0_4_0"


    // $ANTLR start "rule__DesignAnalysisDeclaration__ParamsAssignment_0_4_1_1"
    // InternalAcmeParser.g:24818:1: rule__DesignAnalysisDeclaration__ParamsAssignment_0_4_1_1 : ( ruleFormalParam ) ;
    public final void rule__DesignAnalysisDeclaration__ParamsAssignment_0_4_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24822:1: ( ( ruleFormalParam ) )
            // InternalAcmeParser.g:24823:2: ( ruleFormalParam )
            {
            // InternalAcmeParser.g:24823:2: ( ruleFormalParam )
            // InternalAcmeParser.g:24824:3: ruleFormalParam
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getParamsFormalParamParserRuleCall_0_4_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFormalParam();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getParamsFormalParamParserRuleCall_0_4_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__ParamsAssignment_0_4_1_1"


    // $ANTLR start "rule__DesignAnalysisDeclaration__TypeAssignment_0_7"
    // InternalAcmeParser.g:24833:1: rule__DesignAnalysisDeclaration__TypeAssignment_0_7 : ( ruleAcmeTypeRef ) ;
    public final void rule__DesignAnalysisDeclaration__TypeAssignment_0_7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24837:1: ( ( ruleAcmeTypeRef ) )
            // InternalAcmeParser.g:24838:2: ( ruleAcmeTypeRef )
            {
            // InternalAcmeParser.g:24838:2: ( ruleAcmeTypeRef )
            // InternalAcmeParser.g:24839:3: ruleAcmeTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getTypeAcmeTypeRefParserRuleCall_0_7_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getTypeAcmeTypeRefParserRuleCall_0_7_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__TypeAssignment_0_7"


    // $ANTLR start "rule__DesignAnalysisDeclaration__ExprAssignment_0_9"
    // InternalAcmeParser.g:24848:1: rule__DesignAnalysisDeclaration__ExprAssignment_0_9 : ( ruleassignmentExpression ) ;
    public final void rule__DesignAnalysisDeclaration__ExprAssignment_0_9() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24852:1: ( ( ruleassignmentExpression ) )
            // InternalAcmeParser.g:24853:2: ( ruleassignmentExpression )
            {
            // InternalAcmeParser.g:24853:2: ( ruleassignmentExpression )
            // InternalAcmeParser.g:24854:3: ruleassignmentExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getExprAssignmentExpressionParserRuleCall_0_9_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleassignmentExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getExprAssignmentExpressionParserRuleCall_0_9_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__ExprAssignment_0_9"


    // $ANTLR start "rule__DesignAnalysisDeclaration__PropertiesAssignment_0_10"
    // InternalAcmeParser.g:24863:1: rule__DesignAnalysisDeclaration__PropertiesAssignment_0_10 : ( ruleAcmePropertyBlock ) ;
    public final void rule__DesignAnalysisDeclaration__PropertiesAssignment_0_10() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24867:1: ( ( ruleAcmePropertyBlock ) )
            // InternalAcmeParser.g:24868:2: ( ruleAcmePropertyBlock )
            {
            // InternalAcmeParser.g:24868:2: ( ruleAcmePropertyBlock )
            // InternalAcmeParser.g:24869:3: ruleAcmePropertyBlock
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getPropertiesAcmePropertyBlockParserRuleCall_0_10_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getPropertiesAcmePropertyBlockParserRuleCall_0_10_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__PropertiesAssignment_0_10"


    // $ANTLR start "rule__DesignAnalysisDeclaration__NameAssignment_1_3"
    // InternalAcmeParser.g:24878:1: rule__DesignAnalysisDeclaration__NameAssignment_1_3 : ( RULE_ID ) ;
    public final void rule__DesignAnalysisDeclaration__NameAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24882:1: ( ( RULE_ID ) )
            // InternalAcmeParser.g:24883:2: ( RULE_ID )
            {
            // InternalAcmeParser.g:24883:2: ( RULE_ID )
            // InternalAcmeParser.g:24884:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getNameIDTerminalRuleCall_1_3_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getNameIDTerminalRuleCall_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__NameAssignment_1_3"


    // $ANTLR start "rule__DesignAnalysisDeclaration__ParamsAssignment_1_5_0"
    // InternalAcmeParser.g:24893:1: rule__DesignAnalysisDeclaration__ParamsAssignment_1_5_0 : ( ruleFormalParam ) ;
    public final void rule__DesignAnalysisDeclaration__ParamsAssignment_1_5_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24897:1: ( ( ruleFormalParam ) )
            // InternalAcmeParser.g:24898:2: ( ruleFormalParam )
            {
            // InternalAcmeParser.g:24898:2: ( ruleFormalParam )
            // InternalAcmeParser.g:24899:3: ruleFormalParam
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getParamsFormalParamParserRuleCall_1_5_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFormalParam();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getParamsFormalParamParserRuleCall_1_5_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__ParamsAssignment_1_5_0"


    // $ANTLR start "rule__DesignAnalysisDeclaration__ParamsAssignment_1_5_1_1"
    // InternalAcmeParser.g:24908:1: rule__DesignAnalysisDeclaration__ParamsAssignment_1_5_1_1 : ( ruleFormalParam ) ;
    public final void rule__DesignAnalysisDeclaration__ParamsAssignment_1_5_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24912:1: ( ( ruleFormalParam ) )
            // InternalAcmeParser.g:24913:2: ( ruleFormalParam )
            {
            // InternalAcmeParser.g:24913:2: ( ruleFormalParam )
            // InternalAcmeParser.g:24914:3: ruleFormalParam
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getParamsFormalParamParserRuleCall_1_5_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFormalParam();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getParamsFormalParamParserRuleCall_1_5_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__ParamsAssignment_1_5_1_1"


    // $ANTLR start "rule__DesignAnalysisDeclaration__TypeAssignment_1_8"
    // InternalAcmeParser.g:24923:1: rule__DesignAnalysisDeclaration__TypeAssignment_1_8 : ( ruleAcmeTypeRef ) ;
    public final void rule__DesignAnalysisDeclaration__TypeAssignment_1_8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24927:1: ( ( ruleAcmeTypeRef ) )
            // InternalAcmeParser.g:24928:2: ( ruleAcmeTypeRef )
            {
            // InternalAcmeParser.g:24928:2: ( ruleAcmeTypeRef )
            // InternalAcmeParser.g:24929:3: ruleAcmeTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getTypeAcmeTypeRefParserRuleCall_1_8_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getTypeAcmeTypeRefParserRuleCall_1_8_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__TypeAssignment_1_8"


    // $ANTLR start "rule__DesignAnalysisDeclaration__ClassAssignment_1_10"
    // InternalAcmeParser.g:24938:1: rule__DesignAnalysisDeclaration__ClassAssignment_1_10 : ( ruleQualifiedIdentifier ) ;
    public final void rule__DesignAnalysisDeclaration__ClassAssignment_1_10() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24942:1: ( ( ruleQualifiedIdentifier ) )
            // InternalAcmeParser.g:24943:2: ( ruleQualifiedIdentifier )
            {
            // InternalAcmeParser.g:24943:2: ( ruleQualifiedIdentifier )
            // InternalAcmeParser.g:24944:3: ruleQualifiedIdentifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDesignAnalysisDeclarationAccess().getClassQualifiedIdentifierParserRuleCall_1_10_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDesignAnalysisDeclarationAccess().getClassQualifiedIdentifierParserRuleCall_1_10_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DesignAnalysisDeclaration__ClassAssignment_1_10"


    // $ANTLR start "rule__FormalParam__NameAssignment_0"
    // InternalAcmeParser.g:24953:1: rule__FormalParam__NameAssignment_0 : ( RULE_ID ) ;
    public final void rule__FormalParam__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24957:1: ( ( RULE_ID ) )
            // InternalAcmeParser.g:24958:2: ( RULE_ID )
            {
            // InternalAcmeParser.g:24958:2: ( RULE_ID )
            // InternalAcmeParser.g:24959:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormalParamAccess().getNameIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormalParamAccess().getNameIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FormalParam__NameAssignment_0"


    // $ANTLR start "rule__FormalParam__TypeAssignment_2"
    // InternalAcmeParser.g:24968:1: rule__FormalParam__TypeAssignment_2 : ( ruleAcmeTypeRef ) ;
    public final void rule__FormalParam__TypeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24972:1: ( ( ruleAcmeTypeRef ) )
            // InternalAcmeParser.g:24973:2: ( ruleAcmeTypeRef )
            {
            // InternalAcmeParser.g:24973:2: ( ruleAcmeTypeRef )
            // InternalAcmeParser.g:24974:3: ruleAcmeTypeRef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFormalParamAccess().getTypeAcmeTypeRefParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmeTypeRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFormalParamAccess().getTypeAcmeTypeRefParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FormalParam__TypeAssignment_2"


    // $ANTLR start "rule__AcmeTypeRef__PrimitiveAssignment_0"
    // InternalAcmeParser.g:24983:1: rule__AcmeTypeRef__PrimitiveAssignment_0 : ( rulePrimitivePropertyType ) ;
    public final void rule__AcmeTypeRef__PrimitiveAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:24987:1: ( ( rulePrimitivePropertyType ) )
            // InternalAcmeParser.g:24988:2: ( rulePrimitivePropertyType )
            {
            // InternalAcmeParser.g:24988:2: ( rulePrimitivePropertyType )
            // InternalAcmeParser.g:24989:3: rulePrimitivePropertyType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeTypeRefAccess().getPrimitivePrimitivePropertyTypeEnumRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePrimitivePropertyType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeTypeRefAccess().getPrimitivePrimitivePropertyTypeEnumRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeTypeRef__PrimitiveAssignment_0"


    // $ANTLR start "rule__AcmeTypeRef__StructureAssignment_1"
    // InternalAcmeParser.g:24998:1: rule__AcmeTypeRef__StructureAssignment_1 : ( ruleAcmePropertyTypeRecord ) ;
    public final void rule__AcmeTypeRef__StructureAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25002:1: ( ( ruleAcmePropertyTypeRecord ) )
            // InternalAcmeParser.g:25003:2: ( ruleAcmePropertyTypeRecord )
            {
            // InternalAcmeParser.g:25003:2: ( ruleAcmePropertyTypeRecord )
            // InternalAcmeParser.g:25004:3: ruleAcmePropertyTypeRecord
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeTypeRefAccess().getStructureAcmePropertyTypeRecordParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyTypeRecord();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeTypeRefAccess().getStructureAcmePropertyTypeRecordParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeTypeRef__StructureAssignment_1"


    // $ANTLR start "rule__AcmeTypeRef__StructureAssignment_2"
    // InternalAcmeParser.g:25013:1: rule__AcmeTypeRef__StructureAssignment_2 : ( ruleAcmePropertyTypeSet ) ;
    public final void rule__AcmeTypeRef__StructureAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25017:1: ( ( ruleAcmePropertyTypeSet ) )
            // InternalAcmeParser.g:25018:2: ( ruleAcmePropertyTypeSet )
            {
            // InternalAcmeParser.g:25018:2: ( ruleAcmePropertyTypeSet )
            // InternalAcmeParser.g:25019:3: ruleAcmePropertyTypeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeTypeRefAccess().getStructureAcmePropertyTypeSetParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyTypeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeTypeRefAccess().getStructureAcmePropertyTypeSetParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeTypeRef__StructureAssignment_2"


    // $ANTLR start "rule__AcmeTypeRef__StructureAssignment_3"
    // InternalAcmeParser.g:25028:1: rule__AcmeTypeRef__StructureAssignment_3 : ( ruleAcmePropertyTypeSequence ) ;
    public final void rule__AcmeTypeRef__StructureAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25032:1: ( ( ruleAcmePropertyTypeSequence ) )
            // InternalAcmeParser.g:25033:2: ( ruleAcmePropertyTypeSequence )
            {
            // InternalAcmeParser.g:25033:2: ( ruleAcmePropertyTypeSequence )
            // InternalAcmeParser.g:25034:3: ruleAcmePropertyTypeSequence
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeTypeRefAccess().getStructureAcmePropertyTypeSequenceParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyTypeSequence();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeTypeRefAccess().getStructureAcmePropertyTypeSequenceParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeTypeRef__StructureAssignment_3"


    // $ANTLR start "rule__AcmeTypeRef__NumAssignment_4"
    // InternalAcmeParser.g:25043:1: rule__AcmeTypeRef__NumAssignment_4 : ( ruleAcmePropertyTypeEnum ) ;
    public final void rule__AcmeTypeRef__NumAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25047:1: ( ( ruleAcmePropertyTypeEnum ) )
            // InternalAcmeParser.g:25048:2: ( ruleAcmePropertyTypeEnum )
            {
            // InternalAcmeParser.g:25048:2: ( ruleAcmePropertyTypeEnum )
            // InternalAcmeParser.g:25049:3: ruleAcmePropertyTypeEnum
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeTypeRefAccess().getNumAcmePropertyTypeEnumParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAcmePropertyTypeEnum();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeTypeRefAccess().getNumAcmePropertyTypeEnumParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeTypeRef__NumAssignment_4"


    // $ANTLR start "rule__AcmeTypeRef__RefAssignment_5"
    // InternalAcmeParser.g:25058:1: rule__AcmeTypeRef__RefAssignment_5 : ( ( RULE_ID ) ) ;
    public final void rule__AcmeTypeRef__RefAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25062:1: ( ( ( RULE_ID ) ) )
            // InternalAcmeParser.g:25063:2: ( ( RULE_ID ) )
            {
            // InternalAcmeParser.g:25063:2: ( ( RULE_ID ) )
            // InternalAcmeParser.g:25064:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeTypeRefAccess().getRefElementTypeRefCrossReference_5_0()); 
            }
            // InternalAcmeParser.g:25065:3: ( RULE_ID )
            // InternalAcmeParser.g:25066:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcmeTypeRefAccess().getRefElementTypeRefIDTerminalRuleCall_5_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeTypeRefAccess().getRefElementTypeRefIDTerminalRuleCall_5_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcmeTypeRefAccess().getRefElementTypeRefCrossReference_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcmeTypeRef__RefAssignment_5"


    // $ANTLR start "rule__AssignmentExpression__BooleanExprAssignment_0"
    // InternalAcmeParser.g:25077:1: rule__AssignmentExpression__BooleanExprAssignment_0 : ( rulebooleanExpression ) ;
    public final void rule__AssignmentExpression__BooleanExprAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25081:1: ( ( rulebooleanExpression ) )
            // InternalAcmeParser.g:25082:2: ( rulebooleanExpression )
            {
            // InternalAcmeParser.g:25082:2: ( rulebooleanExpression )
            // InternalAcmeParser.g:25083:3: rulebooleanExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getBooleanExprBooleanExpressionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulebooleanExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getBooleanExprBooleanExpressionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__BooleanExprAssignment_0"


    // $ANTLR start "rule__AssignmentExpression__AssignAssignment_1_0"
    // InternalAcmeParser.g:25092:1: rule__AssignmentExpression__AssignAssignment_1_0 : ( ruleAssignKind ) ;
    public final void rule__AssignmentExpression__AssignAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25096:1: ( ( ruleAssignKind ) )
            // InternalAcmeParser.g:25097:2: ( ruleAssignKind )
            {
            // InternalAcmeParser.g:25097:2: ( ruleAssignKind )
            // InternalAcmeParser.g:25098:3: ruleAssignKind
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getAssignAssignKindEnumRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAssignKind();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getAssignAssignKindEnumRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__AssignAssignment_1_0"


    // $ANTLR start "rule__AssignmentExpression__AssignmentExprAssignment_1_1"
    // InternalAcmeParser.g:25107:1: rule__AssignmentExpression__AssignmentExprAssignment_1_1 : ( ruleassignmentExpression ) ;
    public final void rule__AssignmentExpression__AssignmentExprAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25111:1: ( ( ruleassignmentExpression ) )
            // InternalAcmeParser.g:25112:2: ( ruleassignmentExpression )
            {
            // InternalAcmeParser.g:25112:2: ( ruleassignmentExpression )
            // InternalAcmeParser.g:25113:3: ruleassignmentExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentExpressionAccess().getAssignmentExprAssignmentExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleassignmentExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentExpressionAccess().getAssignmentExprAssignmentExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentExpression__AssignmentExprAssignment_1_1"


    // $ANTLR start "rule__ImpliesExpression__ImpliesExprAssignment_1_1"
    // InternalAcmeParser.g:25122:1: rule__ImpliesExpression__ImpliesExprAssignment_1_1 : ( ruleimpliesExpression ) ;
    public final void rule__ImpliesExpression__ImpliesExprAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25126:1: ( ( ruleimpliesExpression ) )
            // InternalAcmeParser.g:25127:2: ( ruleimpliesExpression )
            {
            // InternalAcmeParser.g:25127:2: ( ruleimpliesExpression )
            // InternalAcmeParser.g:25128:3: ruleimpliesExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImpliesExpressionAccess().getImpliesExprImpliesExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleimpliesExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImpliesExpressionAccess().getImpliesExprImpliesExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImpliesExpression__ImpliesExprAssignment_1_1"


    // $ANTLR start "rule__IffExpression__IffExprAssignment_1_1"
    // InternalAcmeParser.g:25137:1: rule__IffExpression__IffExprAssignment_1_1 : ( ruleiffExpression ) ;
    public final void rule__IffExpression__IffExprAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25141:1: ( ( ruleiffExpression ) )
            // InternalAcmeParser.g:25142:2: ( ruleiffExpression )
            {
            // InternalAcmeParser.g:25142:2: ( ruleiffExpression )
            // InternalAcmeParser.g:25143:3: ruleiffExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIffExpressionAccess().getIffExprIffExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleiffExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIffExpressionAccess().getIffExprIffExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IffExpression__IffExprAssignment_1_1"


    // $ANTLR start "rule__LogicalOrExpression__LogicalOrExprAssignment_1_1"
    // InternalAcmeParser.g:25152:1: rule__LogicalOrExpression__LogicalOrExprAssignment_1_1 : ( rulelogicalOrExpression ) ;
    public final void rule__LogicalOrExpression__LogicalOrExprAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25156:1: ( ( rulelogicalOrExpression ) )
            // InternalAcmeParser.g:25157:2: ( rulelogicalOrExpression )
            {
            // InternalAcmeParser.g:25157:2: ( rulelogicalOrExpression )
            // InternalAcmeParser.g:25158:3: rulelogicalOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalOrExpressionAccess().getLogicalOrExprLogicalOrExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulelogicalOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalOrExpressionAccess().getLogicalOrExprLogicalOrExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__LogicalOrExprAssignment_1_1"


    // $ANTLR start "rule__LogicalAndExpression__LogicalAndExprAssignment_1_1"
    // InternalAcmeParser.g:25167:1: rule__LogicalAndExpression__LogicalAndExprAssignment_1_1 : ( rulelogicalAndExpression ) ;
    public final void rule__LogicalAndExpression__LogicalAndExprAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25171:1: ( ( rulelogicalAndExpression ) )
            // InternalAcmeParser.g:25172:2: ( rulelogicalAndExpression )
            {
            // InternalAcmeParser.g:25172:2: ( rulelogicalAndExpression )
            // InternalAcmeParser.g:25173:3: rulelogicalAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndExpressionAccess().getLogicalAndExprLogicalAndExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulelogicalAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndExpressionAccess().getLogicalAndExprLogicalAndExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__LogicalAndExprAssignment_1_1"


    // $ANTLR start "rule__EqualityExpression__EqAssignment_1_0"
    // InternalAcmeParser.g:25182:1: rule__EqualityExpression__EqAssignment_1_0 : ( ( rule__EqualityExpression__EqAlternatives_1_0_0 ) ) ;
    public final void rule__EqualityExpression__EqAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25186:1: ( ( ( rule__EqualityExpression__EqAlternatives_1_0_0 ) ) )
            // InternalAcmeParser.g:25187:2: ( ( rule__EqualityExpression__EqAlternatives_1_0_0 ) )
            {
            // InternalAcmeParser.g:25187:2: ( ( rule__EqualityExpression__EqAlternatives_1_0_0 ) )
            // InternalAcmeParser.g:25188:3: ( rule__EqualityExpression__EqAlternatives_1_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityExpressionAccess().getEqAlternatives_1_0_0()); 
            }
            // InternalAcmeParser.g:25189:3: ( rule__EqualityExpression__EqAlternatives_1_0_0 )
            // InternalAcmeParser.g:25189:4: rule__EqualityExpression__EqAlternatives_1_0_0
            {
            pushFollow(FOLLOW_2);
            rule__EqualityExpression__EqAlternatives_1_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityExpressionAccess().getEqAlternatives_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityExpression__EqAssignment_1_0"


    // $ANTLR start "rule__EqualityExpression__EqExprAssignment_1_1"
    // InternalAcmeParser.g:25197:1: rule__EqualityExpression__EqExprAssignment_1_1 : ( ruleequalityExpression ) ;
    public final void rule__EqualityExpression__EqExprAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25201:1: ( ( ruleequalityExpression ) )
            // InternalAcmeParser.g:25202:2: ( ruleequalityExpression )
            {
            // InternalAcmeParser.g:25202:2: ( ruleequalityExpression )
            // InternalAcmeParser.g:25203:3: ruleequalityExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityExpressionAccess().getEqExprEqualityExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleequalityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityExpressionAccess().getEqExprEqualityExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityExpression__EqExprAssignment_1_1"


    // $ANTLR start "rule__RelationalExpression__RelAssignment_1_0"
    // InternalAcmeParser.g:25212:1: rule__RelationalExpression__RelAssignment_1_0 : ( ( rule__RelationalExpression__RelAlternatives_1_0_0 ) ) ;
    public final void rule__RelationalExpression__RelAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25216:1: ( ( ( rule__RelationalExpression__RelAlternatives_1_0_0 ) ) )
            // InternalAcmeParser.g:25217:2: ( ( rule__RelationalExpression__RelAlternatives_1_0_0 ) )
            {
            // InternalAcmeParser.g:25217:2: ( ( rule__RelationalExpression__RelAlternatives_1_0_0 ) )
            // InternalAcmeParser.g:25218:3: ( rule__RelationalExpression__RelAlternatives_1_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getRelAlternatives_1_0_0()); 
            }
            // InternalAcmeParser.g:25219:3: ( rule__RelationalExpression__RelAlternatives_1_0_0 )
            // InternalAcmeParser.g:25219:4: rule__RelationalExpression__RelAlternatives_1_0_0
            {
            pushFollow(FOLLOW_2);
            rule__RelationalExpression__RelAlternatives_1_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getRelAlternatives_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__RelAssignment_1_0"


    // $ANTLR start "rule__RelationalExpression__RelExprAssignment_1_1"
    // InternalAcmeParser.g:25227:1: rule__RelationalExpression__RelExprAssignment_1_1 : ( rulerelationalExpression ) ;
    public final void rule__RelationalExpression__RelExprAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25231:1: ( ( rulerelationalExpression ) )
            // InternalAcmeParser.g:25232:2: ( rulerelationalExpression )
            {
            // InternalAcmeParser.g:25232:2: ( rulerelationalExpression )
            // InternalAcmeParser.g:25233:3: rulerelationalExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRelationalExpressionAccess().getRelExprRelationalExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulerelationalExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRelationalExpressionAccess().getRelExprRelationalExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RelationalExpression__RelExprAssignment_1_1"


    // $ANTLR start "rule__AdditiveExpression__AddAssignment_1_0"
    // InternalAcmeParser.g:25242:1: rule__AdditiveExpression__AddAssignment_1_0 : ( ( rule__AdditiveExpression__AddAlternatives_1_0_0 ) ) ;
    public final void rule__AdditiveExpression__AddAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25246:1: ( ( ( rule__AdditiveExpression__AddAlternatives_1_0_0 ) ) )
            // InternalAcmeParser.g:25247:2: ( ( rule__AdditiveExpression__AddAlternatives_1_0_0 ) )
            {
            // InternalAcmeParser.g:25247:2: ( ( rule__AdditiveExpression__AddAlternatives_1_0_0 ) )
            // InternalAcmeParser.g:25248:3: ( rule__AdditiveExpression__AddAlternatives_1_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getAddAlternatives_1_0_0()); 
            }
            // InternalAcmeParser.g:25249:3: ( rule__AdditiveExpression__AddAlternatives_1_0_0 )
            // InternalAcmeParser.g:25249:4: rule__AdditiveExpression__AddAlternatives_1_0_0
            {
            pushFollow(FOLLOW_2);
            rule__AdditiveExpression__AddAlternatives_1_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getAddAlternatives_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__AddAssignment_1_0"


    // $ANTLR start "rule__AdditiveExpression__AddExprAssignment_1_1"
    // InternalAcmeParser.g:25257:1: rule__AdditiveExpression__AddExprAssignment_1_1 : ( ruleadditiveExpression ) ;
    public final void rule__AdditiveExpression__AddExprAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25261:1: ( ( ruleadditiveExpression ) )
            // InternalAcmeParser.g:25262:2: ( ruleadditiveExpression )
            {
            // InternalAcmeParser.g:25262:2: ( ruleadditiveExpression )
            // InternalAcmeParser.g:25263:3: ruleadditiveExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditiveExpressionAccess().getAddExprAdditiveExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleadditiveExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditiveExpressionAccess().getAddExprAdditiveExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AdditiveExpression__AddExprAssignment_1_1"


    // $ANTLR start "rule__MultiplicativeExpression__MultAssignment_1_0"
    // InternalAcmeParser.g:25272:1: rule__MultiplicativeExpression__MultAssignment_1_0 : ( ( rule__MultiplicativeExpression__MultAlternatives_1_0_0 ) ) ;
    public final void rule__MultiplicativeExpression__MultAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25276:1: ( ( ( rule__MultiplicativeExpression__MultAlternatives_1_0_0 ) ) )
            // InternalAcmeParser.g:25277:2: ( ( rule__MultiplicativeExpression__MultAlternatives_1_0_0 ) )
            {
            // InternalAcmeParser.g:25277:2: ( ( rule__MultiplicativeExpression__MultAlternatives_1_0_0 ) )
            // InternalAcmeParser.g:25278:3: ( rule__MultiplicativeExpression__MultAlternatives_1_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getMultAlternatives_1_0_0()); 
            }
            // InternalAcmeParser.g:25279:3: ( rule__MultiplicativeExpression__MultAlternatives_1_0_0 )
            // InternalAcmeParser.g:25279:4: rule__MultiplicativeExpression__MultAlternatives_1_0_0
            {
            pushFollow(FOLLOW_2);
            rule__MultiplicativeExpression__MultAlternatives_1_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getMultAlternatives_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__MultAssignment_1_0"


    // $ANTLR start "rule__MultiplicativeExpression__MultExprAssignment_1_1"
    // InternalAcmeParser.g:25287:1: rule__MultiplicativeExpression__MultExprAssignment_1_1 : ( rulemultiplicativeExpression ) ;
    public final void rule__MultiplicativeExpression__MultExprAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25291:1: ( ( rulemultiplicativeExpression ) )
            // InternalAcmeParser.g:25292:2: ( rulemultiplicativeExpression )
            {
            // InternalAcmeParser.g:25292:2: ( rulemultiplicativeExpression )
            // InternalAcmeParser.g:25293:3: rulemultiplicativeExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicativeExpressionAccess().getMultExprMultiplicativeExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulemultiplicativeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicativeExpressionAccess().getMultExprMultiplicativeExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiplicativeExpression__MultExprAssignment_1_1"


    // $ANTLR start "rule__UnaryExpression__UnaryAssignment_0"
    // InternalAcmeParser.g:25302:1: rule__UnaryExpression__UnaryAssignment_0 : ( ( rule__UnaryExpression__UnaryAlternatives_0_0 ) ) ;
    public final void rule__UnaryExpression__UnaryAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25306:1: ( ( ( rule__UnaryExpression__UnaryAlternatives_0_0 ) ) )
            // InternalAcmeParser.g:25307:2: ( ( rule__UnaryExpression__UnaryAlternatives_0_0 ) )
            {
            // InternalAcmeParser.g:25307:2: ( ( rule__UnaryExpression__UnaryAlternatives_0_0 ) )
            // InternalAcmeParser.g:25308:3: ( rule__UnaryExpression__UnaryAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionAccess().getUnaryAlternatives_0_0()); 
            }
            // InternalAcmeParser.g:25309:3: ( rule__UnaryExpression__UnaryAlternatives_0_0 )
            // InternalAcmeParser.g:25309:4: rule__UnaryExpression__UnaryAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__UnaryExpression__UnaryAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionAccess().getUnaryAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__UnaryAssignment_0"


    // $ANTLR start "rule__UnaryExpression__PrimaryExprAssignment_1"
    // InternalAcmeParser.g:25317:1: rule__UnaryExpression__PrimaryExprAssignment_1 : ( rulenonunaryExpression ) ;
    public final void rule__UnaryExpression__PrimaryExprAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25321:1: ( ( rulenonunaryExpression ) )
            // InternalAcmeParser.g:25322:2: ( rulenonunaryExpression )
            {
            // InternalAcmeParser.g:25322:2: ( rulenonunaryExpression )
            // InternalAcmeParser.g:25323:3: rulenonunaryExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionAccess().getPrimaryExprNonunaryExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulenonunaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionAccess().getPrimaryExprNonunaryExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__PrimaryExprAssignment_1"


    // $ANTLR start "rule__UnaryExpression__PostAssignment_2"
    // InternalAcmeParser.g:25332:1: rule__UnaryExpression__PostAssignment_2 : ( ( rule__UnaryExpression__PostAlternatives_2_0 ) ) ;
    public final void rule__UnaryExpression__PostAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25336:1: ( ( ( rule__UnaryExpression__PostAlternatives_2_0 ) ) )
            // InternalAcmeParser.g:25337:2: ( ( rule__UnaryExpression__PostAlternatives_2_0 ) )
            {
            // InternalAcmeParser.g:25337:2: ( ( rule__UnaryExpression__PostAlternatives_2_0 ) )
            // InternalAcmeParser.g:25338:3: ( rule__UnaryExpression__PostAlternatives_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExpressionAccess().getPostAlternatives_2_0()); 
            }
            // InternalAcmeParser.g:25339:3: ( rule__UnaryExpression__PostAlternatives_2_0 )
            // InternalAcmeParser.g:25339:4: rule__UnaryExpression__PostAlternatives_2_0
            {
            pushFollow(FOLLOW_2);
            rule__UnaryExpression__PostAlternatives_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExpressionAccess().getPostAlternatives_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpression__PostAssignment_2"


    // $ANTLR start "rule__PostIdExpression__IdAssignment_0"
    // InternalAcmeParser.g:25347:1: rule__PostIdExpression__IdAssignment_0 : ( RULE_ID ) ;
    public final void rule__PostIdExpression__IdAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25351:1: ( ( RULE_ID ) )
            // InternalAcmeParser.g:25352:2: ( RULE_ID )
            {
            // InternalAcmeParser.g:25352:2: ( RULE_ID )
            // InternalAcmeParser.g:25353:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPostIdExpressionAccess().getIdIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPostIdExpressionAccess().getIdIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PostIdExpression__IdAssignment_0"


    // $ANTLR start "rule__MethodCall__IdAssignment_0"
    // InternalAcmeParser.g:25362:1: rule__MethodCall__IdAssignment_0 : ( ruleQualifiedIdentifier ) ;
    public final void rule__MethodCall__IdAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25366:1: ( ( ruleQualifiedIdentifier ) )
            // InternalAcmeParser.g:25367:2: ( ruleQualifiedIdentifier )
            {
            // InternalAcmeParser.g:25367:2: ( ruleQualifiedIdentifier )
            // InternalAcmeParser.g:25368:3: ruleQualifiedIdentifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodCallAccess().getIdQualifiedIdentifierParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodCallAccess().getIdQualifiedIdentifierParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodCall__IdAssignment_0"


    // $ANTLR start "rule__MethodCall__ExpressionsAssignment_2_0"
    // InternalAcmeParser.g:25377:1: rule__MethodCall__ExpressionsAssignment_2_0 : ( ruleassignmentExpression ) ;
    public final void rule__MethodCall__ExpressionsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25381:1: ( ( ruleassignmentExpression ) )
            // InternalAcmeParser.g:25382:2: ( ruleassignmentExpression )
            {
            // InternalAcmeParser.g:25382:2: ( ruleassignmentExpression )
            // InternalAcmeParser.g:25383:3: ruleassignmentExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodCallAccess().getExpressionsAssignmentExpressionParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleassignmentExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodCallAccess().getExpressionsAssignmentExpressionParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodCall__ExpressionsAssignment_2_0"


    // $ANTLR start "rule__MethodCall__ExpressionsAssignment_2_1_1"
    // InternalAcmeParser.g:25392:1: rule__MethodCall__ExpressionsAssignment_2_1_1 : ( ruleassignmentExpression ) ;
    public final void rule__MethodCall__ExpressionsAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25396:1: ( ( ruleassignmentExpression ) )
            // InternalAcmeParser.g:25397:2: ( ruleassignmentExpression )
            {
            // InternalAcmeParser.g:25397:2: ( ruleassignmentExpression )
            // InternalAcmeParser.g:25398:3: ruleassignmentExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodCallAccess().getExpressionsAssignmentExpressionParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleassignmentExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodCallAccess().getExpressionsAssignmentExpressionParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodCall__ExpressionsAssignment_2_1_1"


    // $ANTLR start "rule__Param__DeclaresAssignment_1"
    // InternalAcmeParser.g:25407:1: rule__Param__DeclaresAssignment_1 : ( ( rule__Param__DeclaresAlternatives_1_0 ) ) ;
    public final void rule__Param__DeclaresAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25411:1: ( ( ( rule__Param__DeclaresAlternatives_1_0 ) ) )
            // InternalAcmeParser.g:25412:2: ( ( rule__Param__DeclaresAlternatives_1_0 ) )
            {
            // InternalAcmeParser.g:25412:2: ( ( rule__Param__DeclaresAlternatives_1_0 ) )
            // InternalAcmeParser.g:25413:3: ( rule__Param__DeclaresAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParamAccess().getDeclaresAlternatives_1_0()); 
            }
            // InternalAcmeParser.g:25414:3: ( rule__Param__DeclaresAlternatives_1_0 )
            // InternalAcmeParser.g:25414:4: rule__Param__DeclaresAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Param__DeclaresAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParamAccess().getDeclaresAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__DeclaresAssignment_1"


    // $ANTLR start "rule__Param__DataTypeAssignment_2"
    // InternalAcmeParser.g:25422:1: rule__Param__DataTypeAssignment_2 : ( ruledataType ) ;
    public final void rule__Param__DataTypeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25426:1: ( ( ruledataType ) )
            // InternalAcmeParser.g:25427:2: ( ruledataType )
            {
            // InternalAcmeParser.g:25427:2: ( ruledataType )
            // InternalAcmeParser.g:25428:3: ruledataType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParamAccess().getDataTypeDataTypeParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruledataType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParamAccess().getDataTypeDataTypeParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__DataTypeAssignment_2"


    // $ANTLR start "rule__QuantifiedExpression__ParamsAssignment_0_2"
    // InternalAcmeParser.g:25437:1: rule__QuantifiedExpression__ParamsAssignment_0_2 : ( ruleparam ) ;
    public final void rule__QuantifiedExpression__ParamsAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25441:1: ( ( ruleparam ) )
            // InternalAcmeParser.g:25442:2: ( ruleparam )
            {
            // InternalAcmeParser.g:25442:2: ( ruleparam )
            // InternalAcmeParser.g:25443:3: ruleparam
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getParamsParamParserRuleCall_0_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleparam();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getParamsParamParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__ParamsAssignment_0_2"


    // $ANTLR start "rule__QuantifiedExpression__ParamsAssignment_0_3_1"
    // InternalAcmeParser.g:25452:1: rule__QuantifiedExpression__ParamsAssignment_0_3_1 : ( ruleparam ) ;
    public final void rule__QuantifiedExpression__ParamsAssignment_0_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25456:1: ( ( ruleparam ) )
            // InternalAcmeParser.g:25457:2: ( ruleparam )
            {
            // InternalAcmeParser.g:25457:2: ( ruleparam )
            // InternalAcmeParser.g:25458:3: ruleparam
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getParamsParamParserRuleCall_0_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleparam();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getParamsParamParserRuleCall_0_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__ParamsAssignment_0_3_1"


    // $ANTLR start "rule__QuantifiedExpression__RangeAssignment_0_5"
    // InternalAcmeParser.g:25467:1: rule__QuantifiedExpression__RangeAssignment_0_5 : ( ( rule__QuantifiedExpression__RangeAlternatives_0_5_0 ) ) ;
    public final void rule__QuantifiedExpression__RangeAssignment_0_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25471:1: ( ( ( rule__QuantifiedExpression__RangeAlternatives_0_5_0 ) ) )
            // InternalAcmeParser.g:25472:2: ( ( rule__QuantifiedExpression__RangeAlternatives_0_5_0 ) )
            {
            // InternalAcmeParser.g:25472:2: ( ( rule__QuantifiedExpression__RangeAlternatives_0_5_0 ) )
            // InternalAcmeParser.g:25473:3: ( rule__QuantifiedExpression__RangeAlternatives_0_5_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getRangeAlternatives_0_5_0()); 
            }
            // InternalAcmeParser.g:25474:3: ( rule__QuantifiedExpression__RangeAlternatives_0_5_0 )
            // InternalAcmeParser.g:25474:4: rule__QuantifiedExpression__RangeAlternatives_0_5_0
            {
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__RangeAlternatives_0_5_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getRangeAlternatives_0_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__RangeAssignment_0_5"


    // $ANTLR start "rule__QuantifiedExpression__ExprAssignment_0_7"
    // InternalAcmeParser.g:25482:1: rule__QuantifiedExpression__ExprAssignment_0_7 : ( ruleassignmentExpression ) ;
    public final void rule__QuantifiedExpression__ExprAssignment_0_7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25486:1: ( ( ruleassignmentExpression ) )
            // InternalAcmeParser.g:25487:2: ( ruleassignmentExpression )
            {
            // InternalAcmeParser.g:25487:2: ( ruleassignmentExpression )
            // InternalAcmeParser.g:25488:3: ruleassignmentExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getExprAssignmentExpressionParserRuleCall_0_7_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleassignmentExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getExprAssignmentExpressionParserRuleCall_0_7_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__ExprAssignment_0_7"


    // $ANTLR start "rule__QuantifiedExpression__ParamsAssignment_1_2"
    // InternalAcmeParser.g:25497:1: rule__QuantifiedExpression__ParamsAssignment_1_2 : ( ruleparam ) ;
    public final void rule__QuantifiedExpression__ParamsAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25501:1: ( ( ruleparam ) )
            // InternalAcmeParser.g:25502:2: ( ruleparam )
            {
            // InternalAcmeParser.g:25502:2: ( ruleparam )
            // InternalAcmeParser.g:25503:3: ruleparam
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getParamsParamParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleparam();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getParamsParamParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__ParamsAssignment_1_2"


    // $ANTLR start "rule__QuantifiedExpression__ParamsAssignment_1_3_1"
    // InternalAcmeParser.g:25512:1: rule__QuantifiedExpression__ParamsAssignment_1_3_1 : ( ruleparam ) ;
    public final void rule__QuantifiedExpression__ParamsAssignment_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25516:1: ( ( ruleparam ) )
            // InternalAcmeParser.g:25517:2: ( ruleparam )
            {
            // InternalAcmeParser.g:25517:2: ( ruleparam )
            // InternalAcmeParser.g:25518:3: ruleparam
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getParamsParamParserRuleCall_1_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleparam();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getParamsParamParserRuleCall_1_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__ParamsAssignment_1_3_1"


    // $ANTLR start "rule__QuantifiedExpression__RangeAssignment_1_5"
    // InternalAcmeParser.g:25527:1: rule__QuantifiedExpression__RangeAssignment_1_5 : ( ( rule__QuantifiedExpression__RangeAlternatives_1_5_0 ) ) ;
    public final void rule__QuantifiedExpression__RangeAssignment_1_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25531:1: ( ( ( rule__QuantifiedExpression__RangeAlternatives_1_5_0 ) ) )
            // InternalAcmeParser.g:25532:2: ( ( rule__QuantifiedExpression__RangeAlternatives_1_5_0 ) )
            {
            // InternalAcmeParser.g:25532:2: ( ( rule__QuantifiedExpression__RangeAlternatives_1_5_0 ) )
            // InternalAcmeParser.g:25533:3: ( rule__QuantifiedExpression__RangeAlternatives_1_5_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getRangeAlternatives_1_5_0()); 
            }
            // InternalAcmeParser.g:25534:3: ( rule__QuantifiedExpression__RangeAlternatives_1_5_0 )
            // InternalAcmeParser.g:25534:4: rule__QuantifiedExpression__RangeAlternatives_1_5_0
            {
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__RangeAlternatives_1_5_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getRangeAlternatives_1_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__RangeAssignment_1_5"


    // $ANTLR start "rule__QuantifiedExpression__ExprAssignment_1_7"
    // InternalAcmeParser.g:25542:1: rule__QuantifiedExpression__ExprAssignment_1_7 : ( ruleassignmentExpression ) ;
    public final void rule__QuantifiedExpression__ExprAssignment_1_7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25546:1: ( ( ruleassignmentExpression ) )
            // InternalAcmeParser.g:25547:2: ( ruleassignmentExpression )
            {
            // InternalAcmeParser.g:25547:2: ( ruleassignmentExpression )
            // InternalAcmeParser.g:25548:3: ruleassignmentExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getExprAssignmentExpressionParserRuleCall_1_7_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleassignmentExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getExprAssignmentExpressionParserRuleCall_1_7_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__ExprAssignment_1_7"


    // $ANTLR start "rule__QuantifiedExpression__ParamsAssignment_2_2"
    // InternalAcmeParser.g:25557:1: rule__QuantifiedExpression__ParamsAssignment_2_2 : ( ruleparam ) ;
    public final void rule__QuantifiedExpression__ParamsAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25561:1: ( ( ruleparam ) )
            // InternalAcmeParser.g:25562:2: ( ruleparam )
            {
            // InternalAcmeParser.g:25562:2: ( ruleparam )
            // InternalAcmeParser.g:25563:3: ruleparam
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getParamsParamParserRuleCall_2_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleparam();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getParamsParamParserRuleCall_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__ParamsAssignment_2_2"


    // $ANTLR start "rule__QuantifiedExpression__ParamsAssignment_2_3_1"
    // InternalAcmeParser.g:25572:1: rule__QuantifiedExpression__ParamsAssignment_2_3_1 : ( ruleparam ) ;
    public final void rule__QuantifiedExpression__ParamsAssignment_2_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25576:1: ( ( ruleparam ) )
            // InternalAcmeParser.g:25577:2: ( ruleparam )
            {
            // InternalAcmeParser.g:25577:2: ( ruleparam )
            // InternalAcmeParser.g:25578:3: ruleparam
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getParamsParamParserRuleCall_2_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleparam();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getParamsParamParserRuleCall_2_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__ParamsAssignment_2_3_1"


    // $ANTLR start "rule__QuantifiedExpression__RangeAssignment_2_5"
    // InternalAcmeParser.g:25587:1: rule__QuantifiedExpression__RangeAssignment_2_5 : ( ( rule__QuantifiedExpression__RangeAlternatives_2_5_0 ) ) ;
    public final void rule__QuantifiedExpression__RangeAssignment_2_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25591:1: ( ( ( rule__QuantifiedExpression__RangeAlternatives_2_5_0 ) ) )
            // InternalAcmeParser.g:25592:2: ( ( rule__QuantifiedExpression__RangeAlternatives_2_5_0 ) )
            {
            // InternalAcmeParser.g:25592:2: ( ( rule__QuantifiedExpression__RangeAlternatives_2_5_0 ) )
            // InternalAcmeParser.g:25593:3: ( rule__QuantifiedExpression__RangeAlternatives_2_5_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getRangeAlternatives_2_5_0()); 
            }
            // InternalAcmeParser.g:25594:3: ( rule__QuantifiedExpression__RangeAlternatives_2_5_0 )
            // InternalAcmeParser.g:25594:4: rule__QuantifiedExpression__RangeAlternatives_2_5_0
            {
            pushFollow(FOLLOW_2);
            rule__QuantifiedExpression__RangeAlternatives_2_5_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getRangeAlternatives_2_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__RangeAssignment_2_5"


    // $ANTLR start "rule__QuantifiedExpression__ExprAssignment_2_7"
    // InternalAcmeParser.g:25602:1: rule__QuantifiedExpression__ExprAssignment_2_7 : ( ruleassignmentExpression ) ;
    public final void rule__QuantifiedExpression__ExprAssignment_2_7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25606:1: ( ( ruleassignmentExpression ) )
            // InternalAcmeParser.g:25607:2: ( ruleassignmentExpression )
            {
            // InternalAcmeParser.g:25607:2: ( ruleassignmentExpression )
            // InternalAcmeParser.g:25608:3: ruleassignmentExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuantifiedExpressionAccess().getExprAssignmentExpressionParserRuleCall_2_7_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleassignmentExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuantifiedExpressionAccess().getExprAssignmentExpressionParserRuleCall_2_7_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuantifiedExpression__ExprAssignment_2_7"


    // $ANTLR start "rule__PathExpression__IdAssignment_1_0"
    // InternalAcmeParser.g:25617:1: rule__PathExpression__IdAssignment_1_0 : ( ruleQualifiedIdentifier ) ;
    public final void rule__PathExpression__IdAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25621:1: ( ( ruleQualifiedIdentifier ) )
            // InternalAcmeParser.g:25622:2: ( ruleQualifiedIdentifier )
            {
            // InternalAcmeParser.g:25622:2: ( ruleQualifiedIdentifier )
            // InternalAcmeParser.g:25623:3: ruleQualifiedIdentifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathExpressionAccess().getIdQualifiedIdentifierParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathExpressionAccess().getIdQualifiedIdentifierParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpression__IdAssignment_1_0"


    // $ANTLR start "rule__PathExpression__CallAssignment_1_1"
    // InternalAcmeParser.g:25632:1: rule__PathExpression__CallAssignment_1_1 : ( rulemethodCall ) ;
    public final void rule__PathExpression__CallAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25636:1: ( ( rulemethodCall ) )
            // InternalAcmeParser.g:25637:2: ( rulemethodCall )
            {
            // InternalAcmeParser.g:25637:2: ( rulemethodCall )
            // InternalAcmeParser.g:25638:3: rulemethodCall
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathExpressionAccess().getCallMethodCallParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulemethodCall();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathExpressionAccess().getCallMethodCallParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpression__CallAssignment_1_1"


    // $ANTLR start "rule__PathExpression__DeclaresAssignment_2_0"
    // InternalAcmeParser.g:25647:1: rule__PathExpression__DeclaresAssignment_2_0 : ( ( rule__PathExpression__DeclaresAlternatives_2_0_0 ) ) ;
    public final void rule__PathExpression__DeclaresAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25651:1: ( ( ( rule__PathExpression__DeclaresAlternatives_2_0_0 ) ) )
            // InternalAcmeParser.g:25652:2: ( ( rule__PathExpression__DeclaresAlternatives_2_0_0 ) )
            {
            // InternalAcmeParser.g:25652:2: ( ( rule__PathExpression__DeclaresAlternatives_2_0_0 ) )
            // InternalAcmeParser.g:25653:3: ( rule__PathExpression__DeclaresAlternatives_2_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathExpressionAccess().getDeclaresAlternatives_2_0_0()); 
            }
            // InternalAcmeParser.g:25654:3: ( rule__PathExpression__DeclaresAlternatives_2_0_0 )
            // InternalAcmeParser.g:25654:4: rule__PathExpression__DeclaresAlternatives_2_0_0
            {
            pushFollow(FOLLOW_2);
            rule__PathExpression__DeclaresAlternatives_2_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathExpressionAccess().getDeclaresAlternatives_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpression__DeclaresAssignment_2_0"


    // $ANTLR start "rule__PathExpression__SelectorAssignment_3_1"
    // InternalAcmeParser.g:25662:1: rule__PathExpression__SelectorAssignment_3_1 : ( ruleassignmentExpression ) ;
    public final void rule__PathExpression__SelectorAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25666:1: ( ( ruleassignmentExpression ) )
            // InternalAcmeParser.g:25667:2: ( ruleassignmentExpression )
            {
            // InternalAcmeParser.g:25667:2: ( ruleassignmentExpression )
            // InternalAcmeParser.g:25668:3: ruleassignmentExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathExpressionAccess().getSelectorAssignmentExpressionParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleassignmentExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathExpressionAccess().getSelectorAssignmentExpressionParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpression__SelectorAssignment_3_1"


    // $ANTLR start "rule__PathExpression__ContinuationAssignment_4"
    // InternalAcmeParser.g:25677:1: rule__PathExpression__ContinuationAssignment_4 : ( rulepathExpressionContinuation ) ;
    public final void rule__PathExpression__ContinuationAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25681:1: ( ( rulepathExpressionContinuation ) )
            // InternalAcmeParser.g:25682:2: ( rulepathExpressionContinuation )
            {
            // InternalAcmeParser.g:25682:2: ( rulepathExpressionContinuation )
            // InternalAcmeParser.g:25683:3: rulepathExpressionContinuation
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathExpressionAccess().getContinuationPathExpressionContinuationParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            rulepathExpressionContinuation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathExpressionAccess().getContinuationPathExpressionContinuationParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpression__ContinuationAssignment_4"


    // $ANTLR start "rule__PathExpressionContinuation__PathAssignment_2"
    // InternalAcmeParser.g:25692:1: rule__PathExpressionContinuation__PathAssignment_2 : ( ( FullStopFullStopFullStop ) ) ;
    public final void rule__PathExpressionContinuation__PathAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25696:1: ( ( ( FullStopFullStopFullStop ) ) )
            // InternalAcmeParser.g:25697:2: ( ( FullStopFullStopFullStop ) )
            {
            // InternalAcmeParser.g:25697:2: ( ( FullStopFullStopFullStop ) )
            // InternalAcmeParser.g:25698:3: ( FullStopFullStopFullStop )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathExpressionContinuationAccess().getPathFullStopFullStopFullStopKeyword_2_0()); 
            }
            // InternalAcmeParser.g:25699:3: ( FullStopFullStopFullStop )
            // InternalAcmeParser.g:25700:4: FullStopFullStopFullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathExpressionContinuationAccess().getPathFullStopFullStopFullStopKeyword_2_0()); 
            }
            match(input,FullStopFullStopFullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathExpressionContinuationAccess().getPathFullStopFullStopFullStopKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathExpressionContinuationAccess().getPathFullStopFullStopFullStopKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpressionContinuation__PathAssignment_2"


    // $ANTLR start "rule__PathExpressionContinuation__DeclaresAssignment_4_0"
    // InternalAcmeParser.g:25711:1: rule__PathExpressionContinuation__DeclaresAssignment_4_0 : ( ( rule__PathExpressionContinuation__DeclaresAlternatives_4_0_0 ) ) ;
    public final void rule__PathExpressionContinuation__DeclaresAssignment_4_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25715:1: ( ( ( rule__PathExpressionContinuation__DeclaresAlternatives_4_0_0 ) ) )
            // InternalAcmeParser.g:25716:2: ( ( rule__PathExpressionContinuation__DeclaresAlternatives_4_0_0 ) )
            {
            // InternalAcmeParser.g:25716:2: ( ( rule__PathExpressionContinuation__DeclaresAlternatives_4_0_0 ) )
            // InternalAcmeParser.g:25717:3: ( rule__PathExpressionContinuation__DeclaresAlternatives_4_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathExpressionContinuationAccess().getDeclaresAlternatives_4_0_0()); 
            }
            // InternalAcmeParser.g:25718:3: ( rule__PathExpressionContinuation__DeclaresAlternatives_4_0_0 )
            // InternalAcmeParser.g:25718:4: rule__PathExpressionContinuation__DeclaresAlternatives_4_0_0
            {
            pushFollow(FOLLOW_2);
            rule__PathExpressionContinuation__DeclaresAlternatives_4_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathExpressionContinuationAccess().getDeclaresAlternatives_4_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpressionContinuation__DeclaresAssignment_4_0"


    // $ANTLR start "rule__PathExpressionContinuation__ExpressionAssignment_5_1"
    // InternalAcmeParser.g:25726:1: rule__PathExpressionContinuation__ExpressionAssignment_5_1 : ( ruleassignmentExpression ) ;
    public final void rule__PathExpressionContinuation__ExpressionAssignment_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25730:1: ( ( ruleassignmentExpression ) )
            // InternalAcmeParser.g:25731:2: ( ruleassignmentExpression )
            {
            // InternalAcmeParser.g:25731:2: ( ruleassignmentExpression )
            // InternalAcmeParser.g:25732:3: ruleassignmentExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathExpressionContinuationAccess().getExpressionAssignmentExpressionParserRuleCall_5_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleassignmentExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathExpressionContinuationAccess().getExpressionAssignmentExpressionParserRuleCall_5_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpressionContinuation__ExpressionAssignment_5_1"


    // $ANTLR start "rule__PathExpressionContinuation__ContinueAssignment_6"
    // InternalAcmeParser.g:25741:1: rule__PathExpressionContinuation__ContinueAssignment_6 : ( rulepathExpressionContinuation ) ;
    public final void rule__PathExpressionContinuation__ContinueAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25745:1: ( ( rulepathExpressionContinuation ) )
            // InternalAcmeParser.g:25746:2: ( rulepathExpressionContinuation )
            {
            // InternalAcmeParser.g:25746:2: ( rulepathExpressionContinuation )
            // InternalAcmeParser.g:25747:3: rulepathExpressionContinuation
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPathExpressionContinuationAccess().getContinuePathExpressionContinuationParserRuleCall_6_0()); 
            }
            pushFollow(FOLLOW_2);
            rulepathExpressionContinuation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPathExpressionContinuationAccess().getContinuePathExpressionContinuationParserRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PathExpressionContinuation__ContinueAssignment_6"


    // $ANTLR start "rule__LiteralSet__LbAssignment_0"
    // InternalAcmeParser.g:25756:1: rule__LiteralSet__LbAssignment_0 : ( ( LeftCurlyBracket ) ) ;
    public final void rule__LiteralSet__LbAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25760:1: ( ( ( LeftCurlyBracket ) ) )
            // InternalAcmeParser.g:25761:2: ( ( LeftCurlyBracket ) )
            {
            // InternalAcmeParser.g:25761:2: ( ( LeftCurlyBracket ) )
            // InternalAcmeParser.g:25762:3: ( LeftCurlyBracket )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralSetAccess().getLbLeftCurlyBracketKeyword_0_0()); 
            }
            // InternalAcmeParser.g:25763:3: ( LeftCurlyBracket )
            // InternalAcmeParser.g:25764:4: LeftCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralSetAccess().getLbLeftCurlyBracketKeyword_0_0()); 
            }
            match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralSetAccess().getLbLeftCurlyBracketKeyword_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralSetAccess().getLbLeftCurlyBracketKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralSet__LbAssignment_0"


    // $ANTLR start "rule__LiteralSet__ExprAssignment_1_0"
    // InternalAcmeParser.g:25775:1: rule__LiteralSet__ExprAssignment_1_0 : ( ruleassignmentExpression ) ;
    public final void rule__LiteralSet__ExprAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25779:1: ( ( ruleassignmentExpression ) )
            // InternalAcmeParser.g:25780:2: ( ruleassignmentExpression )
            {
            // InternalAcmeParser.g:25780:2: ( ruleassignmentExpression )
            // InternalAcmeParser.g:25781:3: ruleassignmentExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralSetAccess().getExprAssignmentExpressionParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleassignmentExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralSetAccess().getExprAssignmentExpressionParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralSet__ExprAssignment_1_0"


    // $ANTLR start "rule__LiteralSet__ExprAssignment_1_1_1"
    // InternalAcmeParser.g:25790:1: rule__LiteralSet__ExprAssignment_1_1_1 : ( ruleassignmentExpression ) ;
    public final void rule__LiteralSet__ExprAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25794:1: ( ( ruleassignmentExpression ) )
            // InternalAcmeParser.g:25795:2: ( ruleassignmentExpression )
            {
            // InternalAcmeParser.g:25795:2: ( ruleassignmentExpression )
            // InternalAcmeParser.g:25796:3: ruleassignmentExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralSetAccess().getExprAssignmentExpressionParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleassignmentExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralSetAccess().getExprAssignmentExpressionParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralSet__ExprAssignment_1_1_1"


    // $ANTLR start "rule__DataType__DataTypeAssignment_7_2_1"
    // InternalAcmeParser.g:25805:1: rule__DataType__DataTypeAssignment_7_2_1 : ( ruledataType ) ;
    public final void rule__DataType__DataTypeAssignment_7_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25809:1: ( ( ruledataType ) )
            // InternalAcmeParser.g:25810:2: ( ruledataType )
            {
            // InternalAcmeParser.g:25810:2: ( ruledataType )
            // InternalAcmeParser.g:25811:3: ruledataType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getDataTypeDataTypeParserRuleCall_7_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruledataType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getDataTypeDataTypeParserRuleCall_7_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__DataTypeAssignment_7_2_1"


    // $ANTLR start "rule__DataType__DataTypeAssignment_8_1_1"
    // InternalAcmeParser.g:25820:1: rule__DataType__DataTypeAssignment_8_1_1 : ( ruledataType ) ;
    public final void rule__DataType__DataTypeAssignment_8_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25824:1: ( ( ruledataType ) )
            // InternalAcmeParser.g:25825:2: ( ruledataType )
            {
            // InternalAcmeParser.g:25825:2: ( ruledataType )
            // InternalAcmeParser.g:25826:3: ruledataType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getDataTypeDataTypeParserRuleCall_8_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruledataType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getDataTypeDataTypeParserRuleCall_8_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__DataTypeAssignment_8_1_1"


    // $ANTLR start "rule__DataType__IdAssignment_9_2_1_0"
    // InternalAcmeParser.g:25835:1: rule__DataType__IdAssignment_9_2_1_0 : ( RULE_ID ) ;
    public final void rule__DataType__IdAssignment_9_2_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25839:1: ( ( RULE_ID ) )
            // InternalAcmeParser.g:25840:2: ( RULE_ID )
            {
            // InternalAcmeParser.g:25840:2: ( RULE_ID )
            // InternalAcmeParser.g:25841:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getIdIDTerminalRuleCall_9_2_1_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getIdIDTerminalRuleCall_9_2_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__IdAssignment_9_2_1_0"


    // $ANTLR start "rule__DataType__IdAssignment_9_2_1_1_1"
    // InternalAcmeParser.g:25850:1: rule__DataType__IdAssignment_9_2_1_1_1 : ( RULE_ID ) ;
    public final void rule__DataType__IdAssignment_9_2_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25854:1: ( ( RULE_ID ) )
            // InternalAcmeParser.g:25855:2: ( RULE_ID )
            {
            // InternalAcmeParser.g:25855:2: ( RULE_ID )
            // InternalAcmeParser.g:25856:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getIdIDTerminalRuleCall_9_2_1_1_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getIdIDTerminalRuleCall_9_2_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__IdAssignment_9_2_1_1_1"


    // $ANTLR start "rule__DataType__TypeAssignment_9_2_1_3"
    // InternalAcmeParser.g:25865:1: rule__DataType__TypeAssignment_9_2_1_3 : ( ruledataType ) ;
    public final void rule__DataType__TypeAssignment_9_2_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25869:1: ( ( ruledataType ) )
            // InternalAcmeParser.g:25870:2: ( ruledataType )
            {
            // InternalAcmeParser.g:25870:2: ( ruledataType )
            // InternalAcmeParser.g:25871:3: ruledataType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getTypeDataTypeParserRuleCall_9_2_1_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruledataType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getTypeDataTypeParserRuleCall_9_2_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__TypeAssignment_9_2_1_3"


    // $ANTLR start "rule__DataType__IAssignment_11"
    // InternalAcmeParser.g:25880:1: rule__DataType__IAssignment_11 : ( ruleQualifiedIdentifier ) ;
    public final void rule__DataType__IAssignment_11() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalAcmeParser.g:25884:1: ( ( ruleQualifiedIdentifier ) )
            // InternalAcmeParser.g:25885:2: ( ruleQualifiedIdentifier )
            {
            // InternalAcmeParser.g:25885:2: ( ruleQualifiedIdentifier )
            // InternalAcmeParser.g:25886:3: ruleQualifiedIdentifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getIQualifiedIdentifierParserRuleCall_11_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getIQualifiedIdentifierParserRuleCall_11_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__IAssignment_11"

    // $ANTLR start synpred107_InternalAcmeParser
    public final void synpred107_InternalAcmeParser_fragment() throws RecognitionException {   
        // InternalAcmeParser.g:3739:2: ( ( ruleimpliesExpression ) )
        // InternalAcmeParser.g:3739:2: ( ruleimpliesExpression )
        {
        // InternalAcmeParser.g:3739:2: ( ruleimpliesExpression )
        // InternalAcmeParser.g:3740:3: ruleimpliesExpression
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getBooleanExpressionAccess().getImpliesExpressionParserRuleCall_0()); 
        }
        pushFollow(FOLLOW_2);
        ruleimpliesExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred107_InternalAcmeParser

    // $ANTLR start synpred268_InternalAcmeParser
    public final void synpred268_InternalAcmeParser_fragment() throws RecognitionException {   
        // InternalAcmeParser.g:16828:3: ( rule__AssignmentExpression__Group_1__0 )
        // InternalAcmeParser.g:16828:3: rule__AssignmentExpression__Group_1__0
        {
        pushFollow(FOLLOW_2);
        rule__AssignmentExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred268_InternalAcmeParser

    // $ANTLR start synpred269_InternalAcmeParser
    public final void synpred269_InternalAcmeParser_fragment() throws RecognitionException {   
        // InternalAcmeParser.g:16936:3: ( rule__ImpliesExpression__Group_1__0 )
        // InternalAcmeParser.g:16936:3: rule__ImpliesExpression__Group_1__0
        {
        pushFollow(FOLLOW_2);
        rule__ImpliesExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred269_InternalAcmeParser

    // $ANTLR start synpred270_InternalAcmeParser
    public final void synpred270_InternalAcmeParser_fragment() throws RecognitionException {   
        // InternalAcmeParser.g:17044:3: ( rule__IffExpression__Group_1__0 )
        // InternalAcmeParser.g:17044:3: rule__IffExpression__Group_1__0
        {
        pushFollow(FOLLOW_2);
        rule__IffExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred270_InternalAcmeParser

    // $ANTLR start synpred271_InternalAcmeParser
    public final void synpred271_InternalAcmeParser_fragment() throws RecognitionException {   
        // InternalAcmeParser.g:17152:3: ( rule__LogicalOrExpression__Group_1__0 )
        // InternalAcmeParser.g:17152:3: rule__LogicalOrExpression__Group_1__0
        {
        pushFollow(FOLLOW_2);
        rule__LogicalOrExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred271_InternalAcmeParser

    // $ANTLR start synpred272_InternalAcmeParser
    public final void synpred272_InternalAcmeParser_fragment() throws RecognitionException {   
        // InternalAcmeParser.g:17260:3: ( rule__LogicalAndExpression__Group_1__0 )
        // InternalAcmeParser.g:17260:3: rule__LogicalAndExpression__Group_1__0
        {
        pushFollow(FOLLOW_2);
        rule__LogicalAndExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred272_InternalAcmeParser

    // $ANTLR start synpred273_InternalAcmeParser
    public final void synpred273_InternalAcmeParser_fragment() throws RecognitionException {   
        // InternalAcmeParser.g:17368:3: ( rule__EqualityExpression__Group_1__0 )
        // InternalAcmeParser.g:17368:3: rule__EqualityExpression__Group_1__0
        {
        pushFollow(FOLLOW_2);
        rule__EqualityExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred273_InternalAcmeParser

    // $ANTLR start synpred274_InternalAcmeParser
    public final void synpred274_InternalAcmeParser_fragment() throws RecognitionException {   
        // InternalAcmeParser.g:17476:3: ( rule__RelationalExpression__Group_1__0 )
        // InternalAcmeParser.g:17476:3: rule__RelationalExpression__Group_1__0
        {
        pushFollow(FOLLOW_2);
        rule__RelationalExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred274_InternalAcmeParser

    // $ANTLR start synpred275_InternalAcmeParser
    public final void synpred275_InternalAcmeParser_fragment() throws RecognitionException {   
        // InternalAcmeParser.g:17584:3: ( rule__AdditiveExpression__Group_1__0 )
        // InternalAcmeParser.g:17584:3: rule__AdditiveExpression__Group_1__0
        {
        pushFollow(FOLLOW_2);
        rule__AdditiveExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred275_InternalAcmeParser

    // $ANTLR start synpred276_InternalAcmeParser
    public final void synpred276_InternalAcmeParser_fragment() throws RecognitionException {   
        // InternalAcmeParser.g:17692:3: ( rule__MultiplicativeExpression__Group_1__0 )
        // InternalAcmeParser.g:17692:3: rule__MultiplicativeExpression__Group_1__0
        {
        pushFollow(FOLLOW_2);
        rule__MultiplicativeExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred276_InternalAcmeParser

    // $ANTLR start synpred278_InternalAcmeParser
    public final void synpred278_InternalAcmeParser_fragment() throws RecognitionException {   
        // InternalAcmeParser.g:17827:3: ( rule__UnaryExpression__PostAssignment_2 )
        // InternalAcmeParser.g:17827:3: rule__UnaryExpression__PostAssignment_2
        {
        pushFollow(FOLLOW_2);
        rule__UnaryExpression__PostAssignment_2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred278_InternalAcmeParser

    // $ANTLR start synpred287_InternalAcmeParser
    public final void synpred287_InternalAcmeParser_fragment() throws RecognitionException {   
        // InternalAcmeParser.g:19582:3: ( RightCurlyBracket )
        // InternalAcmeParser.g:19582:3: RightCurlyBracket
        {
        match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred287_InternalAcmeParser

    // $ANTLR start synpred290_InternalAcmeParser
    public final void synpred290_InternalAcmeParser_fragment() throws RecognitionException {   
        // InternalAcmeParser.g:19771:3: ( rule__PathExpression__ContinuationAssignment_4 )
        // InternalAcmeParser.g:19771:3: rule__PathExpression__ContinuationAssignment_4
        {
        pushFollow(FOLLOW_2);
        rule__PathExpression__ContinuationAssignment_4();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred290_InternalAcmeParser

    // $ANTLR start synpred294_InternalAcmeParser
    public final void synpred294_InternalAcmeParser_fragment() throws RecognitionException {   
        // InternalAcmeParser.g:20095:3: ( rule__PathExpressionContinuation__ContinueAssignment_6 )
        // InternalAcmeParser.g:20095:3: rule__PathExpressionContinuation__ContinueAssignment_6
        {
        pushFollow(FOLLOW_2);
        rule__PathExpressionContinuation__ContinueAssignment_6();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred294_InternalAcmeParser

    // Delegated rules

    public final boolean synpred275_InternalAcmeParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred275_InternalAcmeParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred290_InternalAcmeParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred290_InternalAcmeParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred274_InternalAcmeParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred274_InternalAcmeParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred287_InternalAcmeParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred287_InternalAcmeParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred294_InternalAcmeParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred294_InternalAcmeParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred268_InternalAcmeParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred268_InternalAcmeParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred271_InternalAcmeParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred271_InternalAcmeParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred269_InternalAcmeParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred269_InternalAcmeParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred270_InternalAcmeParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred270_InternalAcmeParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred278_InternalAcmeParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred278_InternalAcmeParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred272_InternalAcmeParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred272_InternalAcmeParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred273_InternalAcmeParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred273_InternalAcmeParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred107_InternalAcmeParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred107_InternalAcmeParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred276_InternalAcmeParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred276_InternalAcmeParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA7 dfa7 = new DFA7(this);
    protected DFA74 dfa74 = new DFA74(this);
    protected DFA80 dfa80 = new DFA80(this);
    protected DFA212 dfa212 = new DFA212(this);
    protected DFA216 dfa216 = new DFA216(this);
    static final String dfa_1s = "\27\uffff";
    static final String dfa_2s = "\1\5\4\6\2\uffff\2\60\1\uffff\2\60\13\uffff";
    static final String dfa_3s = "\1\56\4\55\2\uffff\2\151\1\uffff\2\151\13\uffff";
    static final String dfa_4s = "\5\uffff\1\1\1\2\2\uffff\1\5\2\uffff\1\10\1\11\1\16\1\7\1\3\1\4\1\12\1\13\1\6\1\14\1\15";
    static final String dfa_5s = "\27\uffff}>";
    static final String[] dfa_6s = {
            "\1\16\1\7\1\10\2\15\1\4\1\14\3\uffff\1\14\1\12\2\uffff\1\11\2\uffff\1\2\1\14\6\uffff\1\1\7\uffff\1\3\1\uffff\1\13\3\uffff\1\5\1\6\1\15",
            "\1\20\1\21\2\uffff\1\4\10\uffff\1\11\22\uffff\1\3\1\uffff\1\17\3\uffff\1\5\1\6",
            "\1\20\1\21\2\uffff\1\4\10\uffff\1\11\22\uffff\1\3\1\uffff\1\17\3\uffff\1\5\1\6",
            "\1\20\1\21\13\uffff\1\11\24\uffff\1\17\3\uffff\1\5\1\6",
            "\1\20\1\21\13\uffff\1\11\24\uffff\1\17\3\uffff\1\5\1\6",
            "",
            "",
            "\1\20\70\uffff\1\22",
            "\1\21\70\uffff\1\23",
            "",
            "\1\24\70\uffff\1\25",
            "\1\17\70\uffff\1\26",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA7 extends DFA {

        public DFA7(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 7;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "2336:1: rule__AcmeFamilyBody__Alternatives_2 : ( ( ( rule__AcmeFamilyBody__PortTypesAssignment_2_0 ) ) | ( ( rule__AcmeFamilyBody__RoleTypesAssignment_2_1 ) ) | ( ( rule__AcmeFamilyBody__ComponentTypesAssignment_2_2 ) ) | ( ( rule__AcmeFamilyBody__ConnectorTypesAssignment_2_3 ) ) | ( ( rule__AcmeFamilyBody__ElementTypesAssignment_2_4 ) ) | ( ( rule__AcmeFamilyBody__PropertyTypesAssignment_2_5 ) ) | ( ( rule__AcmeFamilyBody__GroupTypesAssignment_2_6 ) ) | ( ( rule__AcmeFamilyBody__FunctionsAssignment_2_7 ) ) | ( ( rule__AcmeFamilyBody__RulesAssignment_2_8 ) ) | ( ( rule__AcmeFamilyBody__ComponentsAssignment_2_9 ) ) | ( ( rule__AcmeFamilyBody__ConnectorsAssignment_2_10 ) ) | ( ( rule__AcmeFamilyBody__PropertiesAssignment_2_11 ) ) | ( ( rule__AcmeFamilyBody__GroupsAssignment_2_12 ) ) | ( ( rule__AcmeFamilyBody__AttachmentsAssignment_2_13 ) ) );";
        }
    }
    static final String dfa_7s = "\15\uffff";
    static final String dfa_8s = "\1\uffff\1\13\12\uffff\1\13";
    static final String dfa_9s = "\1\44\1\63\7\uffff\1\151\2\uffff\1\63";
    static final String dfa_10s = "\1\153\1\146\7\uffff\1\151\2\uffff\1\146";
    static final String dfa_11s = "\2\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\uffff\1\1\1\2\1\uffff";
    static final String dfa_12s = "\15\uffff}>";
    static final String[] dfa_13s = {
            "\1\10\1\7\11\uffff\1\6\43\uffff\1\5\24\uffff\1\3\1\1\1\2\1\4",
            "\2\13\5\uffff\12\13\1\uffff\4\13\4\uffff\1\13\1\uffff\1\13\2\uffff\1\13\1\uffff\1\12\5\13\1\11\1\13\1\uffff\4\13\2\uffff\1\13\1\uffff\2\13",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\14",
            "",
            "",
            "\2\13\5\uffff\12\13\1\uffff\4\13\4\uffff\1\13\1\uffff\1\13\2\uffff\1\13\1\uffff\1\12\5\13\1\11\1\13\1\uffff\4\13\2\uffff\1\13\1\uffff\2\13"
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA74 extends DFA {

        public DFA74(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 74;
            this.eot = dfa_7;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "4013:1: rule__IdExpression__Alternatives : ( ( rulemethodCall ) | ( ( rule__IdExpression__Group_1__0 ) ) | ( ( rule__IdExpression__Group_2__0 ) ) | ( ( rule__IdExpression__Group_3__0 ) ) | ( ( rule__IdExpression__Group_4__0 ) ) | ( ( rule__IdExpression__Group_5__0 ) ) | ( ( rule__IdExpression__Group_6__0 ) ) | ( ( rule__IdExpression__Group_7__0 ) ) | ( ( rule__IdExpression__Group_8__0 ) ) );";
        }
    }
    static final String dfa_14s = "\6\uffff";
    static final String dfa_15s = "\1\uffff\1\4\3\uffff\1\4";
    static final String dfa_16s = "\1\151\1\63\1\151\2\uffff\1\63";
    static final String dfa_17s = "\1\151\1\146\1\151\2\uffff\1\146";
    static final String dfa_18s = "\3\uffff\1\2\1\1\1\uffff";
    static final String dfa_19s = "\6\uffff}>";
    static final String[] dfa_20s = {
            "\1\1",
            "\2\4\5\uffff\17\4\4\uffff\1\4\1\uffff\1\4\2\uffff\1\4\1\uffff\1\3\5\4\1\2\7\4\1\uffff\1\4\2\uffff\1\4",
            "\1\5",
            "",
            "",
            "\2\4\5\uffff\17\4\4\uffff\1\4\1\uffff\1\4\2\uffff\1\4\1\uffff\1\3\5\4\1\2\7\4\1\uffff\1\4\2\uffff\1\4"
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[][] dfa_20 = unpackEncodedStringArray(dfa_20s);

    class DFA80 extends DFA {

        public DFA80(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 80;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "4187:1: rule__PathExpression__Alternatives_1 : ( ( ( rule__PathExpression__IdAssignment_1_0 ) ) | ( ( rule__PathExpression__CallAssignment_1_1 ) ) );";
        }
    }
    static final String dfa_21s = "\42\uffff";
    static final String dfa_22s = "\1\2\41\uffff";
    static final String dfa_23s = "\1\63\1\0\40\uffff";
    static final String dfa_24s = "\1\146\1\0\40\uffff";
    static final String dfa_25s = "\2\uffff\1\2\36\uffff\1\1";
    static final String dfa_26s = "\1\uffff\1\0\40\uffff}>";
    static final String[] dfa_27s = {
            "\2\2\5\uffff\12\2\1\uffff\4\2\4\uffff\1\2\1\uffff\1\2\2\uffff\1\2\2\uffff\5\2\1\uffff\1\1\1\uffff\4\2\2\uffff\1\2\2\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final char[] dfa_24 = DFA.unpackEncodedStringToUnsignedChars(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final short[][] dfa_27 = unpackEncodedStringArray(dfa_27s);

    class DFA212 extends DFA {

        public DFA212(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 212;
            this.eot = dfa_21;
            this.eof = dfa_22;
            this.min = dfa_23;
            this.max = dfa_24;
            this.accept = dfa_25;
            this.special = dfa_26;
            this.transition = dfa_27;
        }
        public String getDescription() {
            return "19771:2: ( rule__PathExpression__ContinuationAssignment_4 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA212_1 = input.LA(1);

                         
                        int index212_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred290_InternalAcmeParser()) ) {s = 33;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index212_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 212, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA216 extends DFA {

        public DFA216(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 216;
            this.eot = dfa_21;
            this.eof = dfa_22;
            this.min = dfa_23;
            this.max = dfa_24;
            this.accept = dfa_25;
            this.special = dfa_26;
            this.transition = dfa_27;
        }
        public String getDescription() {
            return "20095:2: ( rule__PathExpressionContinuation__ContinueAssignment_6 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA216_1 = input.LA(1);

                         
                        int index216_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalAcmeParser()) ) {s = 33;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index216_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 216, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000404000000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000404000002L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000000L,0x00000A0000060000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000000000L,0x0000020000060000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000000L,0x000000041E860800L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000000002L,0x000000041E860800L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000100000L,0x00000000A0000000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0002000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000714040C98FE0L,0x0000004000000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000714040C98FE2L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000000000L,0x00000000B0000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0080000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000004000L,0x0000000021000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000004040480400L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0002000000000000L,0x0000000021000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000400000010300L,0x0000004000000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000400000010302L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000014040400400L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000400000210300L,0x0000004000000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000400000210302L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000000000L,0x0000024000000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000000002L,0x0000000004000000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000104040400400L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000400000010310L,0x0000004000000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000400000010312L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000204040400400L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000004040400440L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000500000010310L,0x0000004000000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000500000010312L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000004040400480L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000600000010310L,0x0000004000000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000600000010312L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000000000L,0x0000001020000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000010000L,0x0000004000000000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000010002L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000000L,0x00000000B0000420L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0360088281060000L,0x0000020000000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000802000000000L,0x00000F1240060000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000802000000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000802000000000L,0x00000F5240060000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000802000000000L,0x00000F1340060000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000000000L,0x0000000090000000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000000L,0x0000020800000000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000002L,0x0000000020000000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000002L,0x0000020000000000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0360088281060000L,0x0000024000000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0100000000020000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000000L,0x0000004001000000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000000L,0x00000000A0000000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000000L,0x00000000B0000400L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000200L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000400000000300L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x400080310A000000L,0x00000F100A990001L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000020L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000800800L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000000L,0x0000020000200000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0xA800000000000000L,0x000000008000000AL});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x4000803000000000L,0x00000F100A990001L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000000L,0x000000000000A000L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x1010000000000000L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0400000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000000L,0x0000000140000140L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000000L,0x0000000002800000L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000000L,0x0000000008440000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x4000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000803000000000L,0x00000F0000080000L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x400080310A000000L,0x00000F100AB90001L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000010L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x03400E82A0060000L,0x0000020000000000L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000000000002000L,0x0000020000000000L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000000000000L,0x0000000001001000L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000803000000000L,0x00000F1000080000L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000800002000L,0x0000020000000000L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000000L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000000000L,0x0000000218000010L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0004000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x400080310A000000L,0x00000F500A990001L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000000000000000L,0x0000000011000000L});
    public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0000080000000000L});

}